//
// AUTO-GENERATED - DO NOT MODIFY
//
// To contribute to this file, see the adjacent codegen package.
// https://github.com/AndrewBrownK/projective_ga/
//

struct Scalar {
    // 1
    float g0;
};

struct AntiScalar {
    // e1234
    float g0;
};

struct Magnitude {
    // 1, e1234
    vec2 g0;
};

struct Point {
    // e1, e2, e3, e4
    vec4 g0;
};

struct Origin {
    // e4
    float g0;
};

struct PointAtInfinity {
    // e1, e2, e3
    vec3 g0;
};

struct Line {
    // -e14, -e24, -e34
    vec3 g0;
    // e23, -e13, e12
    vec3 g1;
};

struct LineAtOrigin {
    // -e14, -e24, -e34
    vec3 g0;
};

struct LineAtInfinity {
    // e23, -e13, e12
    vec3 g0;
};

struct Plane {
    // e234, -e134, e124, -e123
    vec4 g0;
};

struct PlaneAtOrigin {
    // e234, -e134, e124
    vec3 g0;
};

struct Horizon {
    // -e123
    float g0;
};

struct Motor {
    // -e14, -e24, -e34, e1234
    vec4 g0;
    // e23, -e13, e12
    vec3 g1;
};

struct Rotor {
    // -e14, -e24, -e34, e1234
    vec4 g0;
};

struct Translator {
    // e23, -e13, e12, e1234
    vec4 g0;
};

struct Flector {
    // e1, e2, e3, e4
    vec4 g0;
    // e234, -e134, e124, -e123
    vec4 g1;
};

struct Transflector {
    // e1, e2, e3
    vec3 g0;
    // e234, -e134, e124, -e123
    vec4 g1;
};

struct FlectorAtInfinity {
    // e1, e2, e3, -e123
    vec4 g0;
};

struct MultiVector {
    // 1, e1234
    vec2 g0;
    // e1, e2, e3, e4
    vec4 g1;
    // -e14, -e24, -e34
    vec3 g2;
    // e23, -e13, e12
    vec3 g3;
    // e234, -e134, e124, -e123
    vec4 g4;
};

struct MultiVectorAtOrigin {
    // e4, e1234
    vec2 g0;
    // -e14, -e24, -e34
    vec3 g1;
    // e234, -e134, e124
    vec3 g2;
};

struct MultiVectorAtInfinity {
    // 1, -e123
    vec2 g0;
    // e1, e2, e3
    vec3 g1;
    // e23, -e13, e12
    vec3 g2;
};

AntiScalar anti_scalar_one() {
    return AntiScalar(0.0);
}

Flector flector_one() {
    return Flector(vec4(0.0), vec4(0.0));
}

FlectorAtInfinity flector_at_infinity_one() {
    return FlectorAtInfinity(vec4(0.0));
}

Horizon horizon_one() {
    return Horizon(0.0);
}

Line line_one() {
    return Line(vec3(0.0), vec3(0.0));
}

LineAtInfinity line_at_infinity_one() {
    return LineAtInfinity(vec3(0.0));
}

LineAtOrigin line_at_origin_one() {
    return LineAtOrigin(vec3(0.0));
}

Magnitude magnitude_one() {
    return Magnitude(vec2(1.0, 0.0));
}

Motor motor_one() {
    return Motor(vec4(0.0), vec3(0.0));
}

MultiVector multi_vector_one() {
    return MultiVector(vec2(1.0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_one() {
    return MultiVectorAtInfinity(vec2(1.0, 0.0), vec3(0.0), vec3(0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_one() {
    return MultiVectorAtOrigin(vec2(0.0), vec3(0.0), vec3(0.0));
}

Origin origin_one() {
    return Origin(0.0);
}

Plane plane_one() {
    return Plane(vec4(0.0));
}

PlaneAtOrigin plane_at_origin_one() {
    return PlaneAtOrigin(vec3(0.0));
}

Point point_one() {
    return Point(vec4(0.0));
}

PointAtInfinity point_at_infinity_one() {
    return PointAtInfinity(vec3(0.0));
}

Rotor rotor_one() {
    return Rotor(vec4(0.0));
}

Scalar scalar_one() {
    return Scalar(1.0);
}

Transflector transflector_one() {
    return Transflector(vec3(0.0), vec4(0.0));
}

Translator translator_one() {
    return Translator(vec4(0.0));
}

AntiScalar anti_scalar_zero() {
    return AntiScalar(0.0);
}

Flector flector_zero() {
    return Flector(vec4(0.0), vec4(0.0));
}

FlectorAtInfinity flector_at_infinity_zero() {
    return FlectorAtInfinity(vec4(0.0));
}

Horizon horizon_zero() {
    return Horizon(0.0);
}

Line line_zero() {
    return Line(vec3(0.0), vec3(0.0));
}

LineAtInfinity line_at_infinity_zero() {
    return LineAtInfinity(vec3(0.0));
}

LineAtOrigin line_at_origin_zero() {
    return LineAtOrigin(vec3(0.0));
}

Magnitude magnitude_zero() {
    return Magnitude(vec2(0.0));
}

Motor motor_zero() {
    return Motor(vec4(0.0), vec3(0.0));
}

MultiVector multi_vector_zero() {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_zero() {
    return MultiVectorAtInfinity(vec2(0.0), vec3(0.0), vec3(0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_zero() {
    return MultiVectorAtOrigin(vec2(0.0), vec3(0.0), vec3(0.0));
}

Origin origin_zero() {
    return Origin(0.0);
}

Plane plane_zero() {
    return Plane(vec4(0.0));
}

PlaneAtOrigin plane_at_origin_zero() {
    return PlaneAtOrigin(vec3(0.0));
}

Point point_zero() {
    return Point(vec4(0.0));
}

PointAtInfinity point_at_infinity_zero() {
    return PointAtInfinity(vec3(0.0));
}

Rotor rotor_zero() {
    return Rotor(vec4(0.0));
}

Scalar scalar_zero() {
    return Scalar(0.0);
}

Transflector transflector_zero() {
    return Transflector(vec3(0.0), vec4(0.0));
}

Translator translator_zero() {
    return Translator(vec4(0.0));
}

AntiScalar anti_scalar_neg(AntiScalar self) {
    return AntiScalar(-self.g0);
}

Flector flector_neg(Flector self) {
    return Flector(self.g0 * vec4(-1.0), self.g1 * vec4(1.0, -1.0, 1.0, -1.0));
}

FlectorAtInfinity flector_at_infinity_neg(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0 * vec4(-1.0));
}

Horizon horizon_neg(Horizon self) {
    return Horizon(-self.g0);
}

Line line_neg(Line self) {
    return Line(self.g0 * vec3(-1.0, 1.0, -1.0), self.g1 * vec3(-1.0));
}

LineAtInfinity line_at_infinity_neg(LineAtInfinity self) {
    return LineAtInfinity(self.g0 * vec3(-1.0));
}

LineAtOrigin line_at_origin_neg(LineAtOrigin self) {
    return LineAtOrigin(self.g0 * vec3(-1.0, 1.0, -1.0));
}

Magnitude magnitude_neg(Magnitude self) {
    return Magnitude(self.g0 * vec2(-1.0));
}

Motor motor_neg(Motor self) {
    return Motor(self.g0 * vec4(-1.0, 1.0, -1.0, -1.0), self.g1 * vec3(-1.0));
}

MultiVector multi_vector_neg(MultiVector self) {
    return MultiVector(self.g0 * vec2(-1.0), self.g1 * vec4(-1.0), self.g2 * vec3(-1.0, 1.0, -1.0), self.g3 * vec3(-1.0), self.g4 * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_neg(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0 * vec2(-1.0), self.g1 * vec3(-1.0), self.g2 * vec3(-1.0));
}

MultiVectorAtOrigin multi_vector_at_origin_neg(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0 * vec2(-1.0), self.g1 * vec3(-1.0, 1.0, -1.0), self.g2 * vec3(1.0, -1.0, 1.0));
}

Origin origin_neg(Origin self) {
    return Origin(-self.g0);
}

Plane plane_neg(Plane self) {
    return Plane(self.g0 * vec4(1.0, -1.0, 1.0, -1.0));
}

PlaneAtOrigin plane_at_origin_neg(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0 * vec3(1.0, -1.0, 1.0));
}

Point point_neg(Point self) {
    return Point(self.g0 * vec4(-1.0));
}

PointAtInfinity point_at_infinity_neg(PointAtInfinity self) {
    return PointAtInfinity(self.g0 * vec3(-1.0));
}

Rotor rotor_neg(Rotor self) {
    return Rotor(self.g0 * vec4(-1.0, 1.0, -1.0, -1.0));
}

Scalar scalar_neg(Scalar self) {
    return Scalar(-self.g0);
}

Transflector transflector_neg(Transflector self) {
    return Transflector(self.g0 * vec3(-1.0), self.g1 * vec4(1.0, -1.0, 1.0, -1.0));
}

Translator translator_neg(Translator self) {
    return Translator(self.g0 * vec4(-1.0));
}

AntiScalar anti_scalar_anti_scalar_add(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0 + other.g0);
}

MultiVector anti_scalar_flector_add(AntiScalar self, Flector other) {
    return MultiVector(vec2(0.0, self.g0), other.g0, vec3(0.0), vec3(0.0), other.g1);
}

MultiVector anti_scalar_flector_at_infinity_add(AntiScalar self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector anti_scalar_horizon_add(AntiScalar self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0));
}

Motor anti_scalar_line_add(AntiScalar self, Line other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), other.g1);
}

Translator anti_scalar_line_at_infinity_add(AntiScalar self, LineAtInfinity other) {
    return Translator(vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Rotor anti_scalar_line_at_origin_add(AntiScalar self, LineAtOrigin other) {
    return Rotor(vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Magnitude anti_scalar_magnitude_add(AntiScalar self, Magnitude other) {
    return Magnitude(vec2(0.0, self.g0) + other.g0);
}

Motor anti_scalar_motor_add(AntiScalar self, Motor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0) + other.g0, other.g1);
}

MultiVector anti_scalar_multi_vector_add(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0) + other.g0, other.g1, other.g2, other.g3, other.g4);
}

MultiVector anti_scalar_multi_vector_at_infinity_add(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0) + vec2(other.g0.x, 0.0), vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), other.g2, vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_origin_add(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0) + other.g0, other.g1, other.g2);
}

MultiVectorAtOrigin anti_scalar_origin_add(AntiScalar self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0) + vec2(other.g0, 0.0), vec3(0.0), vec3(0.0));
}

MultiVector anti_scalar_plane_add(AntiScalar self, Plane other) {
    return MultiVector(vec2(0.0, self.g0), vec4(0.0), vec3(0.0), vec3(0.0), other.g0);
}

MultiVectorAtOrigin anti_scalar_plane_at_origin_add(AntiScalar self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0), vec3(0.0), other.g0);
}

MultiVector anti_scalar_point_add(AntiScalar self, Point other) {
    return MultiVector(vec2(0.0, self.g0), other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector anti_scalar_point_at_infinity_add(AntiScalar self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Rotor anti_scalar_rotor_add(AntiScalar self, Rotor other) {
    return Rotor(vec4(0.0, 0.0, 0.0, self.g0) + other.g0);
}

Magnitude anti_scalar_scalar_add(AntiScalar self, Scalar other) {
    return Magnitude(vec2(0.0, self.g0) + vec2(other.g0, 0.0));
}

MultiVector anti_scalar_transflector_add(AntiScalar self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), other.g1);
}

Translator anti_scalar_translator_add(AntiScalar self, Translator other) {
    return Translator(vec4(0.0, 0.0, 0.0, self.g0) + other.g0);
}

MultiVector flector_anti_scalar_add(Flector self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0), self.g0, vec3(0.0), vec3(0.0), self.g1);
}

Flector flector_flector_add(Flector self, Flector other) {
    return Flector(self.g0 + other.g0, self.g1 + other.g1);
}

Flector flector_flector_at_infinity_add(Flector self, FlectorAtInfinity other) {
    return Flector(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 + vec4(0.0, 0.0, 0.0, other.g0.w));
}

Flector flector_horizon_add(Flector self, Horizon other) {
    return Flector(self.g0, self.g1 + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector flector_line_add(Flector self, Line other) {
    return MultiVector(vec2(0.0), self.g0, other.g0, other.g1, self.g1);
}

MultiVector flector_line_at_infinity_add(Flector self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), self.g0, vec3(0.0), other.g0, self.g1);
}

MultiVector flector_line_at_origin_add(Flector self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), self.g0, other.g0, vec3(0.0), self.g1);
}

MultiVector flector_magnitude_add(Flector self, Magnitude other) {
    return MultiVector(other.g0, self.g0, vec3(0.0), vec3(0.0), self.g1);
}

MultiVector flector_motor_add(Flector self, Motor other) {
    return MultiVector(vec2(0.0, other.g0.w), self.g0, vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, self.g1);
}

MultiVector flector_multi_vector_add(Flector self, MultiVector other) {
    return MultiVector(other.g0, self.g0 + other.g1, other.g2, other.g3, self.g1 + other.g4);
}

MultiVector flector_multi_vector_at_infinity_add(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0.x, 0.0), self.g0 + vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), other.g2, self.g1 + vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector flector_multi_vector_at_origin_add(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0.y), self.g0 + vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(0.0), self.g1 + vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector flector_origin_add(Flector self, Origin other) {
    return Flector(self.g0 + vec4(0.0, 0.0, 0.0, other.g0), self.g1);
}

Flector flector_plane_add(Flector self, Plane other) {
    return Flector(self.g0, self.g1 + other.g0);
}

Flector flector_plane_at_origin_add(Flector self, PlaneAtOrigin other) {
    return Flector(self.g0, self.g1 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_point_add(Flector self, Point other) {
    return Flector(self.g0 + other.g0, self.g1);
}

Flector flector_point_at_infinity_add(Flector self, PointAtInfinity other) {
    return Flector(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1);
}

MultiVector flector_rotor_add(Flector self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0.w), self.g0, vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), self.g1);
}

MultiVector flector_scalar_add(Flector self, Scalar other) {
    return MultiVector(vec2(other.g0, 0.0), self.g0, vec3(0.0), vec3(0.0), self.g1);
}

Flector flector_transflector_add(Flector self, Transflector other) {
    return Flector(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 + other.g1);
}

MultiVector flector_translator_add(Flector self, Translator other) {
    return MultiVector(vec2(0.0, other.g0.w), self.g0, vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), self.g1);
}

MultiVector flector_at_infinity_anti_scalar_add(FlectorAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

Flector flector_at_infinity_flector_add(FlectorAtInfinity self, Flector other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0, vec4(0.0, 0.0, 0.0, self.g0.w) + other.g1);
}

FlectorAtInfinity flector_at_infinity_flector_at_infinity_add(FlectorAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0 + other.g0);
}

FlectorAtInfinity flector_at_infinity_horizon_add(FlectorAtInfinity self, Horizon other) {
    return FlectorAtInfinity(self.g0 + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector flector_at_infinity_line_add(FlectorAtInfinity self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), other.g0, other.g1, vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVectorAtInfinity flector_at_infinity_line_at_infinity_add(FlectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0.w), vec3(self.g0.x, self.g0.y, self.g0.z), other.g0);
}

MultiVector flector_at_infinity_line_at_origin_add(FlectorAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), other.g0, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVector flector_at_infinity_magnitude_add(FlectorAtInfinity self, Magnitude other) {
    return MultiVector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVector flector_at_infinity_motor_add(FlectorAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVector flector_at_infinity_multi_vector_add(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g1, other.g2, other.g3, vec4(0.0, 0.0, 0.0, self.g0.w) + other.g4);
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_add(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0.w) + other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) + other.g1, other.g2);
}

MultiVector flector_at_infinity_multi_vector_at_origin_add(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0.y), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w) + vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector flector_at_infinity_origin_add(FlectorAtInfinity self, Origin other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

Transflector flector_at_infinity_plane_add(FlectorAtInfinity self, Plane other) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0, 0.0, 0.0, self.g0.w) + other.g0);
}

Transflector flector_at_infinity_plane_at_origin_add(FlectorAtInfinity self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0, 0.0, 0.0, self.g0.w) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_at_infinity_point_add(FlectorAtInfinity self, Point other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0, vec4(0.0, 0.0, 0.0, self.g0.w));
}

FlectorAtInfinity flector_at_infinity_point_at_infinity_add(FlectorAtInfinity self, PointAtInfinity other) {
    return FlectorAtInfinity(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector flector_at_infinity_rotor_add(FlectorAtInfinity self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVectorAtInfinity flector_at_infinity_scalar_add(FlectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0.w) + vec2(other.g0, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0));
}

Transflector flector_at_infinity_transflector_add(FlectorAtInfinity self, Transflector other) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z) + other.g0, vec4(0.0, 0.0, 0.0, self.g0.w) + other.g1);
}

MultiVector flector_at_infinity_translator_add(FlectorAtInfinity self, Translator other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVector horizon_anti_scalar_add(Horizon self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0));
}

Flector horizon_flector_add(Horizon self, Flector other) {
    return Flector(other.g0, vec4(0.0, 0.0, 0.0, self.g0) + other.g1);
}

FlectorAtInfinity horizon_flector_at_infinity_add(Horizon self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(0.0, 0.0, 0.0, self.g0) + other.g0);
}

Horizon horizon_horizon_add(Horizon self, Horizon other) {
    return Horizon(self.g0 + other.g0);
}

MultiVector horizon_line_add(Horizon self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0, other.g1, vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVectorAtInfinity horizon_line_at_infinity_add(Horizon self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0), vec3(0.0), other.g0);
}

MultiVector horizon_line_at_origin_add(Horizon self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVector horizon_magnitude_add(Horizon self, Magnitude other) {
    return MultiVector(other.g0, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVector horizon_motor_add(Horizon self, Motor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVector horizon_multi_vector_add(Horizon self, MultiVector other) {
    return MultiVector(other.g0, other.g1, other.g2, other.g3, vec4(0.0, 0.0, 0.0, self.g0) + other.g4);
}

MultiVectorAtInfinity horizon_multi_vector_at_infinity_add(Horizon self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0) + other.g0, other.g1, other.g2);
}

MultiVector horizon_multi_vector_at_origin_add(Horizon self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0.y), vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector horizon_origin_add(Horizon self, Origin other) {
    return Flector(vec4(0.0, 0.0, 0.0, other.g0), vec4(0.0, 0.0, 0.0, self.g0));
}

Plane horizon_plane_add(Horizon self, Plane other) {
    return Plane(vec4(0.0, 0.0, 0.0, self.g0) + other.g0);
}

Plane horizon_plane_at_origin_add(Horizon self, PlaneAtOrigin other) {
    return Plane(vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector horizon_point_add(Horizon self, Point other) {
    return Flector(other.g0, vec4(0.0, 0.0, 0.0, self.g0));
}

FlectorAtInfinity horizon_point_at_infinity_add(Horizon self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector horizon_rotor_add(Horizon self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVectorAtInfinity horizon_scalar_add(Horizon self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0) + vec2(other.g0, 0.0), vec3(0.0), vec3(0.0));
}

Transflector horizon_transflector_add(Horizon self, Transflector other) {
    return Transflector(other.g0, vec4(0.0, 0.0, 0.0, self.g0) + other.g1);
}

MultiVector horizon_translator_add(Horizon self, Translator other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0, 0.0, 0.0, self.g0));
}

Motor line_anti_scalar_add(Line self, AntiScalar other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0), self.g1);
}

MultiVector line_flector_add(Line self, Flector other) {
    return MultiVector(vec2(0.0), other.g0, self.g0, self.g1, other.g1);
}

MultiVector line_flector_at_infinity_add(Line self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, self.g1, vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector line_horizon_add(Line self, Horizon other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, self.g1, vec4(0.0, 0.0, 0.0, other.g0));
}

Line line_line_add(Line self, Line other) {
    return Line(self.g0 + other.g0, self.g1 + other.g1);
}

Line line_line_at_infinity_add(Line self, LineAtInfinity other) {
    return Line(self.g0, self.g1 + other.g0);
}

Line line_line_at_origin_add(Line self, LineAtOrigin other) {
    return Line(self.g0 + other.g0, self.g1);
}

MultiVector line_magnitude_add(Line self, Magnitude other) {
    return MultiVector(other.g0, vec4(0.0), self.g0, self.g1, vec4(0.0));
}

Motor line_motor_add(Line self, Motor other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0, self.g1 + other.g1);
}

MultiVector line_multi_vector_add(Line self, MultiVector other) {
    return MultiVector(other.g0, other.g1, self.g0 + other.g2, self.g1 + other.g3, other.g4);
}

MultiVector line_multi_vector_at_infinity_add(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0.x, 0.0), vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), self.g0, self.g1 + other.g2, vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector line_multi_vector_at_origin_add(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0.y), vec4(0.0, 0.0, 0.0, other.g0.x), self.g0 + other.g1, self.g1, vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector line_origin_add(Line self, Origin other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, other.g0), self.g0, self.g1, vec4(0.0));
}

MultiVector line_plane_add(Line self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, self.g1, other.g0);
}

MultiVector line_plane_at_origin_add(Line self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, self.g1, vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector line_point_add(Line self, Point other) {
    return MultiVector(vec2(0.0), other.g0, self.g0, self.g1, vec4(0.0));
}

MultiVector line_point_at_infinity_add(Line self, PointAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, self.g1, vec4(0.0));
}

Motor line_rotor_add(Line self, Rotor other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0, self.g1);
}

MultiVector line_scalar_add(Line self, Scalar other) {
    return MultiVector(vec2(other.g0, 0.0), vec4(0.0), self.g0, self.g1, vec4(0.0));
}

MultiVector line_transflector_add(Line self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, self.g1, other.g1);
}

Motor line_translator_add(Line self, Translator other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.w), self.g1 + vec3(other.g0.x, other.g0.y, other.g0.z));
}

Translator line_at_infinity_anti_scalar_add(LineAtInfinity self, AntiScalar other) {
    return Translator(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector line_at_infinity_flector_add(LineAtInfinity self, Flector other) {
    return MultiVector(vec2(0.0), other.g0, vec3(0.0), self.g0, other.g1);
}

MultiVectorAtInfinity line_at_infinity_flector_at_infinity_add(LineAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, other.g0.w), vec3(other.g0.x, other.g0.y, other.g0.z), self.g0);
}

MultiVectorAtInfinity line_at_infinity_horizon_add(LineAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(vec2(0.0, other.g0), vec3(0.0), self.g0);
}

Line line_at_infinity_line_add(LineAtInfinity self, Line other) {
    return Line(other.g0, self.g0 + other.g1);
}

LineAtInfinity line_at_infinity_line_at_infinity_add(LineAtInfinity self, LineAtInfinity other) {
    return LineAtInfinity(self.g0 + other.g0);
}

Line line_at_infinity_line_at_origin_add(LineAtInfinity self, LineAtOrigin other) {
    return Line(other.g0, self.g0);
}

MultiVector line_at_infinity_magnitude_add(LineAtInfinity self, Magnitude other) {
    return MultiVector(other.g0, vec4(0.0), vec3(0.0), self.g0, vec4(0.0));
}

Motor line_at_infinity_motor_add(LineAtInfinity self, Motor other) {
    return Motor(other.g0, self.g0 + other.g1);
}

MultiVector line_at_infinity_multi_vector_add(LineAtInfinity self, MultiVector other) {
    return MultiVector(other.g0, other.g1, other.g2, self.g0 + other.g3, other.g4);
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_add(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(other.g0, other.g1, self.g0 + other.g2);
}

MultiVector line_at_infinity_multi_vector_at_origin_add(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0.y), vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, self.g0, vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector line_at_infinity_origin_add(LineAtInfinity self, Origin other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), self.g0, vec4(0.0));
}

MultiVector line_at_infinity_plane_add(LineAtInfinity self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), self.g0, other.g0);
}

MultiVector line_at_infinity_plane_at_origin_add(LineAtInfinity self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), self.g0, vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector line_at_infinity_point_add(LineAtInfinity self, Point other) {
    return MultiVector(vec2(0.0), other.g0, vec3(0.0), self.g0, vec4(0.0));
}

MultiVectorAtInfinity line_at_infinity_point_at_infinity_add(LineAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0), other.g0, self.g0);
}

Motor line_at_infinity_rotor_add(LineAtInfinity self, Rotor other) {
    return Motor(other.g0, self.g0);
}

MultiVectorAtInfinity line_at_infinity_scalar_add(LineAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(other.g0, 0.0), vec3(0.0), self.g0);
}

MultiVector line_at_infinity_transflector_add(LineAtInfinity self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), self.g0, other.g1);
}

Translator line_at_infinity_translator_add(LineAtInfinity self, Translator other) {
    return Translator(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0);
}

Rotor line_at_origin_anti_scalar_add(LineAtOrigin self, AntiScalar other) {
    return Rotor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector line_at_origin_flector_add(LineAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0), other.g0, self.g0, vec3(0.0), other.g1);
}

MultiVector line_at_origin_flector_at_infinity_add(LineAtOrigin self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector line_at_origin_horizon_add(LineAtOrigin self, Horizon other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0));
}

Line line_at_origin_line_add(LineAtOrigin self, Line other) {
    return Line(self.g0 + other.g0, other.g1);
}

Line line_at_origin_line_at_infinity_add(LineAtOrigin self, LineAtInfinity other) {
    return Line(self.g0, other.g0);
}

LineAtOrigin line_at_origin_line_at_origin_add(LineAtOrigin self, LineAtOrigin other) {
    return LineAtOrigin(self.g0 + other.g0);
}

MultiVector line_at_origin_magnitude_add(LineAtOrigin self, Magnitude other) {
    return MultiVector(other.g0, vec4(0.0), self.g0, vec3(0.0), vec4(0.0));
}

Motor line_at_origin_motor_add(LineAtOrigin self, Motor other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0, other.g1);
}

MultiVector line_at_origin_multi_vector_add(LineAtOrigin self, MultiVector other) {
    return MultiVector(other.g0, other.g1, self.g0 + other.g2, other.g3, other.g4);
}

MultiVector line_at_origin_multi_vector_at_infinity_add(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0.x, 0.0), vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), self.g0, other.g2, vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_add(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(other.g0, self.g0 + other.g1, other.g2);
}

MultiVectorAtOrigin line_at_origin_origin_add(LineAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(vec2(other.g0, 0.0), self.g0, vec3(0.0));
}

MultiVector line_at_origin_plane_add(LineAtOrigin self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, vec3(0.0), other.g0);
}

MultiVectorAtOrigin line_at_origin_plane_at_origin_add(LineAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0), self.g0, other.g0);
}

MultiVector line_at_origin_point_add(LineAtOrigin self, Point other) {
    return MultiVector(vec2(0.0), other.g0, self.g0, vec3(0.0), vec4(0.0));
}

MultiVector line_at_origin_point_at_infinity_add(LineAtOrigin self, PointAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, vec3(0.0), vec4(0.0));
}

Rotor line_at_origin_rotor_add(LineAtOrigin self, Rotor other) {
    return Rotor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0);
}

MultiVector line_at_origin_scalar_add(LineAtOrigin self, Scalar other) {
    return MultiVector(vec2(other.g0, 0.0), vec4(0.0), self.g0, vec3(0.0), vec4(0.0));
}

MultiVector line_at_origin_transflector_add(LineAtOrigin self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, vec3(0.0), other.g1);
}

Motor line_at_origin_translator_add(LineAtOrigin self, Translator other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.w), vec3(other.g0.x, other.g0.y, other.g0.z));
}

Magnitude magnitude_anti_scalar_add(Magnitude self, AntiScalar other) {
    return Magnitude(self.g0 + vec2(0.0, other.g0));
}

MultiVector magnitude_flector_add(Magnitude self, Flector other) {
    return MultiVector(self.g0, other.g0, vec3(0.0), vec3(0.0), other.g1);
}

MultiVector magnitude_flector_at_infinity_add(Magnitude self, FlectorAtInfinity other) {
    return MultiVector(self.g0, vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector magnitude_horizon_add(Magnitude self, Horizon other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector magnitude_line_add(Magnitude self, Line other) {
    return MultiVector(self.g0, vec4(0.0), other.g0, other.g1, vec4(0.0));
}

MultiVector magnitude_line_at_infinity_add(Magnitude self, LineAtInfinity other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0), other.g0, vec4(0.0));
}

MultiVector magnitude_line_at_origin_add(Magnitude self, LineAtOrigin other) {
    return MultiVector(self.g0, vec4(0.0), other.g0, vec3(0.0), vec4(0.0));
}

Magnitude magnitude_magnitude_add(Magnitude self, Magnitude other) {
    return Magnitude(self.g0 + other.g0);
}

MultiVector magnitude_motor_add(Magnitude self, Motor other) {
    return MultiVector(self.g0 + vec2(0.0, other.g0.w), vec4(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, vec4(0.0));
}

MultiVector magnitude_multi_vector_add(Magnitude self, MultiVector other) {
    return MultiVector(self.g0 + other.g0, other.g1, other.g2, other.g3, other.g4);
}

MultiVector magnitude_multi_vector_at_infinity_add(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 + vec2(other.g0.x, 0.0), vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), other.g2, vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector magnitude_multi_vector_at_origin_add(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 + vec2(0.0, other.g0.y), vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(0.0), vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector magnitude_origin_add(Magnitude self, Origin other) {
    return MultiVector(self.g0, vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector magnitude_plane_add(Magnitude self, Plane other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0), vec3(0.0), other.g0);
}

MultiVector magnitude_plane_at_origin_add(Magnitude self, PlaneAtOrigin other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0), vec3(0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector magnitude_point_add(Magnitude self, Point other) {
    return MultiVector(self.g0, other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector magnitude_point_at_infinity_add(Magnitude self, PointAtInfinity other) {
    return MultiVector(self.g0, vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector magnitude_rotor_add(Magnitude self, Rotor other) {
    return MultiVector(self.g0 + vec2(0.0, other.g0.w), vec4(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

Magnitude magnitude_scalar_add(Magnitude self, Scalar other) {
    return Magnitude(self.g0 + vec2(other.g0, 0.0));
}

MultiVector magnitude_transflector_add(Magnitude self, Transflector other) {
    return MultiVector(self.g0, vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), other.g1);
}

MultiVector magnitude_translator_add(Magnitude self, Translator other) {
    return MultiVector(self.g0 + vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Motor motor_anti_scalar_add(Motor self, AntiScalar other) {
    return Motor(self.g0 + vec4(0.0, 0.0, 0.0, other.g0), self.g1);
}

MultiVector motor_flector_add(Motor self, Flector other) {
    return MultiVector(vec2(0.0, self.g0.w), other.g0, vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, other.g1);
}

MultiVector motor_flector_at_infinity_add(Motor self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector motor_horizon_add(Motor self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0, 0.0, 0.0, other.g0));
}

Motor motor_line_add(Motor self, Line other) {
    return Motor(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 + other.g1);
}

Motor motor_line_at_infinity_add(Motor self, LineAtInfinity other) {
    return Motor(self.g0, self.g1 + other.g0);
}

Motor motor_line_at_origin_add(Motor self, LineAtOrigin other) {
    return Motor(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1);
}

MultiVector motor_magnitude_add(Motor self, Magnitude other) {
    return MultiVector(vec2(0.0, self.g0.w) + other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

Motor motor_motor_add(Motor self, Motor other) {
    return Motor(self.g0 + other.g0, self.g1 + other.g1);
}

MultiVector motor_multi_vector_add(Motor self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0.w) + other.g0, other.g1, vec3(self.g0.x, self.g0.y, self.g0.z) + other.g2, self.g1 + other.g3, other.g4);
}

MultiVector motor_multi_vector_at_infinity_add(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w) + vec2(other.g0.x, 0.0), vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1 + other.g2, vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector motor_multi_vector_at_origin_add(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0.w) + vec2(0.0, other.g0.y), vec4(0.0, 0.0, 0.0, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) + other.g1, self.g1, vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector motor_origin_add(Motor self, Origin other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0, 0.0, 0.0, other.g0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

MultiVector motor_plane_add(Motor self, Plane other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, other.g0);
}

MultiVector motor_plane_at_origin_add(Motor self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector motor_point_add(Motor self, Point other) {
    return MultiVector(vec2(0.0, self.g0.w), other.g0, vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

MultiVector motor_point_at_infinity_add(Motor self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

Motor motor_rotor_add(Motor self, Rotor other) {
    return Motor(self.g0 + other.g0, self.g1);
}

MultiVector motor_scalar_add(Motor self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0.w) + vec2(other.g0, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

MultiVector motor_transflector_add(Motor self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, other.g1);
}

Motor motor_translator_add(Motor self, Translator other) {
    return Motor(self.g0 + vec4(0.0, 0.0, 0.0, other.g0.w), self.g1 + vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVector multi_vector_anti_scalar_add(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0 + vec2(0.0, other.g0), self.g1, self.g2, self.g3, self.g4);
}

MultiVector multi_vector_flector_add(MultiVector self, Flector other) {
    return MultiVector(self.g0, self.g1 + other.g0, self.g2, self.g3, self.g4 + other.g1);
}

MultiVector multi_vector_flector_at_infinity_add(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(self.g0, self.g1 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g2, self.g3, self.g4 + vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector multi_vector_horizon_add(MultiVector self, Horizon other) {
    return MultiVector(self.g0, self.g1, self.g2, self.g3, self.g4 + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector multi_vector_line_add(MultiVector self, Line other) {
    return MultiVector(self.g0, self.g1, self.g2 + other.g0, self.g3 + other.g1, self.g4);
}

MultiVector multi_vector_line_at_infinity_add(MultiVector self, LineAtInfinity other) {
    return MultiVector(self.g0, self.g1, self.g2, self.g3 + other.g0, self.g4);
}

MultiVector multi_vector_line_at_origin_add(MultiVector self, LineAtOrigin other) {
    return MultiVector(self.g0, self.g1, self.g2 + other.g0, self.g3, self.g4);
}

MultiVector multi_vector_magnitude_add(MultiVector self, Magnitude other) {
    return MultiVector(self.g0 + other.g0, self.g1, self.g2, self.g3, self.g4);
}

MultiVector multi_vector_motor_add(MultiVector self, Motor other) {
    return MultiVector(self.g0 + vec2(0.0, other.g0.w), self.g1, self.g2 + vec3(other.g0.x, other.g0.y, other.g0.z), self.g3 + other.g1, self.g4);
}

MultiVector multi_vector_multi_vector_add(MultiVector self, MultiVector other) {
    return MultiVector(self.g0 + other.g0, self.g1 + other.g1, self.g2 + other.g2, self.g3 + other.g3, self.g4 + other.g4);
}

MultiVector multi_vector_multi_vector_at_infinity_add(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 + vec2(other.g0.x, 0.0), self.g1 + vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), self.g2, self.g3 + other.g2, self.g4 + vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector multi_vector_multi_vector_at_origin_add(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 + vec2(0.0, other.g0.y), self.g1 + vec4(0.0, 0.0, 0.0, other.g0.x), self.g2 + other.g1, self.g3, self.g4 + vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector multi_vector_origin_add(MultiVector self, Origin other) {
    return MultiVector(self.g0, self.g1 + vec4(0.0, 0.0, 0.0, other.g0), self.g2, self.g3, self.g4);
}

MultiVector multi_vector_plane_add(MultiVector self, Plane other) {
    return MultiVector(self.g0, self.g1, self.g2, self.g3, self.g4 + other.g0);
}

MultiVector multi_vector_plane_at_origin_add(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(self.g0, self.g1, self.g2, self.g3, self.g4 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_point_add(MultiVector self, Point other) {
    return MultiVector(self.g0, self.g1 + other.g0, self.g2, self.g3, self.g4);
}

MultiVector multi_vector_point_at_infinity_add(MultiVector self, PointAtInfinity other) {
    return MultiVector(self.g0, self.g1 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g2, self.g3, self.g4);
}

MultiVector multi_vector_rotor_add(MultiVector self, Rotor other) {
    return MultiVector(self.g0 + vec2(0.0, other.g0.w), self.g1, self.g2 + vec3(other.g0.x, other.g0.y, other.g0.z), self.g3, self.g4);
}

MultiVector multi_vector_scalar_add(MultiVector self, Scalar other) {
    return MultiVector(self.g0 + vec2(other.g0, 0.0), self.g1, self.g2, self.g3, self.g4);
}

MultiVector multi_vector_transflector_add(MultiVector self, Transflector other) {
    return MultiVector(self.g0, self.g1 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g2, self.g3, self.g4 + other.g1);
}

MultiVector multi_vector_translator_add(MultiVector self, Translator other) {
    return MultiVector(self.g0 + vec2(0.0, other.g0.w), self.g1, self.g2, self.g3 + vec3(other.g0.x, other.g0.y, other.g0.z), self.g4);
}

MultiVector multi_vector_at_infinity_anti_scalar_add(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(self.g0.x, 0.0) + vec2(0.0, other.g0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_flector_add(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) + other.g0, vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) + other.g1);
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_add(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0 + vec2(0.0, other.g0.w), self.g1 + vec3(other.g0.x, other.g0.y, other.g0.z), self.g2);
}

MultiVectorAtInfinity multi_vector_at_infinity_horizon_add(MultiVectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(self.g0 + vec2(0.0, other.g0), self.g1, self.g2);
}

MultiVector multi_vector_at_infinity_line_add(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), other.g0, self.g2 + other.g1, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_add(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(self.g0, self.g1, self.g2 + other.g0);
}

MultiVector multi_vector_at_infinity_line_at_origin_add(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), other.g0, self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_magnitude_add(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVector(vec2(self.g0.x, 0.0) + other.g0, vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_motor_add(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0.x, 0.0) + vec2(0.0, other.g0.w), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(other.g0.x, other.g0.y, other.g0.z), self.g2 + other.g1, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_multi_vector_add(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x, 0.0) + other.g0, vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) + other.g1, other.g2, self.g2 + other.g3, vec4(0.0, 0.0, 0.0, self.g0.y) + other.g4);
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_add(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0 + other.g0, self.g1 + other.g1, self.g2 + other.g2);
}

MultiVector multi_vector_at_infinity_multi_vector_at_origin_add(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x, 0.0) + vec2(0.0, other.g0.y), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) + vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector multi_vector_at_infinity_origin_add(MultiVectorAtInfinity self, Origin other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_plane_add(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) + other.g0);
}

MultiVector multi_vector_at_infinity_plane_at_origin_add(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_at_infinity_point_add(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) + other.g0, vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_add(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(self.g0, self.g1 + other.g0, self.g2);
}

MultiVector multi_vector_at_infinity_rotor_add(MultiVectorAtInfinity self, Rotor other) {
    return MultiVector(vec2(self.g0.x, 0.0) + vec2(0.0, other.g0.w), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(other.g0.x, other.g0.y, other.g0.z), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_scalar_add(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0 + vec2(other.g0, 0.0), self.g1, self.g2);
}

MultiVector multi_vector_at_infinity_transflector_add(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) + other.g1);
}

MultiVector multi_vector_at_infinity_translator_add(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0.x, 0.0) + vec2(0.0, other.g0.w), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2 + vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_anti_scalar_add(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0 + vec2(0.0, other.g0), self.g1, self.g2);
}

MultiVector multi_vector_at_origin_flector_add(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) + other.g0, self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) + other.g1);
}

MultiVector multi_vector_at_origin_flector_at_infinity_add(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector multi_vector_at_origin_horizon_add(MultiVectorAtOrigin self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector multi_vector_at_origin_line_add(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1 + other.g0, other.g1, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_line_at_infinity_add(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, other.g0, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_origin_add(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(self.g0, self.g1 + other.g0, self.g2);
}

MultiVector multi_vector_at_origin_magnitude_add(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVector(vec2(0.0, self.g0.y) + other.g0, vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_motor_add(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0, self.g0.y) + vec2(0.0, other.g0.w), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1 + vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_multi_vector_add(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0.y) + other.g0, vec4(0.0, 0.0, 0.0, self.g0.x) + other.g1, self.g1 + other.g2, other.g3, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) + other.g4);
}

MultiVector multi_vector_at_origin_multi_vector_at_infinity_add(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.y) + vec2(other.g0.x, 0.0), vec4(0.0, 0.0, 0.0, self.g0.x) + vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), self.g1, other.g2, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_add(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(self.g0 + other.g0, self.g1 + other.g1, self.g2 + other.g2);
}

MultiVectorAtOrigin multi_vector_at_origin_origin_add(MultiVectorAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(self.g0 + vec2(other.g0, 0.0), self.g1, self.g2);
}

MultiVector multi_vector_at_origin_plane_add(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) + other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_plane_at_origin_add(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(self.g0, self.g1, self.g2 + other.g0);
}

MultiVector multi_vector_at_origin_point_add(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) + other.g0, self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_point_at_infinity_add(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_rotor_add(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0 + vec2(0.0, other.g0.w), self.g1 + vec3(other.g0.x, other.g0.y, other.g0.z), self.g2);
}

MultiVector multi_vector_at_origin_scalar_add(MultiVectorAtOrigin self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0.y) + vec2(other.g0, 0.0), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_transflector_add(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) + other.g1);
}

MultiVector multi_vector_at_origin_translator_add(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(0.0, self.g0.y) + vec2(0.0, other.g0.w), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVectorAtOrigin origin_anti_scalar_add(Origin self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(self.g0, 0.0) + vec2(0.0, other.g0), vec3(0.0), vec3(0.0));
}

Flector origin_flector_add(Origin self, Flector other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0) + other.g0, other.g1);
}

Flector origin_flector_at_infinity_add(Origin self, FlectorAtInfinity other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(0.0, 0.0, 0.0, other.g0.w));
}

Flector origin_horizon_add(Origin self, Horizon other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0), vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector origin_line_add(Origin self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, self.g0), other.g0, other.g1, vec4(0.0));
}

MultiVector origin_line_at_infinity_add(Origin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0), other.g0, vec4(0.0));
}

MultiVectorAtOrigin origin_line_at_origin_add(Origin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0, 0.0), other.g0, vec3(0.0));
}

MultiVector origin_magnitude_add(Origin self, Magnitude other) {
    return MultiVector(other.g0, vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector origin_motor_add(Origin self, Motor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0, 0.0, 0.0, self.g0), vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, vec4(0.0));
}

MultiVector origin_multi_vector_add(Origin self, MultiVector other) {
    return MultiVector(other.g0, vec4(0.0, 0.0, 0.0, self.g0) + other.g1, other.g2, other.g3, other.g4);
}

MultiVector origin_multi_vector_at_infinity_add(Origin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0.x, 0.0), vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), other.g2, vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin origin_multi_vector_at_origin_add(Origin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0, 0.0) + other.g0, other.g1, other.g2);
}

Origin origin_origin_add(Origin self, Origin other) {
    return Origin(self.g0 + other.g0);
}

Flector origin_plane_add(Origin self, Plane other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0), other.g0);
}

Flector origin_plane_at_origin_add(Origin self, PlaneAtOrigin other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point origin_point_add(Origin self, Point other) {
    return Point(vec4(0.0, 0.0, 0.0, self.g0) + other.g0);
}

Point origin_point_at_infinity_add(Origin self, PointAtInfinity other) {
    return Point(vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVectorAtOrigin origin_rotor_add(Origin self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0, 0.0) + vec2(0.0, other.g0.w), vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0));
}

MultiVector origin_scalar_add(Origin self, Scalar other) {
    return MultiVector(vec2(other.g0, 0.0), vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector origin_transflector_add(Origin self, Transflector other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), other.g1);
}

MultiVector origin_translator_add(Origin self, Translator other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector plane_anti_scalar_add(Plane self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0), vec4(0.0), vec3(0.0), vec3(0.0), self.g0);
}

Flector plane_flector_add(Plane self, Flector other) {
    return Flector(other.g0, self.g0 + other.g1);
}

Transflector plane_flector_at_infinity_add(Plane self, FlectorAtInfinity other) {
    return Transflector(vec3(other.g0.x, other.g0.y, other.g0.z), self.g0 + vec4(0.0, 0.0, 0.0, other.g0.w));
}

Plane plane_horizon_add(Plane self, Horizon other) {
    return Plane(self.g0 + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector plane_line_add(Plane self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0, other.g1, self.g0);
}

MultiVector plane_line_at_infinity_add(Plane self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), other.g0, self.g0);
}

MultiVector plane_line_at_origin_add(Plane self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0, vec3(0.0), self.g0);
}

MultiVector plane_magnitude_add(Plane self, Magnitude other) {
    return MultiVector(other.g0, vec4(0.0), vec3(0.0), vec3(0.0), self.g0);
}

MultiVector plane_motor_add(Plane self, Motor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, self.g0);
}

MultiVector plane_multi_vector_add(Plane self, MultiVector other) {
    return MultiVector(other.g0, other.g1, other.g2, other.g3, self.g0 + other.g4);
}

MultiVector plane_multi_vector_at_infinity_add(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0.x, 0.0), vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), other.g2, self.g0 + vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector plane_multi_vector_at_origin_add(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0.y), vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(0.0), self.g0 + vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector plane_origin_add(Plane self, Origin other) {
    return Flector(vec4(0.0, 0.0, 0.0, other.g0), self.g0);
}

Plane plane_plane_add(Plane self, Plane other) {
    return Plane(self.g0 + other.g0);
}

Plane plane_plane_at_origin_add(Plane self, PlaneAtOrigin other) {
    return Plane(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector plane_point_add(Plane self, Point other) {
    return Flector(other.g0, self.g0);
}

Transflector plane_point_at_infinity_add(Plane self, PointAtInfinity other) {
    return Transflector(other.g0, self.g0);
}

MultiVector plane_rotor_add(Plane self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), self.g0);
}

MultiVector plane_scalar_add(Plane self, Scalar other) {
    return MultiVector(vec2(other.g0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), self.g0);
}

Transflector plane_transflector_add(Plane self, Transflector other) {
    return Transflector(other.g0, self.g0 + other.g1);
}

MultiVector plane_translator_add(Plane self, Translator other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), self.g0);
}

MultiVectorAtOrigin plane_at_origin_anti_scalar_add(PlaneAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(0.0, other.g0), vec3(0.0), self.g0);
}

Flector plane_at_origin_flector_add(PlaneAtOrigin self, Flector other) {
    return Flector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g1);
}

Transflector plane_at_origin_flector_at_infinity_add(PlaneAtOrigin self, FlectorAtInfinity other) {
    return Transflector(vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.w));
}

Plane plane_at_origin_horizon_add(PlaneAtOrigin self, Horizon other) {
    return Plane(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector plane_at_origin_line_add(PlaneAtOrigin self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0, other.g1, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector plane_at_origin_line_at_infinity_add(PlaneAtOrigin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVectorAtOrigin plane_at_origin_line_at_origin_add(PlaneAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0), other.g0, self.g0);
}

MultiVector plane_at_origin_magnitude_add(PlaneAtOrigin self, Magnitude other) {
    return MultiVector(other.g0, vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector plane_at_origin_motor_add(PlaneAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector plane_at_origin_multi_vector_add(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(other.g0, other.g1, other.g2, other.g3, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g4);
}

MultiVector plane_at_origin_multi_vector_at_infinity_add(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0.x, 0.0), vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), other.g2, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_add(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(other.g0, other.g1, self.g0 + other.g2);
}

Flector plane_at_origin_origin_add(PlaneAtOrigin self, Origin other) {
    return Flector(vec4(0.0, 0.0, 0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Plane plane_at_origin_plane_add(PlaneAtOrigin self, Plane other) {
    return Plane(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0);
}

PlaneAtOrigin plane_at_origin_plane_at_origin_add(PlaneAtOrigin self, PlaneAtOrigin other) {
    return PlaneAtOrigin(self.g0 + other.g0);
}

Flector plane_at_origin_point_add(PlaneAtOrigin self, Point other) {
    return Flector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Transflector plane_at_origin_point_at_infinity_add(PlaneAtOrigin self, PointAtInfinity other) {
    return Transflector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVectorAtOrigin plane_at_origin_rotor_add(PlaneAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(vec2(0.0, other.g0.w), vec3(other.g0.x, other.g0.y, other.g0.z), self.g0);
}

MultiVector plane_at_origin_scalar_add(PlaneAtOrigin self, Scalar other) {
    return MultiVector(vec2(other.g0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Transflector plane_at_origin_transflector_add(PlaneAtOrigin self, Transflector other) {
    return Transflector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g1);
}

MultiVector plane_at_origin_translator_add(PlaneAtOrigin self, Translator other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector point_anti_scalar_add(Point self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0), self.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_flector_add(Point self, Flector other) {
    return Flector(self.g0 + other.g0, other.g1);
}

Flector point_flector_at_infinity_add(Point self, FlectorAtInfinity other) {
    return Flector(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(0.0, 0.0, 0.0, other.g0.w));
}

Flector point_horizon_add(Point self, Horizon other) {
    return Flector(self.g0, vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector point_line_add(Point self, Line other) {
    return MultiVector(vec2(0.0), self.g0, other.g0, other.g1, vec4(0.0));
}

MultiVector point_line_at_infinity_add(Point self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), self.g0, vec3(0.0), other.g0, vec4(0.0));
}

MultiVector point_line_at_origin_add(Point self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), self.g0, other.g0, vec3(0.0), vec4(0.0));
}

MultiVector point_magnitude_add(Point self, Magnitude other) {
    return MultiVector(other.g0, self.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector point_motor_add(Point self, Motor other) {
    return MultiVector(vec2(0.0, other.g0.w), self.g0, vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, vec4(0.0));
}

MultiVector point_multi_vector_add(Point self, MultiVector other) {
    return MultiVector(other.g0, self.g0 + other.g1, other.g2, other.g3, other.g4);
}

MultiVector point_multi_vector_at_infinity_add(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0.x, 0.0), self.g0 + vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), other.g2, vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector point_multi_vector_at_origin_add(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0.y), self.g0 + vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(0.0), vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Point point_origin_add(Point self, Origin other) {
    return Point(self.g0 + vec4(0.0, 0.0, 0.0, other.g0));
}

Flector point_plane_add(Point self, Plane other) {
    return Flector(self.g0, other.g0);
}

Flector point_plane_at_origin_add(Point self, PlaneAtOrigin other) {
    return Flector(self.g0, vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point point_point_add(Point self, Point other) {
    return Point(self.g0 + other.g0);
}

Point point_point_at_infinity_add(Point self, PointAtInfinity other) {
    return Point(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector point_rotor_add(Point self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0.w), self.g0, vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

MultiVector point_scalar_add(Point self, Scalar other) {
    return MultiVector(vec2(other.g0, 0.0), self.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_transflector_add(Point self, Transflector other) {
    return Flector(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), other.g1);
}

MultiVector point_translator_add(Point self, Translator other) {
    return MultiVector(vec2(0.0, other.g0.w), self.g0, vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector point_at_infinity_anti_scalar_add(PointAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_at_infinity_flector_add(PointAtInfinity self, Flector other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0, other.g1);
}

FlectorAtInfinity point_at_infinity_flector_at_infinity_add(PointAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0);
}

FlectorAtInfinity point_at_infinity_horizon_add(PointAtInfinity self, Horizon other) {
    return FlectorAtInfinity(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector point_at_infinity_line_add(PointAtInfinity self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), other.g0, other.g1, vec4(0.0));
}

MultiVectorAtInfinity point_at_infinity_line_at_infinity_add(PointAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0), self.g0, other.g0);
}

MultiVector point_at_infinity_line_at_origin_add(PointAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), other.g0, vec3(0.0), vec4(0.0));
}

MultiVector point_at_infinity_magnitude_add(PointAtInfinity self, Magnitude other) {
    return MultiVector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector point_at_infinity_motor_add(PointAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, vec4(0.0));
}

MultiVector point_at_infinity_multi_vector_add(PointAtInfinity self, MultiVector other) {
    return MultiVector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g1, other.g2, other.g3, other.g4);
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_add(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(other.g0, self.g0 + other.g1, other.g2);
}

MultiVector point_at_infinity_multi_vector_at_origin_add(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0.y), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(0.0), vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Point point_at_infinity_origin_add(PointAtInfinity self, Origin other) {
    return Point(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0));
}

Transflector point_at_infinity_plane_add(PointAtInfinity self, Plane other) {
    return Transflector(self.g0, other.g0);
}

Transflector point_at_infinity_plane_at_origin_add(PointAtInfinity self, PlaneAtOrigin other) {
    return Transflector(self.g0, vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point point_at_infinity_point_add(PointAtInfinity self, Point other) {
    return Point(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0);
}

PointAtInfinity point_at_infinity_point_at_infinity_add(PointAtInfinity self, PointAtInfinity other) {
    return PointAtInfinity(self.g0 + other.g0);
}

MultiVector point_at_infinity_rotor_add(PointAtInfinity self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity point_at_infinity_scalar_add(PointAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(other.g0, 0.0), self.g0, vec3(0.0));
}

Transflector point_at_infinity_transflector_add(PointAtInfinity self, Transflector other) {
    return Transflector(self.g0 + other.g0, other.g1);
}

MultiVector point_at_infinity_translator_add(PointAtInfinity self, Translator other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Rotor rotor_anti_scalar_add(Rotor self, AntiScalar other) {
    return Rotor(self.g0 + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector rotor_flector_add(Rotor self, Flector other) {
    return MultiVector(vec2(0.0, self.g0.w), other.g0, vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), other.g1);
}

MultiVector rotor_flector_at_infinity_add(Rotor self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector rotor_horizon_add(Rotor self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0));
}

Motor rotor_line_add(Rotor self, Line other) {
    return Motor(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), other.g1);
}

Motor rotor_line_at_infinity_add(Rotor self, LineAtInfinity other) {
    return Motor(self.g0, other.g0);
}

Rotor rotor_line_at_origin_add(Rotor self, LineAtOrigin other) {
    return Rotor(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector rotor_magnitude_add(Rotor self, Magnitude other) {
    return MultiVector(vec2(0.0, self.g0.w) + other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

Motor rotor_motor_add(Rotor self, Motor other) {
    return Motor(self.g0 + other.g0, other.g1);
}

MultiVector rotor_multi_vector_add(Rotor self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0.w) + other.g0, other.g1, vec3(self.g0.x, self.g0.y, self.g0.z) + other.g2, other.g3, other.g4);
}

MultiVector rotor_multi_vector_at_infinity_add(Rotor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w) + vec2(other.g0.x, 0.0), vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), other.g2, vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_add(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0.w) + other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) + other.g1, other.g2);
}

MultiVectorAtOrigin rotor_origin_add(Rotor self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0.w) + vec2(other.g0, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0));
}

MultiVector rotor_plane_add(Rotor self, Plane other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), other.g0);
}

MultiVectorAtOrigin rotor_plane_at_origin_add(Rotor self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0.w), vec3(self.g0.x, self.g0.y, self.g0.z), other.g0);
}

MultiVector rotor_point_add(Rotor self, Point other) {
    return MultiVector(vec2(0.0, self.g0.w), other.g0, vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_point_at_infinity_add(Rotor self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

Rotor rotor_rotor_add(Rotor self, Rotor other) {
    return Rotor(self.g0 + other.g0);
}

MultiVector rotor_scalar_add(Rotor self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0.w) + vec2(other.g0, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_transflector_add(Rotor self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), other.g1);
}

Motor rotor_translator_add(Rotor self, Translator other) {
    return Motor(self.g0 + vec4(0.0, 0.0, 0.0, other.g0.w), vec3(other.g0.x, other.g0.y, other.g0.z));
}

Magnitude scalar_anti_scalar_add(Scalar self, AntiScalar other) {
    return Magnitude(vec2(self.g0, 0.0) + vec2(0.0, other.g0));
}

MultiVector scalar_flector_add(Scalar self, Flector other) {
    return MultiVector(vec2(self.g0, 0.0), other.g0, vec3(0.0), vec3(0.0), other.g1);
}

MultiVectorAtInfinity scalar_flector_at_infinity_add(Scalar self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0) + vec2(0.0, other.g0.w), vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0));
}

MultiVectorAtInfinity scalar_horizon_add(Scalar self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0) + vec2(0.0, other.g0), vec3(0.0), vec3(0.0));
}

MultiVector scalar_line_add(Scalar self, Line other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0), other.g0, other.g1, vec4(0.0));
}

MultiVectorAtInfinity scalar_line_at_infinity_add(Scalar self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0), vec3(0.0), other.g0);
}

MultiVector scalar_line_at_origin_add(Scalar self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0), other.g0, vec3(0.0), vec4(0.0));
}

Magnitude scalar_magnitude_add(Scalar self, Magnitude other) {
    return Magnitude(vec2(self.g0, 0.0) + other.g0);
}

MultiVector scalar_motor_add(Scalar self, Motor other) {
    return MultiVector(vec2(self.g0, 0.0) + vec2(0.0, other.g0.w), vec4(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, vec4(0.0));
}

MultiVector scalar_multi_vector_add(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0, 0.0) + other.g0, other.g1, other.g2, other.g3, other.g4);
}

MultiVectorAtInfinity scalar_multi_vector_at_infinity_add(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0) + other.g0, other.g1, other.g2);
}

MultiVector scalar_multi_vector_at_origin_add(Scalar self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0, 0.0) + vec2(0.0, other.g0.y), vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(0.0), vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector scalar_origin_add(Scalar self, Origin other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector scalar_plane_add(Scalar self, Plane other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), other.g0);
}

MultiVector scalar_plane_at_origin_add(Scalar self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector scalar_point_add(Scalar self, Point other) {
    return MultiVector(vec2(self.g0, 0.0), other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity scalar_point_at_infinity_add(Scalar self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0), other.g0, vec3(0.0));
}

MultiVector scalar_rotor_add(Scalar self, Rotor other) {
    return MultiVector(vec2(self.g0, 0.0) + vec2(0.0, other.g0.w), vec4(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

Scalar scalar_scalar_add(Scalar self, Scalar other) {
    return Scalar(self.g0 + other.g0);
}

MultiVector scalar_transflector_add(Scalar self, Transflector other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), other.g1);
}

MultiVector scalar_translator_add(Scalar self, Translator other) {
    return MultiVector(vec2(self.g0, 0.0) + vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_anti_scalar_add(Transflector self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), self.g1);
}

Flector transflector_flector_add(Transflector self, Flector other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0, self.g1 + other.g1);
}

Transflector transflector_flector_at_infinity_add(Transflector self, FlectorAtInfinity other) {
    return Transflector(self.g0 + vec3(other.g0.x, other.g0.y, other.g0.z), self.g1 + vec4(0.0, 0.0, 0.0, other.g0.w));
}

Transflector transflector_horizon_add(Transflector self, Horizon other) {
    return Transflector(self.g0, self.g1 + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector transflector_line_add(Transflector self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), other.g0, other.g1, self.g1);
}

MultiVector transflector_line_at_infinity_add(Transflector self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), other.g0, self.g1);
}

MultiVector transflector_line_at_origin_add(Transflector self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), other.g0, vec3(0.0), self.g1);
}

MultiVector transflector_magnitude_add(Transflector self, Magnitude other) {
    return MultiVector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), self.g1);
}

MultiVector transflector_motor_add(Transflector self, Motor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(other.g0.x, other.g0.y, other.g0.z), other.g1, self.g1);
}

MultiVector transflector_multi_vector_add(Transflector self, MultiVector other) {
    return MultiVector(other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g1, other.g2, other.g3, self.g1 + other.g4);
}

MultiVector transflector_multi_vector_at_infinity_add(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0.x, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), other.g2, self.g1 + vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector transflector_multi_vector_at_origin_add(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0.y), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(0.0), self.g1 + vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector transflector_origin_add(Transflector self, Origin other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0), self.g1);
}

Transflector transflector_plane_add(Transflector self, Plane other) {
    return Transflector(self.g0, self.g1 + other.g0);
}

Transflector transflector_plane_at_origin_add(Transflector self, PlaneAtOrigin other) {
    return Transflector(self.g0, self.g1 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector transflector_point_add(Transflector self, Point other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) + other.g0, self.g1);
}

Transflector transflector_point_at_infinity_add(Transflector self, PointAtInfinity other) {
    return Transflector(self.g0 + other.g0, self.g1);
}

MultiVector transflector_rotor_add(Transflector self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), self.g1);
}

MultiVector transflector_scalar_add(Transflector self, Scalar other) {
    return MultiVector(vec2(other.g0, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), self.g1);
}

Transflector transflector_transflector_add(Transflector self, Transflector other) {
    return Transflector(self.g0 + other.g0, self.g1 + other.g1);
}

MultiVector transflector_translator_add(Transflector self, Translator other) {
    return MultiVector(vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(other.g0.x, other.g0.y, other.g0.z), self.g1);
}

Translator translator_anti_scalar_add(Translator self, AntiScalar other) {
    return Translator(self.g0 + vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector translator_flector_add(Translator self, Flector other) {
    return MultiVector(vec2(0.0, self.g0.w), other.g0, vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), other.g1);
}

MultiVector translator_flector_at_infinity_add(Translator self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector translator_horizon_add(Translator self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0, 0.0, 0.0, other.g0));
}

Motor translator_line_add(Translator self, Line other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0.w) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z) + other.g1);
}

Translator translator_line_at_infinity_add(Translator self, LineAtInfinity other) {
    return Translator(self.g0 + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Motor translator_line_at_origin_add(Translator self, LineAtOrigin other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0.w) + vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z));
}

MultiVector translator_magnitude_add(Translator self, Magnitude other) {
    return MultiVector(vec2(0.0, self.g0.w) + other.g0, vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

Motor translator_motor_add(Translator self, Motor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0.w) + other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) + other.g1);
}

MultiVector translator_multi_vector_add(Translator self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0.w) + other.g0, other.g1, other.g2, vec3(self.g0.x, self.g0.y, self.g0.z) + other.g3, other.g4);
}

MultiVector translator_multi_vector_at_infinity_add(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w) + vec2(other.g0.x, 0.0), vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) + other.g2, vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector translator_multi_vector_at_origin_add(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0.w) + vec2(0.0, other.g0.y), vec4(0.0, 0.0, 0.0, other.g0.x), other.g1, vec3(self.g0.x, self.g0.y, self.g0.z), vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector translator_origin_add(Translator self, Origin other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

MultiVector translator_plane_add(Translator self, Plane other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), other.g0);
}

MultiVector translator_plane_at_origin_add(Translator self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector translator_point_add(Translator self, Point other) {
    return MultiVector(vec2(0.0, self.g0.w), other.g0, vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

MultiVector translator_point_at_infinity_add(Translator self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

Motor translator_rotor_add(Translator self, Rotor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0.w) + other.g0, vec3(self.g0.x, self.g0.y, self.g0.z));
}

MultiVector translator_scalar_add(Translator self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0.w) + vec2(other.g0, 0.0), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

MultiVector translator_transflector_add(Translator self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), other.g1);
}

Translator translator_translator_add(Translator self, Translator other) {
    return Translator(self.g0 + other.g0);
}

AntiScalar anti_scalar_anti_scalar_div(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0 * 1.0 / other.g0 * 1.0);
}

Flector flector_flector_div(Flector self, Flector other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.w) * vec4(1.0, 1.0, 1.0, 1.0), vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g1.x, other.g1.y, other.g1.z, other.g1.w) * vec4(1.0, 1.0, 1.0, 1.0));
}

FlectorAtInfinity flector_at_infinity_flector_at_infinity_div(FlectorAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.w) * vec4(1.0, 1.0, 1.0, 1.0));
}

Horizon horizon_horizon_div(Horizon self, Horizon other) {
    return Horizon(self.g0 * 1.0 / other.g0 * 1.0);
}

Line line_line_div(Line self, Line other) {
    return Line(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g0.x, other.g0.y, other.g0.z) * vec3(1.0, 1.0, 1.0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g1.x, other.g1.y, other.g1.z) * vec3(1.0, 1.0, 1.0));
}

LineAtInfinity line_at_infinity_line_at_infinity_div(LineAtInfinity self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g0.x, other.g0.y, other.g0.z) * vec3(1.0, 1.0, 1.0));
}

LineAtOrigin line_at_origin_line_at_origin_div(LineAtOrigin self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g0.x, other.g0.y, other.g0.z) * vec3(1.0, 1.0, 1.0));
}

Magnitude magnitude_magnitude_div(Magnitude self, Magnitude other) {
    return Magnitude(vec2(self.g0.x, self.g0.y) * vec2(1.0, 1.0) / vec2(other.g0.x, other.g0.y) * vec2(1.0, 1.0));
}

Motor motor_motor_div(Motor self, Motor other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.w) * vec4(1.0, 1.0, 1.0, 1.0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g1.x, other.g1.y, other.g1.z) * vec3(1.0, 1.0, 1.0));
}

MultiVector multi_vector_multi_vector_div(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x, self.g0.y) * vec2(1.0, 1.0) / vec2(other.g0.x, other.g0.y) * vec2(1.0, 1.0), vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g1.x, other.g1.y, other.g1.z, other.g1.w) * vec4(1.0, 1.0, 1.0, 1.0), vec3(self.g2.x, self.g2.y, self.g2.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g2.x, other.g2.y, other.g2.z) * vec3(1.0, 1.0, 1.0), vec3(self.g3.x, self.g3.y, self.g3.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g3.x, other.g3.y, other.g3.z) * vec3(1.0, 1.0, 1.0), vec4(self.g4.x, self.g4.y, self.g4.z, self.g4.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g4.x, other.g4.y, other.g4.z, other.g4.w) * vec4(1.0, 1.0, 1.0, 1.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_div(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x, self.g0.y) * vec2(1.0, 1.0) / vec2(other.g0.x, other.g0.y) * vec2(1.0, 1.0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g1.x, other.g1.y, other.g1.z) * vec3(1.0, 1.0, 1.0), vec3(self.g2.x, self.g2.y, self.g2.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g2.x, other.g2.y, other.g2.z) * vec3(1.0, 1.0, 1.0));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_div(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x, self.g0.y) * vec2(1.0, 1.0) / vec2(other.g0.x, other.g0.y) * vec2(1.0, 1.0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g1.x, other.g1.y, other.g1.z) * vec3(1.0, 1.0, 1.0), vec3(self.g2.x, self.g2.y, self.g2.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g2.x, other.g2.y, other.g2.z) * vec3(1.0, 1.0, 1.0));
}

Origin origin_origin_div(Origin self, Origin other) {
    return Origin(self.g0 * 1.0 / other.g0 * 1.0);
}

Plane plane_plane_div(Plane self, Plane other) {
    return Plane(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.w) * vec4(1.0, 1.0, 1.0, 1.0));
}

PlaneAtOrigin plane_at_origin_plane_at_origin_div(PlaneAtOrigin self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g0.x, other.g0.y, other.g0.z) * vec3(1.0, 1.0, 1.0));
}

Point point_point_div(Point self, Point other) {
    return Point(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.w) * vec4(1.0, 1.0, 1.0, 1.0));
}

PointAtInfinity point_at_infinity_point_at_infinity_div(PointAtInfinity self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g0.x, other.g0.y, other.g0.z) * vec3(1.0, 1.0, 1.0));
}

Rotor rotor_rotor_div(Rotor self, Rotor other) {
    return Rotor(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.w) * vec4(1.0, 1.0, 1.0, 1.0));
}

Scalar scalar_scalar_div(Scalar self, Scalar other) {
    return Scalar(self.g0 * 1.0 / other.g0 * 1.0);
}

Transflector transflector_transflector_div(Transflector self, Transflector other) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(1.0, 1.0, 1.0) / vec3(other.g0.x, other.g0.y, other.g0.z) * vec3(1.0, 1.0, 1.0), vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g1.x, other.g1.y, other.g1.z, other.g1.w) * vec4(1.0, 1.0, 1.0, 1.0));
}

Translator translator_translator_div(Translator self, Translator other) {
    return Translator(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.w) * vec4(1.0, 1.0, 1.0, 1.0) / vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.w) * vec4(1.0, 1.0, 1.0, 1.0));
}

FlectorAtInfinity flector_flector_at_infinity_into(Flector self) {
    return FlectorAtInfinity(vec4(self.g0.x, self.g0.y, self.g0.z, self.g1.w));
}

Horizon flector_horizon_into(Flector self) {
    return Horizon(self.g1.w);
}

Origin flector_origin_into(Flector self) {
    return Origin(self.g0.w);
}

Plane flector_plane_into(Flector self) {
    return Plane(self.g1);
}

PlaneAtOrigin flector_plane_at_origin_into(Flector self) {
    return PlaneAtOrigin(vec3(self.g1.x, self.g1.y, self.g1.z));
}

Point flector_point_into(Flector self) {
    return Point(self.g0);
}

PointAtInfinity flector_point_at_infinity_into(Flector self) {
    return PointAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z));
}

Transflector flector_transflector_into(Flector self) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z), self.g1);
}

Horizon flector_at_infinity_horizon_into(FlectorAtInfinity self) {
    return Horizon(self.g0.w);
}

PointAtInfinity flector_at_infinity_point_at_infinity_into(FlectorAtInfinity self) {
    return PointAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z));
}

LineAtInfinity line_line_at_infinity_into(Line self) {
    return LineAtInfinity(self.g1);
}

LineAtOrigin line_line_at_origin_into(Line self) {
    return LineAtOrigin(self.g0);
}

AntiScalar magnitude_anti_scalar_into(Magnitude self) {
    return AntiScalar(self.g0.y);
}

Scalar magnitude_scalar_into(Magnitude self) {
    return Scalar(self.g0.x);
}

AntiScalar motor_anti_scalar_into(Motor self) {
    return AntiScalar(self.g0.w);
}

Line motor_line_into(Motor self) {
    return Line(vec3(self.g0.x, self.g0.y, self.g0.z), self.g1);
}

LineAtInfinity motor_line_at_infinity_into(Motor self) {
    return LineAtInfinity(self.g1);
}

LineAtOrigin motor_line_at_origin_into(Motor self) {
    return LineAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z));
}

Rotor motor_rotor_into(Motor self) {
    return Rotor(self.g0);
}

Translator motor_translator_into(Motor self) {
    return Translator(vec4(self.g1.x, self.g1.y, self.g1.z, self.g0.w));
}

AntiScalar multi_vector_anti_scalar_into(MultiVector self) {
    return AntiScalar(self.g0.y);
}

Flector multi_vector_flector_into(MultiVector self) {
    return Flector(self.g1, self.g4);
}

FlectorAtInfinity multi_vector_flector_at_infinity_into(MultiVector self) {
    return FlectorAtInfinity(vec4(self.g1.x, self.g1.y, self.g1.z, self.g4.w));
}

Horizon multi_vector_horizon_into(MultiVector self) {
    return Horizon(self.g4.w);
}

Line multi_vector_line_into(MultiVector self) {
    return Line(self.g2, self.g3);
}

LineAtInfinity multi_vector_line_at_infinity_into(MultiVector self) {
    return LineAtInfinity(self.g3);
}

LineAtOrigin multi_vector_line_at_origin_into(MultiVector self) {
    return LineAtOrigin(self.g2);
}

Magnitude multi_vector_magnitude_into(MultiVector self) {
    return Magnitude(self.g0);
}

Motor multi_vector_motor_into(MultiVector self) {
    return Motor(vec4(self.g2.x, self.g2.y, self.g2.z, self.g0.y), self.g3);
}

MultiVectorAtInfinity multi_vector_multi_vector_at_infinity_into(MultiVector self) {
    return MultiVectorAtInfinity(vec2(self.g0.x, self.g4.w), vec3(self.g1.x, self.g1.y, self.g1.z), self.g3);
}

MultiVectorAtOrigin multi_vector_multi_vector_at_origin_into(MultiVector self) {
    return MultiVectorAtOrigin(vec2(self.g1.w, self.g0.y), self.g2, vec3(self.g4.x, self.g4.y, self.g4.z));
}

Origin multi_vector_origin_into(MultiVector self) {
    return Origin(self.g1.w);
}

Plane multi_vector_plane_into(MultiVector self) {
    return Plane(self.g4);
}

PlaneAtOrigin multi_vector_plane_at_origin_into(MultiVector self) {
    return PlaneAtOrigin(vec3(self.g4.x, self.g4.y, self.g4.z));
}

Point multi_vector_point_into(MultiVector self) {
    return Point(self.g1);
}

PointAtInfinity multi_vector_point_at_infinity_into(MultiVector self) {
    return PointAtInfinity(vec3(self.g1.x, self.g1.y, self.g1.z));
}

Rotor multi_vector_rotor_into(MultiVector self) {
    return Rotor(vec4(self.g2.x, self.g2.y, self.g2.z, self.g0.y));
}

Scalar multi_vector_scalar_into(MultiVector self) {
    return Scalar(self.g0.x);
}

Transflector multi_vector_transflector_into(MultiVector self) {
    return Transflector(vec3(self.g1.x, self.g1.y, self.g1.z), self.g4);
}

Translator multi_vector_translator_into(MultiVector self) {
    return Translator(vec4(self.g3.x, self.g3.y, self.g3.z, self.g0.y));
}

FlectorAtInfinity multi_vector_at_infinity_flector_at_infinity_into(MultiVectorAtInfinity self) {
    return FlectorAtInfinity(vec4(self.g1.x, self.g1.y, self.g1.z, self.g0.y));
}

Horizon multi_vector_at_infinity_horizon_into(MultiVectorAtInfinity self) {
    return Horizon(self.g0.y);
}

LineAtInfinity multi_vector_at_infinity_line_at_infinity_into(MultiVectorAtInfinity self) {
    return LineAtInfinity(self.g2);
}

PointAtInfinity multi_vector_at_infinity_point_at_infinity_into(MultiVectorAtInfinity self) {
    return PointAtInfinity(self.g1);
}

Scalar multi_vector_at_infinity_scalar_into(MultiVectorAtInfinity self) {
    return Scalar(self.g0.x);
}

AntiScalar multi_vector_at_origin_anti_scalar_into(MultiVectorAtOrigin self) {
    return AntiScalar(self.g0.y);
}

LineAtOrigin multi_vector_at_origin_line_at_origin_into(MultiVectorAtOrigin self) {
    return LineAtOrigin(self.g1);
}

Origin multi_vector_at_origin_origin_into(MultiVectorAtOrigin self) {
    return Origin(self.g0.x);
}

PlaneAtOrigin multi_vector_at_origin_plane_at_origin_into(MultiVectorAtOrigin self) {
    return PlaneAtOrigin(self.g2);
}

Rotor multi_vector_at_origin_rotor_into(MultiVectorAtOrigin self) {
    return Rotor(vec4(self.g1.x, self.g1.y, self.g1.z, self.g0.y));
}

Horizon plane_horizon_into(Plane self) {
    return Horizon(self.g0.w);
}

PlaneAtOrigin plane_plane_at_origin_into(Plane self) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z));
}

Origin point_origin_into(Point self) {
    return Origin(self.g0.w);
}

PointAtInfinity point_point_at_infinity_into(Point self) {
    return PointAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z));
}

AntiScalar rotor_anti_scalar_into(Rotor self) {
    return AntiScalar(self.g0.w);
}

LineAtOrigin rotor_line_at_origin_into(Rotor self) {
    return LineAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z));
}

FlectorAtInfinity transflector_flector_at_infinity_into(Transflector self) {
    return FlectorAtInfinity(vec4(self.g0.x, self.g0.y, self.g0.z, self.g1.w));
}

Horizon transflector_horizon_into(Transflector self) {
    return Horizon(self.g1.w);
}

Plane transflector_plane_into(Transflector self) {
    return Plane(self.g1);
}

PlaneAtOrigin transflector_plane_at_origin_into(Transflector self) {
    return PlaneAtOrigin(vec3(self.g1.x, self.g1.y, self.g1.z));
}

PointAtInfinity transflector_point_at_infinity_into(Transflector self) {
    return PointAtInfinity(self.g0);
}

AntiScalar translator_anti_scalar_into(Translator self) {
    return AntiScalar(self.g0.w);
}

LineAtInfinity translator_line_at_infinity_into(Translator self) {
    return LineAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z));
}

AntiScalar anti_scalar_anti_scalar_mul(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector flector_flector_mul(Flector self, Flector other) {
    return Flector(self.g0 * other.g0, self.g1 * other.g1);
}

FlectorAtInfinity flector_at_infinity_flector_at_infinity_mul(FlectorAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0 * other.g0);
}

Horizon horizon_horizon_mul(Horizon self, Horizon other) {
    return Horizon(self.g0 * other.g0);
}

Line line_line_mul(Line self, Line other) {
    return Line(self.g0 * other.g0, self.g1 * other.g1);
}

LineAtInfinity line_at_infinity_line_at_infinity_mul(LineAtInfinity self, LineAtInfinity other) {
    return LineAtInfinity(self.g0 * other.g0);
}

LineAtOrigin line_at_origin_line_at_origin_mul(LineAtOrigin self, LineAtOrigin other) {
    return LineAtOrigin(self.g0 * other.g0);
}

Magnitude magnitude_magnitude_mul(Magnitude self, Magnitude other) {
    return Magnitude(self.g0 * other.g0);
}

Motor motor_motor_mul(Motor self, Motor other) {
    return Motor(self.g0 * other.g0, self.g1 * other.g1);
}

MultiVector multi_vector_multi_vector_mul(MultiVector self, MultiVector other) {
    return MultiVector(self.g0 * other.g0, self.g1 * other.g1, self.g2 * other.g2, self.g3 * other.g3, self.g4 * other.g4);
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_mul(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0 * other.g0, self.g1 * other.g1, self.g2 * other.g2);
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_mul(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(self.g0 * other.g0, self.g1 * other.g1, self.g2 * other.g2);
}

Origin origin_origin_mul(Origin self, Origin other) {
    return Origin(self.g0 * other.g0);
}

Plane plane_plane_mul(Plane self, Plane other) {
    return Plane(self.g0 * other.g0);
}

PlaneAtOrigin plane_at_origin_plane_at_origin_mul(PlaneAtOrigin self, PlaneAtOrigin other) {
    return PlaneAtOrigin(self.g0 * other.g0);
}

Point point_point_mul(Point self, Point other) {
    return Point(self.g0 * other.g0);
}

PointAtInfinity point_at_infinity_point_at_infinity_mul(PointAtInfinity self, PointAtInfinity other) {
    return PointAtInfinity(self.g0 * other.g0);
}

Rotor rotor_rotor_mul(Rotor self, Rotor other) {
    return Rotor(self.g0 * other.g0);
}

Scalar scalar_scalar_mul(Scalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Transflector transflector_transflector_mul(Transflector self, Transflector other) {
    return Transflector(self.g0 * other.g0, self.g1 * other.g1);
}

Translator translator_translator_mul(Translator self, Translator other) {
    return Translator(self.g0 * other.g0);
}

AntiScalar anti_scalar_anti_scalar_sub(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0 - other.g0);
}

MultiVector anti_scalar_flector_sub(AntiScalar self, Flector other) {
    return MultiVector(vec2(0.0, self.g0), vec4(0.0) - other.g0, vec3(0.0), vec3(0.0), vec4(0.0) - other.g1);
}

MultiVector anti_scalar_flector_at_infinity_sub(AntiScalar self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector anti_scalar_horizon_sub(AntiScalar self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

Motor anti_scalar_line_sub(AntiScalar self, Line other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0) - other.g1);
}

Translator anti_scalar_line_at_infinity_sub(AntiScalar self, LineAtInfinity other) {
    return Translator(vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Rotor anti_scalar_line_at_origin_sub(AntiScalar self, LineAtOrigin other) {
    return Rotor(vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Magnitude anti_scalar_magnitude_sub(AntiScalar self, Magnitude other) {
    return Magnitude(vec2(0.0, self.g0) - other.g0);
}

Motor anti_scalar_motor_sub(AntiScalar self, Motor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0) - other.g0, vec3(0.0) - other.g1);
}

MultiVector anti_scalar_multi_vector_sub(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0) - other.g0, vec4(0.0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, vec4(0.0) - other.g4);
}

MultiVector anti_scalar_multi_vector_at_infinity_sub(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0) - vec2(other.g0.x, 0.0), vec4(0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(0.0) - other.g2, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_origin_sub(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0) - other.g0, vec3(0.0) - other.g1, vec3(0.0) - other.g2);
}

MultiVectorAtOrigin anti_scalar_origin_sub(AntiScalar self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0) - vec2(other.g0, 0.0), vec3(0.0), vec3(0.0));
}

MultiVector anti_scalar_plane_sub(AntiScalar self, Plane other) {
    return MultiVector(vec2(0.0, self.g0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g0);
}

MultiVectorAtOrigin anti_scalar_plane_at_origin_sub(AntiScalar self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0), vec3(0.0), vec3(0.0) - other.g0);
}

MultiVector anti_scalar_point_sub(AntiScalar self, Point other) {
    return MultiVector(vec2(0.0, self.g0), vec4(0.0) - other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector anti_scalar_point_at_infinity_sub(AntiScalar self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Rotor anti_scalar_rotor_sub(AntiScalar self, Rotor other) {
    return Rotor(vec4(0.0, 0.0, 0.0, self.g0) - other.g0);
}

Magnitude anti_scalar_scalar_sub(AntiScalar self, Scalar other) {
    return Magnitude(vec2(0.0, self.g0) - vec2(other.g0, 0.0));
}

MultiVector anti_scalar_transflector_sub(AntiScalar self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g1);
}

Translator anti_scalar_translator_sub(AntiScalar self, Translator other) {
    return Translator(vec4(0.0, 0.0, 0.0, self.g0) - other.g0);
}

MultiVector flector_anti_scalar_sub(Flector self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0), self.g0, vec3(0.0), vec3(0.0), self.g1);
}

Flector flector_flector_sub(Flector self, Flector other) {
    return Flector(self.g0 - other.g0, self.g1 - other.g1);
}

Flector flector_flector_at_infinity_sub(Flector self, FlectorAtInfinity other) {
    return Flector(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 - vec4(0.0, 0.0, 0.0, other.g0.w));
}

Flector flector_horizon_sub(Flector self, Horizon other) {
    return Flector(self.g0, self.g1 - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector flector_line_sub(Flector self, Line other) {
    return MultiVector(vec2(0.0), self.g0, vec3(0.0) - other.g0, vec3(0.0) - other.g1, self.g1);
}

MultiVector flector_line_at_infinity_sub(Flector self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), self.g0, vec3(0.0), vec3(0.0) - other.g0, self.g1);
}

MultiVector flector_line_at_origin_sub(Flector self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), self.g0, vec3(0.0) - other.g0, vec3(0.0), self.g1);
}

MultiVector flector_magnitude_sub(Flector self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, self.g0, vec3(0.0), vec3(0.0), self.g1);
}

MultiVector flector_motor_sub(Flector self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), self.g0, vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, self.g1);
}

MultiVector flector_multi_vector_sub(Flector self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, self.g0 - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, self.g1 - other.g4);
}

MultiVector flector_multi_vector_at_infinity_sub(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0.x, 0.0), self.g0 - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(0.0) - other.g2, self.g1 - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector flector_multi_vector_at_origin_sub(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.y), self.g0 - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(0.0), self.g1 - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector flector_origin_sub(Flector self, Origin other) {
    return Flector(self.g0 - vec4(0.0, 0.0, 0.0, other.g0), self.g1);
}

Flector flector_plane_sub(Flector self, Plane other) {
    return Flector(self.g0, self.g1 - other.g0);
}

Flector flector_plane_at_origin_sub(Flector self, PlaneAtOrigin other) {
    return Flector(self.g0, self.g1 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_point_sub(Flector self, Point other) {
    return Flector(self.g0 - other.g0, self.g1);
}

Flector flector_point_at_infinity_sub(Flector self, PointAtInfinity other) {
    return Flector(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1);
}

MultiVector flector_rotor_sub(Flector self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), self.g0, vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), self.g1);
}

MultiVector flector_scalar_sub(Flector self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0, 0.0), self.g0, vec3(0.0), vec3(0.0), self.g1);
}

Flector flector_transflector_sub(Flector self, Transflector other) {
    return Flector(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 - other.g1);
}

MultiVector flector_translator_sub(Flector self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), self.g0, vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), self.g1);
}

MultiVector flector_at_infinity_anti_scalar_sub(FlectorAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

Flector flector_at_infinity_flector_sub(FlectorAtInfinity self, Flector other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0, vec4(0.0, 0.0, 0.0, self.g0.w) - other.g1);
}

FlectorAtInfinity flector_at_infinity_flector_at_infinity_sub(FlectorAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0 - other.g0);
}

FlectorAtInfinity flector_at_infinity_horizon_sub(FlectorAtInfinity self, Horizon other) {
    return FlectorAtInfinity(self.g0 - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector flector_at_infinity_line_sub(FlectorAtInfinity self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - other.g0, vec3(0.0) - other.g1, vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVectorAtInfinity flector_at_infinity_line_at_infinity_sub(FlectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0.w), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0) - other.g0);
}

MultiVector flector_at_infinity_line_at_origin_sub(FlectorAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - other.g0, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVector flector_at_infinity_magnitude_sub(FlectorAtInfinity self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVector flector_at_infinity_motor_sub(FlectorAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVector flector_at_infinity_multi_vector_sub(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, vec4(0.0, 0.0, 0.0, self.g0.w) - other.g4);
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_sub(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0.w) - other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) - other.g1, vec3(0.0) - other.g2);
}

MultiVector flector_at_infinity_multi_vector_at_origin_sub(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.y), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector flector_at_infinity_origin_sub(FlectorAtInfinity self, Origin other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

Transflector flector_at_infinity_plane_sub(FlectorAtInfinity self, Plane other) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0, 0.0, 0.0, self.g0.w) - other.g0);
}

Transflector flector_at_infinity_plane_at_origin_sub(FlectorAtInfinity self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0, 0.0, 0.0, self.g0.w) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_at_infinity_point_sub(FlectorAtInfinity self, Point other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0, vec4(0.0, 0.0, 0.0, self.g0.w));
}

FlectorAtInfinity flector_at_infinity_point_at_infinity_sub(FlectorAtInfinity self, PointAtInfinity other) {
    return FlectorAtInfinity(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector flector_at_infinity_rotor_sub(FlectorAtInfinity self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVectorAtInfinity flector_at_infinity_scalar_sub(FlectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0.w) - vec2(other.g0, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0));
}

Transflector flector_at_infinity_transflector_sub(FlectorAtInfinity self, Transflector other) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z) - other.g0, vec4(0.0, 0.0, 0.0, self.g0.w) - other.g1);
}

MultiVector flector_at_infinity_translator_sub(FlectorAtInfinity self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0, 0.0, 0.0, self.g0.w));
}

MultiVector horizon_anti_scalar_sub(Horizon self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0));
}

Flector horizon_flector_sub(Horizon self, Flector other) {
    return Flector(vec4(0.0) - other.g0, vec4(0.0, 0.0, 0.0, self.g0) - other.g1);
}

FlectorAtInfinity horizon_flector_at_infinity_sub(Horizon self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(0.0, 0.0, 0.0, self.g0) - other.g0);
}

Horizon horizon_horizon_sub(Horizon self, Horizon other) {
    return Horizon(self.g0 - other.g0);
}

MultiVector horizon_line_sub(Horizon self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0, vec3(0.0) - other.g1, vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVectorAtInfinity horizon_line_at_infinity_sub(Horizon self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0), vec3(0.0), vec3(0.0) - other.g0);
}

MultiVector horizon_line_at_origin_sub(Horizon self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVector horizon_magnitude_sub(Horizon self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVector horizon_motor_sub(Horizon self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVector horizon_multi_vector_sub(Horizon self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, vec4(0.0, 0.0, 0.0, self.g0) - other.g4);
}

MultiVectorAtInfinity horizon_multi_vector_at_infinity_sub(Horizon self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0) - other.g0, vec3(0.0) - other.g1, vec3(0.0) - other.g2);
}

MultiVector horizon_multi_vector_at_origin_sub(Horizon self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector horizon_origin_sub(Horizon self, Origin other) {
    return Flector(vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0), vec4(0.0, 0.0, 0.0, self.g0));
}

Plane horizon_plane_sub(Horizon self, Plane other) {
    return Plane(vec4(0.0, 0.0, 0.0, self.g0) - other.g0);
}

Plane horizon_plane_at_origin_sub(Horizon self, PlaneAtOrigin other) {
    return Plane(vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector horizon_point_sub(Horizon self, Point other) {
    return Flector(vec4(0.0) - other.g0, vec4(0.0, 0.0, 0.0, self.g0));
}

FlectorAtInfinity horizon_point_at_infinity_sub(Horizon self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector horizon_rotor_sub(Horizon self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0));
}

MultiVectorAtInfinity horizon_scalar_sub(Horizon self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0) - vec2(other.g0, 0.0), vec3(0.0), vec3(0.0));
}

Transflector horizon_transflector_sub(Horizon self, Transflector other) {
    return Transflector(vec3(0.0) - other.g0, vec4(0.0, 0.0, 0.0, self.g0) - other.g1);
}

MultiVector horizon_translator_sub(Horizon self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0, 0.0, 0.0, self.g0));
}

Motor line_anti_scalar_sub(Line self, AntiScalar other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0), self.g1);
}

MultiVector line_flector_sub(Line self, Flector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0, self.g0, self.g1, vec4(0.0) - other.g1);
}

MultiVector line_flector_at_infinity_sub(Line self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, self.g1, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector line_horizon_sub(Line self, Horizon other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, self.g1, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

Line line_line_sub(Line self, Line other) {
    return Line(self.g0 - other.g0, self.g1 - other.g1);
}

Line line_line_at_infinity_sub(Line self, LineAtInfinity other) {
    return Line(self.g0, self.g1 - other.g0);
}

Line line_line_at_origin_sub(Line self, LineAtOrigin other) {
    return Line(self.g0 - other.g0, self.g1);
}

MultiVector line_magnitude_sub(Line self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0), self.g0, self.g1, vec4(0.0));
}

Motor line_motor_sub(Line self, Motor other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0, self.g1 - other.g1);
}

MultiVector line_multi_vector_sub(Line self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0) - other.g1, self.g0 - other.g2, self.g1 - other.g3, vec4(0.0) - other.g4);
}

MultiVector line_multi_vector_at_infinity_sub(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0.x, 0.0), vec4(0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), self.g0, self.g1 - other.g2, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector line_multi_vector_at_origin_sub(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), self.g0 - other.g1, self.g1, vec4(0.0) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector line_origin_sub(Line self, Origin other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0), self.g0, self.g1, vec4(0.0));
}

MultiVector line_plane_sub(Line self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, self.g1, vec4(0.0) - other.g0);
}

MultiVector line_plane_at_origin_sub(Line self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, self.g1, vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector line_point_sub(Line self, Point other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0, self.g0, self.g1, vec4(0.0));
}

MultiVector line_point_at_infinity_sub(Line self, PointAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, self.g1, vec4(0.0));
}

Motor line_rotor_sub(Line self, Rotor other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0, self.g1);
}

MultiVector line_scalar_sub(Line self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0, 0.0), vec4(0.0), self.g0, self.g1, vec4(0.0));
}

MultiVector line_transflector_sub(Line self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, self.g1, vec4(0.0) - other.g1);
}

Motor line_translator_sub(Line self, Translator other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.w), self.g1 - vec3(other.g0.x, other.g0.y, other.g0.z));
}

Translator line_at_infinity_anti_scalar_sub(LineAtInfinity self, AntiScalar other) {
    return Translator(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector line_at_infinity_flector_sub(LineAtInfinity self, Flector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0, vec3(0.0), self.g0, vec4(0.0) - other.g1);
}

MultiVectorAtInfinity line_at_infinity_flector_at_infinity_sub(LineAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(0.0, other.g0.w), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), self.g0);
}

MultiVectorAtInfinity line_at_infinity_horizon_sub(LineAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(0.0, other.g0), vec3(0.0), self.g0);
}

Line line_at_infinity_line_sub(LineAtInfinity self, Line other) {
    return Line(vec3(0.0) - other.g0, self.g0 - other.g1);
}

LineAtInfinity line_at_infinity_line_at_infinity_sub(LineAtInfinity self, LineAtInfinity other) {
    return LineAtInfinity(self.g0 - other.g0);
}

Line line_at_infinity_line_at_origin_sub(LineAtInfinity self, LineAtOrigin other) {
    return Line(vec3(0.0) - other.g0, self.g0);
}

MultiVector line_at_infinity_magnitude_sub(LineAtInfinity self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0), vec3(0.0), self.g0, vec4(0.0));
}

Motor line_at_infinity_motor_sub(LineAtInfinity self, Motor other) {
    return Motor(vec4(0.0) - other.g0, self.g0 - other.g1);
}

MultiVector line_at_infinity_multi_vector_sub(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0) - other.g1, vec3(0.0) - other.g2, self.g0 - other.g3, vec4(0.0) - other.g4);
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_sub(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - other.g0, vec3(0.0) - other.g1, self.g0 - other.g2);
}

MultiVector line_at_infinity_multi_vector_at_origin_sub(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, self.g0, vec4(0.0) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector line_at_infinity_origin_sub(LineAtInfinity self, Origin other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), self.g0, vec4(0.0));
}

MultiVector line_at_infinity_plane_sub(LineAtInfinity self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), self.g0, vec4(0.0) - other.g0);
}

MultiVector line_at_infinity_plane_at_origin_sub(LineAtInfinity self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), self.g0, vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector line_at_infinity_point_sub(LineAtInfinity self, Point other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0, vec3(0.0), self.g0, vec4(0.0));
}

MultiVectorAtInfinity line_at_infinity_point_at_infinity_sub(LineAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0), vec3(0.0) - other.g0, self.g0);
}

Motor line_at_infinity_rotor_sub(LineAtInfinity self, Rotor other) {
    return Motor(vec4(0.0) - other.g0, self.g0);
}

MultiVectorAtInfinity line_at_infinity_scalar_sub(LineAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(other.g0, 0.0), vec3(0.0), self.g0);
}

MultiVector line_at_infinity_transflector_sub(LineAtInfinity self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), self.g0, vec4(0.0) - other.g1);
}

Translator line_at_infinity_translator_sub(LineAtInfinity self, Translator other) {
    return Translator(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0);
}

Rotor line_at_origin_anti_scalar_sub(LineAtOrigin self, AntiScalar other) {
    return Rotor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector line_at_origin_flector_sub(LineAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0, self.g0, vec3(0.0), vec4(0.0) - other.g1);
}

MultiVector line_at_origin_flector_at_infinity_sub(LineAtOrigin self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector line_at_origin_horizon_sub(LineAtOrigin self, Horizon other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

Line line_at_origin_line_sub(LineAtOrigin self, Line other) {
    return Line(self.g0 - other.g0, vec3(0.0) - other.g1);
}

Line line_at_origin_line_at_infinity_sub(LineAtOrigin self, LineAtInfinity other) {
    return Line(self.g0, vec3(0.0) - other.g0);
}

LineAtOrigin line_at_origin_line_at_origin_sub(LineAtOrigin self, LineAtOrigin other) {
    return LineAtOrigin(self.g0 - other.g0);
}

MultiVector line_at_origin_magnitude_sub(LineAtOrigin self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0), self.g0, vec3(0.0), vec4(0.0));
}

Motor line_at_origin_motor_sub(LineAtOrigin self, Motor other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0, vec3(0.0) - other.g1);
}

MultiVector line_at_origin_multi_vector_sub(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0) - other.g1, self.g0 - other.g2, vec3(0.0) - other.g3, vec4(0.0) - other.g4);
}

MultiVector line_at_origin_multi_vector_at_infinity_sub(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0.x, 0.0), vec4(0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), self.g0, vec3(0.0) - other.g2, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_sub(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - other.g0, self.g0 - other.g1, vec3(0.0) - other.g2);
}

MultiVectorAtOrigin line_at_origin_origin_sub(LineAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(other.g0, 0.0), self.g0, vec3(0.0));
}

MultiVector line_at_origin_plane_sub(LineAtOrigin self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0, vec3(0.0), vec4(0.0) - other.g0);
}

MultiVectorAtOrigin line_at_origin_plane_at_origin_sub(LineAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0), self.g0, vec3(0.0) - other.g0);
}

MultiVector line_at_origin_point_sub(LineAtOrigin self, Point other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0, self.g0, vec3(0.0), vec4(0.0));
}

MultiVector line_at_origin_point_at_infinity_sub(LineAtOrigin self, PointAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, vec3(0.0), vec4(0.0));
}

Rotor line_at_origin_rotor_sub(LineAtOrigin self, Rotor other) {
    return Rotor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0);
}

MultiVector line_at_origin_scalar_sub(LineAtOrigin self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0, 0.0), vec4(0.0), self.g0, vec3(0.0), vec4(0.0));
}

MultiVector line_at_origin_transflector_sub(LineAtOrigin self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0, vec3(0.0), vec4(0.0) - other.g1);
}

Motor line_at_origin_translator_sub(LineAtOrigin self, Translator other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.w), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z));
}

Magnitude magnitude_anti_scalar_sub(Magnitude self, AntiScalar other) {
    return Magnitude(self.g0 - vec2(0.0, other.g0));
}

MultiVector magnitude_flector_sub(Magnitude self, Flector other) {
    return MultiVector(self.g0, vec4(0.0) - other.g0, vec3(0.0), vec3(0.0), vec4(0.0) - other.g1);
}

MultiVector magnitude_flector_at_infinity_sub(Magnitude self, FlectorAtInfinity other) {
    return MultiVector(self.g0, vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector magnitude_horizon_sub(Magnitude self, Horizon other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector magnitude_line_sub(Magnitude self, Line other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0) - other.g0, vec3(0.0) - other.g1, vec4(0.0));
}

MultiVector magnitude_line_at_infinity_sub(Magnitude self, LineAtInfinity other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0), vec3(0.0) - other.g0, vec4(0.0));
}

MultiVector magnitude_line_at_origin_sub(Magnitude self, LineAtOrigin other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0) - other.g0, vec3(0.0), vec4(0.0));
}

Magnitude magnitude_magnitude_sub(Magnitude self, Magnitude other) {
    return Magnitude(self.g0 - other.g0);
}

MultiVector magnitude_motor_sub(Magnitude self, Motor other) {
    return MultiVector(self.g0 - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, vec4(0.0));
}

MultiVector magnitude_multi_vector_sub(Magnitude self, MultiVector other) {
    return MultiVector(self.g0 - other.g0, vec4(0.0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, vec4(0.0) - other.g4);
}

MultiVector magnitude_multi_vector_at_infinity_sub(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 - vec2(other.g0.x, 0.0), vec4(0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(0.0) - other.g2, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector magnitude_multi_vector_at_origin_sub(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 - vec2(0.0, other.g0.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(0.0), vec4(0.0) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector magnitude_origin_sub(Magnitude self, Origin other) {
    return MultiVector(self.g0, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector magnitude_plane_sub(Magnitude self, Plane other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g0);
}

MultiVector magnitude_plane_at_origin_sub(Magnitude self, PlaneAtOrigin other) {
    return MultiVector(self.g0, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector magnitude_point_sub(Magnitude self, Point other) {
    return MultiVector(self.g0, vec4(0.0) - other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector magnitude_point_at_infinity_sub(Magnitude self, PointAtInfinity other) {
    return MultiVector(self.g0, vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector magnitude_rotor_sub(Magnitude self, Rotor other) {
    return MultiVector(self.g0 - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

Magnitude magnitude_scalar_sub(Magnitude self, Scalar other) {
    return Magnitude(self.g0 - vec2(other.g0, 0.0));
}

MultiVector magnitude_transflector_sub(Magnitude self, Transflector other) {
    return MultiVector(self.g0, vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g1);
}

MultiVector magnitude_translator_sub(Magnitude self, Translator other) {
    return MultiVector(self.g0 - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Motor motor_anti_scalar_sub(Motor self, AntiScalar other) {
    return Motor(self.g0 - vec4(0.0, 0.0, 0.0, other.g0), self.g1);
}

MultiVector motor_flector_sub(Motor self, Flector other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - other.g0, vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0) - other.g1);
}

MultiVector motor_flector_at_infinity_sub(Motor self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector motor_horizon_sub(Motor self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

Motor motor_line_sub(Motor self, Line other) {
    return Motor(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 - other.g1);
}

Motor motor_line_at_infinity_sub(Motor self, LineAtInfinity other) {
    return Motor(self.g0, self.g1 - other.g0);
}

Motor motor_line_at_origin_sub(Motor self, LineAtOrigin other) {
    return Motor(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1);
}

MultiVector motor_magnitude_sub(Motor self, Magnitude other) {
    return MultiVector(vec2(0.0, self.g0.w) - other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

Motor motor_motor_sub(Motor self, Motor other) {
    return Motor(self.g0 - other.g0, self.g1 - other.g1);
}

MultiVector motor_multi_vector_sub(Motor self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0.w) - other.g0, vec4(0.0) - other.g1, vec3(self.g0.x, self.g0.y, self.g0.z) - other.g2, self.g1 - other.g3, vec4(0.0) - other.g4);
}

MultiVector motor_multi_vector_at_infinity_sub(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w) - vec2(other.g0.x, 0.0), vec4(0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1 - other.g2, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector motor_multi_vector_at_origin_sub(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0.w) - vec2(0.0, other.g0.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) - other.g1, self.g1, vec4(0.0) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector motor_origin_sub(Motor self, Origin other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

MultiVector motor_plane_sub(Motor self, Plane other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0) - other.g0);
}

MultiVector motor_plane_at_origin_sub(Motor self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector motor_point_sub(Motor self, Point other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - other.g0, vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

MultiVector motor_point_at_infinity_sub(Motor self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

Motor motor_rotor_sub(Motor self, Rotor other) {
    return Motor(self.g0 - other.g0, self.g1);
}

MultiVector motor_scalar_sub(Motor self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0.w) - vec2(other.g0, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0));
}

MultiVector motor_transflector_sub(Motor self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), self.g1, vec4(0.0) - other.g1);
}

Motor motor_translator_sub(Motor self, Translator other) {
    return Motor(self.g0 - vec4(0.0, 0.0, 0.0, other.g0.w), self.g1 - vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVector multi_vector_anti_scalar_sub(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0 - vec2(0.0, other.g0), self.g1, self.g2, self.g3, self.g4);
}

MultiVector multi_vector_flector_sub(MultiVector self, Flector other) {
    return MultiVector(self.g0, self.g1 - other.g0, self.g2, self.g3, self.g4 - other.g1);
}

MultiVector multi_vector_flector_at_infinity_sub(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(self.g0, self.g1 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g2, self.g3, self.g4 - vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector multi_vector_horizon_sub(MultiVector self, Horizon other) {
    return MultiVector(self.g0, self.g1, self.g2, self.g3, self.g4 - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector multi_vector_line_sub(MultiVector self, Line other) {
    return MultiVector(self.g0, self.g1, self.g2 - other.g0, self.g3 - other.g1, self.g4);
}

MultiVector multi_vector_line_at_infinity_sub(MultiVector self, LineAtInfinity other) {
    return MultiVector(self.g0, self.g1, self.g2, self.g3 - other.g0, self.g4);
}

MultiVector multi_vector_line_at_origin_sub(MultiVector self, LineAtOrigin other) {
    return MultiVector(self.g0, self.g1, self.g2 - other.g0, self.g3, self.g4);
}

MultiVector multi_vector_magnitude_sub(MultiVector self, Magnitude other) {
    return MultiVector(self.g0 - other.g0, self.g1, self.g2, self.g3, self.g4);
}

MultiVector multi_vector_motor_sub(MultiVector self, Motor other) {
    return MultiVector(self.g0 - vec2(0.0, other.g0.w), self.g1, self.g2 - vec3(other.g0.x, other.g0.y, other.g0.z), self.g3 - other.g1, self.g4);
}

MultiVector multi_vector_multi_vector_sub(MultiVector self, MultiVector other) {
    return MultiVector(self.g0 - other.g0, self.g1 - other.g1, self.g2 - other.g2, self.g3 - other.g3, self.g4 - other.g4);
}

MultiVector multi_vector_multi_vector_at_infinity_sub(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 - vec2(other.g0.x, 0.0), self.g1 - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), self.g2, self.g3 - other.g2, self.g4 - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector multi_vector_multi_vector_at_origin_sub(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 - vec2(0.0, other.g0.y), self.g1 - vec4(0.0, 0.0, 0.0, other.g0.x), self.g2 - other.g1, self.g3, self.g4 - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector multi_vector_origin_sub(MultiVector self, Origin other) {
    return MultiVector(self.g0, self.g1 - vec4(0.0, 0.0, 0.0, other.g0), self.g2, self.g3, self.g4);
}

MultiVector multi_vector_plane_sub(MultiVector self, Plane other) {
    return MultiVector(self.g0, self.g1, self.g2, self.g3, self.g4 - other.g0);
}

MultiVector multi_vector_plane_at_origin_sub(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(self.g0, self.g1, self.g2, self.g3, self.g4 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_point_sub(MultiVector self, Point other) {
    return MultiVector(self.g0, self.g1 - other.g0, self.g2, self.g3, self.g4);
}

MultiVector multi_vector_point_at_infinity_sub(MultiVector self, PointAtInfinity other) {
    return MultiVector(self.g0, self.g1 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g2, self.g3, self.g4);
}

MultiVector multi_vector_rotor_sub(MultiVector self, Rotor other) {
    return MultiVector(self.g0 - vec2(0.0, other.g0.w), self.g1, self.g2 - vec3(other.g0.x, other.g0.y, other.g0.z), self.g3, self.g4);
}

MultiVector multi_vector_scalar_sub(MultiVector self, Scalar other) {
    return MultiVector(self.g0 - vec2(other.g0, 0.0), self.g1, self.g2, self.g3, self.g4);
}

MultiVector multi_vector_transflector_sub(MultiVector self, Transflector other) {
    return MultiVector(self.g0, self.g1 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g2, self.g3, self.g4 - other.g1);
}

MultiVector multi_vector_translator_sub(MultiVector self, Translator other) {
    return MultiVector(self.g0 - vec2(0.0, other.g0.w), self.g1, self.g2, self.g3 - vec3(other.g0.x, other.g0.y, other.g0.z), self.g4);
}

MultiVector multi_vector_at_infinity_anti_scalar_sub(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(self.g0.x, 0.0) - vec2(0.0, other.g0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_flector_sub(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) - other.g0, vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) - other.g1);
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_sub(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0 - vec2(0.0, other.g0.w), self.g1 - vec3(other.g0.x, other.g0.y, other.g0.z), self.g2);
}

MultiVectorAtInfinity multi_vector_at_infinity_horizon_sub(MultiVectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(self.g0 - vec2(0.0, other.g0), self.g1, self.g2);
}

MultiVector multi_vector_at_infinity_line_sub(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0) - other.g0, self.g2 - other.g1, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_sub(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(self.g0, self.g1, self.g2 - other.g0);
}

MultiVector multi_vector_at_infinity_line_at_origin_sub(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0) - other.g0, self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_magnitude_sub(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVector(vec2(self.g0.x, 0.0) - other.g0, vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_motor_sub(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0.x, 0.0) - vec2(0.0, other.g0.w), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), self.g2 - other.g1, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_multi_vector_sub(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x, 0.0) - other.g0, vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) - other.g1, vec3(0.0) - other.g2, self.g2 - other.g3, vec4(0.0, 0.0, 0.0, self.g0.y) - other.g4);
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_sub(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0 - other.g0, self.g1 - other.g1, self.g2 - other.g2);
}

MultiVector multi_vector_at_infinity_multi_vector_at_origin_sub(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x, 0.0) - vec2(0.0, other.g0.y), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector multi_vector_at_infinity_origin_sub(MultiVectorAtInfinity self, Origin other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVector multi_vector_at_infinity_plane_sub(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) - other.g0);
}

MultiVector multi_vector_at_infinity_plane_at_origin_sub(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_at_infinity_point_sub(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) - other.g0, vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_sub(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(self.g0, self.g1 - other.g0, self.g2);
}

MultiVector multi_vector_at_infinity_rotor_sub(MultiVectorAtInfinity self, Rotor other) {
    return MultiVector(vec2(self.g0.x, 0.0) - vec2(0.0, other.g0.w), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_scalar_sub(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0 - vec2(other.g0, 0.0), self.g1, self.g2);
}

MultiVector multi_vector_at_infinity_transflector_sub(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0.x, 0.0), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), self.g2, vec4(0.0, 0.0, 0.0, self.g0.y) - other.g1);
}

MultiVector multi_vector_at_infinity_translator_sub(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0.x, 0.0) - vec2(0.0, other.g0.w), vec4(self.g1.x, self.g1.y, self.g1.z, 0.0), vec3(0.0), self.g2 - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0, 0.0, 0.0, self.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_anti_scalar_sub(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0 - vec2(0.0, other.g0), self.g1, self.g2);
}

MultiVector multi_vector_at_origin_flector_sub(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) - other.g0, self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) - other.g1);
}

MultiVector multi_vector_at_origin_flector_at_infinity_sub(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector multi_vector_at_origin_horizon_sub(MultiVectorAtOrigin self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector multi_vector_at_origin_line_sub(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1 - other.g0, vec3(0.0) - other.g1, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_line_at_infinity_sub(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0) - other.g0, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_origin_sub(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(self.g0, self.g1 - other.g0, self.g2);
}

MultiVector multi_vector_at_origin_magnitude_sub(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVector(vec2(0.0, self.g0.y) - other.g0, vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_motor_sub(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0, self.g0.y) - vec2(0.0, other.g0.w), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1 - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_multi_vector_sub(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0.y) - other.g0, vec4(0.0, 0.0, 0.0, self.g0.x) - other.g1, self.g1 - other.g2, vec3(0.0) - other.g3, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) - other.g4);
}

MultiVector multi_vector_at_origin_multi_vector_at_infinity_sub(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.y) - vec2(other.g0.x, 0.0), vec4(0.0, 0.0, 0.0, self.g0.x) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), self.g1, vec3(0.0) - other.g2, vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_sub(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(self.g0 - other.g0, self.g1 - other.g1, self.g2 - other.g2);
}

MultiVectorAtOrigin multi_vector_at_origin_origin_sub(MultiVectorAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(self.g0 - vec2(other.g0, 0.0), self.g1, self.g2);
}

MultiVector multi_vector_at_origin_plane_sub(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) - other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_plane_at_origin_sub(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(self.g0, self.g1, self.g2 - other.g0);
}

MultiVector multi_vector_at_origin_point_sub(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) - other.g0, self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_point_at_infinity_sub(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_rotor_sub(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0 - vec2(0.0, other.g0.w), self.g1 - vec3(other.g0.x, other.g0.y, other.g0.z), self.g2);
}

MultiVector multi_vector_at_origin_scalar_sub(MultiVectorAtOrigin self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0.y) - vec2(other.g0, 0.0), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVector multi_vector_at_origin_transflector_sub(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0.y), vec4(0.0, 0.0, 0.0, self.g0.x) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1, vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0) - other.g1);
}

MultiVector multi_vector_at_origin_translator_sub(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(0.0, self.g0.y) - vec2(0.0, other.g0.w), vec4(0.0, 0.0, 0.0, self.g0.x), self.g1, vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g2.x, self.g2.y, self.g2.z, 0.0));
}

MultiVectorAtOrigin origin_anti_scalar_sub(Origin self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(self.g0, 0.0) - vec2(0.0, other.g0), vec3(0.0), vec3(0.0));
}

Flector origin_flector_sub(Origin self, Flector other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0) - other.g0, vec4(0.0) - other.g1);
}

Flector origin_flector_at_infinity_sub(Origin self, FlectorAtInfinity other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

Flector origin_horizon_sub(Origin self, Horizon other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector origin_line_sub(Origin self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0) - other.g0, vec3(0.0) - other.g1, vec4(0.0));
}

MultiVector origin_line_at_infinity_sub(Origin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0), vec3(0.0) - other.g0, vec4(0.0));
}

MultiVectorAtOrigin origin_line_at_origin_sub(Origin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0, 0.0), vec3(0.0) - other.g0, vec3(0.0));
}

MultiVector origin_magnitude_sub(Origin self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector origin_motor_sub(Origin self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, vec4(0.0));
}

MultiVector origin_multi_vector_sub(Origin self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0, 0.0, 0.0, self.g0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, vec4(0.0) - other.g4);
}

MultiVector origin_multi_vector_at_infinity_sub(Origin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0.x, 0.0), vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(0.0) - other.g2, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin origin_multi_vector_at_origin_sub(Origin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0, 0.0) - other.g0, vec3(0.0) - other.g1, vec3(0.0) - other.g2);
}

Origin origin_origin_sub(Origin self, Origin other) {
    return Origin(self.g0 - other.g0);
}

Flector origin_plane_sub(Origin self, Plane other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0), vec4(0.0) - other.g0);
}

Flector origin_plane_at_origin_sub(Origin self, PlaneAtOrigin other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point origin_point_sub(Origin self, Point other) {
    return Point(vec4(0.0, 0.0, 0.0, self.g0) - other.g0);
}

Point origin_point_at_infinity_sub(Origin self, PointAtInfinity other) {
    return Point(vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVectorAtOrigin origin_rotor_sub(Origin self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0, 0.0) - vec2(0.0, other.g0.w), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0));
}

MultiVector origin_scalar_sub(Origin self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0, 0.0), vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector origin_transflector_sub(Origin self, Transflector other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(0.0) - other.g1);
}

MultiVector origin_translator_sub(Origin self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0, 0.0, 0.0, self.g0), vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector plane_anti_scalar_sub(Plane self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0), vec4(0.0), vec3(0.0), vec3(0.0), self.g0);
}

Flector plane_flector_sub(Plane self, Flector other) {
    return Flector(vec4(0.0) - other.g0, self.g0 - other.g1);
}

Transflector plane_flector_at_infinity_sub(Plane self, FlectorAtInfinity other) {
    return Transflector(vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), self.g0 - vec4(0.0, 0.0, 0.0, other.g0.w));
}

Plane plane_horizon_sub(Plane self, Horizon other) {
    return Plane(self.g0 - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector plane_line_sub(Plane self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0, vec3(0.0) - other.g1, self.g0);
}

MultiVector plane_line_at_infinity_sub(Plane self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), vec3(0.0) - other.g0, self.g0);
}

MultiVector plane_line_at_origin_sub(Plane self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0, vec3(0.0), self.g0);
}

MultiVector plane_magnitude_sub(Plane self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0), vec3(0.0), vec3(0.0), self.g0);
}

MultiVector plane_motor_sub(Plane self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, self.g0);
}

MultiVector plane_multi_vector_sub(Plane self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, self.g0 - other.g4);
}

MultiVector plane_multi_vector_at_infinity_sub(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0.x, 0.0), vec4(0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(0.0) - other.g2, self.g0 - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector plane_multi_vector_at_origin_sub(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(0.0), self.g0 - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector plane_origin_sub(Plane self, Origin other) {
    return Flector(vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0), self.g0);
}

Plane plane_plane_sub(Plane self, Plane other) {
    return Plane(self.g0 - other.g0);
}

Plane plane_plane_at_origin_sub(Plane self, PlaneAtOrigin other) {
    return Plane(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector plane_point_sub(Plane self, Point other) {
    return Flector(vec4(0.0) - other.g0, self.g0);
}

Transflector plane_point_at_infinity_sub(Plane self, PointAtInfinity other) {
    return Transflector(vec3(0.0) - other.g0, self.g0);
}

MultiVector plane_rotor_sub(Plane self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), self.g0);
}

MultiVector plane_scalar_sub(Plane self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), self.g0);
}

Transflector plane_transflector_sub(Plane self, Transflector other) {
    return Transflector(vec3(0.0) - other.g0, self.g0 - other.g1);
}

MultiVector plane_translator_sub(Plane self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), self.g0);
}

MultiVectorAtOrigin plane_at_origin_anti_scalar_sub(PlaneAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(0.0, other.g0), vec3(0.0), self.g0);
}

Flector plane_at_origin_flector_sub(PlaneAtOrigin self, Flector other) {
    return Flector(vec4(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g1);
}

Transflector plane_at_origin_flector_at_infinity_sub(PlaneAtOrigin self, FlectorAtInfinity other) {
    return Transflector(vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

Plane plane_at_origin_horizon_sub(PlaneAtOrigin self, Horizon other) {
    return Plane(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector plane_at_origin_line_sub(PlaneAtOrigin self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0, vec3(0.0) - other.g1, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector plane_at_origin_line_at_infinity_sub(PlaneAtOrigin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), vec3(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVectorAtOrigin plane_at_origin_line_at_origin_sub(PlaneAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0), vec3(0.0) - other.g0, self.g0);
}

MultiVector plane_at_origin_magnitude_sub(PlaneAtOrigin self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector plane_at_origin_motor_sub(PlaneAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector plane_at_origin_multi_vector_sub(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(0.0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g4);
}

MultiVector plane_at_origin_multi_vector_at_infinity_sub(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0.x, 0.0), vec4(0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(0.0) - other.g2, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_sub(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - other.g0, vec3(0.0) - other.g1, self.g0 - other.g2);
}

Flector plane_at_origin_origin_sub(PlaneAtOrigin self, Origin other) {
    return Flector(vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Plane plane_at_origin_plane_sub(PlaneAtOrigin self, Plane other) {
    return Plane(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0);
}

PlaneAtOrigin plane_at_origin_plane_at_origin_sub(PlaneAtOrigin self, PlaneAtOrigin other) {
    return PlaneAtOrigin(self.g0 - other.g0);
}

Flector plane_at_origin_point_sub(PlaneAtOrigin self, Point other) {
    return Flector(vec4(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Transflector plane_at_origin_point_at_infinity_sub(PlaneAtOrigin self, PointAtInfinity other) {
    return Transflector(vec3(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVectorAtOrigin plane_at_origin_rotor_sub(PlaneAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(0.0, other.g0.w), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), self.g0);
}

MultiVector plane_at_origin_scalar_sub(PlaneAtOrigin self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Transflector plane_at_origin_transflector_sub(PlaneAtOrigin self, Transflector other) {
    return Transflector(vec3(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g1);
}

MultiVector plane_at_origin_translator_sub(PlaneAtOrigin self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector point_anti_scalar_sub(Point self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0), self.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_flector_sub(Point self, Flector other) {
    return Flector(self.g0 - other.g0, vec4(0.0) - other.g1);
}

Flector point_flector_at_infinity_sub(Point self, FlectorAtInfinity other) {
    return Flector(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

Flector point_horizon_sub(Point self, Horizon other) {
    return Flector(self.g0, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector point_line_sub(Point self, Line other) {
    return MultiVector(vec2(0.0), self.g0, vec3(0.0) - other.g0, vec3(0.0) - other.g1, vec4(0.0));
}

MultiVector point_line_at_infinity_sub(Point self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), self.g0, vec3(0.0), vec3(0.0) - other.g0, vec4(0.0));
}

MultiVector point_line_at_origin_sub(Point self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), self.g0, vec3(0.0) - other.g0, vec3(0.0), vec4(0.0));
}

MultiVector point_magnitude_sub(Point self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, self.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector point_motor_sub(Point self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), self.g0, vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, vec4(0.0));
}

MultiVector point_multi_vector_sub(Point self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, self.g0 - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, vec4(0.0) - other.g4);
}

MultiVector point_multi_vector_at_infinity_sub(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0.x, 0.0), self.g0 - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(0.0) - other.g2, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector point_multi_vector_at_origin_sub(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.y), self.g0 - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(0.0), vec4(0.0) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Point point_origin_sub(Point self, Origin other) {
    return Point(self.g0 - vec4(0.0, 0.0, 0.0, other.g0));
}

Flector point_plane_sub(Point self, Plane other) {
    return Flector(self.g0, vec4(0.0) - other.g0);
}

Flector point_plane_at_origin_sub(Point self, PlaneAtOrigin other) {
    return Flector(self.g0, vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point point_point_sub(Point self, Point other) {
    return Point(self.g0 - other.g0);
}

Point point_point_at_infinity_sub(Point self, PointAtInfinity other) {
    return Point(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector point_rotor_sub(Point self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), self.g0, vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

MultiVector point_scalar_sub(Point self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0, 0.0), self.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_transflector_sub(Point self, Transflector other) {
    return Flector(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(0.0) - other.g1);
}

MultiVector point_translator_sub(Point self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), self.g0, vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector point_at_infinity_anti_scalar_sub(PointAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_at_infinity_flector_sub(PointAtInfinity self, Flector other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0, vec4(0.0) - other.g1);
}

FlectorAtInfinity point_at_infinity_flector_at_infinity_sub(PointAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0);
}

FlectorAtInfinity point_at_infinity_horizon_sub(PointAtInfinity self, Horizon other) {
    return FlectorAtInfinity(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector point_at_infinity_line_sub(PointAtInfinity self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - other.g0, vec3(0.0) - other.g1, vec4(0.0));
}

MultiVectorAtInfinity point_at_infinity_line_at_infinity_sub(PointAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0), self.g0, vec3(0.0) - other.g0);
}

MultiVector point_at_infinity_line_at_origin_sub(PointAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - other.g0, vec3(0.0), vec4(0.0));
}

MultiVector point_at_infinity_magnitude_sub(PointAtInfinity self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector point_at_infinity_motor_sub(PointAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, vec4(0.0));
}

MultiVector point_at_infinity_multi_vector_sub(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, vec4(0.0) - other.g4);
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_sub(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - other.g0, self.g0 - other.g1, vec3(0.0) - other.g2);
}

MultiVector point_at_infinity_multi_vector_at_origin_sub(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.y), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(0.0), vec4(0.0) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Point point_at_infinity_origin_sub(PointAtInfinity self, Origin other) {
    return Point(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

Transflector point_at_infinity_plane_sub(PointAtInfinity self, Plane other) {
    return Transflector(self.g0, vec4(0.0) - other.g0);
}

Transflector point_at_infinity_plane_at_origin_sub(PointAtInfinity self, PlaneAtOrigin other) {
    return Transflector(self.g0, vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point point_at_infinity_point_sub(PointAtInfinity self, Point other) {
    return Point(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0);
}

PointAtInfinity point_at_infinity_point_at_infinity_sub(PointAtInfinity self, PointAtInfinity other) {
    return PointAtInfinity(self.g0 - other.g0);
}

MultiVector point_at_infinity_rotor_sub(PointAtInfinity self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity point_at_infinity_scalar_sub(PointAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(other.g0, 0.0), self.g0, vec3(0.0));
}

Transflector point_at_infinity_transflector_sub(PointAtInfinity self, Transflector other) {
    return Transflector(self.g0 - other.g0, vec4(0.0) - other.g1);
}

MultiVector point_at_infinity_translator_sub(PointAtInfinity self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Rotor rotor_anti_scalar_sub(Rotor self, AntiScalar other) {
    return Rotor(self.g0 - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector rotor_flector_sub(Rotor self, Flector other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - other.g0, vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0) - other.g1);
}

MultiVector rotor_flector_at_infinity_sub(Rotor self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector rotor_horizon_sub(Rotor self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

Motor rotor_line_sub(Rotor self, Line other) {
    return Motor(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0) - other.g1);
}

Motor rotor_line_at_infinity_sub(Rotor self, LineAtInfinity other) {
    return Motor(self.g0, vec3(0.0) - other.g0);
}

Rotor rotor_line_at_origin_sub(Rotor self, LineAtOrigin other) {
    return Rotor(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector rotor_magnitude_sub(Rotor self, Magnitude other) {
    return MultiVector(vec2(0.0, self.g0.w) - other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

Motor rotor_motor_sub(Rotor self, Motor other) {
    return Motor(self.g0 - other.g0, vec3(0.0) - other.g1);
}

MultiVector rotor_multi_vector_sub(Rotor self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0.w) - other.g0, vec4(0.0) - other.g1, vec3(self.g0.x, self.g0.y, self.g0.z) - other.g2, vec3(0.0) - other.g3, vec4(0.0) - other.g4);
}

MultiVector rotor_multi_vector_at_infinity_sub(Rotor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w) - vec2(other.g0.x, 0.0), vec4(0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0) - other.g2, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_sub(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0.w) - other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) - other.g1, vec3(0.0) - other.g2);
}

MultiVectorAtOrigin rotor_origin_sub(Rotor self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0.w) - vec2(other.g0, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0));
}

MultiVector rotor_plane_sub(Rotor self, Plane other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0) - other.g0);
}

MultiVectorAtOrigin rotor_plane_at_origin_sub(Rotor self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0.w), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0) - other.g0);
}

MultiVector rotor_point_sub(Rotor self, Point other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - other.g0, vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_point_at_infinity_sub(Rotor self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

Rotor rotor_rotor_sub(Rotor self, Rotor other) {
    return Rotor(self.g0 - other.g0);
}

MultiVector rotor_scalar_sub(Rotor self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0.w) - vec2(other.g0, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_transflector_sub(Rotor self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0) - other.g1);
}

Motor rotor_translator_sub(Rotor self, Translator other) {
    return Motor(self.g0 - vec4(0.0, 0.0, 0.0, other.g0.w), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z));
}

Magnitude scalar_anti_scalar_sub(Scalar self, AntiScalar other) {
    return Magnitude(vec2(self.g0, 0.0) - vec2(0.0, other.g0));
}

MultiVector scalar_flector_sub(Scalar self, Flector other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0) - other.g0, vec3(0.0), vec3(0.0), vec4(0.0) - other.g1);
}

MultiVectorAtInfinity scalar_flector_at_infinity_sub(Scalar self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0) - vec2(0.0, other.g0.w), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0));
}

MultiVectorAtInfinity scalar_horizon_sub(Scalar self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0) - vec2(0.0, other.g0), vec3(0.0), vec3(0.0));
}

MultiVector scalar_line_sub(Scalar self, Line other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0), vec3(0.0) - other.g0, vec3(0.0) - other.g1, vec4(0.0));
}

MultiVectorAtInfinity scalar_line_at_infinity_sub(Scalar self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0), vec3(0.0), vec3(0.0) - other.g0);
}

MultiVector scalar_line_at_origin_sub(Scalar self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0), vec3(0.0) - other.g0, vec3(0.0), vec4(0.0));
}

Magnitude scalar_magnitude_sub(Scalar self, Magnitude other) {
    return Magnitude(vec2(self.g0, 0.0) - other.g0);
}

MultiVector scalar_motor_sub(Scalar self, Motor other) {
    return MultiVector(vec2(self.g0, 0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, vec4(0.0));
}

MultiVector scalar_multi_vector_sub(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0, 0.0) - other.g0, vec4(0.0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, vec4(0.0) - other.g4);
}

MultiVectorAtInfinity scalar_multi_vector_at_infinity_sub(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0) - other.g0, vec3(0.0) - other.g1, vec3(0.0) - other.g2);
}

MultiVector scalar_multi_vector_at_origin_sub(Scalar self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0, 0.0) - vec2(0.0, other.g0.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(0.0), vec4(0.0) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector scalar_origin_sub(Scalar self, Origin other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector scalar_plane_sub(Scalar self, Plane other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g0);
}

MultiVector scalar_plane_at_origin_sub(Scalar self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector scalar_point_sub(Scalar self, Point other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0) - other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity scalar_point_at_infinity_sub(Scalar self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0, 0.0), vec3(0.0) - other.g0, vec3(0.0));
}

MultiVector scalar_rotor_sub(Scalar self, Rotor other) {
    return MultiVector(vec2(self.g0, 0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

Scalar scalar_scalar_sub(Scalar self, Scalar other) {
    return Scalar(self.g0 - other.g0);
}

MultiVector scalar_transflector_sub(Scalar self, Transflector other) {
    return MultiVector(vec2(self.g0, 0.0), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g1);
}

MultiVector scalar_translator_sub(Scalar self, Translator other) {
    return MultiVector(vec2(self.g0, 0.0) - vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_anti_scalar_sub(Transflector self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), self.g1);
}

Flector transflector_flector_sub(Transflector self, Flector other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0, self.g1 - other.g1);
}

Transflector transflector_flector_at_infinity_sub(Transflector self, FlectorAtInfinity other) {
    return Transflector(self.g0 - vec3(other.g0.x, other.g0.y, other.g0.z), self.g1 - vec4(0.0, 0.0, 0.0, other.g0.w));
}

Transflector transflector_horizon_sub(Transflector self, Horizon other) {
    return Transflector(self.g0, self.g1 - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector transflector_line_sub(Transflector self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - other.g0, vec3(0.0) - other.g1, self.g1);
}

MultiVector transflector_line_at_infinity_sub(Transflector self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0) - other.g0, self.g1);
}

MultiVector transflector_line_at_origin_sub(Transflector self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - other.g0, vec3(0.0), self.g1);
}

MultiVector transflector_magnitude_sub(Transflector self, Magnitude other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), self.g1);
}

MultiVector transflector_motor_sub(Transflector self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - other.g1, self.g1);
}

MultiVector transflector_multi_vector_sub(Transflector self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0, vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g1, vec3(0.0) - other.g2, vec3(0.0) - other.g3, self.g1 - other.g4);
}

MultiVector transflector_multi_vector_at_infinity_sub(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0.x, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(0.0) - other.g2, self.g1 - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector transflector_multi_vector_at_origin_sub(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.y), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(0.0), self.g1 - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Flector transflector_origin_sub(Transflector self, Origin other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0), self.g1);
}

Transflector transflector_plane_sub(Transflector self, Plane other) {
    return Transflector(self.g0, self.g1 - other.g0);
}

Transflector transflector_plane_at_origin_sub(Transflector self, PlaneAtOrigin other) {
    return Transflector(self.g0, self.g1 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector transflector_point_sub(Transflector self, Point other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, 0.0) - other.g0, self.g1);
}

Transflector transflector_point_at_infinity_sub(Transflector self, PointAtInfinity other) {
    return Transflector(self.g0 - other.g0, self.g1);
}

MultiVector transflector_rotor_sub(Transflector self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), self.g1);
}

MultiVector transflector_scalar_sub(Transflector self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0), self.g1);
}

Transflector transflector_transflector_sub(Transflector self, Transflector other) {
    return Transflector(self.g0 - other.g0, self.g1 - other.g1);
}

MultiVector transflector_translator_sub(Transflector self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(other.g0.x, other.g0.y, other.g0.z), self.g1);
}

Translator translator_anti_scalar_sub(Translator self, AntiScalar other) {
    return Translator(self.g0 - vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector translator_flector_sub(Translator self, Flector other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - other.g0, vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0) - other.g1);
}

MultiVector translator_flector_at_infinity_sub(Translator self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector translator_horizon_sub(Translator self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0));
}

Motor translator_line_sub(Translator self, Line other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0.w) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z) - other.g1);
}

Translator translator_line_at_infinity_sub(Translator self, LineAtInfinity other) {
    return Translator(self.g0 - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Motor translator_line_at_origin_sub(Translator self, LineAtOrigin other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0.w) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z));
}

MultiVector translator_magnitude_sub(Translator self, Magnitude other) {
    return MultiVector(vec2(0.0, self.g0.w) - other.g0, vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

Motor translator_motor_sub(Translator self, Motor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0.w) - other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) - other.g1);
}

MultiVector translator_multi_vector_sub(Translator self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0.w) - other.g0, vec4(0.0) - other.g1, vec3(0.0) - other.g2, vec3(self.g0.x, self.g0.y, self.g0.z) - other.g3, vec4(0.0) - other.g4);
}

MultiVector translator_multi_vector_at_infinity_sub(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w) - vec2(other.g0.x, 0.0), vec4(0.0) - vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) - other.g2, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVector translator_multi_vector_at_origin_sub(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0.w) - vec2(0.0, other.g0.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0.x), vec3(0.0) - other.g1, vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0) - vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

MultiVector translator_origin_sub(Translator self, Origin other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

MultiVector translator_plane_sub(Translator self, Plane other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0) - other.g0);
}

MultiVector translator_plane_at_origin_sub(Translator self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector translator_point_sub(Translator self, Point other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - other.g0, vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

MultiVector translator_point_at_infinity_sub(Translator self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

Motor translator_rotor_sub(Translator self, Rotor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0.w) - other.g0, vec3(self.g0.x, self.g0.y, self.g0.z));
}

MultiVector translator_scalar_sub(Translator self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0.w) - vec2(other.g0, 0.0), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

MultiVector translator_transflector_sub(Translator self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0.w), vec4(0.0) - vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z), vec4(0.0) - other.g1);
}

Translator translator_translator_sub(Translator self, Translator other) {
    return Translator(self.g0 - other.g0);
}

AntiScalar anti_scalar_anti_scalar_anti_wedge_dot(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector anti_scalar_flector_anti_wedge_dot(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

FlectorAtInfinity anti_scalar_flector_at_infinity_anti_wedge_dot(AntiScalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

Horizon anti_scalar_horizon_anti_wedge_dot(AntiScalar self, Horizon other) {
    return Horizon(self.g0 * other.g0);
}

Line anti_scalar_line_anti_wedge_dot(AntiScalar self, Line other) {
    return Line(vec3(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

LineAtInfinity anti_scalar_line_at_infinity_anti_wedge_dot(AntiScalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtOrigin anti_scalar_line_at_origin_anti_wedge_dot(AntiScalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Magnitude anti_scalar_magnitude_anti_wedge_dot(AntiScalar self, Magnitude other) {
    return Magnitude(vec2(self.g0) * other.g0);
}

Motor anti_scalar_motor_anti_wedge_dot(AntiScalar self, Motor other) {
    return Motor(vec4(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

MultiVector anti_scalar_multi_vector_anti_wedge_dot(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(self.g0) * other.g0, vec4(self.g0) * other.g1, vec3(self.g0) * other.g2, vec3(self.g0) * other.g3, vec4(self.g0) * other.g4);
}

MultiVectorAtInfinity anti_scalar_multi_vector_at_infinity_anti_wedge_dot(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_origin_anti_wedge_dot(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Origin anti_scalar_origin_anti_wedge_dot(AntiScalar self, Origin other) {
    return Origin(self.g0 * other.g0);
}

Plane anti_scalar_plane_anti_wedge_dot(AntiScalar self, Plane other) {
    return Plane(vec4(self.g0) * other.g0);
}

PlaneAtOrigin anti_scalar_plane_at_origin_anti_wedge_dot(AntiScalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Point anti_scalar_point_anti_wedge_dot(AntiScalar self, Point other) {
    return Point(vec4(self.g0) * other.g0);
}

PointAtInfinity anti_scalar_point_at_infinity_anti_wedge_dot(AntiScalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Rotor anti_scalar_rotor_anti_wedge_dot(AntiScalar self, Rotor other) {
    return Rotor(vec4(self.g0) * other.g0);
}

Scalar anti_scalar_scalar_anti_wedge_dot(AntiScalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Transflector anti_scalar_transflector_anti_wedge_dot(AntiScalar self, Transflector other) {
    return Transflector(vec3(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

Translator anti_scalar_translator_anti_wedge_dot(AntiScalar self, Translator other) {
    return Translator(vec4(self.g0) * other.g0);
}

Flector flector_anti_scalar_anti_wedge_dot(Flector self, AntiScalar other) {
    return Flector(self.g0 * vec4(other.g0), self.g1 * vec4(other.g0));
}

MultiVector flector_flector_anti_wedge_dot(Flector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) - vec2(self.g0.w) * vec2(other.g1.w, other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity flector_flector_at_infinity_anti_wedge_dot(Flector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtInfinity flector_horizon_anti_wedge_dot(Flector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

Flector flector_line_anti_wedge_dot(Flector self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity flector_line_at_infinity_anti_wedge_dot(Flector self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector flector_line_at_origin_anti_wedge_dot(Flector self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector flector_magnitude_anti_wedge_dot(Flector self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.y) + self.g1.xyzx * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + self.g1 * vec4(other.g0.y));
}

Flector flector_motor_anti_wedge_dot(Flector self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector flector_multi_vector_anti_wedge_dot(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) - vec2(self.g0.w) * vec2(other.g4.w, other.g1.w) + vec2(self.g1.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g1.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g1.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g1.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, 0.0) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x) + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtInfinity flector_multi_vector_at_infinity_anti_wedge_dot(Flector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * other.g0.yx * vec2(-1.0, 1.0) + vec2(self.g1.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.w) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(0.0) - vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVector flector_multi_vector_at_origin_anti_wedge_dot(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) - vec2(self.g0.z, self.g0.w) * vec2(other.g2.z, other.g0.x) + vec2(self.g1.x) * vec2(0.0, other.g2.x) + vec2(self.g1.y) * vec2(0.0, other.g2.y) + vec2(self.g1.w, self.g1.z) * vec2(other.g0.x, other.g2.z), vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g0.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(0.0) - vec3(self.g0.w) * other.g2 + vec3(self.g1.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g1.w) * other.g2, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g1.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y));
}

MultiVector flector_origin_anti_wedge_dot(Flector self, Origin other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, -other.g0) + vec2(self.g1.w) * vec2(other.g0, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0), vec4(0.0));
}

MultiVector flector_plane_anti_wedge_dot(Flector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g0.w) * vec2(-other.g0.w, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_plane_at_origin_anti_wedge_dot(Flector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g1.w) * other.g0, vec4(0.0));
}

MultiVector flector_point_anti_wedge_dot(Flector self, Point other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, -other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity flector_point_at_infinity_anti_wedge_dot(Flector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector flector_rotor_anti_wedge_dot(Flector self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g0.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g1.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

FlectorAtInfinity flector_scalar_anti_wedge_dot(Flector self, Scalar other) {
    return FlectorAtInfinity(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0) + self.g1.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector flector_transflector_anti_wedge_dot(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) - vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Flector flector_translator_anti_wedge_dot(Flector self, Translator other) {
    return Flector(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

FlectorAtInfinity flector_at_infinity_anti_scalar_anti_wedge_dot(FlectorAtInfinity self, AntiScalar other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVectorAtInfinity flector_at_infinity_flector_anti_wedge_dot(FlectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

FlectorAtInfinity flector_at_infinity_line_anti_wedge_dot(FlectorAtInfinity self, Line other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

FlectorAtInfinity flector_at_infinity_line_at_origin_anti_wedge_dot(FlectorAtInfinity self, LineAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

FlectorAtInfinity flector_at_infinity_magnitude_anti_wedge_dot(FlectorAtInfinity self, Magnitude other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.y));
}

FlectorAtInfinity flector_at_infinity_motor_anti_wedge_dot(FlectorAtInfinity self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_anti_wedge_dot(FlectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g4.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g4.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g4.z, other.g2.z) + vec2(self.g0.w) * vec2(other.g1.w, other.g0.y), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) + vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_origin_anti_wedge_dot(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2);
}

MultiVectorAtInfinity flector_at_infinity_origin_anti_wedge_dot(FlectorAtInfinity self, Origin other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(other.g0, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

MultiVectorAtInfinity flector_at_infinity_plane_anti_wedge_dot(FlectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity flector_at_infinity_plane_at_origin_anti_wedge_dot(FlectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_point_anti_wedge_dot(FlectorAtInfinity self, Point other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w));
}

FlectorAtInfinity flector_at_infinity_rotor_anti_wedge_dot(FlectorAtInfinity self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_transflector_anti_wedge_dot(FlectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

FlectorAtInfinity flector_at_infinity_translator_anti_wedge_dot(FlectorAtInfinity self, Translator other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.w));
}

Horizon horizon_anti_scalar_anti_wedge_dot(Horizon self, AntiScalar other) {
    return Horizon(self.g0 * other.g0);
}

MultiVectorAtInfinity horizon_flector_anti_wedge_dot(Horizon self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

PointAtInfinity horizon_line_anti_wedge_dot(Horizon self, Line other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

PointAtInfinity horizon_line_at_origin_anti_wedge_dot(Horizon self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Horizon horizon_magnitude_anti_wedge_dot(Horizon self, Magnitude other) {
    return Horizon(self.g0 * other.g0.y);
}

FlectorAtInfinity horizon_motor_anti_wedge_dot(Horizon self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

MultiVectorAtInfinity horizon_multi_vector_anti_wedge_dot(Horizon self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g1.w, other.g0.y), vec3(self.g0) * other.g2, vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z));
}

MultiVectorAtInfinity horizon_multi_vector_at_origin_anti_wedge_dot(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Scalar horizon_origin_anti_wedge_dot(Horizon self, Origin other) {
    return Scalar(self.g0 * other.g0);
}

LineAtInfinity horizon_plane_anti_wedge_dot(Horizon self, Plane other) {
    return LineAtInfinity(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtInfinity horizon_plane_at_origin_anti_wedge_dot(Horizon self, PlaneAtOrigin other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

Scalar horizon_point_anti_wedge_dot(Horizon self, Point other) {
    return Scalar(self.g0 * other.g0.w);
}

FlectorAtInfinity horizon_rotor_anti_wedge_dot(Horizon self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

LineAtInfinity horizon_transflector_anti_wedge_dot(Horizon self, Transflector other) {
    return LineAtInfinity(vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

Horizon horizon_translator_anti_wedge_dot(Horizon self, Translator other) {
    return Horizon(self.g0 * other.g0.w);
}

Line line_anti_scalar_anti_wedge_dot(Line self, AntiScalar other) {
    return Line(self.g0 * vec3(other.g0), self.g1 * vec3(other.g0));
}

Flector line_flector_anti_wedge_dot(Line self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, 0.0), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

FlectorAtInfinity line_flector_at_infinity_anti_wedge_dot(Line self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity line_horizon_anti_wedge_dot(Line self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector line_line_anti_wedge_dot(Line self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity line_line_at_infinity_anti_wedge_dot(Line self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector line_line_at_origin_anti_wedge_dot(Line self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Line line_magnitude_anti_wedge_dot(Line self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.y), self.g0 * vec3(other.g0.x) + self.g1 * vec3(other.g0.y));
}

MultiVector line_motor_anti_wedge_dot(Line self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

MultiVector line_multi_vector_anti_wedge_dot(Line self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g1.x) * vec4(-other.g1.w, -other.g4.z, other.g4.y, 0.0) + vec4(self.g1.y) * vec4(other.g4.z, -other.g1.w, -other.g4.x, 0.0) + vec4(self.g1.z) * vec4(-other.g4.y, other.g4.x, -other.g1.w, 0.0), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g4.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g4.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g4.z));
}

MultiVectorAtInfinity line_multi_vector_at_infinity_anti_wedge_dot(Line self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVector line_multi_vector_at_origin_anti_wedge_dot(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.x) * vec4(-other.g0.x, -other.g2.z, other.g2.y, 0.0) + vec4(self.g1.y) * vec4(other.g2.z, -other.g0.x, -other.g2.x, 0.0) + vec4(self.g1.z) * vec4(-other.g2.y, other.g2.x, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.x, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g2.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g2.z));
}

Transflector line_origin_anti_wedge_dot(Line self, Origin other) {
    return Transflector(vec3(0.0) - self.g1 * vec3(other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0, other.g0, other.g0, 0.0));
}

Flector line_plane_anti_wedge_dot(Line self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

Flector line_plane_at_origin_anti_wedge_dot(Line self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

Transflector line_point_anti_wedge_dot(Line self, Point other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) - self.g1 * vec3(other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_point_at_infinity_anti_wedge_dot(Line self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

MultiVector line_rotor_anti_wedge_dot(Line self, Rotor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

LineAtInfinity line_scalar_anti_wedge_dot(Line self, Scalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

Flector line_transflector_anti_wedge_dot(Line self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

MultiVector line_translator_anti_wedge_dot(Line self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + self.g1 * vec3(other.g0.w), vec4(0.0));
}

LineAtInfinity line_at_infinity_anti_scalar_anti_wedge_dot(LineAtInfinity self, AntiScalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

FlectorAtInfinity line_at_infinity_flector_anti_wedge_dot(LineAtInfinity self, Flector other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, other.g1.z));
}

MultiVectorAtInfinity line_at_infinity_line_anti_wedge_dot(LineAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity line_at_infinity_line_at_origin_anti_wedge_dot(LineAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

LineAtInfinity line_at_infinity_magnitude_anti_wedge_dot(LineAtInfinity self, Magnitude other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.y));
}

MultiVectorAtInfinity line_at_infinity_motor_anti_wedge_dot(LineAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_anti_wedge_dot(LineAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, other.g4.x) + vec2(self.g0.y) * vec2(-other.g2.y, other.g4.y) + vec2(self.g0.z) * vec2(-other.g2.z, other.g4.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_origin_anti_wedge_dot(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

PointAtInfinity line_at_infinity_origin_anti_wedge_dot(LineAtInfinity self, Origin other) {
    return PointAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0));
}

FlectorAtInfinity line_at_infinity_plane_anti_wedge_dot(LineAtInfinity self, Plane other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

FlectorAtInfinity line_at_infinity_plane_at_origin_anti_wedge_dot(LineAtInfinity self, PlaneAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

PointAtInfinity line_at_infinity_point_anti_wedge_dot(LineAtInfinity self, Point other) {
    return PointAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0.w));
}

MultiVectorAtInfinity line_at_infinity_rotor_anti_wedge_dot(LineAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

FlectorAtInfinity line_at_infinity_transflector_anti_wedge_dot(LineAtInfinity self, Transflector other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, other.g1.z));
}

LineAtInfinity line_at_infinity_translator_anti_wedge_dot(LineAtInfinity self, Translator other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.w));
}

LineAtOrigin line_at_origin_anti_scalar_anti_wedge_dot(LineAtOrigin self, AntiScalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_origin_flector_anti_wedge_dot(LineAtOrigin self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_at_origin_flector_at_infinity_anti_wedge_dot(LineAtOrigin self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity line_at_origin_horizon_anti_wedge_dot(LineAtOrigin self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector line_at_origin_line_anti_wedge_dot(LineAtOrigin self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity line_at_origin_line_at_infinity_anti_wedge_dot(LineAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Rotor line_at_origin_line_at_origin_anti_wedge_dot(LineAtOrigin self, LineAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Line line_at_origin_magnitude_anti_wedge_dot(LineAtOrigin self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.y), self.g0 * vec3(other.g0.x));
}

MultiVector line_at_origin_motor_anti_wedge_dot(LineAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector line_at_origin_multi_vector_anti_wedge_dot(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity line_at_origin_multi_vector_at_infinity_anti_wedge_dot(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_anti_wedge_dot(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin line_at_origin_origin_anti_wedge_dot(LineAtOrigin self, Origin other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_origin_plane_anti_wedge_dot(LineAtOrigin self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector line_at_origin_plane_at_origin_anti_wedge_dot(LineAtOrigin self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector line_at_origin_point_anti_wedge_dot(LineAtOrigin self, Point other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_at_origin_point_at_infinity_anti_wedge_dot(LineAtOrigin self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Rotor line_at_origin_rotor_anti_wedge_dot(LineAtOrigin self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtInfinity line_at_origin_scalar_anti_wedge_dot(LineAtOrigin self, Scalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

Flector line_at_origin_transflector_anti_wedge_dot(LineAtOrigin self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector line_at_origin_translator_anti_wedge_dot(LineAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Magnitude magnitude_anti_scalar_anti_wedge_dot(Magnitude self, AntiScalar other) {
    return Magnitude(self.g0 * vec2(other.g0));
}

Flector magnitude_flector_anti_wedge_dot(Magnitude self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g0.y) * other.g1);
}

FlectorAtInfinity magnitude_flector_at_infinity_anti_wedge_dot(Magnitude self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.y) * other.g0);
}

Horizon magnitude_horizon_anti_wedge_dot(Magnitude self, Horizon other) {
    return Horizon(self.g0.y * other.g0);
}

Line magnitude_line_anti_wedge_dot(Magnitude self, Line other) {
    return Line(vec3(self.g0.y) * other.g0, vec3(self.g0.x) * other.g0 + vec3(self.g0.y) * other.g1);
}

LineAtInfinity magnitude_line_at_infinity_anti_wedge_dot(Magnitude self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.y) * other.g0);
}

Line magnitude_line_at_origin_anti_wedge_dot(Magnitude self, LineAtOrigin other) {
    return Line(vec3(self.g0.y) * other.g0, vec3(self.g0.x) * other.g0);
}

Magnitude magnitude_magnitude_anti_wedge_dot(Magnitude self, Magnitude other) {
    return Magnitude(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0);
}

MultiVector magnitude_motor_anti_wedge_dot(Magnitude self, Motor other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g0.y) * other.g1, vec4(0.0));
}

MultiVector magnitude_multi_vector_anti_wedge_dot(Magnitude self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(-other.g4.x, -other.g4.y, -other.g4.z, 0.0) + vec4(self.g0.y) * other.g1, vec3(self.g0.y) * other.g2, vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g3, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g0.y) * other.g4);
}

MultiVectorAtInfinity magnitude_multi_vector_at_infinity_anti_wedge_dot(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1, vec3(self.g0.y) * other.g2);
}

MultiVector magnitude_multi_vector_at_origin_anti_wedge_dot(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 * vec2(other.g0.y), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(-other.g2.x, -other.g2.y, -other.g2.z, other.g0.x), vec3(self.g0.y) * other.g1, vec3(self.g0.x) * other.g1, vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g0.x));
}

Flector magnitude_origin_anti_wedge_dot(Magnitude self, Origin other) {
    return Flector(vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0));
}

Transflector magnitude_plane_anti_wedge_dot(Magnitude self, Plane other) {
    return Transflector(vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y) * other.g0);
}

Transflector magnitude_plane_at_origin_anti_wedge_dot(Magnitude self, PlaneAtOrigin other) {
    return Transflector(vec3(0.0) - vec3(self.g0.x) * other.g0, vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector magnitude_point_anti_wedge_dot(Magnitude self, Point other) {
    return Flector(vec4(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.w));
}

PointAtInfinity magnitude_point_at_infinity_anti_wedge_dot(Magnitude self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.y) * other.g0);
}

MultiVector magnitude_rotor_anti_wedge_dot(Magnitude self, Rotor other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Scalar magnitude_scalar_anti_wedge_dot(Magnitude self, Scalar other) {
    return Scalar(self.g0.y * other.g0);
}

Transflector magnitude_transflector_anti_wedge_dot(Magnitude self, Transflector other) {
    return Transflector(vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g0.y) * other.g0, vec4(self.g0.y) * other.g1);
}

MultiVector magnitude_translator_anti_wedge_dot(Magnitude self, Translator other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Motor motor_anti_scalar_anti_wedge_dot(Motor self, AntiScalar other) {
    return Motor(self.g0 * vec4(other.g0), self.g1 * vec3(other.g0));
}

Flector motor_flector_anti_wedge_dot(Motor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, 0.0), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g0.w) * other.g1 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

FlectorAtInfinity motor_flector_at_infinity_anti_wedge_dot(Motor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

FlectorAtInfinity motor_horizon_anti_wedge_dot(Motor self, Horizon other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector motor_line_anti_wedge_dot(Motor self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity motor_line_at_infinity_anti_wedge_dot(Motor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0);
}

MultiVector motor_line_at_origin_anti_wedge_dot(Motor self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVector motor_magnitude_anti_wedge_dot(Motor self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x) + self.g1 * vec3(other.g0.y), vec4(0.0));
}

MultiVector motor_motor_anti_wedge_dot(Motor self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g0.w) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

MultiVector motor_multi_vector_anti_wedge_dot(Motor self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g0.w) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g0.w) * other.g1 + vec4(self.g1.x) * vec4(-other.g1.w, -other.g4.z, other.g4.y, 0.0) + vec4(self.g1.y) * vec4(other.g4.z, -other.g1.w, -other.g4.x, 0.0) + vec4(self.g1.z) * vec4(-other.g4.y, other.g4.x, -other.g1.w, 0.0), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g0.w) * other.g3 + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g4 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g4.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g4.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g4.z));
}

MultiVectorAtInfinity motor_multi_vector_at_infinity_anti_wedge_dot(Motor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2);
}

MultiVector motor_multi_vector_at_origin_anti_wedge_dot(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g0.y) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x) * vec4(-other.g0.x, -other.g2.z, other.g2.y, 0.0) + vec4(self.g1.y) * vec4(other.g2.z, -other.g0.x, -other.g2.x, 0.0) + vec4(self.g1.z) * vec4(-other.g2.y, other.g2.x, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.x, 0.0) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g2.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g2.z));
}

Flector motor_origin_anti_wedge_dot(Motor self, Origin other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0), self.g0.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

Flector motor_plane_anti_wedge_dot(Motor self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

Flector motor_plane_at_origin_anti_wedge_dot(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

Flector motor_point_anti_wedge_dot(Motor self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity motor_point_at_infinity_anti_wedge_dot(Motor self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector motor_rotor_anti_wedge_dot(Motor self, Rotor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g0.w) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

MultiVectorAtInfinity motor_scalar_anti_wedge_dot(Motor self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(other.g0, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector motor_transflector_anti_wedge_dot(Motor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * other.g1 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

MultiVector motor_translator_anti_wedge_dot(Motor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec4(0.0));
}

MultiVector multi_vector_anti_scalar_anti_wedge_dot(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0 * vec2(other.g0), self.g1 * vec4(other.g0), self.g2 * vec3(other.g0), self.g3 * vec3(other.g0), self.g4 * vec4(other.g0));
}

MultiVector multi_vector_flector_anti_wedge_dot(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) - vec2(self.g1.w) * vec2(other.g1.w, other.g0.w) + vec2(self.g4.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g4.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g4.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec4(self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g0.y) * other.g0 + vec4(self.g2.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g3.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, 0.0) + vec4(self.g3.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, 0.0), vec3(0.0) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g4.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g1.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g0.y) * other.g1 + vec4(self.g2.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

MultiVectorAtInfinity multi_vector_flector_at_infinity_anti_wedge_dot(MultiVector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtInfinity multi_vector_horizon_anti_wedge_dot(MultiVector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(0.0, other.g0) + vec2(self.g1.w) * vec2(-other.g0, 0.0), self.g2 * vec3(other.g0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0));
}

MultiVector multi_vector_line_anti_wedge_dot(MultiVector self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g2.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g2.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g2.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g0.y) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_line_at_infinity_anti_wedge_dot(MultiVector self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_line_at_origin_anti_wedge_dot(MultiVector self, LineAtOrigin other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVector multi_vector_magnitude_anti_wedge_dot(MultiVector self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0, self.g1 * vec4(other.g0.y) + self.g4.xyzx * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), self.g2 * vec3(other.g0.y), self.g2 * vec3(other.g0.x) + self.g3 * vec3(other.g0.y), vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + self.g4 * vec4(other.g0.y));
}

MultiVector multi_vector_motor_anti_wedge_dot(MultiVector self, Motor other) {
    return MultiVector(self.g0 * vec2(other.g0.w) - vec2(self.g2.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g2.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g2.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g0.y) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g3.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g4.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g4.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g4.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector multi_vector_multi_vector_anti_wedge_dot(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g4.x, 0.0) + vec2(self.g1.y) * vec2(-other.g4.y, 0.0) + vec2(self.g1.z) * vec2(-other.g4.z, 0.0) - vec2(self.g1.w) * vec2(other.g4.w, other.g1.w) - vec2(self.g2.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g2.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g2.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g3.x) * vec2(-other.g2.x, 0.0) + vec2(self.g3.y) * vec2(-other.g2.y, 0.0) + vec2(self.g3.z) * vec2(-other.g2.z, 0.0) + vec2(self.g4.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g4.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g4.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g4.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(-other.g4.x, -other.g4.y, -other.g4.z, 0.0) + vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, 0.0) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, 0.0) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, 0.0) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y) + vec4(self.g2.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g2.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g3.x) * vec4(-other.g1.w, -other.g4.z, other.g4.y, 0.0) + vec4(self.g3.y) * vec4(other.g4.z, -other.g1.w, -other.g4.x, 0.0) + vec4(self.g3.z) * vec4(-other.g4.y, other.g4.x, -other.g1.w, 0.0) + vec4(self.g4.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g4.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g4.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g4.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g0.y) * other.g2 - vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g2.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g4.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g4.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g4.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g3 + vec3(self.g1.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g1.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g1.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g2.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g2.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g3.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g3.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g3.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g4.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g4.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g0.y) * other.g4 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x) + vec4(self.g2.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g4.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g4.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g4.z) + vec4(self.g4.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g4.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g4.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g4.w) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtInfinity multi_vector_multi_vector_at_infinity_anti_wedge_dot(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * other.g0 + vec2(self.g1.w) * other.g0.yx * vec2(-1.0, 1.0) - vec2(self.g2.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g4.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g4.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g4.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.y) * other.g1 + vec3(self.g1.w) * other.g2 + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g4.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g4.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g4.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.y) * other.g2 - vec3(self.g1.w) * other.g1 + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g4.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVector multi_vector_multi_vector_at_origin_anti_wedge_dot(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 * vec2(other.g0.y) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) - vec2(self.g1.z, self.g1.w) * vec2(other.g2.z, other.g0.x) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) + vec2(self.g3.x) * vec2(-other.g1.x, 0.0) + vec2(self.g3.y) * vec2(-other.g1.y, 0.0) + vec2(self.g3.z) * vec2(-other.g1.z, 0.0) + vec2(self.g4.x) * vec2(0.0, other.g2.x) + vec2(self.g4.y) * vec2(0.0, other.g2.y) + vec2(self.g4.w, self.g4.z) * vec2(other.g0.x, other.g2.z), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(-other.g2.x, -other.g2.y, -other.g2.z, other.g0.x) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g1.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g3.x) * vec4(-other.g0.x, -other.g2.z, other.g2.y, 0.0) + vec4(self.g3.y) * vec4(other.g2.z, -other.g0.x, -other.g2.x, 0.0) + vec4(self.g3.z) * vec4(-other.g2.y, other.g2.x, -other.g0.x, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g4.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.y) * other.g1 - vec3(self.g1.w) * other.g2 + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g4.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g4.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g4.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * other.g1 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g3.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g3.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g3.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g4.w) * other.g2, vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g0.x) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z) + vec4(self.g2.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g2.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + vec4(self.g2.z) * vec4(other.g2.y, -other.g2.x, other.g0.x, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g2.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g2.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g2.z) + vec4(self.g4.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g4.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g4.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y));
}

MultiVector multi_vector_origin_anti_wedge_dot(MultiVector self, Origin other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, -other.g0) + vec2(self.g4.w) * vec2(other.g0, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0) + vec4(self.g3.x, self.g3.y, self.g3.z, self.g3.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0) + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector multi_vector_plane_anti_wedge_dot(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0) + vec2(self.g4.x) * vec2(0.0, other.g0.x) + vec2(self.g4.y) * vec2(0.0, other.g0.y) + vec2(self.g4.z) * vec2(0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g3.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g3.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w) + vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

MultiVector multi_vector_plane_at_origin_anti_wedge_dot(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g4.x) * vec2(0.0, other.g0.x) + vec2(self.g4.y) * vec2(0.0, other.g0.y) + vec2(self.g4.z) * vec2(0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g3.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g3.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g4.w) * other.g0, vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

MultiVector multi_vector_point_anti_wedge_dot(MultiVector self, Point other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, -other.g0.w) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g3.x, self.g3.y, self.g3.z, self.g3.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_point_at_infinity_anti_wedge_dot(MultiVector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVector multi_vector_rotor_anti_wedge_dot(MultiVector self, Rotor other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g1.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g3.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g4.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g4.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

MultiVectorAtInfinity multi_vector_scalar_anti_wedge_dot(MultiVector self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(other.g0, 0.0) + vec2(self.g1.w) * vec2(0.0, other.g0), vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_transflector_anti_wedge_dot(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.w) * vec2(-other.g1.w, 0.0) + vec2(self.g4.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g4.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g4.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g3.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g3.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g4.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0) - vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.y) * other.g1 + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

MultiVector multi_vector_translator_anti_wedge_dot(MultiVector self, Translator other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), self.g1.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g1.w) * other.g0 + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g2 * vec3(other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0) + self.g3 * vec3(other.g0.w), vec4(self.g4.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g4.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g4.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_anti_scalar_anti_wedge_dot(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_anti_wedge_dot(MultiVectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(other.g0.w) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g1.x) + vec2(self.g2.y) * vec2(0.0, other.g1.y) + vec2(self.g2.z) * vec2(0.0, other.g1.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_anti_wedge_dot(MultiVectorAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_origin_anti_wedge_dot(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_magnitude_anti_wedge_dot(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.y), self.g1 * vec3(other.g0.y), self.g2 * vec3(other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_motor_anti_wedge_dot(MultiVectorAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_anti_wedge_dot(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.y, -other.g1.w) + vec2(self.g0.y) * vec2(other.g1.w, other.g0.y) - vec2(self.g1.x) * vec2(other.g4.x, other.g2.x) - vec2(self.g1.y) * vec2(other.g4.y, other.g2.y) - vec2(self.g1.z) * vec2(other.g4.z, other.g2.z) + vec2(self.g2.x) * vec2(-other.g2.x, other.g4.x) + vec2(self.g2.y) * vec2(-other.g2.y, other.g4.y) + vec2(self.g2.z) * vec2(-other.g2.z, other.g4.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g2.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g2.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g2.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g1.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g1.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g1.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) + vec3(self.g2.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_origin_anti_wedge_dot(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * other.g0.yx * vec2(1.0, -1.0) + vec2(self.g0.y) * other.g0 - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g2.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g2.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g2.z) * vec2(-other.g1.z, other.g2.z), vec3(0.0) - vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g2.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g2.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g2.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_origin_anti_wedge_dot(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(other.g0), vec3(0.0) - self.g2 * vec3(other.g0), self.g1 * vec3(other.g0));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_anti_wedge_dot(MultiVectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g0.x) + vec2(self.g2.y) * vec2(0.0, other.g0.y) + vec2(self.g2.z) * vec2(0.0, other.g0.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_at_origin_anti_wedge_dot(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g0.x) + vec2(self.g2.y) * vec2(0.0, other.g0.y) + vec2(self.g2.z) * vec2(0.0, other.g0.z), vec3(0.0) - vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_anti_wedge_dot(MultiVectorAtInfinity self, Point other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(other.g0.w), vec3(0.0) - self.g2 * vec3(other.g0.w), self.g1 * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_rotor_anti_wedge_dot(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_transflector_anti_wedge_dot(MultiVectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g1.x) + vec2(self.g2.y) * vec2(0.0, other.g1.y) + vec2(self.g2.z) * vec2(0.0, other.g1.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_translator_anti_wedge_dot(MultiVectorAtInfinity self, Translator other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w), self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

MultiVectorAtOrigin multi_vector_at_origin_anti_scalar_anti_wedge_dot(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_flector_anti_wedge_dot(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.w, other.g0.w) + vec2(self.g2.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g2.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g2.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_origin_flector_at_infinity_anti_wedge_dot(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0 * vec2(-other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_origin_horizon_anti_wedge_dot(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtInfinity(self.g0 * vec2(-other.g0), self.g1 * vec3(other.g0), vec3(0.0) - self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_line_anti_wedge_dot(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(self.g0.x) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_origin_line_at_infinity_anti_wedge_dot(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_origin_anti_wedge_dot(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_origin_magnitude_anti_wedge_dot(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVector(vec2(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), self.g1 * vec3(other.g0.y), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVector multi_vector_at_origin_motor_anti_wedge_dot(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, other.g0.w) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(self.g0.x) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w) + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z));
}

MultiVector multi_vector_at_origin_multi_vector_anti_wedge_dot(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g4.w, other.g1.w) + vec2(self.g0.y) * other.g0 - vec2(self.g1.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g1.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g1.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g2.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g2.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g2.z) * vec2(other.g1.z, other.g4.z), vec4(self.g0.x) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y) + vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g2.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g2.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g2.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g2.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g2.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g2.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g0.y) * other.g3 + vec3(self.g1.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g1.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g1.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g2.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w), vec4(self.g0.x) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x) + vec4(self.g0.y) * other.g4 + vec4(self.g1.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g2.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g2.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g2.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z));
}

MultiVectorAtInfinity multi_vector_at_origin_multi_vector_at_infinity_anti_wedge_dot(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * other.g0.yx * vec2(-1.0, 1.0) + vec2(self.g0.y) * other.g0 - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g2.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g2.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g2.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(0.0) - vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_anti_wedge_dot(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0.yx * vec2(1.0, -1.0) + vec2(self.g0.y) * other.g0 - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g2.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g2.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g2.z) * vec2(-other.g1.z, other.g2.z), vec3(0.0) - vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g2.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g2.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g2.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_origin_anti_wedge_dot(MultiVectorAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(other.g0), vec3(0.0) - self.g2 * vec3(other.g0), self.g1 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_plane_anti_wedge_dot(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.w, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g0.x) + vec2(self.g2.y) * vec2(0.0, other.g0.y) + vec2(self.g2.z) * vec2(0.0, other.g0.z), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - self.g2 * vec3(other.g0.w), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_plane_at_origin_anti_wedge_dot(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g0.x) + vec2(self.g2.y) * vec2(0.0, other.g0.y) + vec2(self.g2.z) * vec2(0.0, other.g0.z), vec3(0.0) - vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_origin_point_anti_wedge_dot(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.w) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec3(0.0) - self.g2 * vec3(other.g0.w), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_origin_point_at_infinity_anti_wedge_dot(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_rotor_anti_wedge_dot(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_origin_scalar_anti_wedge_dot(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(other.g0), self.g2 * vec3(other.g0), self.g1 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_transflector_anti_wedge_dot(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.w, 0.0) + vec2(self.g2.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g2.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g2.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector multi_vector_at_origin_translator_anti_wedge_dot(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g1 * vec3(other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Origin origin_anti_scalar_anti_wedge_dot(Origin self, AntiScalar other) {
    return Origin(self.g0 * other.g0);
}

MultiVector origin_flector_anti_wedge_dot(Origin self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity origin_flector_at_infinity_anti_wedge_dot(Origin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(-other.g0.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Scalar origin_horizon_anti_wedge_dot(Origin self, Horizon other) {
    return Scalar(0.0 - self.g0 * other.g0);
}

Transflector origin_line_anti_wedge_dot(Origin self, Line other) {
    return Transflector(vec3(self.g0) * other.g1, vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity origin_line_at_infinity_anti_wedge_dot(Origin self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

PlaneAtOrigin origin_line_at_origin_anti_wedge_dot(Origin self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Flector origin_magnitude_anti_wedge_dot(Origin self, Magnitude other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.y), vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

Flector origin_motor_anti_wedge_dot(Origin self, Motor other) {
    return Flector(vec4(self.g0) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector origin_multi_vector_anti_wedge_dot(Origin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0) * vec2(other.g4.w, other.g1.w), vec4(self.g0) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(0.0) - vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVectorAtInfinity origin_multi_vector_at_infinity_anti_wedge_dot(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0) * other.g2, vec3(0.0) - vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin origin_multi_vector_at_origin_anti_wedge_dot(Origin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0) * other.g2, vec3(self.g0) * other.g1);
}

AntiScalar origin_origin_anti_wedge_dot(Origin self, Origin other) {
    return AntiScalar(0.0 - self.g0 * other.g0);
}

MultiVector origin_plane_anti_wedge_dot(Origin self, Plane other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin origin_plane_at_origin_anti_wedge_dot(Origin self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0) * other.g0);
}

Translator origin_point_anti_wedge_dot(Origin self, Point other) {
    return Translator(vec4(0.0) - vec4(self.g0) * other.g0);
}

LineAtInfinity origin_point_at_infinity_anti_wedge_dot(Origin self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0) * other.g0);
}

Flector origin_rotor_anti_wedge_dot(Origin self, Rotor other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Horizon origin_scalar_anti_wedge_dot(Origin self, Scalar other) {
    return Horizon(self.g0 * other.g0);
}

MultiVector origin_transflector_anti_wedge_dot(Origin self, Transflector other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g1.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0) * other.g0, vec4(0.0));
}

Point origin_translator_anti_wedge_dot(Origin self, Translator other) {
    return Point(vec4(self.g0) * other.g0);
}

Plane plane_anti_scalar_anti_wedge_dot(Plane self, AntiScalar other) {
    return Plane(self.g0 * vec4(other.g0));
}

MultiVector plane_flector_anti_wedge_dot(Plane self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity plane_flector_at_infinity_anti_wedge_dot(Plane self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

LineAtInfinity plane_horizon_anti_wedge_dot(Plane self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector plane_line_anti_wedge_dot(Plane self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity plane_line_at_infinity_anti_wedge_dot(Plane self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector plane_line_at_origin_anti_wedge_dot(Plane self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector plane_magnitude_anti_wedge_dot(Plane self, Magnitude other) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), self.g0 * vec4(other.g0.y));
}

Flector plane_motor_anti_wedge_dot(Plane self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector plane_multi_vector_anti_wedge_dot(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g0.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtInfinity plane_multi_vector_at_infinity_anti_wedge_dot(Plane self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVector plane_multi_vector_at_origin_anti_wedge_dot(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.w, self.g0.z) * vec2(other.g0.x, other.g2.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.w) * other.g2, vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g0.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y));
}

MultiVector plane_origin_anti_wedge_dot(Plane self, Origin other) {
    return MultiVector(vec2(self.g0.w) * vec2(other.g0, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0), vec3(0.0), vec4(0.0));
}

Motor plane_plane_anti_wedge_dot(Plane self, Plane other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Motor plane_plane_at_origin_anti_wedge_dot(Plane self, PlaneAtOrigin other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z), vec3(self.g0.w) * other.g0);
}

MultiVector plane_point_anti_wedge_dot(Plane self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity plane_point_at_infinity_anti_wedge_dot(Plane self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector plane_rotor_anti_wedge_dot(Plane self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g0.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

PointAtInfinity plane_scalar_anti_wedge_dot(Plane self, Scalar other) {
    return PointAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

MultiVector plane_transflector_anti_wedge_dot(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Transflector plane_translator_anti_wedge_dot(Plane self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

PlaneAtOrigin plane_at_origin_anti_scalar_anti_wedge_dot(PlaneAtOrigin self, AntiScalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

MultiVector plane_at_origin_flector_anti_wedge_dot(PlaneAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

MultiVectorAtInfinity plane_at_origin_flector_at_infinity_anti_wedge_dot(PlaneAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

LineAtInfinity plane_at_origin_horizon_anti_wedge_dot(PlaneAtOrigin self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0));
}

Flector plane_at_origin_line_anti_wedge_dot(PlaneAtOrigin self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity plane_at_origin_line_at_infinity_anti_wedge_dot(PlaneAtOrigin self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector plane_at_origin_line_at_origin_anti_wedge_dot(PlaneAtOrigin self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector plane_at_origin_magnitude_anti_wedge_dot(PlaneAtOrigin self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.x), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

Flector plane_at_origin_motor_anti_wedge_dot(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z));
}

MultiVector plane_at_origin_multi_vector_anti_wedge_dot(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z));
}

MultiVectorAtInfinity plane_at_origin_multi_vector_at_infinity_anti_wedge_dot(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_anti_wedge_dot(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

LineAtOrigin plane_at_origin_origin_anti_wedge_dot(PlaneAtOrigin self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0));
}

Motor plane_at_origin_plane_anti_wedge_dot(PlaneAtOrigin self, Plane other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z), vec3(0.0) - self.g0 * vec3(other.g0.w));
}

Rotor plane_at_origin_plane_at_origin_anti_wedge_dot(PlaneAtOrigin self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

MultiVector plane_at_origin_point_anti_wedge_dot(PlaneAtOrigin self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(0.0) - self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity plane_at_origin_point_at_infinity_anti_wedge_dot(PlaneAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector plane_at_origin_rotor_anti_wedge_dot(PlaneAtOrigin self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0));
}

PointAtInfinity plane_at_origin_scalar_anti_wedge_dot(PlaneAtOrigin self, Scalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector plane_at_origin_transflector_anti_wedge_dot(PlaneAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

Transflector plane_at_origin_translator_anti_wedge_dot(PlaneAtOrigin self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Point point_anti_scalar_anti_wedge_dot(Point self, AntiScalar other) {
    return Point(self.g0 * vec4(other.g0));
}

MultiVector point_flector_anti_wedge_dot(Point self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) - vec2(self.g0.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity point_flector_at_infinity_anti_wedge_dot(Point self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Scalar point_horizon_anti_wedge_dot(Point self, Horizon other) {
    return Scalar(0.0 - self.g0.w * other.g0);
}

Transflector point_line_anti_wedge_dot(Point self, Line other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g1, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

PointAtInfinity point_line_at_infinity_anti_wedge_dot(Point self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

Transflector point_line_at_origin_anti_wedge_dot(Point self, LineAtOrigin other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Flector point_magnitude_anti_wedge_dot(Point self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.y), vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

Flector point_motor_anti_wedge_dot(Point self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

MultiVector point_multi_vector_anti_wedge_dot(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) - vec2(self.g0.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, 0.0) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(0.0) - vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVectorAtInfinity point_multi_vector_at_infinity_anti_wedge_dot(Point self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0.w) * other.g2, vec3(0.0) - vec3(self.g0.w) * other.g1);
}

MultiVector point_multi_vector_at_origin_anti_wedge_dot(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) - vec2(self.g0.z, self.g0.w) * vec2(other.g2.z, other.g0.x), vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g0.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y), vec3(0.0) - vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z));
}

Translator point_origin_anti_wedge_dot(Point self, Origin other) {
    return Translator(self.g0 * vec4(other.g0));
}

MultiVector point_plane_anti_wedge_dot(Point self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVector point_plane_at_origin_anti_wedge_dot(Point self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Translator point_point_anti_wedge_dot(Point self, Point other) {
    return Translator(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) - vec4(self.g0.w) * other.g0);
}

LineAtInfinity point_point_at_infinity_anti_wedge_dot(Point self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0.w) * other.g0);
}

Flector point_rotor_anti_wedge_dot(Point self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g0.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

Horizon point_scalar_anti_wedge_dot(Point self, Scalar other) {
    return Horizon(self.g0.w * other.g0);
}

MultiVector point_transflector_anti_wedge_dot(Point self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) - vec3(self.g0.w) * other.g0, vec4(0.0));
}

Point point_translator_anti_wedge_dot(Point self, Translator other) {
    return Point(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

PointAtInfinity point_at_infinity_anti_scalar_anti_wedge_dot(PointAtInfinity self, AntiScalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVectorAtInfinity point_at_infinity_flector_anti_wedge_dot(PointAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w));
}

FlectorAtInfinity point_at_infinity_line_anti_wedge_dot(PointAtInfinity self, Line other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

FlectorAtInfinity point_at_infinity_line_at_origin_anti_wedge_dot(PointAtInfinity self, LineAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

PointAtInfinity point_at_infinity_magnitude_anti_wedge_dot(PointAtInfinity self, Magnitude other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.y));
}

FlectorAtInfinity point_at_infinity_motor_anti_wedge_dot(PointAtInfinity self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_anti_wedge_dot(PointAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g4.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g4.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g4.z, other.g2.z), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_origin_anti_wedge_dot(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

LineAtInfinity point_at_infinity_origin_anti_wedge_dot(PointAtInfinity self, Origin other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

MultiVectorAtInfinity point_at_infinity_plane_anti_wedge_dot(PointAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity point_at_infinity_plane_at_origin_anti_wedge_dot(PointAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

LineAtInfinity point_at_infinity_point_anti_wedge_dot(PointAtInfinity self, Point other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.w));
}

FlectorAtInfinity point_at_infinity_rotor_anti_wedge_dot(PointAtInfinity self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity point_at_infinity_transflector_anti_wedge_dot(PointAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

PointAtInfinity point_at_infinity_translator_anti_wedge_dot(PointAtInfinity self, Translator other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

Rotor rotor_anti_scalar_anti_wedge_dot(Rotor self, AntiScalar other) {
    return Rotor(self.g0 * vec4(other.g0));
}

Flector rotor_flector_anti_wedge_dot(Rotor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity rotor_flector_at_infinity_anti_wedge_dot(Rotor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

FlectorAtInfinity rotor_horizon_anti_wedge_dot(Rotor self, Horizon other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector rotor_line_anti_wedge_dot(Rotor self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity rotor_line_at_infinity_anti_wedge_dot(Rotor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0);
}

Rotor rotor_line_at_origin_anti_wedge_dot(Rotor self, LineAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector rotor_magnitude_anti_wedge_dot(Rotor self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec4(0.0));
}

MultiVector rotor_motor_anti_wedge_dot(Rotor self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g0.w) * vec2(0.0, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVector rotor_multi_vector_anti_wedge_dot(Rotor self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g0.w) * other.g3, vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity rotor_multi_vector_at_infinity_anti_wedge_dot(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2);
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_anti_wedge_dot(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2);
}

Flector rotor_origin_anti_wedge_dot(Rotor self, Origin other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0), self.g0.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

Flector rotor_plane_anti_wedge_dot(Rotor self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0);
}

Flector rotor_plane_at_origin_anti_wedge_dot(Rotor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector rotor_point_anti_wedge_dot(Rotor self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity rotor_point_at_infinity_anti_wedge_dot(Rotor self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Rotor rotor_rotor_anti_wedge_dot(Rotor self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity rotor_scalar_anti_wedge_dot(Rotor self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(other.g0, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector rotor_transflector_anti_wedge_dot(Rotor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * other.g1);
}

MultiVector rotor_translator_anti_wedge_dot(Rotor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Scalar scalar_anti_scalar_anti_wedge_dot(Scalar self, AntiScalar other) {
    return Scalar(self.g0 * other.g0);
}

FlectorAtInfinity scalar_flector_anti_wedge_dot(Scalar self, Flector other) {
    return FlectorAtInfinity(vec4(0.0) - vec4(self.g0) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w));
}

LineAtInfinity scalar_line_anti_wedge_dot(Scalar self, Line other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtInfinity scalar_line_at_origin_anti_wedge_dot(Scalar self, LineAtOrigin other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

Scalar scalar_magnitude_anti_wedge_dot(Scalar self, Magnitude other) {
    return Scalar(self.g0 * other.g0.y);
}

MultiVectorAtInfinity scalar_motor_anti_wedge_dot(Scalar self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity scalar_multi_vector_anti_wedge_dot(Scalar self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.y, -other.g1.w), vec3(0.0) - vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0) * other.g2);
}

MultiVectorAtInfinity scalar_multi_vector_at_origin_anti_wedge_dot(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0) * other.g2, vec3(self.g0) * other.g1);
}

Horizon scalar_origin_anti_wedge_dot(Scalar self, Origin other) {
    return Horizon(0.0 - self.g0 * other.g0);
}

PointAtInfinity scalar_plane_anti_wedge_dot(Scalar self, Plane other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

PointAtInfinity scalar_plane_at_origin_anti_wedge_dot(Scalar self, PlaneAtOrigin other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0) * other.g0);
}

Horizon scalar_point_anti_wedge_dot(Scalar self, Point other) {
    return Horizon(0.0 - self.g0 * other.g0.w);
}

MultiVectorAtInfinity scalar_rotor_anti_wedge_dot(Scalar self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

PointAtInfinity scalar_transflector_anti_wedge_dot(Scalar self, Transflector other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

Scalar scalar_translator_anti_wedge_dot(Scalar self, Translator other) {
    return Scalar(self.g0 * other.g0.w);
}

Transflector transflector_anti_scalar_anti_wedge_dot(Transflector self, AntiScalar other) {
    return Transflector(self.g0 * vec3(other.g0), self.g1 * vec4(other.g0));
}

MultiVector transflector_flector_anti_wedge_dot(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity transflector_flector_at_infinity_anti_wedge_dot(Transflector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

LineAtInfinity transflector_horizon_anti_wedge_dot(Transflector self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

Flector transflector_line_anti_wedge_dot(Transflector self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity transflector_line_at_infinity_anti_wedge_dot(Transflector self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector transflector_line_at_origin_anti_wedge_dot(Transflector self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector transflector_magnitude_anti_wedge_dot(Transflector self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.y) + vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.x), self.g1 * vec4(other.g0.y));
}

Flector transflector_motor_anti_wedge_dot(Transflector self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector transflector_multi_vector_anti_wedge_dot(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g1.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g1.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g1.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g1.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, 0.0) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g1.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtInfinity transflector_multi_vector_at_infinity_anti_wedge_dot(Transflector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVector transflector_multi_vector_at_origin_anti_wedge_dot(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g2.x) + vec2(self.g1.y) * vec2(0.0, other.g2.y) + vec2(self.g1.w, self.g1.z) * vec2(other.g0.x, other.g2.z), vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.y, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g1.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g1.w) * other.g2, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g1.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y));
}

MultiVector transflector_origin_anti_wedge_dot(Transflector self, Origin other) {
    return MultiVector(vec2(self.g1.w) * vec2(other.g0, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), self.g0 * vec3(other.g0), vec4(0.0));
}

MultiVector transflector_plane_anti_wedge_dot(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_plane_at_origin_anti_wedge_dot(Transflector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g1.w) * other.g0, vec4(0.0));
}

MultiVector transflector_point_anti_wedge_dot(Transflector self, Point other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w), self.g0 * vec3(other.g0.w) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity transflector_point_at_infinity_anti_wedge_dot(Transflector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector transflector_rotor_anti_wedge_dot(Transflector self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g1.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

PointAtInfinity transflector_scalar_anti_wedge_dot(Transflector self, Scalar other) {
    return PointAtInfinity(vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

MultiVector transflector_transflector_anti_wedge_dot(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Transflector transflector_translator_anti_wedge_dot(Transflector self, Translator other) {
    return Transflector(self.g0 * vec3(other.g0.w) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

Translator translator_anti_scalar_anti_wedge_dot(Translator self, AntiScalar other) {
    return Translator(self.g0 * vec4(other.g0));
}

Flector translator_flector_anti_wedge_dot(Translator self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, 0.0) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity translator_flector_at_infinity_anti_wedge_dot(Translator self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.w) * other.g0);
}

Horizon translator_horizon_anti_wedge_dot(Translator self, Horizon other) {
    return Horizon(self.g0.w * other.g0);
}

MultiVector translator_line_anti_wedge_dot(Translator self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

LineAtInfinity translator_line_at_infinity_anti_wedge_dot(Translator self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector translator_line_at_origin_anti_wedge_dot(Translator self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVector translator_magnitude_anti_wedge_dot(Translator self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec4(0.0));
}

MultiVector translator_motor_anti_wedge_dot(Translator self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVector translator_multi_vector_anti_wedge_dot(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(-other.g1.w, -other.g4.z, other.g4.y, 0.0) + vec4(self.g0.y) * vec4(other.g4.z, -other.g1.w, -other.g4.x, 0.0) + vec4(self.g0.z) * vec4(-other.g4.y, other.g4.x, -other.g1.w, 0.0) + vec4(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g3, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g4.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g4.z) + vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity translator_multi_vector_at_infinity_anti_wedge_dot(Translator self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

MultiVector translator_multi_vector_at_origin_anti_wedge_dot(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g1.z, other.g0.y), vec4(self.g0.x) * vec4(-other.g0.x, -other.g2.z, other.g2.y, 0.0) + vec4(self.g0.y) * vec4(other.g2.z, -other.g0.x, -other.g2.x, 0.0) + self.g0.zzzw * vec4(-other.g2.y, other.g2.x, -other.g0.x, other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, other.g2.z));
}

Point translator_origin_anti_wedge_dot(Translator self, Origin other) {
    return Point(self.g0 * vec4(-other.g0));
}

Transflector translator_plane_anti_wedge_dot(Translator self, Plane other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * other.g0);
}

Transflector translator_plane_at_origin_anti_wedge_dot(Translator self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.z));
}

Point translator_point_anti_wedge_dot(Translator self, Point other) {
    return Point(self.g0.xyzx * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

PointAtInfinity translator_point_at_infinity_anti_wedge_dot(Translator self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector translator_rotor_anti_wedge_dot(Translator self, Rotor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

Scalar translator_scalar_anti_wedge_dot(Translator self, Scalar other) {
    return Scalar(self.g0.w * other.g0);
}

Transflector translator_transflector_anti_wedge_dot(Translator self, Transflector other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * other.g1);
}

Translator translator_translator_anti_wedge_dot(Translator self, Translator other) {
    return Translator(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

AntiScalar anti_scalar_anti_scalar_geometric_anti_product(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector anti_scalar_flector_geometric_anti_product(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

FlectorAtInfinity anti_scalar_flector_at_infinity_geometric_anti_product(AntiScalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

Horizon anti_scalar_horizon_geometric_anti_product(AntiScalar self, Horizon other) {
    return Horizon(self.g0 * other.g0);
}

Line anti_scalar_line_geometric_anti_product(AntiScalar self, Line other) {
    return Line(vec3(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

LineAtInfinity anti_scalar_line_at_infinity_geometric_anti_product(AntiScalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtOrigin anti_scalar_line_at_origin_geometric_anti_product(AntiScalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Magnitude anti_scalar_magnitude_geometric_anti_product(AntiScalar self, Magnitude other) {
    return Magnitude(vec2(self.g0) * other.g0);
}

Motor anti_scalar_motor_geometric_anti_product(AntiScalar self, Motor other) {
    return Motor(vec4(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

MultiVector anti_scalar_multi_vector_geometric_anti_product(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(self.g0) * other.g0, vec4(self.g0) * other.g1, vec3(self.g0) * other.g2, vec3(self.g0) * other.g3, vec4(self.g0) * other.g4);
}

MultiVectorAtInfinity anti_scalar_multi_vector_at_infinity_geometric_anti_product(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_origin_geometric_anti_product(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Origin anti_scalar_origin_geometric_anti_product(AntiScalar self, Origin other) {
    return Origin(self.g0 * other.g0);
}

Plane anti_scalar_plane_geometric_anti_product(AntiScalar self, Plane other) {
    return Plane(vec4(self.g0) * other.g0);
}

PlaneAtOrigin anti_scalar_plane_at_origin_geometric_anti_product(AntiScalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Point anti_scalar_point_geometric_anti_product(AntiScalar self, Point other) {
    return Point(vec4(self.g0) * other.g0);
}

PointAtInfinity anti_scalar_point_at_infinity_geometric_anti_product(AntiScalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Rotor anti_scalar_rotor_geometric_anti_product(AntiScalar self, Rotor other) {
    return Rotor(vec4(self.g0) * other.g0);
}

Scalar anti_scalar_scalar_geometric_anti_product(AntiScalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Transflector anti_scalar_transflector_geometric_anti_product(AntiScalar self, Transflector other) {
    return Transflector(vec3(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

Translator anti_scalar_translator_geometric_anti_product(AntiScalar self, Translator other) {
    return Translator(vec4(self.g0) * other.g0);
}

Flector flector_anti_scalar_geometric_anti_product(Flector self, AntiScalar other) {
    return Flector(self.g0 * vec4(other.g0), self.g1 * vec4(other.g0));
}

MultiVector flector_flector_geometric_anti_product(Flector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) - vec2(self.g0.w) * vec2(other.g1.w, other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity flector_flector_at_infinity_geometric_anti_product(Flector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtInfinity flector_horizon_geometric_anti_product(Flector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

Flector flector_line_geometric_anti_product(Flector self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity flector_line_at_infinity_geometric_anti_product(Flector self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector flector_line_at_origin_geometric_anti_product(Flector self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector flector_magnitude_geometric_anti_product(Flector self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.y) + self.g1.xyzx * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + self.g1 * vec4(other.g0.y));
}

Flector flector_motor_geometric_anti_product(Flector self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector flector_multi_vector_geometric_anti_product(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) - vec2(self.g0.w) * vec2(other.g4.w, other.g1.w) + vec2(self.g1.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g1.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g1.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g1.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, 0.0) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x) + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtInfinity flector_multi_vector_at_infinity_geometric_anti_product(Flector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * other.g0.yx * vec2(-1.0, 1.0) + vec2(self.g1.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.w) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(0.0) - vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVector flector_multi_vector_at_origin_geometric_anti_product(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) - vec2(self.g0.z, self.g0.w) * vec2(other.g2.z, other.g0.x) + vec2(self.g1.x) * vec2(0.0, other.g2.x) + vec2(self.g1.y) * vec2(0.0, other.g2.y) + vec2(self.g1.w, self.g1.z) * vec2(other.g0.x, other.g2.z), vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g0.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(0.0) - vec3(self.g0.w) * other.g2 + vec3(self.g1.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g1.w) * other.g2, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g1.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y));
}

MultiVector flector_origin_geometric_anti_product(Flector self, Origin other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, -other.g0) + vec2(self.g1.w) * vec2(other.g0, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0), vec4(0.0));
}

MultiVector flector_plane_geometric_anti_product(Flector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g0.w) * vec2(-other.g0.w, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_plane_at_origin_geometric_anti_product(Flector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g1.w) * other.g0, vec4(0.0));
}

MultiVector flector_point_geometric_anti_product(Flector self, Point other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, -other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity flector_point_at_infinity_geometric_anti_product(Flector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector flector_rotor_geometric_anti_product(Flector self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g0.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g1.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

FlectorAtInfinity flector_scalar_geometric_anti_product(Flector self, Scalar other) {
    return FlectorAtInfinity(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0) + self.g1.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector flector_transflector_geometric_anti_product(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) - vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Flector flector_translator_geometric_anti_product(Flector self, Translator other) {
    return Flector(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

FlectorAtInfinity flector_at_infinity_anti_scalar_geometric_anti_product(FlectorAtInfinity self, AntiScalar other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVectorAtInfinity flector_at_infinity_flector_geometric_anti_product(FlectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

FlectorAtInfinity flector_at_infinity_line_geometric_anti_product(FlectorAtInfinity self, Line other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

FlectorAtInfinity flector_at_infinity_line_at_origin_geometric_anti_product(FlectorAtInfinity self, LineAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

FlectorAtInfinity flector_at_infinity_magnitude_geometric_anti_product(FlectorAtInfinity self, Magnitude other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.y));
}

FlectorAtInfinity flector_at_infinity_motor_geometric_anti_product(FlectorAtInfinity self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_geometric_anti_product(FlectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g4.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g4.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g4.z, other.g2.z) + vec2(self.g0.w) * vec2(other.g1.w, other.g0.y), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) + vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_origin_geometric_anti_product(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2);
}

MultiVectorAtInfinity flector_at_infinity_origin_geometric_anti_product(FlectorAtInfinity self, Origin other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(other.g0, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

MultiVectorAtInfinity flector_at_infinity_plane_geometric_anti_product(FlectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity flector_at_infinity_plane_at_origin_geometric_anti_product(FlectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_point_geometric_anti_product(FlectorAtInfinity self, Point other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w));
}

FlectorAtInfinity flector_at_infinity_rotor_geometric_anti_product(FlectorAtInfinity self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_transflector_geometric_anti_product(FlectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

FlectorAtInfinity flector_at_infinity_translator_geometric_anti_product(FlectorAtInfinity self, Translator other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.w));
}

Horizon horizon_anti_scalar_geometric_anti_product(Horizon self, AntiScalar other) {
    return Horizon(self.g0 * other.g0);
}

MultiVectorAtInfinity horizon_flector_geometric_anti_product(Horizon self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

PointAtInfinity horizon_line_geometric_anti_product(Horizon self, Line other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

PointAtInfinity horizon_line_at_origin_geometric_anti_product(Horizon self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Horizon horizon_magnitude_geometric_anti_product(Horizon self, Magnitude other) {
    return Horizon(self.g0 * other.g0.y);
}

FlectorAtInfinity horizon_motor_geometric_anti_product(Horizon self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

MultiVectorAtInfinity horizon_multi_vector_geometric_anti_product(Horizon self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g1.w, other.g0.y), vec3(self.g0) * other.g2, vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z));
}

MultiVectorAtInfinity horizon_multi_vector_at_origin_geometric_anti_product(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Scalar horizon_origin_geometric_anti_product(Horizon self, Origin other) {
    return Scalar(self.g0 * other.g0);
}

LineAtInfinity horizon_plane_geometric_anti_product(Horizon self, Plane other) {
    return LineAtInfinity(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtInfinity horizon_plane_at_origin_geometric_anti_product(Horizon self, PlaneAtOrigin other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

Scalar horizon_point_geometric_anti_product(Horizon self, Point other) {
    return Scalar(self.g0 * other.g0.w);
}

FlectorAtInfinity horizon_rotor_geometric_anti_product(Horizon self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

LineAtInfinity horizon_transflector_geometric_anti_product(Horizon self, Transflector other) {
    return LineAtInfinity(vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

Horizon horizon_translator_geometric_anti_product(Horizon self, Translator other) {
    return Horizon(self.g0 * other.g0.w);
}

Line line_anti_scalar_geometric_anti_product(Line self, AntiScalar other) {
    return Line(self.g0 * vec3(other.g0), self.g1 * vec3(other.g0));
}

Flector line_flector_geometric_anti_product(Line self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, 0.0), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

FlectorAtInfinity line_flector_at_infinity_geometric_anti_product(Line self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity line_horizon_geometric_anti_product(Line self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector line_line_geometric_anti_product(Line self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity line_line_at_infinity_geometric_anti_product(Line self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector line_line_at_origin_geometric_anti_product(Line self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Line line_magnitude_geometric_anti_product(Line self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.y), self.g0 * vec3(other.g0.x) + self.g1 * vec3(other.g0.y));
}

MultiVector line_motor_geometric_anti_product(Line self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

MultiVector line_multi_vector_geometric_anti_product(Line self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g1.x) * vec4(-other.g1.w, -other.g4.z, other.g4.y, 0.0) + vec4(self.g1.y) * vec4(other.g4.z, -other.g1.w, -other.g4.x, 0.0) + vec4(self.g1.z) * vec4(-other.g4.y, other.g4.x, -other.g1.w, 0.0), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g4.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g4.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g4.z));
}

MultiVectorAtInfinity line_multi_vector_at_infinity_geometric_anti_product(Line self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVector line_multi_vector_at_origin_geometric_anti_product(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.x) * vec4(-other.g0.x, -other.g2.z, other.g2.y, 0.0) + vec4(self.g1.y) * vec4(other.g2.z, -other.g0.x, -other.g2.x, 0.0) + vec4(self.g1.z) * vec4(-other.g2.y, other.g2.x, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.x, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g2.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g2.z));
}

Transflector line_origin_geometric_anti_product(Line self, Origin other) {
    return Transflector(vec3(0.0) - self.g1 * vec3(other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0, other.g0, other.g0, 0.0));
}

Flector line_plane_geometric_anti_product(Line self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

Flector line_plane_at_origin_geometric_anti_product(Line self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

Transflector line_point_geometric_anti_product(Line self, Point other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) - self.g1 * vec3(other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_point_at_infinity_geometric_anti_product(Line self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

MultiVector line_rotor_geometric_anti_product(Line self, Rotor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

LineAtInfinity line_scalar_geometric_anti_product(Line self, Scalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

Flector line_transflector_geometric_anti_product(Line self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

MultiVector line_translator_geometric_anti_product(Line self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + self.g1 * vec3(other.g0.w), vec4(0.0));
}

LineAtInfinity line_at_infinity_anti_scalar_geometric_anti_product(LineAtInfinity self, AntiScalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

FlectorAtInfinity line_at_infinity_flector_geometric_anti_product(LineAtInfinity self, Flector other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, other.g1.z));
}

MultiVectorAtInfinity line_at_infinity_line_geometric_anti_product(LineAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity line_at_infinity_line_at_origin_geometric_anti_product(LineAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

LineAtInfinity line_at_infinity_magnitude_geometric_anti_product(LineAtInfinity self, Magnitude other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.y));
}

MultiVectorAtInfinity line_at_infinity_motor_geometric_anti_product(LineAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_geometric_anti_product(LineAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, other.g4.x) + vec2(self.g0.y) * vec2(-other.g2.y, other.g4.y) + vec2(self.g0.z) * vec2(-other.g2.z, other.g4.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_origin_geometric_anti_product(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

PointAtInfinity line_at_infinity_origin_geometric_anti_product(LineAtInfinity self, Origin other) {
    return PointAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0));
}

FlectorAtInfinity line_at_infinity_plane_geometric_anti_product(LineAtInfinity self, Plane other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

FlectorAtInfinity line_at_infinity_plane_at_origin_geometric_anti_product(LineAtInfinity self, PlaneAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

PointAtInfinity line_at_infinity_point_geometric_anti_product(LineAtInfinity self, Point other) {
    return PointAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0.w));
}

MultiVectorAtInfinity line_at_infinity_rotor_geometric_anti_product(LineAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

FlectorAtInfinity line_at_infinity_transflector_geometric_anti_product(LineAtInfinity self, Transflector other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, other.g1.z));
}

LineAtInfinity line_at_infinity_translator_geometric_anti_product(LineAtInfinity self, Translator other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.w));
}

LineAtOrigin line_at_origin_anti_scalar_geometric_anti_product(LineAtOrigin self, AntiScalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_origin_flector_geometric_anti_product(LineAtOrigin self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_at_origin_flector_at_infinity_geometric_anti_product(LineAtOrigin self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity line_at_origin_horizon_geometric_anti_product(LineAtOrigin self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector line_at_origin_line_geometric_anti_product(LineAtOrigin self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity line_at_origin_line_at_infinity_geometric_anti_product(LineAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Rotor line_at_origin_line_at_origin_geometric_anti_product(LineAtOrigin self, LineAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Line line_at_origin_magnitude_geometric_anti_product(LineAtOrigin self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.y), self.g0 * vec3(other.g0.x));
}

MultiVector line_at_origin_motor_geometric_anti_product(LineAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector line_at_origin_multi_vector_geometric_anti_product(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity line_at_origin_multi_vector_at_infinity_geometric_anti_product(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_geometric_anti_product(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin line_at_origin_origin_geometric_anti_product(LineAtOrigin self, Origin other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_origin_plane_geometric_anti_product(LineAtOrigin self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector line_at_origin_plane_at_origin_geometric_anti_product(LineAtOrigin self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector line_at_origin_point_geometric_anti_product(LineAtOrigin self, Point other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_at_origin_point_at_infinity_geometric_anti_product(LineAtOrigin self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Rotor line_at_origin_rotor_geometric_anti_product(LineAtOrigin self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtInfinity line_at_origin_scalar_geometric_anti_product(LineAtOrigin self, Scalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

Flector line_at_origin_transflector_geometric_anti_product(LineAtOrigin self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector line_at_origin_translator_geometric_anti_product(LineAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Magnitude magnitude_anti_scalar_geometric_anti_product(Magnitude self, AntiScalar other) {
    return Magnitude(self.g0 * vec2(other.g0));
}

Flector magnitude_flector_geometric_anti_product(Magnitude self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g0.y) * other.g1);
}

FlectorAtInfinity magnitude_flector_at_infinity_geometric_anti_product(Magnitude self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.y) * other.g0);
}

Horizon magnitude_horizon_geometric_anti_product(Magnitude self, Horizon other) {
    return Horizon(self.g0.y * other.g0);
}

Line magnitude_line_geometric_anti_product(Magnitude self, Line other) {
    return Line(vec3(self.g0.y) * other.g0, vec3(self.g0.x) * other.g0 + vec3(self.g0.y) * other.g1);
}

LineAtInfinity magnitude_line_at_infinity_geometric_anti_product(Magnitude self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.y) * other.g0);
}

Line magnitude_line_at_origin_geometric_anti_product(Magnitude self, LineAtOrigin other) {
    return Line(vec3(self.g0.y) * other.g0, vec3(self.g0.x) * other.g0);
}

Magnitude magnitude_magnitude_geometric_anti_product(Magnitude self, Magnitude other) {
    return Magnitude(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0);
}

MultiVector magnitude_motor_geometric_anti_product(Magnitude self, Motor other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g0.y) * other.g1, vec4(0.0));
}

MultiVector magnitude_multi_vector_geometric_anti_product(Magnitude self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(-other.g4.x, -other.g4.y, -other.g4.z, 0.0) + vec4(self.g0.y) * other.g1, vec3(self.g0.y) * other.g2, vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g3, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g0.y) * other.g4);
}

MultiVectorAtInfinity magnitude_multi_vector_at_infinity_geometric_anti_product(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1, vec3(self.g0.y) * other.g2);
}

MultiVector magnitude_multi_vector_at_origin_geometric_anti_product(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 * vec2(other.g0.y), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(-other.g2.x, -other.g2.y, -other.g2.z, other.g0.x), vec3(self.g0.y) * other.g1, vec3(self.g0.x) * other.g1, vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g0.x));
}

Flector magnitude_origin_geometric_anti_product(Magnitude self, Origin other) {
    return Flector(vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0));
}

Transflector magnitude_plane_geometric_anti_product(Magnitude self, Plane other) {
    return Transflector(vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y) * other.g0);
}

Transflector magnitude_plane_at_origin_geometric_anti_product(Magnitude self, PlaneAtOrigin other) {
    return Transflector(vec3(0.0) - vec3(self.g0.x) * other.g0, vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector magnitude_point_geometric_anti_product(Magnitude self, Point other) {
    return Flector(vec4(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.w));
}

PointAtInfinity magnitude_point_at_infinity_geometric_anti_product(Magnitude self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.y) * other.g0);
}

MultiVector magnitude_rotor_geometric_anti_product(Magnitude self, Rotor other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Scalar magnitude_scalar_geometric_anti_product(Magnitude self, Scalar other) {
    return Scalar(self.g0.y * other.g0);
}

Transflector magnitude_transflector_geometric_anti_product(Magnitude self, Transflector other) {
    return Transflector(vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g0.y) * other.g0, vec4(self.g0.y) * other.g1);
}

MultiVector magnitude_translator_geometric_anti_product(Magnitude self, Translator other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Motor motor_anti_scalar_geometric_anti_product(Motor self, AntiScalar other) {
    return Motor(self.g0 * vec4(other.g0), self.g1 * vec3(other.g0));
}

Flector motor_flector_geometric_anti_product(Motor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, 0.0), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g0.w) * other.g1 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

FlectorAtInfinity motor_flector_at_infinity_geometric_anti_product(Motor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

FlectorAtInfinity motor_horizon_geometric_anti_product(Motor self, Horizon other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector motor_line_geometric_anti_product(Motor self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity motor_line_at_infinity_geometric_anti_product(Motor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0);
}

MultiVector motor_line_at_origin_geometric_anti_product(Motor self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVector motor_magnitude_geometric_anti_product(Motor self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x) + self.g1 * vec3(other.g0.y), vec4(0.0));
}

MultiVector motor_motor_geometric_anti_product(Motor self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g0.w) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

MultiVector motor_multi_vector_geometric_anti_product(Motor self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g0.w) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g0.w) * other.g1 + vec4(self.g1.x) * vec4(-other.g1.w, -other.g4.z, other.g4.y, 0.0) + vec4(self.g1.y) * vec4(other.g4.z, -other.g1.w, -other.g4.x, 0.0) + vec4(self.g1.z) * vec4(-other.g4.y, other.g4.x, -other.g1.w, 0.0), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g0.w) * other.g3 + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g4 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g4.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g4.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g4.z));
}

MultiVectorAtInfinity motor_multi_vector_at_infinity_geometric_anti_product(Motor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2);
}

MultiVector motor_multi_vector_at_origin_geometric_anti_product(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g0.y) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x) * vec4(-other.g0.x, -other.g2.z, other.g2.y, 0.0) + vec4(self.g1.y) * vec4(other.g2.z, -other.g0.x, -other.g2.x, 0.0) + vec4(self.g1.z) * vec4(-other.g2.y, other.g2.x, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.x, 0.0) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g2.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g2.z));
}

Flector motor_origin_geometric_anti_product(Motor self, Origin other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0), self.g0.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

Flector motor_plane_geometric_anti_product(Motor self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

Flector motor_plane_at_origin_geometric_anti_product(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

Flector motor_point_geometric_anti_product(Motor self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity motor_point_at_infinity_geometric_anti_product(Motor self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector motor_rotor_geometric_anti_product(Motor self, Rotor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g0.w) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

MultiVectorAtInfinity motor_scalar_geometric_anti_product(Motor self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(other.g0, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector motor_transflector_geometric_anti_product(Motor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * other.g1 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

MultiVector motor_translator_geometric_anti_product(Motor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec4(0.0));
}

MultiVector multi_vector_anti_scalar_geometric_anti_product(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0 * vec2(other.g0), self.g1 * vec4(other.g0), self.g2 * vec3(other.g0), self.g3 * vec3(other.g0), self.g4 * vec4(other.g0));
}

MultiVector multi_vector_flector_geometric_anti_product(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) - vec2(self.g1.w) * vec2(other.g1.w, other.g0.w) + vec2(self.g4.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g4.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g4.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec4(self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g0.y) * other.g0 + vec4(self.g2.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g3.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, 0.0) + vec4(self.g3.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, 0.0), vec3(0.0) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g4.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g1.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g0.y) * other.g1 + vec4(self.g2.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

MultiVectorAtInfinity multi_vector_flector_at_infinity_geometric_anti_product(MultiVector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtInfinity multi_vector_horizon_geometric_anti_product(MultiVector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(0.0, other.g0) + vec2(self.g1.w) * vec2(-other.g0, 0.0), self.g2 * vec3(other.g0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0));
}

MultiVector multi_vector_line_geometric_anti_product(MultiVector self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g2.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g2.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g2.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g0.y) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_line_at_infinity_geometric_anti_product(MultiVector self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_line_at_origin_geometric_anti_product(MultiVector self, LineAtOrigin other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVector multi_vector_magnitude_geometric_anti_product(MultiVector self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0, self.g1 * vec4(other.g0.y) + self.g4.xyzx * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), self.g2 * vec3(other.g0.y), self.g2 * vec3(other.g0.x) + self.g3 * vec3(other.g0.y), vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + self.g4 * vec4(other.g0.y));
}

MultiVector multi_vector_motor_geometric_anti_product(MultiVector self, Motor other) {
    return MultiVector(self.g0 * vec2(other.g0.w) - vec2(self.g2.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g2.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g2.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g0.y) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g3.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g4.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g4.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g4.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector multi_vector_multi_vector_geometric_anti_product(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g4.x, 0.0) + vec2(self.g1.y) * vec2(-other.g4.y, 0.0) + vec2(self.g1.z) * vec2(-other.g4.z, 0.0) - vec2(self.g1.w) * vec2(other.g4.w, other.g1.w) - vec2(self.g2.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g2.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g2.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g3.x) * vec2(-other.g2.x, 0.0) + vec2(self.g3.y) * vec2(-other.g2.y, 0.0) + vec2(self.g3.z) * vec2(-other.g2.z, 0.0) + vec2(self.g4.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g4.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g4.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g4.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(-other.g4.x, -other.g4.y, -other.g4.z, 0.0) + vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, 0.0) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, 0.0) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, 0.0) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y) + vec4(self.g2.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g2.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g3.x) * vec4(-other.g1.w, -other.g4.z, other.g4.y, 0.0) + vec4(self.g3.y) * vec4(other.g4.z, -other.g1.w, -other.g4.x, 0.0) + vec4(self.g3.z) * vec4(-other.g4.y, other.g4.x, -other.g1.w, 0.0) + vec4(self.g4.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g4.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g4.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g4.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g0.y) * other.g2 - vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g2.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g4.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g4.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g4.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g3 + vec3(self.g1.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g1.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g1.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g2.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g2.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g3.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g3.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g3.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g4.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g4.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g0.y) * other.g4 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x) + vec4(self.g2.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g4.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g4.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g4.z) + vec4(self.g4.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g4.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g4.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g4.w) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtInfinity multi_vector_multi_vector_at_infinity_geometric_anti_product(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * other.g0 + vec2(self.g1.w) * other.g0.yx * vec2(-1.0, 1.0) - vec2(self.g2.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g4.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g4.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g4.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.y) * other.g1 + vec3(self.g1.w) * other.g2 + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g4.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g4.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g4.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.y) * other.g2 - vec3(self.g1.w) * other.g1 + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g4.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVector multi_vector_multi_vector_at_origin_geometric_anti_product(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 * vec2(other.g0.y) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) - vec2(self.g1.z, self.g1.w) * vec2(other.g2.z, other.g0.x) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) + vec2(self.g3.x) * vec2(-other.g1.x, 0.0) + vec2(self.g3.y) * vec2(-other.g1.y, 0.0) + vec2(self.g3.z) * vec2(-other.g1.z, 0.0) + vec2(self.g4.x) * vec2(0.0, other.g2.x) + vec2(self.g4.y) * vec2(0.0, other.g2.y) + vec2(self.g4.w, self.g4.z) * vec2(other.g0.x, other.g2.z), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(-other.g2.x, -other.g2.y, -other.g2.z, other.g0.x) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g1.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g3.x) * vec4(-other.g0.x, -other.g2.z, other.g2.y, 0.0) + vec4(self.g3.y) * vec4(other.g2.z, -other.g0.x, -other.g2.x, 0.0) + vec4(self.g3.z) * vec4(-other.g2.y, other.g2.x, -other.g0.x, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g4.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.y) * other.g1 - vec3(self.g1.w) * other.g2 + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g4.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g4.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g4.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * other.g1 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g3.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g3.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g3.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g4.w) * other.g2, vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g0.x) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z) + vec4(self.g2.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g2.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + vec4(self.g2.z) * vec4(other.g2.y, -other.g2.x, other.g0.x, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g2.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g2.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g2.z) + vec4(self.g4.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g4.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g4.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y));
}

MultiVector multi_vector_origin_geometric_anti_product(MultiVector self, Origin other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, -other.g0) + vec2(self.g4.w) * vec2(other.g0, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0) + vec4(self.g3.x, self.g3.y, self.g3.z, self.g3.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0) + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector multi_vector_plane_geometric_anti_product(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0) + vec2(self.g4.x) * vec2(0.0, other.g0.x) + vec2(self.g4.y) * vec2(0.0, other.g0.y) + vec2(self.g4.z) * vec2(0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g3.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g3.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w) + vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

MultiVector multi_vector_plane_at_origin_geometric_anti_product(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g4.x) * vec2(0.0, other.g0.x) + vec2(self.g4.y) * vec2(0.0, other.g0.y) + vec2(self.g4.z) * vec2(0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g3.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g3.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g4.w) * other.g0, vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g0.z));
}

MultiVector multi_vector_point_geometric_anti_product(MultiVector self, Point other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, -other.g0.w) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g3.x, self.g3.y, self.g3.z, self.g3.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_point_at_infinity_geometric_anti_product(MultiVector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVector multi_vector_rotor_geometric_anti_product(MultiVector self, Rotor other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g1.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g3.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g4.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g4.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

MultiVectorAtInfinity multi_vector_scalar_geometric_anti_product(MultiVector self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(other.g0, 0.0) + vec2(self.g1.w) * vec2(0.0, other.g0), vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_transflector_geometric_anti_product(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.w) * vec2(-other.g1.w, 0.0) + vec2(self.g4.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g4.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g4.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g3.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g3.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g4.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0) - vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.y) * other.g1 + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, other.g1.z));
}

MultiVector multi_vector_translator_geometric_anti_product(MultiVector self, Translator other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), self.g1.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g1.w) * other.g0 + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g2 * vec3(other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0) + self.g3 * vec3(other.g0.w), vec4(self.g4.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g4.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g4.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_anti_scalar_geometric_anti_product(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_geometric_anti_product(MultiVectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(other.g0.w) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g1.x) + vec2(self.g2.y) * vec2(0.0, other.g1.y) + vec2(self.g2.z) * vec2(0.0, other.g1.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_geometric_anti_product(MultiVectorAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_origin_geometric_anti_product(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_magnitude_geometric_anti_product(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.y), self.g1 * vec3(other.g0.y), self.g2 * vec3(other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_motor_geometric_anti_product(MultiVectorAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_geometric_anti_product(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.y, -other.g1.w) + vec2(self.g0.y) * vec2(other.g1.w, other.g0.y) - vec2(self.g1.x) * vec2(other.g4.x, other.g2.x) - vec2(self.g1.y) * vec2(other.g4.y, other.g2.y) - vec2(self.g1.z) * vec2(other.g4.z, other.g2.z) + vec2(self.g2.x) * vec2(-other.g2.x, other.g4.x) + vec2(self.g2.y) * vec2(-other.g2.y, other.g4.y) + vec2(self.g2.z) * vec2(-other.g2.z, other.g4.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g2.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g2.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g2.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g1.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g1.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g1.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) + vec3(self.g2.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_origin_geometric_anti_product(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * other.g0.yx * vec2(1.0, -1.0) + vec2(self.g0.y) * other.g0 - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g2.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g2.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g2.z) * vec2(-other.g1.z, other.g2.z), vec3(0.0) - vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g2.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g2.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g2.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_origin_geometric_anti_product(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(other.g0), vec3(0.0) - self.g2 * vec3(other.g0), self.g1 * vec3(other.g0));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_geometric_anti_product(MultiVectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g0.x) + vec2(self.g2.y) * vec2(0.0, other.g0.y) + vec2(self.g2.z) * vec2(0.0, other.g0.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_at_origin_geometric_anti_product(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g0.x) + vec2(self.g2.y) * vec2(0.0, other.g0.y) + vec2(self.g2.z) * vec2(0.0, other.g0.z), vec3(0.0) - vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_geometric_anti_product(MultiVectorAtInfinity self, Point other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(other.g0.w), vec3(0.0) - self.g2 * vec3(other.g0.w), self.g1 * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_rotor_geometric_anti_product(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_transflector_geometric_anti_product(MultiVectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g1.x) + vec2(self.g2.y) * vec2(0.0, other.g1.y) + vec2(self.g2.z) * vec2(0.0, other.g1.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_translator_geometric_anti_product(MultiVectorAtInfinity self, Translator other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w), self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

MultiVectorAtOrigin multi_vector_at_origin_anti_scalar_geometric_anti_product(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_flector_geometric_anti_product(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.w, other.g0.w) + vec2(self.g2.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g2.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g2.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_origin_flector_at_infinity_geometric_anti_product(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0 * vec2(-other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_origin_horizon_geometric_anti_product(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtInfinity(self.g0 * vec2(-other.g0), self.g1 * vec3(other.g0), vec3(0.0) - self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_line_geometric_anti_product(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(self.g0.x) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_origin_line_at_infinity_geometric_anti_product(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_origin_geometric_anti_product(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_origin_magnitude_geometric_anti_product(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVector(vec2(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), self.g1 * vec3(other.g0.y), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVector multi_vector_at_origin_motor_geometric_anti_product(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, other.g0.w) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(self.g0.x) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w) + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z));
}

MultiVector multi_vector_at_origin_multi_vector_geometric_anti_product(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g4.w, other.g1.w) + vec2(self.g0.y) * other.g0 - vec2(self.g1.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g1.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g1.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g2.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g2.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g2.z) * vec2(other.g1.z, other.g4.z), vec4(self.g0.x) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y) + vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g2.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g2.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g2.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g2.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g2.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g2.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g0.y) * other.g3 + vec3(self.g1.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g1.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g1.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g2.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w), vec4(self.g0.x) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x) + vec4(self.g0.y) * other.g4 + vec4(self.g1.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g2.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g2.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g2.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z));
}

MultiVectorAtInfinity multi_vector_at_origin_multi_vector_at_infinity_geometric_anti_product(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * other.g0.yx * vec2(-1.0, 1.0) + vec2(self.g0.y) * other.g0 - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g2.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g2.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g2.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(0.0) - vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_geometric_anti_product(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0.yx * vec2(1.0, -1.0) + vec2(self.g0.y) * other.g0 - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g2.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g2.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g2.z) * vec2(-other.g1.z, other.g2.z), vec3(0.0) - vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g2.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g2.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g2.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_origin_geometric_anti_product(MultiVectorAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(other.g0), vec3(0.0) - self.g2 * vec3(other.g0), self.g1 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_plane_geometric_anti_product(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.w, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g0.x) + vec2(self.g2.y) * vec2(0.0, other.g0.y) + vec2(self.g2.z) * vec2(0.0, other.g0.z), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - self.g2 * vec3(other.g0.w), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_plane_at_origin_geometric_anti_product(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, other.g0.x) + vec2(self.g2.y) * vec2(0.0, other.g0.y) + vec2(self.g2.z) * vec2(0.0, other.g0.z), vec3(0.0) - vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_origin_point_geometric_anti_product(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.w) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec3(0.0) - self.g2 * vec3(other.g0.w), vec3(0.0) - vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_origin_point_at_infinity_geometric_anti_product(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_rotor_geometric_anti_product(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_origin_scalar_geometric_anti_product(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(other.g0), self.g2 * vec3(other.g0), self.g1 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_transflector_geometric_anti_product(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.w, 0.0) + vec2(self.g2.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g2.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g2.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(0.0) - vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector multi_vector_at_origin_translator_geometric_anti_product(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g1 * vec3(other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Origin origin_anti_scalar_geometric_anti_product(Origin self, AntiScalar other) {
    return Origin(self.g0 * other.g0);
}

MultiVector origin_flector_geometric_anti_product(Origin self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity origin_flector_at_infinity_geometric_anti_product(Origin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(-other.g0.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Scalar origin_horizon_geometric_anti_product(Origin self, Horizon other) {
    return Scalar(0.0 - self.g0 * other.g0);
}

Transflector origin_line_geometric_anti_product(Origin self, Line other) {
    return Transflector(vec3(self.g0) * other.g1, vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity origin_line_at_infinity_geometric_anti_product(Origin self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

PlaneAtOrigin origin_line_at_origin_geometric_anti_product(Origin self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Flector origin_magnitude_geometric_anti_product(Origin self, Magnitude other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.y), vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

Flector origin_motor_geometric_anti_product(Origin self, Motor other) {
    return Flector(vec4(self.g0) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector origin_multi_vector_geometric_anti_product(Origin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0) * vec2(other.g4.w, other.g1.w), vec4(self.g0) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(0.0) - vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVectorAtInfinity origin_multi_vector_at_infinity_geometric_anti_product(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0) * other.g2, vec3(0.0) - vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin origin_multi_vector_at_origin_geometric_anti_product(Origin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0) * other.g2, vec3(self.g0) * other.g1);
}

AntiScalar origin_origin_geometric_anti_product(Origin self, Origin other) {
    return AntiScalar(0.0 - self.g0 * other.g0);
}

MultiVector origin_plane_geometric_anti_product(Origin self, Plane other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin origin_plane_at_origin_geometric_anti_product(Origin self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0) * other.g0);
}

Translator origin_point_geometric_anti_product(Origin self, Point other) {
    return Translator(vec4(0.0) - vec4(self.g0) * other.g0);
}

LineAtInfinity origin_point_at_infinity_geometric_anti_product(Origin self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0) * other.g0);
}

Flector origin_rotor_geometric_anti_product(Origin self, Rotor other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Horizon origin_scalar_geometric_anti_product(Origin self, Scalar other) {
    return Horizon(self.g0 * other.g0);
}

MultiVector origin_transflector_geometric_anti_product(Origin self, Transflector other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g1.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0) * other.g0, vec4(0.0));
}

Point origin_translator_geometric_anti_product(Origin self, Translator other) {
    return Point(vec4(self.g0) * other.g0);
}

Plane plane_anti_scalar_geometric_anti_product(Plane self, AntiScalar other) {
    return Plane(self.g0 * vec4(other.g0));
}

MultiVector plane_flector_geometric_anti_product(Plane self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity plane_flector_at_infinity_geometric_anti_product(Plane self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

LineAtInfinity plane_horizon_geometric_anti_product(Plane self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector plane_line_geometric_anti_product(Plane self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity plane_line_at_infinity_geometric_anti_product(Plane self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector plane_line_at_origin_geometric_anti_product(Plane self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector plane_magnitude_geometric_anti_product(Plane self, Magnitude other) {
    return Transflector(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), self.g0 * vec4(other.g0.y));
}

Flector plane_motor_geometric_anti_product(Plane self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector plane_multi_vector_geometric_anti_product(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g0.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtInfinity plane_multi_vector_at_infinity_geometric_anti_product(Plane self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVector plane_multi_vector_at_origin_geometric_anti_product(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.w, self.g0.z) * vec2(other.g0.x, other.g2.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.w) * other.g2, vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g0.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y));
}

MultiVector plane_origin_geometric_anti_product(Plane self, Origin other) {
    return MultiVector(vec2(self.g0.w) * vec2(other.g0, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0), vec3(0.0), vec4(0.0));
}

Motor plane_plane_geometric_anti_product(Plane self, Plane other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Motor plane_plane_at_origin_geometric_anti_product(Plane self, PlaneAtOrigin other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z), vec3(self.g0.w) * other.g0);
}

MultiVector plane_point_geometric_anti_product(Plane self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity plane_point_at_infinity_geometric_anti_product(Plane self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector plane_rotor_geometric_anti_product(Plane self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g0.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

PointAtInfinity plane_scalar_geometric_anti_product(Plane self, Scalar other) {
    return PointAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

MultiVector plane_transflector_geometric_anti_product(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Transflector plane_translator_geometric_anti_product(Plane self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

PlaneAtOrigin plane_at_origin_anti_scalar_geometric_anti_product(PlaneAtOrigin self, AntiScalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

MultiVector plane_at_origin_flector_geometric_anti_product(PlaneAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

MultiVectorAtInfinity plane_at_origin_flector_at_infinity_geometric_anti_product(PlaneAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

LineAtInfinity plane_at_origin_horizon_geometric_anti_product(PlaneAtOrigin self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0));
}

Flector plane_at_origin_line_geometric_anti_product(PlaneAtOrigin self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity plane_at_origin_line_at_infinity_geometric_anti_product(PlaneAtOrigin self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector plane_at_origin_line_at_origin_geometric_anti_product(PlaneAtOrigin self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector plane_at_origin_magnitude_geometric_anti_product(PlaneAtOrigin self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.x), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

Flector plane_at_origin_motor_geometric_anti_product(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z));
}

MultiVector plane_at_origin_multi_vector_geometric_anti_product(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z));
}

MultiVectorAtInfinity plane_at_origin_multi_vector_at_infinity_geometric_anti_product(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_geometric_anti_product(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

LineAtOrigin plane_at_origin_origin_geometric_anti_product(PlaneAtOrigin self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0));
}

Motor plane_at_origin_plane_geometric_anti_product(PlaneAtOrigin self, Plane other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z), vec3(0.0) - self.g0 * vec3(other.g0.w));
}

Rotor plane_at_origin_plane_at_origin_geometric_anti_product(PlaneAtOrigin self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

MultiVector plane_at_origin_point_geometric_anti_product(PlaneAtOrigin self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(0.0) - self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity plane_at_origin_point_at_infinity_geometric_anti_product(PlaneAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector plane_at_origin_rotor_geometric_anti_product(PlaneAtOrigin self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0));
}

PointAtInfinity plane_at_origin_scalar_geometric_anti_product(PlaneAtOrigin self, Scalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector plane_at_origin_transflector_geometric_anti_product(PlaneAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

Transflector plane_at_origin_translator_geometric_anti_product(PlaneAtOrigin self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Point point_anti_scalar_geometric_anti_product(Point self, AntiScalar other) {
    return Point(self.g0 * vec4(other.g0));
}

MultiVector point_flector_geometric_anti_product(Point self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) - vec2(self.g0.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity point_flector_at_infinity_geometric_anti_product(Point self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Scalar point_horizon_geometric_anti_product(Point self, Horizon other) {
    return Scalar(0.0 - self.g0.w * other.g0);
}

Transflector point_line_geometric_anti_product(Point self, Line other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g1, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

PointAtInfinity point_line_at_infinity_geometric_anti_product(Point self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

Transflector point_line_at_origin_geometric_anti_product(Point self, LineAtOrigin other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Flector point_magnitude_geometric_anti_product(Point self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.y), vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

Flector point_motor_geometric_anti_product(Point self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

MultiVector point_multi_vector_geometric_anti_product(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) - vec2(self.g0.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, 0.0) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(0.0) - vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVectorAtInfinity point_multi_vector_at_infinity_geometric_anti_product(Point self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0.w) * other.g2, vec3(0.0) - vec3(self.g0.w) * other.g1);
}

MultiVector point_multi_vector_at_origin_geometric_anti_product(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) - vec2(self.g0.z, self.g0.w) * vec2(other.g2.z, other.g0.x), vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g0.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y), vec3(0.0) - vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z));
}

Translator point_origin_geometric_anti_product(Point self, Origin other) {
    return Translator(self.g0 * vec4(other.g0));
}

MultiVector point_plane_geometric_anti_product(Point self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVector point_plane_at_origin_geometric_anti_product(Point self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Translator point_point_geometric_anti_product(Point self, Point other) {
    return Translator(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) - vec4(self.g0.w) * other.g0);
}

LineAtInfinity point_point_at_infinity_geometric_anti_product(Point self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0.w) * other.g0);
}

Flector point_rotor_geometric_anti_product(Point self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g0.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

Horizon point_scalar_geometric_anti_product(Point self, Scalar other) {
    return Horizon(self.g0.w * other.g0);
}

MultiVector point_transflector_geometric_anti_product(Point self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) - vec3(self.g0.w) * other.g0, vec4(0.0));
}

Point point_translator_geometric_anti_product(Point self, Translator other) {
    return Point(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

PointAtInfinity point_at_infinity_anti_scalar_geometric_anti_product(PointAtInfinity self, AntiScalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVectorAtInfinity point_at_infinity_flector_geometric_anti_product(PointAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w));
}

FlectorAtInfinity point_at_infinity_line_geometric_anti_product(PointAtInfinity self, Line other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

FlectorAtInfinity point_at_infinity_line_at_origin_geometric_anti_product(PointAtInfinity self, LineAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

PointAtInfinity point_at_infinity_magnitude_geometric_anti_product(PointAtInfinity self, Magnitude other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.y));
}

FlectorAtInfinity point_at_infinity_motor_geometric_anti_product(PointAtInfinity self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_geometric_anti_product(PointAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g4.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g4.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g4.z, other.g2.z), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_origin_geometric_anti_product(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

LineAtInfinity point_at_infinity_origin_geometric_anti_product(PointAtInfinity self, Origin other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

MultiVectorAtInfinity point_at_infinity_plane_geometric_anti_product(PointAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity point_at_infinity_plane_at_origin_geometric_anti_product(PointAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

LineAtInfinity point_at_infinity_point_geometric_anti_product(PointAtInfinity self, Point other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.w));
}

FlectorAtInfinity point_at_infinity_rotor_geometric_anti_product(PointAtInfinity self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity point_at_infinity_transflector_geometric_anti_product(PointAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

PointAtInfinity point_at_infinity_translator_geometric_anti_product(PointAtInfinity self, Translator other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

Rotor rotor_anti_scalar_geometric_anti_product(Rotor self, AntiScalar other) {
    return Rotor(self.g0 * vec4(other.g0));
}

Flector rotor_flector_geometric_anti_product(Rotor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity rotor_flector_at_infinity_geometric_anti_product(Rotor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

FlectorAtInfinity rotor_horizon_geometric_anti_product(Rotor self, Horizon other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector rotor_line_geometric_anti_product(Rotor self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity rotor_line_at_infinity_geometric_anti_product(Rotor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0);
}

Rotor rotor_line_at_origin_geometric_anti_product(Rotor self, LineAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector rotor_magnitude_geometric_anti_product(Rotor self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec4(0.0));
}

MultiVector rotor_motor_geometric_anti_product(Rotor self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z) + vec2(self.g0.w) * vec2(0.0, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVector rotor_multi_vector_geometric_anti_product(Rotor self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g0.w) * other.g3, vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity rotor_multi_vector_at_infinity_geometric_anti_product(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2);
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_geometric_anti_product(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2);
}

Flector rotor_origin_geometric_anti_product(Rotor self, Origin other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0), self.g0.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

Flector rotor_plane_geometric_anti_product(Rotor self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0);
}

Flector rotor_plane_at_origin_geometric_anti_product(Rotor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector rotor_point_geometric_anti_product(Rotor self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity rotor_point_at_infinity_geometric_anti_product(Rotor self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Rotor rotor_rotor_geometric_anti_product(Rotor self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity rotor_scalar_geometric_anti_product(Rotor self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(other.g0, 0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector rotor_transflector_geometric_anti_product(Rotor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * other.g1);
}

MultiVector rotor_translator_geometric_anti_product(Rotor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Scalar scalar_anti_scalar_geometric_anti_product(Scalar self, AntiScalar other) {
    return Scalar(self.g0 * other.g0);
}

FlectorAtInfinity scalar_flector_geometric_anti_product(Scalar self, Flector other) {
    return FlectorAtInfinity(vec4(0.0) - vec4(self.g0) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w));
}

LineAtInfinity scalar_line_geometric_anti_product(Scalar self, Line other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtInfinity scalar_line_at_origin_geometric_anti_product(Scalar self, LineAtOrigin other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

Scalar scalar_magnitude_geometric_anti_product(Scalar self, Magnitude other) {
    return Scalar(self.g0 * other.g0.y);
}

MultiVectorAtInfinity scalar_motor_geometric_anti_product(Scalar self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity scalar_multi_vector_geometric_anti_product(Scalar self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.y, -other.g1.w), vec3(0.0) - vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0) * other.g2);
}

MultiVectorAtInfinity scalar_multi_vector_at_origin_geometric_anti_product(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0) * other.g2, vec3(self.g0) * other.g1);
}

Horizon scalar_origin_geometric_anti_product(Scalar self, Origin other) {
    return Horizon(0.0 - self.g0 * other.g0);
}

PointAtInfinity scalar_plane_geometric_anti_product(Scalar self, Plane other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

PointAtInfinity scalar_plane_at_origin_geometric_anti_product(Scalar self, PlaneAtOrigin other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0) * other.g0);
}

Horizon scalar_point_geometric_anti_product(Scalar self, Point other) {
    return Horizon(0.0 - self.g0 * other.g0.w);
}

MultiVectorAtInfinity scalar_rotor_geometric_anti_product(Scalar self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

PointAtInfinity scalar_transflector_geometric_anti_product(Scalar self, Transflector other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

Scalar scalar_translator_geometric_anti_product(Scalar self, Translator other) {
    return Scalar(self.g0 * other.g0.w);
}

Transflector transflector_anti_scalar_geometric_anti_product(Transflector self, AntiScalar other) {
    return Transflector(self.g0 * vec3(other.g0), self.g1 * vec4(other.g0));
}

MultiVector transflector_flector_geometric_anti_product(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(other.g0.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.w) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity transflector_flector_at_infinity_geometric_anti_product(Transflector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

LineAtInfinity transflector_horizon_geometric_anti_product(Transflector self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

Flector transflector_line_geometric_anti_product(Transflector self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity transflector_line_at_infinity_geometric_anti_product(Transflector self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector transflector_line_at_origin_geometric_anti_product(Transflector self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector transflector_magnitude_geometric_anti_product(Transflector self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.y) + vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.x), self.g1 * vec4(other.g0.y));
}

Flector transflector_motor_geometric_anti_product(Transflector self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

MultiVector transflector_multi_vector_geometric_anti_product(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g1.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g1.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g1.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g1.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, 0.0) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g1.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(other.g1.w, other.g4.z, -other.g4.y) + vec3(self.g0.y) * vec3(-other.g4.z, other.g1.w, other.g4.x) + vec3(self.g0.z) * vec3(other.g4.y, -other.g4.x, other.g1.w) + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtInfinity transflector_multi_vector_at_infinity_geometric_anti_product(Transflector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVector transflector_multi_vector_at_origin_geometric_anti_product(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g2.x) + vec2(self.g1.y) * vec2(0.0, other.g2.y) + vec2(self.g1.w, self.g1.z) * vec2(other.g0.x, other.g2.z), vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.y, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g1.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g1.w) * other.g2, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g1.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, other.g0.y));
}

MultiVector transflector_origin_geometric_anti_product(Transflector self, Origin other) {
    return MultiVector(vec2(self.g1.w) * vec2(other.g0, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), self.g0 * vec3(other.g0), vec4(0.0));
}

MultiVector transflector_plane_geometric_anti_product(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_plane_at_origin_geometric_anti_product(Transflector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g1.w) * other.g0, vec4(0.0));
}

MultiVector transflector_point_geometric_anti_product(Transflector self, Point other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w), self.g0 * vec3(other.g0.w) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity transflector_point_at_infinity_geometric_anti_product(Transflector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector transflector_rotor_geometric_anti_product(Transflector self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g1.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

PointAtInfinity transflector_scalar_geometric_anti_product(Transflector self, Scalar other) {
    return PointAtInfinity(vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

MultiVector transflector_transflector_geometric_anti_product(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Transflector transflector_translator_geometric_anti_product(Transflector self, Translator other) {
    return Transflector(self.g0 * vec3(other.g0.w) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w));
}

Translator translator_anti_scalar_geometric_anti_product(Translator self, AntiScalar other) {
    return Translator(self.g0 * vec4(other.g0));
}

Flector translator_flector_geometric_anti_product(Translator self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(-other.g0.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g0.w, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g0.w, 0.0) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity translator_flector_at_infinity_geometric_anti_product(Translator self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.w) * other.g0);
}

Horizon translator_horizon_geometric_anti_product(Translator self, Horizon other) {
    return Horizon(self.g0.w * other.g0);
}

MultiVector translator_line_geometric_anti_product(Translator self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

LineAtInfinity translator_line_at_infinity_geometric_anti_product(Translator self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector translator_line_at_origin_geometric_anti_product(Translator self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVector translator_magnitude_geometric_anti_product(Translator self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec4(0.0));
}

MultiVector translator_motor_geometric_anti_product(Translator self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVector translator_multi_vector_geometric_anti_product(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(-other.g1.w, -other.g4.z, other.g4.y, 0.0) + vec4(self.g0.y) * vec4(other.g4.z, -other.g1.w, -other.g4.x, 0.0) + vec4(self.g0.z) * vec4(-other.g4.y, other.g4.x, -other.g1.w, 0.0) + vec4(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g3, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g4.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g4.z) + vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity translator_multi_vector_at_infinity_geometric_anti_product(Translator self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

MultiVector translator_multi_vector_at_origin_geometric_anti_product(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g1.z, other.g0.y), vec4(self.g0.x) * vec4(-other.g0.x, -other.g2.z, other.g2.y, 0.0) + vec4(self.g0.y) * vec4(other.g2.z, -other.g0.x, -other.g2.x, 0.0) + self.g0.zzzw * vec4(-other.g2.y, other.g2.x, -other.g0.x, other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, other.g2.z));
}

Point translator_origin_geometric_anti_product(Translator self, Origin other) {
    return Point(self.g0 * vec4(-other.g0));
}

Transflector translator_plane_geometric_anti_product(Translator self, Plane other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * other.g0);
}

Transflector translator_plane_at_origin_geometric_anti_product(Translator self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.z));
}

Point translator_point_geometric_anti_product(Translator self, Point other) {
    return Point(self.g0.xyzx * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

PointAtInfinity translator_point_at_infinity_geometric_anti_product(Translator self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector translator_rotor_geometric_anti_product(Translator self, Rotor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec4(0.0));
}

Scalar translator_scalar_geometric_anti_product(Translator self, Scalar other) {
    return Scalar(self.g0.w * other.g0);
}

Transflector translator_transflector_geometric_anti_product(Translator self, Transflector other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * other.g1);
}

Translator translator_translator_geometric_anti_product(Translator self, Translator other) {
    return Translator(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

Flector anti_scalar_flector_geometric_product(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector anti_scalar_flector_at_infinity_geometric_product(AntiScalar self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec4(self.g0) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Origin anti_scalar_horizon_geometric_product(AntiScalar self, Horizon other) {
    return Origin(0.0 - self.g0 * other.g0);
}

LineAtOrigin anti_scalar_line_geometric_product(AntiScalar self, Line other) {
    return LineAtOrigin(vec3(self.g0) * other.g1);
}

LineAtOrigin anti_scalar_line_at_infinity_geometric_product(AntiScalar self, LineAtInfinity other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

AntiScalar anti_scalar_magnitude_geometric_product(AntiScalar self, Magnitude other) {
    return AntiScalar(self.g0 * other.g0.x);
}

LineAtOrigin anti_scalar_motor_geometric_product(AntiScalar self, Motor other) {
    return LineAtOrigin(vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin anti_scalar_multi_vector_geometric_product(AntiScalar self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0) * vec2(-other.g4.w, other.g0.x), vec3(self.g0) * other.g3, vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_infinity_geometric_product(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0) * other.g2, vec3(0.0) - vec3(self.g0) * other.g1);
}

Origin anti_scalar_plane_geometric_product(AntiScalar self, Plane other) {
    return Origin(0.0 - self.g0 * other.g0.w);
}

PlaneAtOrigin anti_scalar_point_geometric_product(AntiScalar self, Point other) {
    return PlaneAtOrigin(vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

PlaneAtOrigin anti_scalar_point_at_infinity_geometric_product(AntiScalar self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(0.0) - vec3(self.g0) * other.g0);
}

AntiScalar anti_scalar_scalar_geometric_product(AntiScalar self, Scalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector anti_scalar_transflector_geometric_product(AntiScalar self, Transflector other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

LineAtOrigin anti_scalar_translator_geometric_product(AntiScalar self, Translator other) {
    return LineAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Flector flector_anti_scalar_geometric_product(Flector self, AntiScalar other) {
    return Flector(vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0), self.g0.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector flector_flector_geometric_product(Flector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g1.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) - vec2(self.g1.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_flector_at_infinity_geometric_product(Flector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g0.z, other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g0.w, other.g0.z), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_horizon_geometric_product(Flector self, Horizon other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0) + vec2(self.g1.w) * vec2(-other.g0, 0.0), vec4(0.0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0), vec4(0.0));
}

Flector flector_line_geometric_product(Flector self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_line_at_infinity_geometric_product(Flector self, LineAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector flector_line_at_origin_geometric_product(Flector self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_magnitude_geometric_product(Flector self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.x) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.y), self.g0.xyzx * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + self.g1 * vec4(other.g0.x));
}

Flector flector_motor_geometric_product(Flector self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector flector_multi_vector_geometric_product(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g0.w) * vec2(0.0, other.g4.w) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g3.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g3.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g3.z) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g4.w) - vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, 0.0) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, 0.0) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, 0.0) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVector flector_multi_vector_at_infinity_geometric_product(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g1.z, other.g0.y) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g0.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g0.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g1.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z), vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) - vec3(self.g1.w) * other.g1, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z) + vec4(self.g1.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g1.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x));
}

MultiVectorAtOrigin flector_multi_vector_at_origin_geometric_product(Flector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z) + vec2(self.g1.w) * other.g0.yx * vec2(1.0, -1.0), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) - vec3(self.g1.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g1.w) * other.g1);
}

Rotor flector_origin_geometric_product(Flector self, Origin other) {
    return Rotor(self.g0.xyzx * vec4(-other.g0, -other.g0, -other.g0, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0));
}

MultiVector flector_plane_geometric_product(Flector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.x) + vec2(self.g0.y) * vec2(0.0, other.g0.y) + vec2(self.g0.z) * vec2(0.0, other.g0.z) + vec2(self.g0.w) * vec2(0.0, other.g0.w) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) + vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec4(0.0));
}

Rotor flector_plane_at_origin_geometric_product(Flector self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z) + vec4(self.g1.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

MultiVector flector_point_geometric_product(Flector self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.w) * vec2(0.0, -other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_point_at_infinity_geometric_product(Flector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g1.w) * other.g0, vec4(0.0));
}

Flector flector_rotor_geometric_product(Flector self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_scalar_geometric_product(Flector self, Scalar other) {
    return Flector(self.g0 * vec4(other.g0), self.g1 * vec4(other.g0));
}

MultiVector flector_transflector_geometric_product(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g1.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g1.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g1.w) * other.g0, vec4(0.0));
}

Flector flector_translator_geometric_product(Flector self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector flector_at_infinity_anti_scalar_geometric_product(FlectorAtInfinity self, AntiScalar other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0), self.g0.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector flector_at_infinity_flector_geometric_product(FlectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) - vec2(self.g0.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity flector_at_infinity_flector_at_infinity_geometric_product(FlectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity flector_at_infinity_horizon_geometric_product(FlectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector flector_at_infinity_line_geometric_product(FlectorAtInfinity self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

FlectorAtInfinity flector_at_infinity_line_at_infinity_geometric_product(FlectorAtInfinity self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_at_infinity_line_at_origin_geometric_product(FlectorAtInfinity self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_at_infinity_magnitude_geometric_product(FlectorAtInfinity self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.x, other.g0.x, other.g0.x, other.g0.y), self.g0 * vec4(other.g0.y, other.g0.y, other.g0.y, other.g0.x));
}

Flector flector_at_infinity_motor_geometric_product(FlectorAtInfinity self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector flector_at_infinity_multi_vector_geometric_product(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) - vec2(self.g0.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) - vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_geometric_product(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z) + vec2(self.g0.w) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) - vec3(self.g0.w) * other.g1);
}

MultiVectorAtOrigin flector_at_infinity_multi_vector_at_origin_geometric_product(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z) + vec2(self.g0.w) * other.g0.yx * vec2(1.0, -1.0), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) - vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1);
}

Rotor flector_at_infinity_origin_geometric_product(FlectorAtInfinity self, Origin other) {
    return Rotor(vec4(0.0) - self.g0 * vec4(other.g0));
}

MultiVector flector_at_infinity_plane_geometric_product(FlectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.x) + vec2(self.g0.y) * vec2(0.0, other.g0.y) + vec2(self.g0.w, self.g0.z) * vec2(-other.g0.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec4(0.0));
}

Rotor flector_at_infinity_plane_at_origin_geometric_product(FlectorAtInfinity self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

MultiVector flector_at_infinity_point_geometric_product(FlectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g0.z, -other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity flector_at_infinity_point_at_infinity_geometric_product(FlectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g0.w) * other.g0);
}

Flector flector_at_infinity_rotor_geometric_product(FlectorAtInfinity self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

FlectorAtInfinity flector_at_infinity_scalar_geometric_product(FlectorAtInfinity self, Scalar other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector flector_at_infinity_transflector_geometric_product(FlectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g0.w) * other.g0, vec4(0.0));
}

Flector flector_at_infinity_translator_geometric_product(FlectorAtInfinity self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Origin horizon_anti_scalar_geometric_product(Horizon self, AntiScalar other) {
    return Origin(self.g0 * other.g0);
}

MultiVector horizon_flector_geometric_product(Horizon self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity horizon_flector_at_infinity_geometric_product(Horizon self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(-other.g0.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Scalar horizon_horizon_geometric_product(Horizon self, Horizon other) {
    return Scalar(0.0 - self.g0 * other.g0);
}

Transflector horizon_line_geometric_product(Horizon self, Line other) {
    return Transflector(vec3(self.g0) * other.g1, vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity horizon_line_at_infinity_geometric_product(Horizon self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

PlaneAtOrigin horizon_line_at_origin_geometric_product(Horizon self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Flector horizon_magnitude_geometric_product(Horizon self, Magnitude other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.y), vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

Flector horizon_motor_geometric_product(Horizon self, Motor other) {
    return Flector(vec4(self.g0) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector horizon_multi_vector_geometric_product(Horizon self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0) * vec2(other.g4.w, other.g1.w), vec4(self.g0) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(0.0) - vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVectorAtInfinity horizon_multi_vector_at_infinity_geometric_product(Horizon self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0) * other.g2, vec3(0.0) - vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin horizon_multi_vector_at_origin_geometric_product(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0) * other.g2, vec3(self.g0) * other.g1);
}

AntiScalar horizon_origin_geometric_product(Horizon self, Origin other) {
    return AntiScalar(0.0 - self.g0 * other.g0);
}

MultiVector horizon_plane_geometric_product(Horizon self, Plane other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin horizon_plane_at_origin_geometric_product(Horizon self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0) * other.g0);
}

Translator horizon_point_geometric_product(Horizon self, Point other) {
    return Translator(vec4(0.0) - vec4(self.g0) * other.g0);
}

LineAtInfinity horizon_point_at_infinity_geometric_product(Horizon self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0) * other.g0);
}

Flector horizon_rotor_geometric_product(Horizon self, Rotor other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Horizon horizon_scalar_geometric_product(Horizon self, Scalar other) {
    return Horizon(self.g0 * other.g0);
}

MultiVector horizon_transflector_geometric_product(Horizon self, Transflector other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g1.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0) * other.g0, vec4(0.0));
}

Point horizon_translator_geometric_product(Horizon self, Translator other) {
    return Point(vec4(self.g0) * other.g0);
}

LineAtOrigin line_anti_scalar_geometric_product(Line self, AntiScalar other) {
    return LineAtOrigin(self.g1 * vec3(other.g0));
}

Flector line_flector_geometric_product(Line self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

Flector line_flector_at_infinity_geometric_product(Line self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0), vec4(self.g0.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Transflector line_horizon_geometric_product(Line self, Horizon other) {
    return Transflector(self.g1 * vec3(other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0));
}

MultiVector line_line_geometric_product(Line self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector line_line_at_infinity_geometric_product(Line self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Rotor line_line_at_origin_geometric_product(Line self, LineAtOrigin other) {
    return Rotor(vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Line line_magnitude_geometric_product(Line self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.x) + self.g1 * vec3(other.g0.y), self.g1 * vec3(other.g0.x));
}

MultiVector line_motor_geometric_product(Line self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector line_multi_vector_geometric_product(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) - vec2(self.g1.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g1.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g1.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g1.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g1.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g1.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(-other.g4.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g4.w, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g4.w, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVector line_multi_vector_at_infinity_geometric_product(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.y, 0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec4(self.g0.x) * vec4(-other.g0.y, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g0.y, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g0.y, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin line_multi_vector_at_origin_geometric_product(Line self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z), vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin line_origin_geometric_product(Line self, Origin other) {
    return PlaneAtOrigin(self.g1 * vec3(other.g0));
}

Flector line_plane_geometric_product(Line self, Plane other) {
    return Flector(vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector line_plane_at_origin_geometric_product(Line self, PlaneAtOrigin other) {
    return Flector(vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector line_point_geometric_product(Line self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Flector line_point_at_infinity_geometric_product(Line self, PointAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Rotor line_rotor_geometric_product(Line self, Rotor other) {
    return Rotor(vec4(self.g1.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g1.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g1.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Line line_scalar_geometric_product(Line self, Scalar other) {
    return Line(self.g0 * vec3(other.g0), self.g1 * vec3(other.g0));
}

Flector line_transflector_geometric_product(Line self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector line_translator_geometric_product(Line self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + self.g1 * vec3(other.g0.w), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

LineAtOrigin line_at_infinity_anti_scalar_geometric_product(LineAtInfinity self, AntiScalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_infinity_flector_geometric_product(LineAtInfinity self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_at_infinity_flector_at_infinity_geometric_product(LineAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity line_at_infinity_horizon_geometric_product(LineAtInfinity self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector line_at_infinity_line_geometric_product(LineAtInfinity self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity line_at_infinity_line_at_infinity_geometric_product(LineAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Rotor line_at_infinity_line_at_origin_geometric_product(LineAtInfinity self, LineAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Line line_at_infinity_magnitude_geometric_product(LineAtInfinity self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.y), self.g0 * vec3(other.g0.x));
}

MultiVector line_at_infinity_motor_geometric_product(LineAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector line_at_infinity_multi_vector_geometric_product(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_geometric_product(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin line_at_infinity_multi_vector_at_origin_geometric_product(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin line_at_infinity_origin_geometric_product(LineAtInfinity self, Origin other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_infinity_plane_geometric_product(LineAtInfinity self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector line_at_infinity_plane_at_origin_geometric_product(LineAtInfinity self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector line_at_infinity_point_geometric_product(LineAtInfinity self, Point other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_at_infinity_point_at_infinity_geometric_product(LineAtInfinity self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Rotor line_at_infinity_rotor_geometric_product(LineAtInfinity self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtInfinity line_at_infinity_scalar_geometric_product(LineAtInfinity self, Scalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

Flector line_at_infinity_transflector_geometric_product(LineAtInfinity self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector line_at_infinity_translator_geometric_product(LineAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Flector line_at_origin_flector_geometric_product(LineAtOrigin self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0));
}

Flector line_at_origin_flector_at_infinity_geometric_product(LineAtOrigin self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0));
}

PlaneAtOrigin line_at_origin_horizon_geometric_product(LineAtOrigin self, Horizon other) {
    return PlaneAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0));
}

Rotor line_at_origin_line_geometric_product(LineAtOrigin self, Line other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g1.z));
}

Rotor line_at_origin_line_at_infinity_geometric_product(LineAtOrigin self, LineAtInfinity other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

LineAtOrigin line_at_origin_magnitude_geometric_product(LineAtOrigin self, Magnitude other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.x));
}

Rotor line_at_origin_motor_geometric_product(LineAtOrigin self, Motor other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g1.z));
}

MultiVectorAtOrigin line_at_origin_multi_vector_geometric_product(LineAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g1.x, -other.g3.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g3.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g3.z), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_infinity_geometric_product(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

PlaneAtOrigin line_at_origin_plane_geometric_product(LineAtOrigin self, Plane other) {
    return PlaneAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0.w));
}

Flector line_at_origin_point_geometric_product(LineAtOrigin self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0));
}

Flector line_at_origin_point_at_infinity_geometric_product(LineAtOrigin self, PointAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0));
}

LineAtOrigin line_at_origin_scalar_geometric_product(LineAtOrigin self, Scalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_origin_transflector_geometric_product(LineAtOrigin self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0));
}

Rotor line_at_origin_translator_geometric_product(LineAtOrigin self, Translator other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

AntiScalar magnitude_anti_scalar_geometric_product(Magnitude self, AntiScalar other) {
    return AntiScalar(self.g0.x * other.g0);
}

Flector magnitude_flector_geometric_product(Magnitude self, Flector other) {
    return Flector(vec4(self.g0.x) * other.g0 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector magnitude_flector_at_infinity_geometric_product(Magnitude self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * other.g0 * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * other.g0 * vec4(-1.0, -1.0, -1.0, 1.0));
}

Flector magnitude_horizon_geometric_product(Magnitude self, Horizon other) {
    return Flector(vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0));
}

Line magnitude_line_geometric_product(Magnitude self, Line other) {
    return Line(vec3(self.g0.x) * other.g0 + vec3(self.g0.y) * other.g1, vec3(self.g0.x) * other.g1);
}

Line magnitude_line_at_infinity_geometric_product(Magnitude self, LineAtInfinity other) {
    return Line(vec3(self.g0.y) * other.g0, vec3(self.g0.x) * other.g0);
}

LineAtOrigin magnitude_line_at_origin_geometric_product(Magnitude self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.x) * other.g0);
}

Magnitude magnitude_magnitude_geometric_product(Magnitude self, Magnitude other) {
    return Magnitude(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x));
}

Motor magnitude_motor_geometric_product(Magnitude self, Motor other) {
    return Motor(vec4(self.g0.x) * other.g0 + vec4(self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(self.g0.x) * other.g1);
}

MultiVector magnitude_multi_vector_geometric_product(Magnitude self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g4.w), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g3, vec3(self.g0.x) * other.g3, vec4(self.g0.x) * other.g4 + vec4(self.g0.y) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0));
}

MultiVector magnitude_multi_vector_at_infinity_geometric_product(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 * vec2(other.g0.x), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g0.y), vec3(self.g0.y) * other.g2, vec3(self.g0.x) * other.g2, vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, other.g0.y));
}

MultiVectorAtOrigin magnitude_multi_vector_at_origin_geometric_product(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1, vec3(self.g0.x) * other.g2);
}

Origin magnitude_origin_geometric_product(Magnitude self, Origin other) {
    return Origin(self.g0.x * other.g0);
}

Flector magnitude_plane_geometric_product(Magnitude self, Plane other) {
    return Flector(vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec4(self.g0.x) * other.g0);
}

PlaneAtOrigin magnitude_plane_at_origin_geometric_product(Magnitude self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * other.g0);
}

Flector magnitude_point_geometric_product(Magnitude self, Point other) {
    return Flector(vec4(self.g0.x) * other.g0, vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Transflector magnitude_point_at_infinity_geometric_product(Magnitude self, PointAtInfinity other) {
    return Transflector(vec3(self.g0.x) * other.g0, vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Rotor magnitude_rotor_geometric_product(Magnitude self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0);
}

Magnitude magnitude_scalar_geometric_product(Magnitude self, Scalar other) {
    return Magnitude(self.g0 * vec2(other.g0));
}

Flector magnitude_transflector_geometric_product(Magnitude self, Transflector other) {
    return Flector(vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Motor magnitude_translator_geometric_product(Magnitude self, Translator other) {
    return Motor(vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * other.g0, vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtOrigin motor_anti_scalar_geometric_product(Motor self, AntiScalar other) {
    return LineAtOrigin(self.g1 * vec3(other.g0));
}

Flector motor_flector_geometric_product(Motor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

Flector motor_flector_at_infinity_geometric_product(Motor self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0), vec4(self.g0.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Flector motor_horizon_geometric_product(Motor self, Horizon other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0, other.g0, other.g0, 0.0), self.g0.xyzx * vec4(-other.g0, -other.g0, -other.g0, 0.0));
}

MultiVector motor_line_geometric_product(Motor self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector motor_line_at_infinity_geometric_product(Motor self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Rotor motor_line_at_origin_geometric_product(Motor self, LineAtOrigin other) {
    return Rotor(vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Motor motor_magnitude_geometric_product(Motor self, Magnitude other) {
    return Motor(self.g0 * vec4(other.g0.x) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0), self.g1 * vec3(other.g0.x));
}

MultiVector motor_motor_geometric_product(Motor self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector motor_multi_vector_geometric_product(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x) - vec2(self.g1.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g1.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g1.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g4.w) + vec4(self.g1.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g0.w) * other.g3 + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g1.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g1.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(-other.g4.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g4.w, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g4.w, 0.0) + vec4(self.g0.w) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVector motor_multi_vector_at_infinity_geometric_product(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.y, 0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2, vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec4(self.g0.x) * vec4(-other.g0.y, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g0.y, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g0.y, 0.0) + vec4(self.g0.w) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin motor_multi_vector_at_origin_geometric_product(Motor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z), vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin motor_origin_geometric_product(Motor self, Origin other) {
    return PlaneAtOrigin(self.g1 * vec3(other.g0));
}

Flector motor_plane_geometric_product(Motor self, Plane other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), self.g0.xyzx * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector motor_plane_at_origin_geometric_product(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector motor_point_geometric_product(Motor self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Flector motor_point_at_infinity_geometric_product(Motor self, PointAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Rotor motor_rotor_geometric_product(Motor self, Rotor other) {
    return Rotor(vec4(self.g1.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g1.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g1.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Motor motor_scalar_geometric_product(Motor self, Scalar other) {
    return Motor(self.g0 * vec4(other.g0), self.g1 * vec3(other.g0));
}

Flector motor_transflector_geometric_product(Motor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector motor_translator_geometric_product(Motor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtOrigin multi_vector_anti_scalar_geometric_product(MultiVector self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0) + vec2(self.g4.w) * vec2(other.g0, 0.0), self.g3 * vec3(other.g0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

MultiVector multi_vector_flector_geometric_product(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.w) * vec2(0.0, other.g1.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z) - vec2(self.g4.w) * vec2(other.g1.w, other.g0.w), vec4(self.g0.x) * other.g0 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g3.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(self.g1.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g3.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g3.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g3.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

MultiVector multi_vector_flector_at_infinity_geometric_product(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z, self.g1.w) * vec2(other.g0.z, other.g0.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) - vec2(self.g4.w, self.g4.z) * vec2(other.g0.w, other.g0.z), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * other.g0 * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g3.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0), vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w) - vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * other.g0 * vec4(-1.0, -1.0, -1.0, 1.0) + vec4(self.g2.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVector multi_vector_horizon_geometric_product(MultiVector self, Horizon other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, other.g0) + vec2(self.g4.w) * vec2(-other.g0, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0) + vec4(self.g3.x, self.g3.y, self.g3.z, self.g3.x) * vec4(other.g0, other.g0, other.g0, 0.0), vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0) + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0));
}

MultiVector multi_vector_line_geometric_product(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) - vec2(self.g3.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g3.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g3.z) * vec2(other.g1.z, other.g0.z), vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g4.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.x) * other.g0 + vec3(self.g0.y) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g1 + vec3(self.g3.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g3.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g3.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_line_at_infinity_geometric_product(MultiVector self, LineAtInfinity other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_line_at_origin_geometric_product(MultiVector self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g4.w) * other.g0);
}

MultiVector multi_vector_magnitude_geometric_product(MultiVector self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x), self.g1 * vec4(other.g0.x) + vec4(self.g4.w) * vec4(0.0, 0.0, 0.0, other.g0.y), self.g2 * vec3(other.g0.x) + self.g3 * vec3(other.g0.y), self.g3 * vec3(other.g0.x), self.g1.xyzx * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + self.g4 * vec4(other.g0.x));
}

MultiVector multi_vector_motor_geometric_product(MultiVector self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) - vec2(self.g3.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g3.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g3.z) * vec2(other.g1.z, other.g0.z), vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g4.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g4.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g0.y) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g3.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * other.g1 + vec3(self.g3.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g3.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g3.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_multi_vector_geometric_product(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g1.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g1.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g1.w) * vec2(0.0, other.g4.w) + vec2(self.g2.x) * vec2(0.0, -other.g3.x) + vec2(self.g2.y) * vec2(0.0, -other.g3.y) + vec2(self.g2.z) * vec2(0.0, -other.g3.z) - vec2(self.g3.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g3.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g3.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g4.x) * vec2(0.0, -other.g1.x) + vec2(self.g4.y) * vec2(0.0, -other.g1.y) + vec2(self.g4.z) * vec2(0.0, -other.g1.z) - vec2(self.g4.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g4.w) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g3.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g3.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g3.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g3.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g3.y) + vec4(self.g4.z) * vec4(0.0, 0.0, 0.0, -other.g3.z) + vec4(self.g4.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g3 + vec3(self.g1.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g2.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g2.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g3.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g3.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g3.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g4.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g4.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g4.z) * vec3(other.g1.y, -other.g1.x, other.g4.w) - vec3(self.g4.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * other.g3 + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g3.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g3.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g3.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) - vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * other.g4 + vec4(self.g0.y) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0) + vec4(self.g2.x) * vec4(-other.g4.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g2.y) * vec4(other.g1.z, -other.g4.w, -other.g1.x, 0.0) + vec4(self.g2.z) * vec4(-other.g1.y, other.g1.x, -other.g4.w, 0.0) + vec4(self.g3.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g3.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g3.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g4.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, 0.0) + vec4(self.g4.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, 0.0) + vec4(self.g4.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, 0.0) + vec4(self.g4.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVector multi_vector_multi_vector_at_infinity_geometric_product(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 * vec2(other.g0.x) + vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z, self.g1.w) * vec2(other.g1.z, other.g0.y) + vec2(self.g2.x) * vec2(0.0, -other.g2.x) + vec2(self.g2.y) * vec2(0.0, -other.g2.y) + vec2(self.g2.z) * vec2(0.0, -other.g2.z) + vec2(self.g3.x) * vec2(-other.g2.x, 0.0) + vec2(self.g3.y) * vec2(-other.g2.y, 0.0) + vec2(self.g3.z) * vec2(-other.g2.z, 0.0) + vec2(self.g4.x) * vec2(0.0, -other.g1.x) + vec2(self.g4.y) * vec2(0.0, -other.g1.y) - vec2(self.g4.w, self.g4.z) * vec2(other.g0.y, other.g1.z), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g0.y) + vec4(self.g1.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g1.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g3.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g3.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + vec4(self.g3.z) * vec4(other.g1.y, -other.g1.x, other.g0.y, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g4.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z), vec3(self.g0.y) * other.g2 + vec3(self.g1.w) * other.g1 + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g4.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g4.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g4.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) + vec3(self.g3.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g3.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g3.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) - vec3(self.g4.w) * other.g1, vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, other.g0.y) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g1.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z) + vec4(self.g2.x) * vec4(-other.g0.y, -other.g1.z, other.g1.y, 0.0) + vec4(self.g2.y) * vec4(other.g1.z, -other.g0.y, -other.g1.x, 0.0) + vec4(self.g2.z) * vec4(-other.g1.y, other.g1.x, -other.g0.y, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g4.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g4.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g4.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_multi_vector_at_origin_geometric_product(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g1.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g1.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g1.z) * vec2(-other.g1.z, other.g2.z) - vec2(self.g3.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g3.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g3.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g4.w) * other.g0.yx * vec2(1.0, -1.0), vec3(self.g0.x) * other.g1 + vec3(self.g1.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) + vec3(self.g3.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g3.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g3.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) - vec3(self.g4.w) * other.g2, vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g3.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g3.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g3.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g4.w) * other.g1);
}

MultiVectorAtOrigin multi_vector_origin_geometric_product(MultiVector self, Origin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0, 0.0) + vec2(self.g4.w) * vec2(0.0, -other.g0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), self.g3 * vec3(other.g0));
}

MultiVector multi_vector_plane_geometric_product(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z) + vec2(self.g1.w) * vec2(0.0, other.g0.w) + vec2(self.g4.w) * vec2(-other.g0.w, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g3.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0) + vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w) - vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w), vec4(self.g0.x) * other.g0 + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g3.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g3.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_plane_at_origin_geometric_product(MultiVector self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g4.w) * other.g0, vec3(self.g0.x) * other.g0 + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_point_geometric_product(MultiVector self, Point other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.w) * vec2(0.0, -other.g0.w), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g3.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVector multi_vector_point_at_infinity_geometric_product(MultiVector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g3.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g4.w) * other.g0, vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_rotor_geometric_product(MultiVector self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g3.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVector multi_vector_scalar_geometric_product(MultiVector self, Scalar other) {
    return MultiVector(self.g0 * vec2(other.g0), self.g1 * vec4(other.g0), self.g2 * vec3(other.g0), self.g3 * vec3(other.g0), self.g4 * vec4(other.g0));
}

MultiVector multi_vector_transflector_geometric_product(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.w) * vec2(0.0, other.g1.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) - vec2(self.g4.w, self.g4.z) * vec2(other.g1.w, other.g0.z), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g1.w) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g3.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g4.w) * other.g0, vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g3.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g3.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g3.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector multi_vector_translator_geometric_product(MultiVector self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g4.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g4.w) * other.g0, vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0) + self.g3 * vec3(other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_anti_scalar_geometric_product(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(other.g0), self.g2 * vec3(other.g0), self.g1 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_flector_geometric_product(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.y) * vec2(other.g1.w, other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(0.0) - vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_geometric_product(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(-other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_horizon_geometric_product(MultiVectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(-other.g0), self.g2 * vec3(other.g0), vec3(0.0) - self.g1 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_line_geometric_product(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g2.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g2.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g2.z) * vec2(other.g1.z, other.g0.z), vec4(self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_geometric_product(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_line_at_origin_geometric_product(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_infinity_magnitude_geometric_product(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * other.g0, vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), self.g2 * vec3(other.g0.y), self.g2 * vec3(other.g0.x), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVector multi_vector_at_infinity_motor_geometric_product(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) - vec2(self.g2.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g2.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g2.z) * vec2(other.g1.z, other.g0.z), vec4(self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z));
}

MultiVector multi_vector_at_infinity_multi_vector_geometric_product(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 - vec2(self.g0.y) * vec2(other.g4.w, other.g1.w) + vec2(self.g1.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g1.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g1.z) * vec2(other.g1.z, other.g4.z) - vec2(self.g2.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g2.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g2.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g2.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g2.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * other.g2 - vec3(self.g0.y) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g2.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * other.g3 - vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g2.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g2.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g2.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * other.g4 + vec4(self.g0.y) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x) + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g2.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_geometric_product(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * other.g0.yx * vec2(-1.0, 1.0) + vec2(self.g1.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g2.z) - vec2(self.g2.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * other.g2 - vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_infinity_multi_vector_at_origin_geometric_product(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * other.g0.yx * vec2(1.0, -1.0) + vec2(self.g1.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g1.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g1.z) * vec2(-other.g1.z, other.g2.z) - vec2(self.g2.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * other.g1 - vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_infinity_origin_geometric_product(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), vec3(0.0) - self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_plane_geometric_product(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0.y) * vec2(-other.g0.w, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - self.g1 * vec3(other.g0.w), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_plane_at_origin_geometric_product(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_infinity_point_geometric_product(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, -other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec3(0.0) - self.g1 * vec3(other.g0.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_geometric_product(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_rotor_geometric_product(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_scalar_geometric_product(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_transflector_geometric_product(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0.y) * vec2(-other.g1.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(0.0) - vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector multi_vector_at_infinity_translator_geometric_product(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g2 * vec3(other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_geometric_product(MultiVectorAtOrigin self, Flector other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g1.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g1.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_at_infinity_geometric_product(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtOrigin multi_vector_at_origin_horizon_geometric_product(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g0), self.g2 * vec3(other.g0), vec3(0.0) - self.g1 * vec3(other.g0));
}

MultiVectorAtOrigin multi_vector_at_origin_line_geometric_product(MultiVectorAtOrigin self, Line other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec3(self.g0.x) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_infinity_geometric_product(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_magnitude_geometric_product(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0.x), self.g1 * vec3(other.g0.x), self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_motor_geometric_product(MultiVectorAtOrigin self, Motor other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec3(self.g0.x) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_geometric_product(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0.x, other.g4.w) + vec2(self.g0.y) * vec2(-other.g4.w, other.g0.x) + vec2(self.g1.x) * vec2(other.g1.x, -other.g3.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g3.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g3.z) - vec2(self.g2.x) * vec2(other.g3.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g3.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g3.z, other.g1.z), vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g0.y) * other.g3 + vec3(self.g1.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g1.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g1.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g4.w), vec3(self.g0.x) * other.g3 - vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g2.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g2.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g2.z) * vec3(other.g3.y, -other.g3.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_infinity_geometric_product(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * other.g0.yx * vec2(-1.0, 1.0) + vec2(self.g1.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g2.z) - vec2(self.g2.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * other.g2 - vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_plane_geometric_product(MultiVectorAtOrigin self, Plane other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g0.w), self.g2 * vec3(other.g0.w), vec3(0.0) - self.g1 * vec3(other.g0.w));
}

MultiVectorAtOrigin multi_vector_at_origin_point_geometric_product(MultiVectorAtOrigin self, Point other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_point_at_infinity_geometric_product(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_scalar_geometric_product(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVectorAtOrigin multi_vector_at_origin_transflector_geometric_product(MultiVectorAtOrigin self, Transflector other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g1.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g1.w), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w));
}

MultiVectorAtOrigin multi_vector_at_origin_translator_geometric_product(MultiVectorAtOrigin self, Translator other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Rotor origin_flector_geometric_product(Origin self, Flector other) {
    return Rotor(vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w));
}

Rotor origin_flector_at_infinity_geometric_product(Origin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0) * other.g0);
}

AntiScalar origin_horizon_geometric_product(Origin self, Horizon other) {
    return AntiScalar(self.g0 * other.g0);
}

PlaneAtOrigin origin_line_geometric_product(Origin self, Line other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g1);
}

PlaneAtOrigin origin_line_at_infinity_geometric_product(Origin self, LineAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Origin origin_magnitude_geometric_product(Origin self, Magnitude other) {
    return Origin(self.g0 * other.g0.x);
}

PlaneAtOrigin origin_motor_geometric_product(Origin self, Motor other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin origin_multi_vector_geometric_product(Origin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0) * vec2(other.g0.x, other.g4.w), vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0) * other.g3);
}

MultiVectorAtOrigin origin_multi_vector_at_infinity_geometric_product(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

AntiScalar origin_plane_geometric_product(Origin self, Plane other) {
    return AntiScalar(self.g0 * other.g0.w);
}

LineAtOrigin origin_point_geometric_product(Origin self, Point other) {
    return LineAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtOrigin origin_point_at_infinity_geometric_product(Origin self, PointAtInfinity other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Origin origin_scalar_geometric_product(Origin self, Scalar other) {
    return Origin(self.g0 * other.g0);
}

Rotor origin_transflector_geometric_product(Origin self, Transflector other) {
    return Rotor(vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w));
}

PlaneAtOrigin origin_translator_geometric_product(Origin self, Translator other) {
    return PlaneAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Origin plane_anti_scalar_geometric_product(Plane self, AntiScalar other) {
    return Origin(self.g0.w * other.g0);
}

MultiVector plane_flector_geometric_product(Plane self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) - vec2(self.g0.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector plane_flector_at_infinity_geometric_product(Plane self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) - vec2(self.g0.w, self.g0.z) * vec2(other.g0.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector plane_horizon_geometric_product(Plane self, Horizon other) {
    return MultiVector(vec2(self.g0.w) * vec2(-other.g0, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0), vec3(0.0), vec4(0.0));
}

Flector plane_line_geometric_product(Plane self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector plane_line_at_infinity_geometric_product(Plane self, LineAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

PlaneAtOrigin plane_line_at_origin_geometric_product(Plane self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.w) * other.g0);
}

Flector plane_magnitude_geometric_product(Plane self, Magnitude other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.y), self.g0 * vec4(other.g0.x));
}

Flector plane_motor_geometric_product(Plane self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector plane_multi_vector_geometric_product(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g0.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g3.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g3.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g4.w) - vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, 0.0) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, 0.0) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, 0.0) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVector plane_multi_vector_at_infinity_geometric_product(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) - vec2(self.g0.w, self.g0.z) * vec2(other.g0.y, other.g1.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(0.0) - vec3(self.g0.w) * other.g1, vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g0.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x));
}

MultiVectorAtOrigin plane_multi_vector_at_origin_geometric_product(Plane self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.w) * other.g0.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0.w) * other.g2, vec3(self.g0.w) * other.g1);
}

AntiScalar plane_origin_geometric_product(Plane self, Origin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0);
}

MultiVector plane_plane_geometric_product(Plane self, Plane other) {
    return MultiVector(vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin plane_plane_at_origin_geometric_product(Plane self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0.w) * other.g0);
}

Motor plane_point_geometric_product(Plane self, Point other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Motor plane_point_at_infinity_geometric_product(Plane self, PointAtInfinity other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z), vec3(0.0) - vec3(self.g0.w) * other.g0);
}

Flector plane_rotor_geometric_product(Plane self, Rotor other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Plane plane_scalar_geometric_product(Plane self, Scalar other) {
    return Plane(self.g0 * vec4(other.g0));
}

MultiVector plane_transflector_geometric_product(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) - vec2(self.g0.w, self.g0.z) * vec2(other.g1.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0.w) * other.g0, vec4(0.0));
}

Flector plane_translator_geometric_product(Plane self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Rotor plane_at_origin_flector_geometric_product(PlaneAtOrigin self, Flector other) {
    return Rotor(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g0.z));
}

Rotor plane_at_origin_flector_at_infinity_geometric_product(PlaneAtOrigin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtOrigin plane_at_origin_horizon_geometric_product(PlaneAtOrigin self, Horizon other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Flector plane_at_origin_line_geometric_product(PlaneAtOrigin self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0));
}

Flector plane_at_origin_line_at_infinity_geometric_product(PlaneAtOrigin self, LineAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

PlaneAtOrigin plane_at_origin_magnitude_geometric_product(PlaneAtOrigin self, Magnitude other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0.x));
}

Flector plane_at_origin_motor_geometric_product(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_geometric_product(PlaneAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g1.z), vec3(self.g0.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g4.w), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_infinity_geometric_product(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

LineAtOrigin plane_at_origin_plane_geometric_product(PlaneAtOrigin self, Plane other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.w));
}

Rotor plane_at_origin_point_geometric_product(PlaneAtOrigin self, Point other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Rotor plane_at_origin_point_at_infinity_geometric_product(PlaneAtOrigin self, PointAtInfinity other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

PlaneAtOrigin plane_at_origin_scalar_geometric_product(PlaneAtOrigin self, Scalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

Rotor plane_at_origin_transflector_geometric_product(PlaneAtOrigin self, Transflector other) {
    return Rotor(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g0.z));
}

Flector plane_at_origin_translator_geometric_product(PlaneAtOrigin self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

PlaneAtOrigin point_anti_scalar_geometric_product(Point self, AntiScalar other) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

MultiVector point_flector_geometric_product(Point self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g1.w), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

MultiVector point_flector_at_infinity_geometric_product(Point self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w), vec4(0.0));
}

Translator point_horizon_geometric_product(Point self, Horizon other) {
    return Translator(self.g0 * vec4(-other.g0));
}

Flector point_line_geometric_product(Point self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

Transflector point_line_at_infinity_geometric_product(Point self, LineAtInfinity other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Flector point_line_at_origin_geometric_product(Point self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector point_magnitude_geometric_product(Point self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.x), self.g0.xyzx * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

Flector point_motor_geometric_product(Point self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector point_multi_vector_geometric_product(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g0.w) * vec2(0.0, other.g4.w), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0));
}

MultiVector point_multi_vector_at_infinity_geometric_product(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g1.z, other.g0.y), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g0.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z));
}

MultiVectorAtOrigin point_multi_vector_at_origin_geometric_product(Point self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

LineAtOrigin point_origin_geometric_product(Point self, Origin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Motor point_plane_geometric_product(Point self, Plane other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w));
}

Rotor point_plane_at_origin_geometric_product(Point self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

MultiVector point_point_geometric_product(Point self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVector point_point_at_infinity_geometric_product(Point self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

Flector point_rotor_geometric_product(Point self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0));
}

Point point_scalar_geometric_product(Point self, Scalar other) {
    return Point(self.g0 * vec4(other.g0));
}

MultiVector point_transflector_geometric_product(Point self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g1.w), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

Transflector point_translator_geometric_product(Point self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PlaneAtOrigin point_at_infinity_anti_scalar_geometric_product(PointAtInfinity self, AntiScalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

MultiVector point_at_infinity_flector_geometric_product(PointAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

MultiVectorAtInfinity point_at_infinity_flector_at_infinity_geometric_product(PointAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

LineAtInfinity point_at_infinity_horizon_geometric_product(PointAtInfinity self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0));
}

Flector point_at_infinity_line_geometric_product(PointAtInfinity self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity point_at_infinity_line_at_infinity_geometric_product(PointAtInfinity self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector point_at_infinity_line_at_origin_geometric_product(PointAtInfinity self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector point_at_infinity_magnitude_geometric_product(PointAtInfinity self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.x), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

Flector point_at_infinity_motor_geometric_product(PointAtInfinity self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z));
}

MultiVector point_at_infinity_multi_vector_geometric_product(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_geometric_product(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVectorAtOrigin point_at_infinity_multi_vector_at_origin_geometric_product(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

LineAtOrigin point_at_infinity_origin_geometric_product(PointAtInfinity self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0));
}

Motor point_at_infinity_plane_geometric_product(PointAtInfinity self, Plane other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z), vec3(0.0) - self.g0 * vec3(other.g0.w));
}

Rotor point_at_infinity_plane_at_origin_geometric_product(PointAtInfinity self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

MultiVector point_at_infinity_point_geometric_product(PointAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(0.0) - self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity point_at_infinity_point_at_infinity_geometric_product(PointAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector point_at_infinity_rotor_geometric_product(PointAtInfinity self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0));
}

PointAtInfinity point_at_infinity_scalar_geometric_product(PointAtInfinity self, Scalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector point_at_infinity_transflector_geometric_product(PointAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

Transflector point_at_infinity_translator_geometric_product(PointAtInfinity self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Flector rotor_flector_geometric_product(Rotor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector rotor_flector_at_infinity_geometric_product(Rotor self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec4(self.g0.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector rotor_horizon_geometric_product(Rotor self, Horizon other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0), self.g0.xyzx * vec4(-other.g0, -other.g0, -other.g0, 0.0));
}

Rotor rotor_line_geometric_product(Rotor self, Line other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

Rotor rotor_line_at_infinity_geometric_product(Rotor self, LineAtInfinity other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Rotor rotor_magnitude_geometric_product(Rotor self, Magnitude other) {
    return Rotor(self.g0 * vec4(other.g0.x));
}

Rotor rotor_motor_geometric_product(Rotor self, Motor other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVectorAtOrigin rotor_multi_vector_geometric_product(Rotor self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g1.x, -other.g3.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g3.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g3.z) + vec2(self.g0.w) * vec2(-other.g4.w, other.g0.x), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g0.w) * other.g3, vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

MultiVectorAtOrigin rotor_multi_vector_at_infinity_geometric_product(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z) + vec2(self.g0.w) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) - vec3(self.g0.w) * other.g1);
}

Flector rotor_plane_geometric_product(Rotor self, Plane other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), self.g0.xyzx * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0));
}

Flector rotor_point_geometric_product(Rotor self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector rotor_point_at_infinity_geometric_product(Rotor self, PointAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Rotor rotor_scalar_geometric_product(Rotor self, Scalar other) {
    return Rotor(self.g0 * vec4(other.g0));
}

Flector rotor_transflector_geometric_product(Rotor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Rotor rotor_translator_geometric_product(Rotor self, Translator other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

AntiScalar scalar_anti_scalar_geometric_product(Scalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector scalar_flector_geometric_product(Scalar self, Flector other) {
    return Flector(vec4(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

FlectorAtInfinity scalar_flector_at_infinity_geometric_product(Scalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

Horizon scalar_horizon_geometric_product(Scalar self, Horizon other) {
    return Horizon(self.g0 * other.g0);
}

Line scalar_line_geometric_product(Scalar self, Line other) {
    return Line(vec3(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

LineAtInfinity scalar_line_at_infinity_geometric_product(Scalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtOrigin scalar_line_at_origin_geometric_product(Scalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Magnitude scalar_magnitude_geometric_product(Scalar self, Magnitude other) {
    return Magnitude(vec2(self.g0) * other.g0);
}

Motor scalar_motor_geometric_product(Scalar self, Motor other) {
    return Motor(vec4(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

MultiVector scalar_multi_vector_geometric_product(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0) * other.g0, vec4(self.g0) * other.g1, vec3(self.g0) * other.g2, vec3(self.g0) * other.g3, vec4(self.g0) * other.g4);
}

MultiVectorAtInfinity scalar_multi_vector_at_infinity_geometric_product(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

MultiVectorAtOrigin scalar_multi_vector_at_origin_geometric_product(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Origin scalar_origin_geometric_product(Scalar self, Origin other) {
    return Origin(self.g0 * other.g0);
}

Plane scalar_plane_geometric_product(Scalar self, Plane other) {
    return Plane(vec4(self.g0) * other.g0);
}

PlaneAtOrigin scalar_plane_at_origin_geometric_product(Scalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Point scalar_point_geometric_product(Scalar self, Point other) {
    return Point(vec4(self.g0) * other.g0);
}

PointAtInfinity scalar_point_at_infinity_geometric_product(Scalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Rotor scalar_rotor_geometric_product(Scalar self, Rotor other) {
    return Rotor(vec4(self.g0) * other.g0);
}

Scalar scalar_scalar_geometric_product(Scalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Transflector scalar_transflector_geometric_product(Scalar self, Transflector other) {
    return Transflector(vec3(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

Translator scalar_translator_geometric_product(Scalar self, Translator other) {
    return Translator(vec4(self.g0) * other.g0);
}

Flector transflector_anti_scalar_geometric_product(Transflector self, AntiScalar other) {
    return Flector(vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector transflector_flector_geometric_product(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) - vec2(self.g1.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) + vec3(self.g1.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_flector_at_infinity_geometric_product(Transflector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g0.w, other.g0.z), vec4(0.0), vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_horizon_geometric_product(Transflector self, Horizon other) {
    return MultiVector(vec2(self.g1.w) * vec2(-other.g0, 0.0), vec4(0.0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec3(0.0) - self.g0 * vec3(other.g0), vec4(0.0));
}

Flector transflector_line_geometric_product(Transflector self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector transflector_line_at_infinity_geometric_product(Transflector self, LineAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector transflector_line_at_origin_geometric_product(Transflector self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector transflector_magnitude_geometric_product(Transflector self, Magnitude other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.y), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + self.g1 * vec4(other.g0.x));
}

Flector transflector_motor_geometric_product(Transflector self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector transflector_multi_vector_geometric_product(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g3.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g3.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g3.z) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g1.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g4.w) - vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, 0.0) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, 0.0) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, 0.0) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVector transflector_multi_vector_at_infinity_geometric_product(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g0.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.x, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g1.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z), vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) - vec3(self.g1.w) * other.g1, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g1.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x));
}

MultiVectorAtOrigin transflector_multi_vector_at_origin_geometric_product(Transflector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z) + vec2(self.g1.w) * other.g0.yx * vec2(1.0, -1.0), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) - vec3(self.g1.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g1.w) * other.g1);
}

Rotor transflector_origin_geometric_product(Transflector self, Origin other) {
    return Rotor(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0));
}

MultiVector transflector_plane_geometric_product(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.x) + vec2(self.g0.y) * vec2(0.0, other.g0.y) + vec2(self.g0.z) * vec2(0.0, other.g0.z) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) + vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - self.g0 * vec3(other.g0.w), vec4(0.0));
}

Rotor transflector_plane_at_origin_geometric_product(Transflector self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z) + vec4(self.g1.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

MultiVector transflector_point_geometric_product(Transflector self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.w) * vec2(0.0, -other.g0.w), vec4(0.0), vec3(0.0) - self.g0 * vec3(other.g0.w) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_point_at_infinity_geometric_product(Transflector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g1.w) * other.g0, vec4(0.0));
}

Flector transflector_rotor_geometric_product(Transflector self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Transflector transflector_scalar_geometric_product(Transflector self, Scalar other) {
    return Transflector(self.g0 * vec3(other.g0), self.g1 * vec4(other.g0));
}

MultiVector transflector_transflector_geometric_product(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g1.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g1.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g1.w) * other.g0, vec4(0.0));
}

Flector transflector_translator_geometric_product(Transflector self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

LineAtOrigin translator_anti_scalar_geometric_product(Translator self, AntiScalar other) {
    return LineAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector translator_flector_geometric_product(Translator self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector translator_flector_at_infinity_geometric_product(Translator self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g0.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, -1.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) - self.g0.wwwz * other.g0.xyzz);
}

Point translator_horizon_geometric_product(Translator self, Horizon other) {
    return Point(self.g0 * vec4(other.g0));
}

MultiVector translator_line_geometric_product(Translator self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector translator_line_at_infinity_geometric_product(Translator self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Rotor translator_line_at_origin_geometric_product(Translator self, LineAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Motor translator_magnitude_geometric_product(Translator self, Magnitude other) {
    return Motor(self.g0 * vec4(other.g0.y, other.g0.y, other.g0.y, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x));
}

MultiVector translator_motor_geometric_product(Translator self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector translator_multi_vector_geometric_product(Translator self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g4.w), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g3, vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0));
}

MultiVector translator_multi_vector_at_infinity_geometric_product(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g2.z, other.g0.x), vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g0.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, -other.g0.y), vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) - self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, other.g1.z));
}

MultiVectorAtOrigin translator_multi_vector_at_origin_geometric_product(Translator self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin translator_origin_geometric_product(Translator self, Origin other) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector translator_plane_geometric_product(Translator self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector translator_plane_at_origin_geometric_product(Translator self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector translator_point_geometric_product(Translator self, Point other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Transflector translator_point_at_infinity_geometric_product(Translator self, PointAtInfinity other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) - self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.z));
}

Rotor translator_rotor_geometric_product(Translator self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Translator translator_scalar_geometric_product(Translator self, Scalar other) {
    return Translator(self.g0 * vec4(other.g0));
}

Flector translator_transflector_geometric_product(Translator self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

MultiVector translator_translator_geometric_product(Translator self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Flector anti_scalar_flector_wedge_dot(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector anti_scalar_flector_at_infinity_wedge_dot(AntiScalar self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec4(self.g0) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Origin anti_scalar_horizon_wedge_dot(AntiScalar self, Horizon other) {
    return Origin(0.0 - self.g0 * other.g0);
}

LineAtOrigin anti_scalar_line_wedge_dot(AntiScalar self, Line other) {
    return LineAtOrigin(vec3(self.g0) * other.g1);
}

LineAtOrigin anti_scalar_line_at_infinity_wedge_dot(AntiScalar self, LineAtInfinity other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

AntiScalar anti_scalar_magnitude_wedge_dot(AntiScalar self, Magnitude other) {
    return AntiScalar(self.g0 * other.g0.x);
}

LineAtOrigin anti_scalar_motor_wedge_dot(AntiScalar self, Motor other) {
    return LineAtOrigin(vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin anti_scalar_multi_vector_wedge_dot(AntiScalar self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0) * vec2(-other.g4.w, other.g0.x), vec3(self.g0) * other.g3, vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_infinity_wedge_dot(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0) * other.g2, vec3(0.0) - vec3(self.g0) * other.g1);
}

Origin anti_scalar_plane_wedge_dot(AntiScalar self, Plane other) {
    return Origin(0.0 - self.g0 * other.g0.w);
}

PlaneAtOrigin anti_scalar_point_wedge_dot(AntiScalar self, Point other) {
    return PlaneAtOrigin(vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

PlaneAtOrigin anti_scalar_point_at_infinity_wedge_dot(AntiScalar self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(0.0) - vec3(self.g0) * other.g0);
}

AntiScalar anti_scalar_scalar_wedge_dot(AntiScalar self, Scalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector anti_scalar_transflector_wedge_dot(AntiScalar self, Transflector other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

LineAtOrigin anti_scalar_translator_wedge_dot(AntiScalar self, Translator other) {
    return LineAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Flector flector_anti_scalar_wedge_dot(Flector self, AntiScalar other) {
    return Flector(vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0), self.g0.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector flector_flector_wedge_dot(Flector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g1.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) - vec2(self.g1.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_flector_at_infinity_wedge_dot(Flector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g0.z, other.g0.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g0.w, other.g0.z), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_horizon_wedge_dot(Flector self, Horizon other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0) + vec2(self.g1.w) * vec2(-other.g0, 0.0), vec4(0.0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0), vec4(0.0));
}

Flector flector_line_wedge_dot(Flector self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_line_at_infinity_wedge_dot(Flector self, LineAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector flector_line_at_origin_wedge_dot(Flector self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_magnitude_wedge_dot(Flector self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.x) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.y), self.g0.xyzx * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + self.g1 * vec4(other.g0.x));
}

Flector flector_motor_wedge_dot(Flector self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector flector_multi_vector_wedge_dot(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g0.w) * vec2(0.0, other.g4.w) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g3.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g3.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g3.z) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g4.w) - vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, 0.0) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, 0.0) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, 0.0) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVector flector_multi_vector_at_infinity_wedge_dot(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g1.z, other.g0.y) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g0.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g0.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g1.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z), vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) - vec3(self.g1.w) * other.g1, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z) + vec4(self.g1.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g1.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x));
}

MultiVectorAtOrigin flector_multi_vector_at_origin_wedge_dot(Flector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z) + vec2(self.g1.w) * other.g0.yx * vec2(1.0, -1.0), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) - vec3(self.g1.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g1.w) * other.g1);
}

Rotor flector_origin_wedge_dot(Flector self, Origin other) {
    return Rotor(self.g0.xyzx * vec4(-other.g0, -other.g0, -other.g0, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0));
}

MultiVector flector_plane_wedge_dot(Flector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.x) + vec2(self.g0.y) * vec2(0.0, other.g0.y) + vec2(self.g0.z) * vec2(0.0, other.g0.z) + vec2(self.g0.w) * vec2(0.0, other.g0.w) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) + vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec4(0.0));
}

Rotor flector_plane_at_origin_wedge_dot(Flector self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z) + vec4(self.g1.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

MultiVector flector_point_wedge_dot(Flector self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.w) * vec2(0.0, -other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_point_at_infinity_wedge_dot(Flector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g1.w) * other.g0, vec4(0.0));
}

Flector flector_rotor_wedge_dot(Flector self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_scalar_wedge_dot(Flector self, Scalar other) {
    return Flector(self.g0 * vec4(other.g0), self.g1 * vec4(other.g0));
}

MultiVector flector_transflector_wedge_dot(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g1.w) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g1.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g0.w) * other.g0 + vec3(self.g1.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g1.w) * other.g0, vec4(0.0));
}

Flector flector_translator_wedge_dot(Flector self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector flector_at_infinity_anti_scalar_wedge_dot(FlectorAtInfinity self, AntiScalar other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0), self.g0.xyzx * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector flector_at_infinity_flector_wedge_dot(FlectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) - vec2(self.g0.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity flector_at_infinity_flector_at_infinity_wedge_dot(FlectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity flector_at_infinity_horizon_wedge_dot(FlectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector flector_at_infinity_line_wedge_dot(FlectorAtInfinity self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

FlectorAtInfinity flector_at_infinity_line_at_infinity_wedge_dot(FlectorAtInfinity self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_at_infinity_line_at_origin_wedge_dot(FlectorAtInfinity self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector flector_at_infinity_magnitude_wedge_dot(FlectorAtInfinity self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.x, other.g0.x, other.g0.x, other.g0.y), self.g0 * vec4(other.g0.y, other.g0.y, other.g0.y, other.g0.x));
}

Flector flector_at_infinity_motor_wedge_dot(FlectorAtInfinity self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector flector_at_infinity_multi_vector_wedge_dot(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) - vec2(self.g0.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) - vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_wedge_dot(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z) + vec2(self.g0.w) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) - vec3(self.g0.w) * other.g1);
}

MultiVectorAtOrigin flector_at_infinity_multi_vector_at_origin_wedge_dot(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z) + vec2(self.g0.w) * other.g0.yx * vec2(1.0, -1.0), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) - vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g0.w) * other.g1);
}

Rotor flector_at_infinity_origin_wedge_dot(FlectorAtInfinity self, Origin other) {
    return Rotor(vec4(0.0) - self.g0 * vec4(other.g0));
}

MultiVector flector_at_infinity_plane_wedge_dot(FlectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.x) + vec2(self.g0.y) * vec2(0.0, other.g0.y) + vec2(self.g0.w, self.g0.z) * vec2(-other.g0.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec4(0.0));
}

Rotor flector_at_infinity_plane_at_origin_wedge_dot(FlectorAtInfinity self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

MultiVector flector_at_infinity_point_wedge_dot(FlectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g0.z, -other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity flector_at_infinity_point_at_infinity_wedge_dot(FlectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g0.w) * other.g0);
}

Flector flector_at_infinity_rotor_wedge_dot(FlectorAtInfinity self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

FlectorAtInfinity flector_at_infinity_scalar_wedge_dot(FlectorAtInfinity self, Scalar other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector flector_at_infinity_transflector_wedge_dot(FlectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g0.w) * other.g0, vec4(0.0));
}

Flector flector_at_infinity_translator_wedge_dot(FlectorAtInfinity self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Origin horizon_anti_scalar_wedge_dot(Horizon self, AntiScalar other) {
    return Origin(self.g0 * other.g0);
}

MultiVector horizon_flector_wedge_dot(Horizon self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVectorAtInfinity horizon_flector_at_infinity_wedge_dot(Horizon self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(-other.g0.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Scalar horizon_horizon_wedge_dot(Horizon self, Horizon other) {
    return Scalar(0.0 - self.g0 * other.g0);
}

Transflector horizon_line_wedge_dot(Horizon self, Line other) {
    return Transflector(vec3(self.g0) * other.g1, vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity horizon_line_at_infinity_wedge_dot(Horizon self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

PlaneAtOrigin horizon_line_at_origin_wedge_dot(Horizon self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Flector horizon_magnitude_wedge_dot(Horizon self, Magnitude other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.y), vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

Flector horizon_motor_wedge_dot(Horizon self, Motor other) {
    return Flector(vec4(self.g0) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector horizon_multi_vector_wedge_dot(Horizon self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0) * vec2(other.g4.w, other.g1.w), vec4(self.g0) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(0.0) - vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVectorAtInfinity horizon_multi_vector_at_infinity_wedge_dot(Horizon self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0) * other.g2, vec3(0.0) - vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin horizon_multi_vector_at_origin_wedge_dot(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0) * other.g2, vec3(self.g0) * other.g1);
}

AntiScalar horizon_origin_wedge_dot(Horizon self, Origin other) {
    return AntiScalar(0.0 - self.g0 * other.g0);
}

MultiVector horizon_plane_wedge_dot(Horizon self, Plane other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin horizon_plane_at_origin_wedge_dot(Horizon self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0) * other.g0);
}

Translator horizon_point_wedge_dot(Horizon self, Point other) {
    return Translator(vec4(0.0) - vec4(self.g0) * other.g0);
}

LineAtInfinity horizon_point_at_infinity_wedge_dot(Horizon self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0) * other.g0);
}

Flector horizon_rotor_wedge_dot(Horizon self, Rotor other) {
    return Flector(vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Horizon horizon_scalar_wedge_dot(Horizon self, Scalar other) {
    return Horizon(self.g0 * other.g0);
}

MultiVector horizon_transflector_wedge_dot(Horizon self, Transflector other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g1.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0) * other.g0, vec4(0.0));
}

Point horizon_translator_wedge_dot(Horizon self, Translator other) {
    return Point(vec4(self.g0) * other.g0);
}

LineAtOrigin line_anti_scalar_wedge_dot(Line self, AntiScalar other) {
    return LineAtOrigin(self.g1 * vec3(other.g0));
}

Flector line_flector_wedge_dot(Line self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

Flector line_flector_at_infinity_wedge_dot(Line self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0), vec4(self.g0.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Transflector line_horizon_wedge_dot(Line self, Horizon other) {
    return Transflector(self.g1 * vec3(other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0));
}

MultiVector line_line_wedge_dot(Line self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector line_line_at_infinity_wedge_dot(Line self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Rotor line_line_at_origin_wedge_dot(Line self, LineAtOrigin other) {
    return Rotor(vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Line line_magnitude_wedge_dot(Line self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.x) + self.g1 * vec3(other.g0.y), self.g1 * vec3(other.g0.x));
}

MultiVector line_motor_wedge_dot(Line self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector line_multi_vector_wedge_dot(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) - vec2(self.g1.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g1.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g1.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g1.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g1.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g1.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(-other.g4.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g4.w, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g4.w, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVector line_multi_vector_at_infinity_wedge_dot(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.y, 0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec4(self.g0.x) * vec4(-other.g0.y, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g0.y, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g0.y, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin line_multi_vector_at_origin_wedge_dot(Line self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z), vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin line_origin_wedge_dot(Line self, Origin other) {
    return PlaneAtOrigin(self.g1 * vec3(other.g0));
}

Flector line_plane_wedge_dot(Line self, Plane other) {
    return Flector(vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector line_plane_at_origin_wedge_dot(Line self, PlaneAtOrigin other) {
    return Flector(vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector line_point_wedge_dot(Line self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Flector line_point_at_infinity_wedge_dot(Line self, PointAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Rotor line_rotor_wedge_dot(Line self, Rotor other) {
    return Rotor(vec4(self.g1.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g1.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g1.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Line line_scalar_wedge_dot(Line self, Scalar other) {
    return Line(self.g0 * vec3(other.g0), self.g1 * vec3(other.g0));
}

Flector line_transflector_wedge_dot(Line self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector line_translator_wedge_dot(Line self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + self.g1 * vec3(other.g0.w), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

LineAtOrigin line_at_infinity_anti_scalar_wedge_dot(LineAtInfinity self, AntiScalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_infinity_flector_wedge_dot(LineAtInfinity self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_at_infinity_flector_at_infinity_wedge_dot(LineAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity line_at_infinity_horizon_wedge_dot(LineAtInfinity self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector line_at_infinity_line_wedge_dot(LineAtInfinity self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity line_at_infinity_line_at_infinity_wedge_dot(LineAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Rotor line_at_infinity_line_at_origin_wedge_dot(LineAtInfinity self, LineAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Line line_at_infinity_magnitude_wedge_dot(LineAtInfinity self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.y), self.g0 * vec3(other.g0.x));
}

MultiVector line_at_infinity_motor_wedge_dot(LineAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector line_at_infinity_multi_vector_wedge_dot(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_wedge_dot(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin line_at_infinity_multi_vector_at_origin_wedge_dot(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin line_at_infinity_origin_wedge_dot(LineAtInfinity self, Origin other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_infinity_plane_wedge_dot(LineAtInfinity self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector line_at_infinity_plane_at_origin_wedge_dot(LineAtInfinity self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector line_at_infinity_point_wedge_dot(LineAtInfinity self, Point other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

FlectorAtInfinity line_at_infinity_point_at_infinity_wedge_dot(LineAtInfinity self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Rotor line_at_infinity_rotor_wedge_dot(LineAtInfinity self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtInfinity line_at_infinity_scalar_wedge_dot(LineAtInfinity self, Scalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

Flector line_at_infinity_transflector_wedge_dot(LineAtInfinity self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector line_at_infinity_translator_wedge_dot(LineAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Flector line_at_origin_flector_wedge_dot(LineAtOrigin self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0));
}

Flector line_at_origin_flector_at_infinity_wedge_dot(LineAtOrigin self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0));
}

PlaneAtOrigin line_at_origin_horizon_wedge_dot(LineAtOrigin self, Horizon other) {
    return PlaneAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0));
}

Rotor line_at_origin_line_wedge_dot(LineAtOrigin self, Line other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g1.z));
}

Rotor line_at_origin_line_at_infinity_wedge_dot(LineAtOrigin self, LineAtInfinity other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

LineAtOrigin line_at_origin_magnitude_wedge_dot(LineAtOrigin self, Magnitude other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.x));
}

Rotor line_at_origin_motor_wedge_dot(LineAtOrigin self, Motor other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g1.z));
}

MultiVectorAtOrigin line_at_origin_multi_vector_wedge_dot(LineAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g1.x, -other.g3.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g3.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g3.z), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_infinity_wedge_dot(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

PlaneAtOrigin line_at_origin_plane_wedge_dot(LineAtOrigin self, Plane other) {
    return PlaneAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0.w));
}

Flector line_at_origin_point_wedge_dot(LineAtOrigin self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0));
}

Flector line_at_origin_point_at_infinity_wedge_dot(LineAtOrigin self, PointAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0));
}

LineAtOrigin line_at_origin_scalar_wedge_dot(LineAtOrigin self, Scalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Flector line_at_origin_transflector_wedge_dot(LineAtOrigin self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0));
}

Rotor line_at_origin_translator_wedge_dot(LineAtOrigin self, Translator other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

AntiScalar magnitude_anti_scalar_wedge_dot(Magnitude self, AntiScalar other) {
    return AntiScalar(self.g0.x * other.g0);
}

Flector magnitude_flector_wedge_dot(Magnitude self, Flector other) {
    return Flector(vec4(self.g0.x) * other.g0 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector magnitude_flector_at_infinity_wedge_dot(Magnitude self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * other.g0 * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * other.g0 * vec4(-1.0, -1.0, -1.0, 1.0));
}

Flector magnitude_horizon_wedge_dot(Magnitude self, Horizon other) {
    return Flector(vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0));
}

Line magnitude_line_wedge_dot(Magnitude self, Line other) {
    return Line(vec3(self.g0.x) * other.g0 + vec3(self.g0.y) * other.g1, vec3(self.g0.x) * other.g1);
}

Line magnitude_line_at_infinity_wedge_dot(Magnitude self, LineAtInfinity other) {
    return Line(vec3(self.g0.y) * other.g0, vec3(self.g0.x) * other.g0);
}

LineAtOrigin magnitude_line_at_origin_wedge_dot(Magnitude self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.x) * other.g0);
}

Magnitude magnitude_magnitude_wedge_dot(Magnitude self, Magnitude other) {
    return Magnitude(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x));
}

Motor magnitude_motor_wedge_dot(Magnitude self, Motor other) {
    return Motor(vec4(self.g0.x) * other.g0 + vec4(self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(self.g0.x) * other.g1);
}

MultiVector magnitude_multi_vector_wedge_dot(Magnitude self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g4.w), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g3, vec3(self.g0.x) * other.g3, vec4(self.g0.x) * other.g4 + vec4(self.g0.y) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0));
}

MultiVector magnitude_multi_vector_at_infinity_wedge_dot(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 * vec2(other.g0.x), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g0.y), vec3(self.g0.y) * other.g2, vec3(self.g0.x) * other.g2, vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, other.g0.y));
}

MultiVectorAtOrigin magnitude_multi_vector_at_origin_wedge_dot(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1, vec3(self.g0.x) * other.g2);
}

Origin magnitude_origin_wedge_dot(Magnitude self, Origin other) {
    return Origin(self.g0.x * other.g0);
}

Flector magnitude_plane_wedge_dot(Magnitude self, Plane other) {
    return Flector(vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec4(self.g0.x) * other.g0);
}

PlaneAtOrigin magnitude_plane_at_origin_wedge_dot(Magnitude self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * other.g0);
}

Flector magnitude_point_wedge_dot(Magnitude self, Point other) {
    return Flector(vec4(self.g0.x) * other.g0, vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Transflector magnitude_point_at_infinity_wedge_dot(Magnitude self, PointAtInfinity other) {
    return Transflector(vec3(self.g0.x) * other.g0, vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Rotor magnitude_rotor_wedge_dot(Magnitude self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0);
}

Magnitude magnitude_scalar_wedge_dot(Magnitude self, Scalar other) {
    return Magnitude(self.g0 * vec2(other.g0));
}

Flector magnitude_transflector_wedge_dot(Magnitude self, Transflector other) {
    return Flector(vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Motor magnitude_translator_wedge_dot(Magnitude self, Translator other) {
    return Motor(vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * other.g0, vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtOrigin motor_anti_scalar_wedge_dot(Motor self, AntiScalar other) {
    return LineAtOrigin(self.g1 * vec3(other.g0));
}

Flector motor_flector_wedge_dot(Motor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

Flector motor_flector_at_infinity_wedge_dot(Motor self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0), vec4(self.g0.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Flector motor_horizon_wedge_dot(Motor self, Horizon other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0, other.g0, other.g0, 0.0), self.g0.xyzx * vec4(-other.g0, -other.g0, -other.g0, 0.0));
}

MultiVector motor_line_wedge_dot(Motor self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector motor_line_at_infinity_wedge_dot(Motor self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Rotor motor_line_at_origin_wedge_dot(Motor self, LineAtOrigin other) {
    return Rotor(vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Motor motor_magnitude_wedge_dot(Motor self, Magnitude other) {
    return Motor(self.g0 * vec4(other.g0.x) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0), self.g1 * vec3(other.g0.x));
}

MultiVector motor_motor_wedge_dot(Motor self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g1.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g1.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g0.w) * other.g1 + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector motor_multi_vector_wedge_dot(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x) - vec2(self.g1.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g1.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g1.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g4.w) + vec4(self.g1.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g1.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g0.w) * other.g3 + vec3(self.g1.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g1.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g1.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(-other.g4.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g4.w, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g4.w, 0.0) + vec4(self.g0.w) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVector motor_multi_vector_at_infinity_wedge_dot(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, other.g0.y, 0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2, vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec4(self.g0.x) * vec4(-other.g0.y, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, -other.g0.y, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, -other.g0.y, 0.0) + vec4(self.g0.w) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin motor_multi_vector_at_origin_wedge_dot(Motor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g1.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g1.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g1.z) * vec2(other.g2.z, other.g1.z), vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin motor_origin_wedge_dot(Motor self, Origin other) {
    return PlaneAtOrigin(self.g1 * vec3(other.g0));
}

Flector motor_plane_wedge_dot(Motor self, Plane other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), self.g0.xyzx * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector motor_plane_at_origin_wedge_dot(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector motor_point_wedge_dot(Motor self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Flector motor_point_at_infinity_wedge_dot(Motor self, PointAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Rotor motor_rotor_wedge_dot(Motor self, Rotor other) {
    return Rotor(vec4(self.g1.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g1.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g1.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Motor motor_scalar_wedge_dot(Motor self, Scalar other) {
    return Motor(self.g0 * vec4(other.g0), self.g1 * vec3(other.g0));
}

Flector motor_transflector_wedge_dot(Motor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g1.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector motor_translator_wedge_dot(Motor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtOrigin multi_vector_anti_scalar_wedge_dot(MultiVector self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0) + vec2(self.g4.w) * vec2(other.g0, 0.0), self.g3 * vec3(other.g0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

MultiVector multi_vector_flector_wedge_dot(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.w) * vec2(0.0, other.g1.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z) - vec2(self.g4.w) * vec2(other.g1.w, other.g0.w), vec4(self.g0.x) * other.g0 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.w) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g3.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(self.g1.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g3.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g3.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g3.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

MultiVector multi_vector_flector_at_infinity_wedge_dot(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z, self.g1.w) * vec2(other.g0.z, other.g0.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) - vec2(self.g4.w, self.g4.z) * vec2(other.g0.w, other.g0.z), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * other.g0 * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g3.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0), vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w) - vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * other.g0 * vec4(-1.0, -1.0, -1.0, 1.0) + vec4(self.g2.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVector multi_vector_horizon_wedge_dot(MultiVector self, Horizon other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, other.g0) + vec2(self.g4.w) * vec2(-other.g0, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0) + vec4(self.g3.x, self.g3.y, self.g3.z, self.g3.x) * vec4(other.g0, other.g0, other.g0, 0.0), vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0) + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0));
}

MultiVector multi_vector_line_wedge_dot(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) - vec2(self.g3.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g3.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g3.z) * vec2(other.g1.z, other.g0.z), vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g4.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.x) * other.g0 + vec3(self.g0.y) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g1 + vec3(self.g3.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g3.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g3.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_line_at_infinity_wedge_dot(MultiVector self, LineAtInfinity other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec3(self.g0.y) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_line_at_origin_wedge_dot(MultiVector self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g4.w) * other.g0);
}

MultiVector multi_vector_magnitude_wedge_dot(MultiVector self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x), self.g1 * vec4(other.g0.x) + vec4(self.g4.w) * vec4(0.0, 0.0, 0.0, other.g0.y), self.g2 * vec3(other.g0.x) + self.g3 * vec3(other.g0.y), self.g3 * vec3(other.g0.x), self.g1.xyzx * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + self.g4 * vec4(other.g0.x));
}

MultiVector multi_vector_motor_wedge_dot(MultiVector self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) - vec2(self.g3.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g3.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g3.z) * vec2(other.g1.z, other.g0.z), vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g4.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g4.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g0.y) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0) + vec3(self.g3.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * other.g1 + vec3(self.g3.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g3.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g3.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_multi_vector_wedge_dot(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g1.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g1.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g1.w) * vec2(0.0, other.g4.w) + vec2(self.g2.x) * vec2(0.0, -other.g3.x) + vec2(self.g2.y) * vec2(0.0, -other.g3.y) + vec2(self.g2.z) * vec2(0.0, -other.g3.z) - vec2(self.g3.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g3.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g3.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g4.x) * vec2(0.0, -other.g1.x) + vec2(self.g4.y) * vec2(0.0, -other.g1.y) + vec2(self.g4.z) * vec2(0.0, -other.g1.z) - vec2(self.g4.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g4.w) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g3.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g3.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g3.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g3.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g3.y) + vec4(self.g4.z) * vec4(0.0, 0.0, 0.0, -other.g3.z) + vec4(self.g4.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g3 + vec3(self.g1.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g2.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g2.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g2.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g3.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g3.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g3.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g4.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g4.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g4.z) * vec3(other.g1.y, -other.g1.x, other.g4.w) - vec3(self.g4.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * other.g3 + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g3.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g3.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g3.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) - vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * other.g4 + vec4(self.g0.y) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0) + vec4(self.g2.x) * vec4(-other.g4.w, -other.g1.z, other.g1.y, 0.0) + vec4(self.g2.y) * vec4(other.g1.z, -other.g4.w, -other.g1.x, 0.0) + vec4(self.g2.z) * vec4(-other.g1.y, other.g1.x, -other.g4.w, 0.0) + vec4(self.g3.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g3.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g3.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g4.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, 0.0) + vec4(self.g4.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, 0.0) + vec4(self.g4.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, 0.0) + vec4(self.g4.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVector multi_vector_multi_vector_at_infinity_wedge_dot(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 * vec2(other.g0.x) + vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z, self.g1.w) * vec2(other.g1.z, other.g0.y) + vec2(self.g2.x) * vec2(0.0, -other.g2.x) + vec2(self.g2.y) * vec2(0.0, -other.g2.y) + vec2(self.g2.z) * vec2(0.0, -other.g2.z) + vec2(self.g3.x) * vec2(-other.g2.x, 0.0) + vec2(self.g3.y) * vec2(-other.g2.y, 0.0) + vec2(self.g3.z) * vec2(-other.g2.z, 0.0) + vec2(self.g4.x) * vec2(0.0, -other.g1.x) + vec2(self.g4.y) * vec2(0.0, -other.g1.y) - vec2(self.g4.w, self.g4.z) * vec2(other.g0.y, other.g1.z), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g0.y) + vec4(self.g1.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g1.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g3.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g3.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + vec4(self.g3.z) * vec4(other.g1.y, -other.g1.x, other.g0.y, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g4.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z), vec3(self.g0.y) * other.g2 + vec3(self.g1.w) * other.g1 + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g4.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g4.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g4.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) + vec3(self.g3.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g3.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g3.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) - vec3(self.g4.w) * other.g1, vec4(self.g0.y, self.g0.y, self.g0.y, self.g0.x) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, other.g0.y) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g1.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z) + vec4(self.g2.x) * vec4(-other.g0.y, -other.g1.z, other.g1.y, 0.0) + vec4(self.g2.y) * vec4(other.g1.z, -other.g0.y, -other.g1.x, 0.0) + vec4(self.g2.z) * vec4(-other.g1.y, other.g1.x, -other.g0.y, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g4.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g4.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g4.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_multi_vector_at_origin_wedge_dot(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g1.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g1.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g1.z) * vec2(-other.g1.z, other.g2.z) - vec2(self.g3.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g3.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g3.z) * vec2(other.g2.z, other.g1.z) + vec2(self.g4.w) * other.g0.yx * vec2(1.0, -1.0), vec3(self.g0.x) * other.g1 + vec3(self.g1.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) + vec3(self.g3.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g3.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g3.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) - vec3(self.g4.w) * other.g2, vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g3.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g3.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g3.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g4.w) * other.g1);
}

MultiVectorAtOrigin multi_vector_origin_wedge_dot(MultiVector self, Origin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0, 0.0) + vec2(self.g4.w) * vec2(0.0, -other.g0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), self.g3 * vec3(other.g0));
}

MultiVector multi_vector_plane_wedge_dot(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z) + vec2(self.g1.w) * vec2(0.0, other.g0.w) + vec2(self.g4.w) * vec2(-other.g0.w, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.w) + vec4(self.g3.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0) + vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w) - vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w), vec4(self.g0.x) * other.g0 + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g3.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g3.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_plane_at_origin_wedge_dot(MultiVector self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g4.w) * other.g0, vec3(self.g0.x) * other.g0 + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_point_wedge_dot(MultiVector self, Point other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.w) * vec2(0.0, -other.g0.w), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g3.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g4.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVector multi_vector_point_at_infinity_wedge_dot(MultiVector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g3.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g4.w) * other.g0, vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_rotor_wedge_dot(MultiVector self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g3.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVector multi_vector_scalar_wedge_dot(MultiVector self, Scalar other) {
    return MultiVector(self.g0 * vec2(other.g0), self.g1 * vec4(other.g0), self.g2 * vec3(other.g0), self.g3 * vec3(other.g0), self.g4 * vec4(other.g0));
}

MultiVector multi_vector_transflector_wedge_dot(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.w) * vec2(0.0, other.g1.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) - vec2(self.g4.w, self.g4.z) * vec2(other.g1.w, other.g0.z), vec4(self.g0.x, self.g0.x, self.g0.x, self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g1.w) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g3.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g3.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g3.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g1.w) * other.g0 + vec3(self.g4.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g4.w) * other.g0, vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0) + vec4(self.g2.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g3.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g3.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g3.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector multi_vector_translator_wedge_dot(MultiVector self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g4.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g4.w) * other.g0, vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0) + self.g3 * vec3(other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g3.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g3.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g3.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_anti_scalar_wedge_dot(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(other.g0), self.g2 * vec3(other.g0), self.g1 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_flector_wedge_dot(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.y) * vec2(other.g1.w, other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(0.0) - vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_wedge_dot(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(-other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_horizon_wedge_dot(MultiVectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(self.g0.yx * vec2(-other.g0), self.g2 * vec3(other.g0), vec3(0.0) - self.g1 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_line_wedge_dot(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g2.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g2.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g2.z) * vec2(other.g1.z, other.g0.z), vec4(self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_wedge_dot(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_line_at_origin_wedge_dot(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_infinity_magnitude_wedge_dot(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * other.g0, vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), self.g2 * vec3(other.g0.y), self.g2 * vec3(other.g0.x), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVector multi_vector_at_infinity_motor_wedge_dot(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) - vec2(self.g2.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g2.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g2.z) * vec2(other.g1.z, other.g0.z), vec4(self.g0.y) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z));
}

MultiVector multi_vector_at_infinity_multi_vector_wedge_dot(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 - vec2(self.g0.y) * vec2(other.g4.w, other.g1.w) + vec2(self.g1.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g1.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g1.z) * vec2(other.g1.z, other.g4.z) - vec2(self.g2.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g2.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g2.z) * vec2(other.g3.z, other.g2.z), vec4(self.g0.x) * other.g1 + vec4(self.g0.y) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g2.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g2.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z), vec3(self.g0.x) * other.g2 - vec3(self.g0.y) * vec3(other.g4.x, other.g4.y, other.g4.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g2.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.y), vec3(self.g0.x) * other.g3 - vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g2.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g2.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g2.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * other.g4 + vec4(self.g0.y) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x) + vec4(self.g1.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g2.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_wedge_dot(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * other.g0.yx * vec2(-1.0, 1.0) + vec2(self.g1.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g2.z) - vec2(self.g2.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * other.g2 - vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_infinity_multi_vector_at_origin_wedge_dot(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * other.g0.yx * vec2(1.0, -1.0) + vec2(self.g1.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g1.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g1.z) * vec2(-other.g1.z, other.g2.z) - vec2(self.g2.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * other.g1 - vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * other.g2 + vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_infinity_origin_wedge_dot(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), vec3(0.0) - self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_plane_wedge_dot(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0.y) * vec2(-other.g0.w, 0.0) + vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - self.g1 * vec3(other.g0.w), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_plane_at_origin_wedge_dot(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_infinity_point_wedge_dot(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, -other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec4(self.g0.x) * other.g0 + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), vec3(0.0) - self.g1 * vec3(other.g0.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_wedge_dot(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_rotor_wedge_dot(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_scalar_wedge_dot(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_transflector_wedge_dot(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0.y) * vec2(-other.g1.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g1.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g1.z) * vec2(other.g0.z, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g2.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z), vec3(0.0) - vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

MultiVector multi_vector_at_infinity_translator_wedge_dot(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g2 * vec3(other.g0.w), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_wedge_dot(MultiVectorAtOrigin self, Flector other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g1.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g1.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_at_infinity_wedge_dot(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g0.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

MultiVectorAtOrigin multi_vector_at_origin_horizon_wedge_dot(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g0), self.g2 * vec3(other.g0), vec3(0.0) - self.g1 * vec3(other.g0));
}

MultiVectorAtOrigin multi_vector_at_origin_line_wedge_dot(MultiVectorAtOrigin self, Line other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec3(self.g0.x) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_infinity_wedge_dot(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_magnitude_wedge_dot(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0.x), self.g1 * vec3(other.g0.x), self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_motor_wedge_dot(MultiVectorAtOrigin self, Motor other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec3(self.g0.x) * other.g1 + vec3(self.g2.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_wedge_dot(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0.x, other.g4.w) + vec2(self.g0.y) * vec2(-other.g4.w, other.g0.x) + vec2(self.g1.x) * vec2(other.g1.x, -other.g3.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g3.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g3.z) - vec2(self.g2.x) * vec2(other.g3.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g3.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g3.z, other.g1.z), vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g0.y) * other.g3 + vec3(self.g1.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g1.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g1.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g4.w), vec3(self.g0.x) * other.g3 - vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z) + vec3(self.g1.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) + vec3(self.g2.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g2.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g2.z) * vec3(other.g3.y, -other.g3.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_infinity_wedge_dot(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * other.g0.yx * vec2(-1.0, 1.0) + vec2(self.g1.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g1.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g1.z) * vec2(other.g1.z, -other.g2.z) - vec2(self.g2.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g2.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g2.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * other.g1 + vec3(self.g0.y) * other.g2 + vec3(self.g1.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g2.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g2.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g2.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * other.g2 - vec3(self.g0.y) * other.g1 + vec3(self.g1.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) + vec3(self.g2.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_plane_wedge_dot(MultiVectorAtOrigin self, Plane other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g0.w), self.g2 * vec3(other.g0.w), vec3(0.0) - self.g1 * vec3(other.g0.w));
}

MultiVectorAtOrigin multi_vector_at_origin_point_wedge_dot(MultiVectorAtOrigin self, Point other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_point_at_infinity_wedge_dot(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_scalar_wedge_dot(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVectorAtOrigin multi_vector_at_origin_transflector_wedge_dot(MultiVectorAtOrigin self, Transflector other) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-other.g1.w) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0 + vec3(self.g2.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, other.g1.w), vec3(0.0) - vec3(self.g0.y) * other.g0 + vec3(self.g1.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w));
}

MultiVectorAtOrigin multi_vector_at_origin_translator_wedge_dot(MultiVectorAtOrigin self, Translator other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z) + vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Rotor origin_flector_wedge_dot(Origin self, Flector other) {
    return Rotor(vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w));
}

Rotor origin_flector_at_infinity_wedge_dot(Origin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0) * other.g0);
}

AntiScalar origin_horizon_wedge_dot(Origin self, Horizon other) {
    return AntiScalar(self.g0 * other.g0);
}

PlaneAtOrigin origin_line_wedge_dot(Origin self, Line other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g1);
}

PlaneAtOrigin origin_line_at_infinity_wedge_dot(Origin self, LineAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Origin origin_magnitude_wedge_dot(Origin self, Magnitude other) {
    return Origin(self.g0 * other.g0.x);
}

PlaneAtOrigin origin_motor_wedge_dot(Origin self, Motor other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin origin_multi_vector_wedge_dot(Origin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0) * vec2(other.g0.x, other.g4.w), vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0) * other.g3);
}

MultiVectorAtOrigin origin_multi_vector_at_infinity_wedge_dot(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

AntiScalar origin_plane_wedge_dot(Origin self, Plane other) {
    return AntiScalar(self.g0 * other.g0.w);
}

LineAtOrigin origin_point_wedge_dot(Origin self, Point other) {
    return LineAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtOrigin origin_point_at_infinity_wedge_dot(Origin self, PointAtInfinity other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Origin origin_scalar_wedge_dot(Origin self, Scalar other) {
    return Origin(self.g0 * other.g0);
}

Rotor origin_transflector_wedge_dot(Origin self, Transflector other) {
    return Rotor(vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w));
}

PlaneAtOrigin origin_translator_wedge_dot(Origin self, Translator other) {
    return PlaneAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Origin plane_anti_scalar_wedge_dot(Plane self, AntiScalar other) {
    return Origin(self.g0.w * other.g0);
}

MultiVector plane_flector_wedge_dot(Plane self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) + vec2(self.g0.z) * vec2(0.0, -other.g0.z) - vec2(self.g0.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector plane_flector_at_infinity_wedge_dot(Plane self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) - vec2(self.g0.w, self.g0.z) * vec2(other.g0.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector plane_horizon_wedge_dot(Plane self, Horizon other) {
    return MultiVector(vec2(self.g0.w) * vec2(-other.g0, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0), vec3(0.0), vec4(0.0));
}

Flector plane_line_wedge_dot(Plane self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector plane_line_at_infinity_wedge_dot(Plane self, LineAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

PlaneAtOrigin plane_line_at_origin_wedge_dot(Plane self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.w) * other.g0);
}

Flector plane_magnitude_wedge_dot(Plane self, Magnitude other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.y), self.g0 * vec4(other.g0.x));
}

Flector plane_motor_wedge_dot(Plane self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector plane_multi_vector_wedge_dot(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) - vec2(self.g0.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g3.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g3.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g4.w) - vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(0.0) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, 0.0) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, 0.0) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, 0.0) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVector plane_multi_vector_at_infinity_wedge_dot(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) - vec2(self.g0.w, self.g0.z) * vec2(other.g0.y, other.g1.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(0.0) - vec3(self.g0.w) * other.g1, vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g0.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x));
}

MultiVectorAtOrigin plane_multi_vector_at_origin_wedge_dot(Plane self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.w) * other.g0.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0.w) * other.g2, vec3(self.g0.w) * other.g1);
}

AntiScalar plane_origin_wedge_dot(Plane self, Origin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0);
}

MultiVector plane_plane_wedge_dot(Plane self, Plane other) {
    return MultiVector(vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin plane_plane_at_origin_wedge_dot(Plane self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0.w) * other.g0);
}

Motor plane_point_wedge_dot(Plane self, Point other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(0.0) - vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Motor plane_point_at_infinity_wedge_dot(Plane self, PointAtInfinity other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z), vec3(0.0) - vec3(self.g0.w) * other.g0);
}

Flector plane_rotor_wedge_dot(Plane self, Rotor other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Plane plane_scalar_wedge_dot(Plane self, Scalar other) {
    return Plane(self.g0 * vec4(other.g0));
}

MultiVector plane_transflector_wedge_dot(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g0.x) + vec2(self.g0.y) * vec2(0.0, -other.g0.y) - vec2(self.g0.w, self.g0.z) * vec2(other.g1.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(0.0) - vec3(self.g0.w) * other.g0, vec4(0.0));
}

Flector plane_translator_wedge_dot(Plane self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Rotor plane_at_origin_flector_wedge_dot(PlaneAtOrigin self, Flector other) {
    return Rotor(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g0.z));
}

Rotor plane_at_origin_flector_at_infinity_wedge_dot(PlaneAtOrigin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtOrigin plane_at_origin_horizon_wedge_dot(PlaneAtOrigin self, Horizon other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Flector plane_at_origin_line_wedge_dot(PlaneAtOrigin self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0));
}

Flector plane_at_origin_line_at_infinity_wedge_dot(PlaneAtOrigin self, LineAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

PlaneAtOrigin plane_at_origin_magnitude_wedge_dot(PlaneAtOrigin self, Magnitude other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0.x));
}

Flector plane_at_origin_motor_wedge_dot(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_wedge_dot(PlaneAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g1.z), vec3(self.g0.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g4.w), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_infinity_wedge_dot(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

LineAtOrigin plane_at_origin_plane_wedge_dot(PlaneAtOrigin self, Plane other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.w));
}

Rotor plane_at_origin_point_wedge_dot(PlaneAtOrigin self, Point other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Rotor plane_at_origin_point_at_infinity_wedge_dot(PlaneAtOrigin self, PointAtInfinity other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

PlaneAtOrigin plane_at_origin_scalar_wedge_dot(PlaneAtOrigin self, Scalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

Rotor plane_at_origin_transflector_wedge_dot(PlaneAtOrigin self, Transflector other) {
    return Rotor(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g0.z));
}

Flector plane_at_origin_translator_wedge_dot(PlaneAtOrigin self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

PlaneAtOrigin point_anti_scalar_wedge_dot(Point self, AntiScalar other) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

MultiVector point_flector_wedge_dot(Point self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g1.w), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

MultiVector point_flector_at_infinity_wedge_dot(Point self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w), vec4(0.0));
}

Translator point_horizon_wedge_dot(Point self, Horizon other) {
    return Translator(self.g0 * vec4(-other.g0));
}

Flector point_line_wedge_dot(Point self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

Transflector point_line_at_infinity_wedge_dot(Point self, LineAtInfinity other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Flector point_line_at_origin_wedge_dot(Point self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector point_magnitude_wedge_dot(Point self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.x), self.g0.xyzx * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

Flector point_motor_wedge_dot(Point self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector point_multi_vector_wedge_dot(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g0.w) * vec2(0.0, other.g4.w), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0));
}

MultiVector point_multi_vector_at_infinity_wedge_dot(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(other.g1.z, other.g0.y), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g0.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z));
}

MultiVectorAtOrigin point_multi_vector_at_origin_wedge_dot(Point self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

LineAtOrigin point_origin_wedge_dot(Point self, Origin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Motor point_plane_wedge_dot(Point self, Plane other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w));
}

Rotor point_plane_at_origin_wedge_dot(Point self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

MultiVector point_point_wedge_dot(Point self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVector point_point_at_infinity_wedge_dot(Point self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

Flector point_rotor_wedge_dot(Point self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0));
}

Point point_scalar_wedge_dot(Point self, Scalar other) {
    return Point(self.g0 * vec4(other.g0));
}

MultiVector point_transflector_wedge_dot(Point self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g0.w) * vec2(0.0, other.g1.w), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

Transflector point_translator_wedge_dot(Point self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PlaneAtOrigin point_at_infinity_anti_scalar_wedge_dot(PointAtInfinity self, AntiScalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

MultiVector point_at_infinity_flector_wedge_dot(PointAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

MultiVectorAtInfinity point_at_infinity_flector_at_infinity_wedge_dot(PointAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w));
}

LineAtInfinity point_at_infinity_horizon_wedge_dot(PointAtInfinity self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0));
}

Flector point_at_infinity_line_wedge_dot(PointAtInfinity self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

FlectorAtInfinity point_at_infinity_line_at_infinity_wedge_dot(PointAtInfinity self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Flector point_at_infinity_line_at_origin_wedge_dot(PointAtInfinity self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector point_at_infinity_magnitude_wedge_dot(PointAtInfinity self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.x), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

Flector point_at_infinity_motor_wedge_dot(PointAtInfinity self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z));
}

MultiVector point_at_infinity_multi_vector_wedge_dot(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_wedge_dot(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y));
}

MultiVectorAtOrigin point_at_infinity_multi_vector_at_origin_wedge_dot(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y));
}

LineAtOrigin point_at_infinity_origin_wedge_dot(PointAtInfinity self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0));
}

Motor point_at_infinity_plane_wedge_dot(PointAtInfinity self, Plane other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z), vec3(0.0) - self.g0 * vec3(other.g0.w));
}

Rotor point_at_infinity_plane_at_origin_wedge_dot(PointAtInfinity self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z));
}

MultiVector point_at_infinity_point_wedge_dot(PointAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(0.0) - self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity point_at_infinity_point_at_infinity_wedge_dot(PointAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Flector point_at_infinity_rotor_wedge_dot(PointAtInfinity self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0));
}

PointAtInfinity point_at_infinity_scalar_wedge_dot(PointAtInfinity self, Scalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

MultiVector point_at_infinity_transflector_wedge_dot(PointAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w), vec4(0.0));
}

Transflector point_at_infinity_translator_wedge_dot(PointAtInfinity self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Flector rotor_flector_wedge_dot(Rotor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector rotor_flector_at_infinity_wedge_dot(Rotor self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec4(self.g0.x) * vec4(-other.g0.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g0.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g0.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector rotor_horizon_wedge_dot(Rotor self, Horizon other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0), self.g0.xyzx * vec4(-other.g0, -other.g0, -other.g0, 0.0));
}

Rotor rotor_line_wedge_dot(Rotor self, Line other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

Rotor rotor_line_at_infinity_wedge_dot(Rotor self, LineAtInfinity other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Rotor rotor_magnitude_wedge_dot(Rotor self, Magnitude other) {
    return Rotor(self.g0 * vec4(other.g0.x));
}

Rotor rotor_motor_wedge_dot(Rotor self, Motor other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVectorAtOrigin rotor_multi_vector_wedge_dot(Rotor self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g1.x, -other.g3.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g3.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g3.z) + vec2(self.g0.w) * vec2(-other.g4.w, other.g0.x), vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x) + vec3(self.g0.w) * other.g3, vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) - vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

MultiVectorAtOrigin rotor_multi_vector_at_infinity_wedge_dot(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g1.x, -other.g2.x) + vec2(self.g0.y) * vec2(other.g1.y, -other.g2.y) + vec2(self.g0.z) * vec2(other.g1.z, -other.g2.z) + vec2(self.g0.w) * other.g0.yx * vec2(-1.0, 1.0), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x) + vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) - vec3(self.g0.w) * other.g1);
}

Flector rotor_plane_wedge_dot(Rotor self, Plane other) {
    return Flector(vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), self.g0.xyzx * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0));
}

Flector rotor_point_wedge_dot(Rotor self, Point other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector rotor_point_at_infinity_wedge_dot(Rotor self, PointAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z), vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Rotor rotor_scalar_wedge_dot(Rotor self, Scalar other) {
    return Rotor(self.g0 * vec4(other.g0));
}

Flector rotor_transflector_wedge_dot(Rotor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * vec4(-other.g1.w, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, -other.g1.w, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, -other.g1.w, 0.0) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Rotor rotor_translator_wedge_dot(Rotor self, Translator other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

AntiScalar scalar_anti_scalar_wedge_dot(Scalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector scalar_flector_wedge_dot(Scalar self, Flector other) {
    return Flector(vec4(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

FlectorAtInfinity scalar_flector_at_infinity_wedge_dot(Scalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

Horizon scalar_horizon_wedge_dot(Scalar self, Horizon other) {
    return Horizon(self.g0 * other.g0);
}

Line scalar_line_wedge_dot(Scalar self, Line other) {
    return Line(vec3(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

LineAtInfinity scalar_line_at_infinity_wedge_dot(Scalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtOrigin scalar_line_at_origin_wedge_dot(Scalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Magnitude scalar_magnitude_wedge_dot(Scalar self, Magnitude other) {
    return Magnitude(vec2(self.g0) * other.g0);
}

Motor scalar_motor_wedge_dot(Scalar self, Motor other) {
    return Motor(vec4(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

MultiVector scalar_multi_vector_wedge_dot(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0) * other.g0, vec4(self.g0) * other.g1, vec3(self.g0) * other.g2, vec3(self.g0) * other.g3, vec4(self.g0) * other.g4);
}

MultiVectorAtInfinity scalar_multi_vector_at_infinity_wedge_dot(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

MultiVectorAtOrigin scalar_multi_vector_at_origin_wedge_dot(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Origin scalar_origin_wedge_dot(Scalar self, Origin other) {
    return Origin(self.g0 * other.g0);
}

Plane scalar_plane_wedge_dot(Scalar self, Plane other) {
    return Plane(vec4(self.g0) * other.g0);
}

PlaneAtOrigin scalar_plane_at_origin_wedge_dot(Scalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Point scalar_point_wedge_dot(Scalar self, Point other) {
    return Point(vec4(self.g0) * other.g0);
}

PointAtInfinity scalar_point_at_infinity_wedge_dot(Scalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Rotor scalar_rotor_wedge_dot(Scalar self, Rotor other) {
    return Rotor(vec4(self.g0) * other.g0);
}

Scalar scalar_scalar_wedge_dot(Scalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Transflector scalar_transflector_wedge_dot(Scalar self, Transflector other) {
    return Transflector(vec3(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

Translator scalar_translator_wedge_dot(Scalar self, Translator other) {
    return Translator(vec4(self.g0) * other.g0);
}

Flector transflector_anti_scalar_wedge_dot(Transflector self, AntiScalar other) {
    return Flector(vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0, other.g0, other.g0, 0.0));
}

MultiVector transflector_flector_wedge_dot(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) - vec2(self.g1.w) * vec2(other.g1.w, other.g0.w), vec4(0.0), vec3(self.g0.x) * vec3(-other.g0.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.w) + vec3(self.g1.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_flector_at_infinity_wedge_dot(Transflector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g0.w, other.g0.z), vec4(0.0), vec3(self.g1.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g0.w), vec3(self.g0.x) * vec3(-other.g0.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g0.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_horizon_wedge_dot(Transflector self, Horizon other) {
    return MultiVector(vec2(self.g1.w) * vec2(-other.g0, 0.0), vec4(0.0), vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), vec3(0.0) - self.g0 * vec3(other.g0), vec4(0.0));
}

Flector transflector_line_wedge_dot(Transflector self, Line other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector transflector_line_at_infinity_wedge_dot(Transflector self, LineAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector transflector_line_at_origin_wedge_dot(Transflector self, LineAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Flector transflector_magnitude_wedge_dot(Transflector self, Magnitude other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.y), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + self.g1 * vec4(other.g0.x));
}

Flector transflector_motor_wedge_dot(Transflector self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, 0.0) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, 0.0) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector transflector_multi_vector_wedge_dot(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, other.g4.x) + vec2(self.g0.y) * vec2(other.g1.y, other.g4.y) + vec2(self.g0.z) * vec2(other.g1.z, other.g4.z) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) - vec2(self.g1.w) * vec2(other.g4.w, other.g1.w), vec4(self.g0.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, -other.g2.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g3.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g3.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g3.z) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, other.g0.y), vec3(self.g0.x) * vec3(-other.g1.w, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, -other.g1.w, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, -other.g1.w) + vec3(self.g1.x) * vec3(other.g4.w, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g4.w, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g4.w) - vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec3(self.g0.x) * vec3(-other.g4.w, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g4.w, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g4.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.y, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.y, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.y, -other.g3.z) + vec4(self.g1.x) * vec4(other.g0.x, other.g3.z, -other.g3.y, 0.0) + vec4(self.g1.y) * vec4(-other.g3.z, other.g0.x, other.g3.x, 0.0) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, other.g0.x, 0.0) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, other.g0.x));
}

MultiVector transflector_multi_vector_at_infinity_wedge_dot(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g0.y, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g0.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, other.g0.x, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g1.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z), vec3(self.g1.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(-other.g0.y, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, -other.g0.y, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, -other.g0.y) - vec3(self.g1.w) * other.g1, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.x) * vec4(other.g0.x, other.g2.z, -other.g2.y, 0.0) + vec4(self.g1.y) * vec4(-other.g2.z, other.g0.x, other.g2.x, 0.0) + self.g1.zzzw * vec4(other.g2.y, -other.g2.x, other.g0.x, other.g0.x));
}

MultiVectorAtOrigin transflector_multi_vector_at_origin_wedge_dot(Transflector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, other.g2.x) + vec2(self.g0.y) * vec2(-other.g1.y, other.g2.y) + vec2(self.g0.z) * vec2(-other.g1.z, other.g2.z) + vec2(self.g1.w) * other.g0.yx * vec2(1.0, -1.0), vec3(self.g0.x) * vec3(-other.g0.x, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, -other.g0.x, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, -other.g0.x) - vec3(self.g1.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y) + vec3(self.g1.w) * other.g1);
}

Rotor transflector_origin_wedge_dot(Transflector self, Origin other) {
    return Rotor(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0));
}

MultiVector transflector_plane_wedge_dot(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.x) + vec2(self.g0.y) * vec2(0.0, other.g0.y) + vec2(self.g0.z) * vec2(0.0, other.g0.z) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) + vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0) - self.g0 * vec3(other.g0.w), vec4(0.0));
}

Rotor transflector_plane_at_origin_wedge_dot(Transflector self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g0.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g0.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g0.z) + vec4(self.g1.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

MultiVector transflector_point_wedge_dot(Transflector self, Point other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z) + vec2(self.g1.w) * vec2(0.0, -other.g0.w), vec4(0.0), vec3(0.0) - self.g0 * vec3(other.g0.w) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_point_at_infinity_wedge_dot(Transflector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0) - vec3(self.g1.w) * other.g0, vec4(0.0));
}

Flector transflector_rotor_wedge_dot(Transflector self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, other.g0.w), vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g0.w, 0.0) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Transflector transflector_scalar_wedge_dot(Transflector self, Scalar other) {
    return Transflector(self.g0 * vec3(other.g0), self.g1 * vec4(other.g0));
}

MultiVector transflector_transflector_wedge_dot(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, other.g1.x) + vec2(self.g0.y) * vec2(other.g0.y, other.g1.y) + vec2(self.g0.z) * vec2(other.g0.z, other.g1.z) + vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) - vec2(self.g1.w, self.g1.z) * vec2(other.g1.w, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g1.x) * vec3(other.g1.w, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, other.g1.w, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, other.g1.w) - vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(-other.g1.w, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, -other.g1.w, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, -other.g1.w) - vec3(self.g1.w) * other.g0, vec4(0.0));
}

Flector transflector_translator_wedge_dot(Transflector self, Translator other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * other.g0, vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

LineAtOrigin translator_anti_scalar_wedge_dot(Translator self, AntiScalar other) {
    return LineAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector translator_flector_wedge_dot(Translator self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * vec4(other.g0.w, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.w, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Flector translator_flector_at_infinity_wedge_dot(Translator self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, other.g0.w, other.g0.x, 0.0) + self.g0.zzzw * other.g0.yxww * vec4(1.0, -1.0, 1.0, -1.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) - self.g0.wwwz * other.g0.xyzz);
}

Point translator_horizon_wedge_dot(Translator self, Horizon other) {
    return Point(self.g0 * vec4(other.g0));
}

MultiVector translator_line_wedge_dot(Translator self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector translator_line_at_infinity_wedge_dot(Translator self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

Rotor translator_line_at_origin_wedge_dot(Translator self, LineAtOrigin other) {
    return Rotor(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g0.z));
}

Motor translator_magnitude_wedge_dot(Translator self, Magnitude other) {
    return Motor(self.g0 * vec4(other.g0.y, other.g0.y, other.g0.y, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x));
}

MultiVector translator_motor_wedge_dot(Translator self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g1.x, other.g0.x) - vec2(self.g0.y) * vec2(other.g1.y, other.g0.y) - vec2(self.g0.z) * vec2(other.g1.z, other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.w, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, other.g0.w, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, other.g0.w) + vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0), vec4(0.0));
}

MultiVector translator_multi_vector_wedge_dot(Translator self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0.x) * vec2(other.g3.x, other.g2.x) - vec2(self.g0.y) * vec2(other.g3.y, other.g2.y) - vec2(self.g0.z) * vec2(other.g3.z, other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec4(self.g0.x) * vec4(other.g4.w, other.g1.z, -other.g1.y, -other.g4.x) + vec4(self.g0.y) * vec4(-other.g1.z, other.g4.w, other.g1.x, -other.g4.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, other.g4.w, -other.g4.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g4.w), vec3(self.g0.x) * vec3(other.g0.y, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.y, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.y) + vec3(self.g0.w) * other.g3, vec3(self.g0.x) * vec3(other.g0.x, other.g3.z, -other.g3.y) + vec3(self.g0.y) * vec3(-other.g3.z, other.g0.x, other.g3.x) + vec3(self.g0.z) * vec3(other.g3.y, -other.g3.x, other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, other.g4.z, -other.g4.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g4.z, other.g1.w, other.g4.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g4.y, -other.g4.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(-other.g1.x, -other.g1.y, -other.g1.z, 0.0));
}

MultiVector translator_multi_vector_at_infinity_wedge_dot(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g2.z, other.g0.x), vec4(self.g0.x) * vec4(other.g0.y, other.g1.z, -other.g1.y, 0.0) + vec4(self.g0.y) * vec4(-other.g1.z, other.g0.y, other.g1.x, 0.0) + self.g0.zzzw * vec4(other.g1.y, -other.g1.x, other.g0.y, -other.g0.y), vec3(self.g0.w) * other.g2, vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) - self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, other.g1.z));
}

MultiVectorAtOrigin translator_multi_vector_at_origin_wedge_dot(Translator self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0.x) * vec2(other.g2.x, other.g1.x) - vec2(self.g0.y) * vec2(other.g2.y, other.g1.y) - vec2(self.g0.z) * vec2(other.g2.z, other.g1.z), vec3(self.g0.x) * vec3(other.g0.y, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, other.g0.y, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, other.g0.y), vec3(self.g0.x) * vec3(other.g0.x, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, other.g0.x, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, other.g0.x));
}

PlaneAtOrigin translator_origin_wedge_dot(Translator self, Origin other) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Flector translator_plane_wedge_dot(Translator self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Flector translator_plane_at_origin_wedge_dot(Translator self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0));
}

Transflector translator_point_wedge_dot(Translator self, Point other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

Transflector translator_point_at_infinity_wedge_dot(Translator self, PointAtInfinity other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) - self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, other.g0.z));
}

Rotor translator_rotor_wedge_dot(Translator self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0.y) * other.g0.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0.z) * other.g0.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Translator translator_scalar_wedge_dot(Translator self, Scalar other) {
    return Translator(self.g0 * vec4(other.g0));
}

Flector translator_transflector_wedge_dot(Translator self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, other.g1.w, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g1.w), vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(-other.g0.x, -other.g0.y, -other.g0.z, 0.0));
}

MultiVector translator_translator_wedge_dot(Translator self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(0.0));
}

AntiScalar anti_scalar_anti_scalar_anti_wedge(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector anti_scalar_flector_anti_wedge(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

FlectorAtInfinity anti_scalar_flector_at_infinity_anti_wedge(AntiScalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

Horizon anti_scalar_horizon_anti_wedge(AntiScalar self, Horizon other) {
    return Horizon(self.g0 * other.g0);
}

Line anti_scalar_line_anti_wedge(AntiScalar self, Line other) {
    return Line(vec3(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

LineAtInfinity anti_scalar_line_at_infinity_anti_wedge(AntiScalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtOrigin anti_scalar_line_at_origin_anti_wedge(AntiScalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Magnitude anti_scalar_magnitude_anti_wedge(AntiScalar self, Magnitude other) {
    return Magnitude(vec2(self.g0) * other.g0);
}

Motor anti_scalar_motor_anti_wedge(AntiScalar self, Motor other) {
    return Motor(vec4(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

MultiVector anti_scalar_multi_vector_anti_wedge(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(self.g0) * other.g0, vec4(self.g0) * other.g1, vec3(self.g0) * other.g2, vec3(self.g0) * other.g3, vec4(self.g0) * other.g4);
}

MultiVectorAtInfinity anti_scalar_multi_vector_at_infinity_anti_wedge(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_origin_anti_wedge(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Origin anti_scalar_origin_anti_wedge(AntiScalar self, Origin other) {
    return Origin(self.g0 * other.g0);
}

Plane anti_scalar_plane_anti_wedge(AntiScalar self, Plane other) {
    return Plane(vec4(self.g0) * other.g0);
}

PlaneAtOrigin anti_scalar_plane_at_origin_anti_wedge(AntiScalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Point anti_scalar_point_anti_wedge(AntiScalar self, Point other) {
    return Point(vec4(self.g0) * other.g0);
}

PointAtInfinity anti_scalar_point_at_infinity_anti_wedge(AntiScalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Rotor anti_scalar_rotor_anti_wedge(AntiScalar self, Rotor other) {
    return Rotor(vec4(self.g0) * other.g0);
}

Scalar anti_scalar_scalar_anti_wedge(AntiScalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Transflector anti_scalar_transflector_anti_wedge(AntiScalar self, Transflector other) {
    return Transflector(vec3(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

Translator anti_scalar_translator_anti_wedge(AntiScalar self, Translator other) {
    return Translator(vec4(self.g0) * other.g0);
}

Flector flector_anti_scalar_anti_wedge(Flector self, AntiScalar other) {
    return Flector(self.g0 * vec4(other.g0), self.g1 * vec4(other.g0));
}

MultiVector flector_flector_anti_wedge(Flector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity flector_flector_at_infinity_anti_wedge(Flector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w));
}

MultiVectorAtInfinity flector_horizon_anti_wedge(Flector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

Point flector_line_anti_wedge(Flector self, Line other) {
    return Point(vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity flector_line_at_infinity_anti_wedge(Flector self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point flector_line_at_origin_anti_wedge(Flector self, LineAtOrigin other) {
    return Point(vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Flector flector_magnitude_anti_wedge(Flector self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.y), self.g1 * vec4(other.g0.y));
}

Flector flector_motor_anti_wedge(Flector self, Motor other) {
    return Flector(self.g0 * vec4(other.g0.w) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 * vec4(other.g0.w));
}

MultiVector flector_multi_vector_anti_wedge(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g0.w) * vec2(-other.g4.w, 0.0) + vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z) * vec2(other.g1.z, 0.0) + vec2(self.g1.w) * vec2(other.g1.w, 0.0), self.g0 * vec4(other.g0.y) + vec4(self.g1.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g4.w) + vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), self.g1 * vec4(other.g0.y));
}

MultiVectorAtInfinity flector_multi_vector_at_infinity_anti_wedge(Flector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0.y, 0.0) + vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z) * vec2(other.g1.z, 0.0), vec3(self.g1.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.y));
}

MultiVector flector_multi_vector_at_origin_anti_wedge(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.x, 0.0), self.g0 * vec4(other.g0.y) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g1.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g1.w) * other.g2, self.g1 * vec4(other.g0.y));
}

Scalar flector_origin_anti_wedge(Flector self, Origin other) {
    return Scalar(self.g1.w * other.g0);
}

MultiVector flector_plane_anti_wedge(Flector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_plane_at_origin_anti_wedge(Flector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g1.w) * other.g0, vec4(0.0));
}

Scalar flector_point_anti_wedge(Flector self, Point other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z + self.g1.w * other.g0.w);
}

Scalar flector_point_at_infinity_anti_wedge(Flector self, PointAtInfinity other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Flector flector_rotor_anti_wedge(Flector self, Rotor other) {
    return Flector(self.g0 * vec4(other.g0.w) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g1 * vec4(other.g0.w));
}

MultiVector flector_transflector_anti_wedge(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Flector flector_translator_anti_wedge(Flector self, Translator other) {
    return Flector(self.g0 * vec4(other.g0.w) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g1 * vec4(other.g0.w));
}

FlectorAtInfinity flector_at_infinity_anti_scalar_anti_wedge(FlectorAtInfinity self, AntiScalar other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVectorAtInfinity flector_at_infinity_flector_anti_wedge(FlectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

PointAtInfinity flector_at_infinity_line_anti_wedge(FlectorAtInfinity self, Line other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

PointAtInfinity flector_at_infinity_line_at_origin_anti_wedge(FlectorAtInfinity self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

FlectorAtInfinity flector_at_infinity_magnitude_anti_wedge(FlectorAtInfinity self, Magnitude other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.y));
}

FlectorAtInfinity flector_at_infinity_motor_anti_wedge(FlectorAtInfinity self, Motor other) {
    return FlectorAtInfinity(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_anti_wedge(FlectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g0.w) * vec2(other.g1.w, other.g0.y), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_origin_anti_wedge(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

Scalar flector_at_infinity_origin_anti_wedge(FlectorAtInfinity self, Origin other) {
    return Scalar(self.g0.w * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_plane_anti_wedge(FlectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity flector_at_infinity_plane_at_origin_anti_wedge(FlectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.w) * other.g0);
}

Scalar flector_at_infinity_point_anti_wedge(FlectorAtInfinity self, Point other) {
    return Scalar(self.g0.w * other.g0.w);
}

FlectorAtInfinity flector_at_infinity_rotor_anti_wedge(FlectorAtInfinity self, Rotor other) {
    return FlectorAtInfinity(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_transflector_anti_wedge(FlectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(0.0), vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

FlectorAtInfinity flector_at_infinity_translator_anti_wedge(FlectorAtInfinity self, Translator other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.w));
}

Horizon horizon_anti_scalar_anti_wedge(Horizon self, AntiScalar other) {
    return Horizon(self.g0 * other.g0);
}

MultiVectorAtInfinity horizon_flector_anti_wedge(Horizon self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

PointAtInfinity horizon_line_anti_wedge(Horizon self, Line other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

PointAtInfinity horizon_line_at_origin_anti_wedge(Horizon self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Horizon horizon_magnitude_anti_wedge(Horizon self, Magnitude other) {
    return Horizon(self.g0 * other.g0.y);
}

FlectorAtInfinity horizon_motor_anti_wedge(Horizon self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

MultiVectorAtInfinity horizon_multi_vector_anti_wedge(Horizon self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g1.w, other.g0.y), vec3(self.g0) * other.g2, vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z));
}

MultiVectorAtInfinity horizon_multi_vector_at_origin_anti_wedge(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Scalar horizon_origin_anti_wedge(Horizon self, Origin other) {
    return Scalar(self.g0 * other.g0);
}

LineAtInfinity horizon_plane_anti_wedge(Horizon self, Plane other) {
    return LineAtInfinity(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtInfinity horizon_plane_at_origin_anti_wedge(Horizon self, PlaneAtOrigin other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

Scalar horizon_point_anti_wedge(Horizon self, Point other) {
    return Scalar(self.g0 * other.g0.w);
}

FlectorAtInfinity horizon_rotor_anti_wedge(Horizon self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

LineAtInfinity horizon_transflector_anti_wedge(Horizon self, Transflector other) {
    return LineAtInfinity(vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

Horizon horizon_translator_anti_wedge(Horizon self, Translator other) {
    return Horizon(self.g0 * other.g0.w);
}

Line line_anti_scalar_anti_wedge(Line self, AntiScalar other) {
    return Line(self.g0 * vec3(other.g0), self.g1 * vec3(other.g0));
}

Point line_flector_anti_wedge(Line self, Flector other) {
    return Point(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0));
}

PointAtInfinity line_flector_at_infinity_anti_wedge(Line self, FlectorAtInfinity other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

PointAtInfinity line_horizon_anti_wedge(Line self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

Scalar line_line_anti_wedge(Line self, Line other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Scalar line_line_at_infinity_anti_wedge(Line self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Scalar line_line_at_origin_anti_wedge(Line self, LineAtOrigin other) {
    return Scalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Line line_magnitude_anti_wedge(Line self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.y), self.g1 * vec3(other.g0.y));
}

MultiVector line_motor_anti_wedge(Line self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), self.g1 * vec3(other.g0.w), vec4(0.0));
}

MultiVector line_multi_vector_anti_wedge(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g3.x, 0.0) + vec2(self.g0.y) * vec2(-other.g3.y, 0.0) + vec2(self.g0.z) * vec2(-other.g3.z, 0.0) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g0.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g1.x) * vec4(0.0, -other.g4.z, other.g4.y, 0.0) + vec4(self.g1.y) * vec4(other.g4.z, 0.0, -other.g4.x, 0.0) + vec4(self.g1.z) * vec4(-other.g4.y, other.g4.x, 0.0, 0.0), self.g0 * vec3(other.g0.y), self.g1 * vec3(other.g0.y), vec4(0.0));
}

MultiVectorAtInfinity line_multi_vector_at_infinity_anti_wedge(Line self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

MultiVector line_multi_vector_at_origin_anti_wedge(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.x) * vec4(0.0, -other.g2.z, other.g2.y, 0.0) + vec4(self.g1.y) * vec4(other.g2.z, 0.0, -other.g2.x, 0.0) + vec4(self.g1.z) * vec4(-other.g2.y, other.g2.x, 0.0, 0.0), self.g0 * vec3(other.g0.y), self.g1 * vec3(other.g0.y), vec4(0.0));
}

Point line_plane_anti_wedge(Line self, Plane other) {
    return Point(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0));
}

Point line_plane_at_origin_anti_wedge(Line self, PlaneAtOrigin other) {
    return Point(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0));
}

MultiVector line_rotor_anti_wedge(Line self, Rotor other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), self.g1 * vec3(other.g0.w), vec4(0.0));
}

Point line_transflector_anti_wedge(Line self, Transflector other) {
    return Point(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0));
}

MultiVector line_translator_anti_wedge(Line self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), self.g1 * vec3(other.g0.w), vec4(0.0));
}

LineAtInfinity line_at_infinity_anti_scalar_anti_wedge(LineAtInfinity self, AntiScalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

PointAtInfinity line_at_infinity_flector_anti_wedge(LineAtInfinity self, Flector other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

Scalar line_at_infinity_line_anti_wedge(LineAtInfinity self, Line other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Scalar line_at_infinity_line_at_origin_anti_wedge(LineAtInfinity self, LineAtOrigin other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtInfinity line_at_infinity_magnitude_anti_wedge(LineAtInfinity self, Magnitude other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.y));
}

MultiVectorAtInfinity line_at_infinity_motor_anti_wedge(LineAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), self.g0 * vec3(other.g0.w));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_anti_wedge(LineAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, 0.0), self.g0 * vec3(other.g0.y));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_origin_anti_wedge(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, 0.0), self.g0 * vec3(other.g0.y));
}

PointAtInfinity line_at_infinity_plane_anti_wedge(LineAtInfinity self, Plane other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PointAtInfinity line_at_infinity_plane_at_origin_anti_wedge(LineAtInfinity self, PlaneAtOrigin other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtInfinity line_at_infinity_rotor_anti_wedge(LineAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), self.g0 * vec3(other.g0.w));
}

PointAtInfinity line_at_infinity_transflector_anti_wedge(LineAtInfinity self, Transflector other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

LineAtInfinity line_at_infinity_translator_anti_wedge(LineAtInfinity self, Translator other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.w));
}

LineAtOrigin line_at_origin_anti_scalar_anti_wedge(LineAtOrigin self, AntiScalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Point line_at_origin_flector_anti_wedge(LineAtOrigin self, Flector other) {
    return Point(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

PointAtInfinity line_at_origin_flector_at_infinity_anti_wedge(LineAtOrigin self, FlectorAtInfinity other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

PointAtInfinity line_at_origin_horizon_anti_wedge(LineAtOrigin self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

Scalar line_at_origin_line_anti_wedge(LineAtOrigin self, Line other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

Scalar line_at_origin_line_at_infinity_anti_wedge(LineAtOrigin self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtOrigin line_at_origin_magnitude_anti_wedge(LineAtOrigin self, Magnitude other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.y));
}

MultiVector line_at_origin_motor_anti_wedge(LineAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(0.0), vec4(0.0));
}

MultiVector line_at_origin_multi_vector_anti_wedge(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g3.x, 0.0) + vec2(self.g0.y) * vec2(-other.g3.y, 0.0) + vec2(self.g0.z) * vec2(-other.g3.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g0.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z), self.g0 * vec3(other.g0.y), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity line_at_origin_multi_vector_at_infinity_anti_wedge(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_anti_wedge(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

Point line_at_origin_plane_anti_wedge(LineAtOrigin self, Plane other) {
    return Point(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Origin line_at_origin_plane_at_origin_anti_wedge(LineAtOrigin self, PlaneAtOrigin other) {
    return Origin(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtOrigin line_at_origin_rotor_anti_wedge(LineAtOrigin self, Rotor other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.w));
}

Point line_at_origin_transflector_anti_wedge(LineAtOrigin self, Transflector other) {
    return Point(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVector line_at_origin_translator_anti_wedge(LineAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(0.0), vec4(0.0));
}

Magnitude magnitude_anti_scalar_anti_wedge(Magnitude self, AntiScalar other) {
    return Magnitude(self.g0 * vec2(other.g0));
}

Flector magnitude_flector_anti_wedge(Magnitude self, Flector other) {
    return Flector(vec4(self.g0.y) * other.g0, vec4(self.g0.y) * other.g1);
}

FlectorAtInfinity magnitude_flector_at_infinity_anti_wedge(Magnitude self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.y) * other.g0);
}

Horizon magnitude_horizon_anti_wedge(Magnitude self, Horizon other) {
    return Horizon(self.g0.y * other.g0);
}

Line magnitude_line_anti_wedge(Magnitude self, Line other) {
    return Line(vec3(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1);
}

LineAtInfinity magnitude_line_at_infinity_anti_wedge(Magnitude self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.y) * other.g0);
}

LineAtOrigin magnitude_line_at_origin_anti_wedge(Magnitude self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.y) * other.g0);
}

Magnitude magnitude_magnitude_anti_wedge(Magnitude self, Magnitude other) {
    return Magnitude(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0);
}

MultiVector magnitude_motor_anti_wedge(Magnitude self, Motor other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.y) * other.g1, vec4(0.0));
}

MultiVector magnitude_multi_vector_anti_wedge(Magnitude self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0, vec4(self.g0.y) * other.g1, vec3(self.g0.y) * other.g2, vec3(self.g0.y) * other.g3, vec4(self.g0.y) * other.g4);
}

MultiVectorAtInfinity magnitude_multi_vector_at_infinity_anti_wedge(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1, vec3(self.g0.y) * other.g2);
}

MultiVector magnitude_multi_vector_at_origin_anti_wedge(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 * vec2(other.g0.y), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x), vec3(self.g0.y) * other.g1, vec3(0.0), vec4(self.g0.y) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Origin magnitude_origin_anti_wedge(Magnitude self, Origin other) {
    return Origin(self.g0.y * other.g0);
}

Plane magnitude_plane_anti_wedge(Magnitude self, Plane other) {
    return Plane(vec4(self.g0.y) * other.g0);
}

PlaneAtOrigin magnitude_plane_at_origin_anti_wedge(Magnitude self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.y) * other.g0);
}

Point magnitude_point_anti_wedge(Magnitude self, Point other) {
    return Point(vec4(self.g0.y) * other.g0);
}

PointAtInfinity magnitude_point_at_infinity_anti_wedge(Magnitude self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.y) * other.g0);
}

MultiVector magnitude_rotor_anti_wedge(Magnitude self, Rotor other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

Scalar magnitude_scalar_anti_wedge(Magnitude self, Scalar other) {
    return Scalar(self.g0.y * other.g0);
}

Transflector magnitude_transflector_anti_wedge(Magnitude self, Transflector other) {
    return Transflector(vec3(self.g0.y) * other.g0, vec4(self.g0.y) * other.g1);
}

MultiVector magnitude_translator_anti_wedge(Magnitude self, Translator other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Motor motor_anti_scalar_anti_wedge(Motor self, AntiScalar other) {
    return Motor(self.g0 * vec4(other.g0), self.g1 * vec3(other.g0));
}

Flector motor_flector_anti_wedge(Motor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity motor_flector_at_infinity_anti_wedge(Motor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

FlectorAtInfinity motor_horizon_anti_wedge(Motor self, Horizon other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector motor_line_anti_wedge(Motor self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity motor_line_at_infinity_anti_wedge(Motor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.w) * other.g0);
}

MultiVector motor_line_at_origin_anti_wedge(Motor self, LineAtOrigin other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(0.0), vec4(0.0));
}

MultiVector motor_magnitude_anti_wedge(Motor self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), self.g1 * vec3(other.g0.y), vec4(0.0));
}

MultiVector motor_motor_anti_wedge(Motor self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g1.z, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.w) * other.g1 + self.g1 * vec3(other.g0.w), vec4(0.0));
}

MultiVector motor_multi_vector_anti_wedge(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g3.x, 0.0) + vec2(self.g0.y) * vec2(-other.g3.y, 0.0) + vec2(self.g0.z) * vec2(-other.g3.z, 0.0) + vec2(self.g0.w) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g0.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g0.w) * other.g1 + vec4(self.g1.x) * vec4(0.0, -other.g4.z, other.g4.y, 0.0) + vec4(self.g1.y) * vec4(other.g4.z, 0.0, -other.g4.x, 0.0) + vec4(self.g1.z) * vec4(-other.g4.y, other.g4.x, 0.0, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.w) * other.g3 + self.g1 * vec3(other.g0.y), vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity motor_multi_vector_at_infinity_anti_wedge(Motor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

MultiVector motor_multi_vector_at_origin_anti_wedge(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.y) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x) * vec4(0.0, -other.g2.z, other.g2.y, 0.0) + vec4(self.g1.y) * vec4(other.g2.z, 0.0, -other.g2.x, 0.0) + vec4(self.g1.z) * vec4(-other.g2.y, other.g2.x, 0.0, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, self.g1 * vec3(other.g0.y), vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Origin motor_origin_anti_wedge(Motor self, Origin other) {
    return Origin(self.g0.w * other.g0);
}

Flector motor_plane_anti_wedge(Motor self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.w) * other.g0);
}

Flector motor_plane_at_origin_anti_wedge(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point motor_point_anti_wedge(Motor self, Point other) {
    return Point(vec4(self.g0.w) * other.g0);
}

PointAtInfinity motor_point_at_infinity_anti_wedge(Motor self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector motor_rotor_anti_wedge(Motor self, Rotor other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), self.g1 * vec3(other.g0.w), vec4(0.0));
}

Scalar motor_scalar_anti_wedge(Motor self, Scalar other) {
    return Scalar(self.g0.w * other.g0);
}

Flector motor_transflector_anti_wedge(Motor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec4(self.g0.w) * other.g1);
}

MultiVector motor_translator_anti_wedge(Motor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec4(0.0));
}

MultiVector multi_vector_anti_scalar_anti_wedge(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0 * vec2(other.g0), self.g1 * vec4(other.g0), self.g2 * vec3(other.g0), self.g3 * vec3(other.g0), self.g4 * vec4(other.g0));
}

MultiVector multi_vector_flector_anti_wedge(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.w) * vec2(-other.g1.w, 0.0) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g2.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g2.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g3.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g3.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec3(self.g4.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g1.w) + vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.y) * other.g1);
}

MultiVectorAtInfinity multi_vector_flector_at_infinity_anti_wedge(MultiVector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g2 * vec3(other.g0.w), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_horizon_anti_wedge(MultiVector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(0.0, other.g0) + vec2(self.g1.w) * vec2(-other.g0, 0.0), self.g2 * vec3(other.g0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0));
}

MultiVector multi_vector_line_anti_wedge(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity multi_vector_line_at_infinity_anti_wedge(MultiVector self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g4.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0);
}

MultiVector multi_vector_line_at_origin_anti_wedge(MultiVector self, LineAtOrigin other) {
    return MultiVector(vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec3(self.g0.y) * other.g0, vec3(0.0), vec4(0.0));
}

MultiVector multi_vector_magnitude_anti_wedge(MultiVector self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0, self.g1 * vec4(other.g0.y), self.g2 * vec3(other.g0.y), self.g3 * vec3(other.g0.y), self.g4 * vec4(other.g0.y));
}

MultiVector multi_vector_motor_anti_wedge(MultiVector self, Motor other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), self.g1 * vec4(other.g0.w) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g2 * vec3(other.g0.w), vec3(self.g0.y) * other.g1 + self.g3 * vec3(other.g0.w), self.g4 * vec4(other.g0.w));
}

MultiVector multi_vector_multi_vector_anti_wedge(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g4.x, 0.0) + vec2(self.g1.y) * vec2(-other.g4.y, 0.0) + vec2(self.g1.z) * vec2(-other.g4.z, 0.0) + vec2(self.g1.w) * vec2(-other.g4.w, 0.0) + vec2(self.g2.x) * vec2(-other.g3.x, 0.0) + vec2(self.g2.y) * vec2(-other.g3.y, 0.0) + vec2(self.g2.z) * vec2(-other.g3.z, 0.0) + vec2(self.g3.x) * vec2(-other.g2.x, 0.0) + vec2(self.g3.y) * vec2(-other.g2.y, 0.0) + vec2(self.g3.z) * vec2(-other.g2.z, 0.0) + vec2(self.g4.x) * vec2(other.g1.x, 0.0) + vec2(self.g4.y) * vec2(other.g1.y, 0.0) + vec2(self.g4.z) * vec2(other.g1.z, 0.0) + vec2(self.g4.w) * vec2(other.g1.w, 0.0), vec4(self.g0.y) * other.g1 + self.g1 * vec4(other.g0.y) + vec4(self.g2.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g2.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g3.x) * vec4(0.0, -other.g4.z, other.g4.y, 0.0) + vec4(self.g3.y) * vec4(other.g4.z, 0.0, -other.g4.x, 0.0) + vec4(self.g3.z) * vec4(-other.g4.y, other.g4.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g4.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g4.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z) + vec4(self.g4.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g0.y) * other.g2 + self.g2 * vec3(other.g0.y) + vec3(self.g4.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g4.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g4.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(self.g0.y) * other.g3 + self.g3 * vec3(other.g0.y) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g4.w) + vec3(self.g4.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.y) * other.g4 + self.g4 * vec4(other.g0.y));
}

MultiVectorAtInfinity multi_vector_multi_vector_at_infinity_anti_wedge(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * other.g0 + vec2(self.g1.w) * vec2(-other.g0.y, 0.0) + vec2(self.g2.x) * vec2(-other.g2.x, 0.0) + vec2(self.g2.y) * vec2(-other.g2.y, 0.0) + vec2(self.g2.z) * vec2(-other.g2.z, 0.0) + vec2(self.g4.x) * vec2(other.g1.x, 0.0) + vec2(self.g4.y) * vec2(other.g1.y, 0.0) + vec2(self.g4.z) * vec2(other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + self.g2 * vec3(other.g0.y) + vec3(self.g4.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g4.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g4.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(self.g0.y) * other.g2 - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.y));
}

MultiVector multi_vector_multi_vector_at_origin_anti_wedge(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 * vec2(other.g0.y) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0) + vec2(self.g3.x) * vec2(-other.g1.x, 0.0) + vec2(self.g3.y) * vec2(-other.g1.y, 0.0) + vec2(self.g3.z) * vec2(-other.g1.z, 0.0) + vec2(self.g4.w) * vec2(other.g0.x, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x) + self.g1 * vec4(other.g0.y) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g3.x) * vec4(0.0, -other.g2.z, other.g2.y, 0.0) + vec4(self.g3.y) * vec4(other.g2.z, 0.0, -other.g2.x, 0.0) + vec4(self.g3.z) * vec4(-other.g2.y, other.g2.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g4.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.y) * other.g1 + self.g2 * vec3(other.g0.y) + vec3(self.g4.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g4.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g4.z) * vec3(-other.g2.y, other.g2.x, 0.0), self.g3 * vec3(other.g0.y) + vec3(self.g4.w) * other.g2, vec4(self.g0.y) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0) + self.g4 * vec4(other.g0.y));
}

MultiVector multi_vector_origin_anti_wedge(MultiVector self, Origin other) {
    return MultiVector(vec2(self.g4.w) * vec2(other.g0, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector multi_vector_plane_anti_wedge(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g3.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g3.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w) + vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y) * other.g0);
}

MultiVector multi_vector_plane_at_origin_anti_wedge(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g3.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g3.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g4.w) * other.g0, vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_point_anti_wedge(MultiVector self, Point other) {
    return MultiVector(vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec4(self.g0.y) * other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multi_vector_point_at_infinity_anti_wedge(MultiVector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVector multi_vector_rotor_anti_wedge(MultiVector self, Rotor other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), self.g1 * vec4(other.g0.w) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g2 * vec3(other.g0.w), self.g3 * vec3(other.g0.w), self.g4 * vec4(other.g0.w));
}

Scalar multi_vector_scalar_anti_wedge(MultiVector self, Scalar other) {
    return Scalar(self.g0.y * other.g0);
}

MultiVector multi_vector_transflector_anti_wedge(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.w) * vec2(-other.g1.w, 0.0) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g2.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g3.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g3.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec3(self.g4.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g1.w) + vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.y) * other.g1);
}

MultiVector multi_vector_translator_anti_wedge(MultiVector self, Translator other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), self.g1 * vec4(other.g0.w) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g2 * vec3(other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g3 * vec3(other.g0.w), self.g4 * vec4(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_anti_scalar_anti_wedge(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_anti_wedge(MultiVectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(other.g0.w, 0.0) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_anti_wedge(MultiVectorAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_origin_anti_wedge(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_magnitude_anti_wedge(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.y), self.g1 * vec3(other.g0.y), self.g2 * vec3(other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_motor_anti_wedge(MultiVectorAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_anti_wedge(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * vec2(other.g1.w, other.g0.y) + vec2(self.g1.x) * vec2(-other.g4.x, 0.0) + vec2(self.g1.y) * vec2(-other.g4.y, 0.0) + vec2(self.g1.z) * vec2(-other.g4.z, 0.0) + vec2(self.g2.x) * vec2(-other.g2.x, 0.0) + vec2(self.g2.y) * vec2(-other.g2.y, 0.0) + vec2(self.g2.z) * vec2(-other.g2.z, 0.0), vec3(self.g0.y) * other.g2 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g2.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g2.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(self.g0.y) * vec3(other.g4.x, other.g4.y, other.g4.z) + self.g2 * vec3(other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g2.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g2.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g0.y) * other.g2 + self.g2 * vec3(other.g0.y));
}

Scalar multi_vector_at_infinity_origin_anti_wedge(MultiVectorAtInfinity self, Origin other) {
    return Scalar(self.g0.y * other.g0);
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_anti_wedge(MultiVectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_at_origin_anti_wedge(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * other.g0);
}

Scalar multi_vector_at_infinity_point_anti_wedge(MultiVectorAtInfinity self, Point other) {
    return Scalar(self.g0.y * other.g0.w);
}

MultiVectorAtInfinity multi_vector_at_infinity_rotor_anti_wedge(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_transflector_anti_wedge(MultiVectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_translator_anti_wedge(MultiVectorAtInfinity self, Translator other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w), self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

MultiVectorAtOrigin multi_vector_at_origin_anti_scalar_anti_wedge(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_flector_anti_wedge(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.w, 0.0) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z), vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - self.g2 * vec3(other.g1.w), vec4(self.g0.y) * other.g1);
}

MultiVectorAtInfinity multi_vector_at_origin_flector_at_infinity_anti_wedge(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0 * vec2(-other.g0.w) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec3(0.0) - self.g2 * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_origin_horizon_anti_wedge(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtInfinity(self.g0 * vec2(-other.g0), self.g1 * vec3(other.g0), vec3(0.0) - self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_line_anti_wedge(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity multi_vector_at_origin_line_at_infinity_anti_wedge(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_origin_anti_wedge(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVector multi_vector_at_origin_magnitude_anti_wedge(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVector(vec2(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y), self.g1 * vec3(other.g0.y), vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVector multi_vector_at_origin_motor_anti_wedge(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.w) + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec3(self.g0.y) * other.g1, vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

MultiVector multi_vector_at_origin_multi_vector_anti_wedge(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.w, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g3.x, 0.0) + vec2(self.g1.y) * vec2(-other.g3.y, 0.0) + vec2(self.g1.z) * vec2(-other.g3.z, 0.0) + vec2(self.g2.x) * vec2(other.g1.x, 0.0) + vec2(self.g2.y) * vec2(other.g1.y, 0.0) + vec2(self.g2.z) * vec2(other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g1.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g2.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g2.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g2.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z), vec3(self.g0.y) * other.g2 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g2.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g2.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(self.g0.y) * other.g3 - self.g2 * vec3(other.g4.w), vec4(self.g0.y) * other.g4 + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVectorAtInfinity multi_vector_at_origin_multi_vector_at_infinity_anti_wedge(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0) + vec2(self.g2.x) * vec2(other.g1.x, 0.0) + vec2(self.g2.y) * vec2(other.g1.y, 0.0) + vec2(self.g2.z) * vec2(other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(self.g0.y) * other.g2 - self.g2 * vec3(other.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_anti_wedge(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g2.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g2.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g0.y) * other.g2 + self.g2 * vec3(other.g0.y));
}

Origin multi_vector_at_origin_origin_anti_wedge(MultiVectorAtOrigin self, Origin other) {
    return Origin(self.g0.y * other.g0);
}

MultiVector multi_vector_at_origin_plane_anti_wedge(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.w, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - self.g2 * vec3(other.g0.w), vec4(self.g0.y) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_plane_at_origin_anti_wedge(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * other.g0);
}

MultiVector multi_vector_at_origin_point_anti_wedge(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multi_vector_at_origin_point_at_infinity_anti_wedge(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_rotor_anti_wedge(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

Scalar multi_vector_at_origin_scalar_anti_wedge(MultiVectorAtOrigin self, Scalar other) {
    return Scalar(self.g0.y * other.g0);
}

MultiVector multi_vector_at_origin_transflector_anti_wedge(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.w, 0.0) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z), vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - self.g2 * vec3(other.g1.w), vec4(self.g0.y) * other.g1);
}

MultiVector multi_vector_at_origin_translator_anti_wedge(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.w) + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g1 * vec3(other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

Origin origin_anti_scalar_anti_wedge(Origin self, AntiScalar other) {
    return Origin(self.g0 * other.g0);
}

Scalar origin_flector_anti_wedge(Origin self, Flector other) {
    return Scalar(0.0 - self.g0 * other.g1.w);
}

Scalar origin_flector_at_infinity_anti_wedge(Origin self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0 * other.g0.w);
}

Scalar origin_horizon_anti_wedge(Origin self, Horizon other) {
    return Scalar(0.0 - self.g0 * other.g0);
}

Origin origin_magnitude_anti_wedge(Origin self, Magnitude other) {
    return Origin(self.g0 * other.g0.y);
}

Origin origin_motor_anti_wedge(Origin self, Motor other) {
    return Origin(self.g0 * other.g0.w);
}

MultiVector origin_multi_vector_anti_wedge(Origin self, MultiVector other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g4.w, 0.0), vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar origin_multi_vector_at_infinity_anti_wedge(Origin self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0 * other.g0.y);
}

Origin origin_multi_vector_at_origin_anti_wedge(Origin self, MultiVectorAtOrigin other) {
    return Origin(self.g0 * other.g0.y);
}

Scalar origin_plane_anti_wedge(Origin self, Plane other) {
    return Scalar(0.0 - self.g0 * other.g0.w);
}

Origin origin_rotor_anti_wedge(Origin self, Rotor other) {
    return Origin(self.g0 * other.g0.w);
}

Scalar origin_transflector_anti_wedge(Origin self, Transflector other) {
    return Scalar(0.0 - self.g0 * other.g1.w);
}

Origin origin_translator_anti_wedge(Origin self, Translator other) {
    return Origin(self.g0 * other.g0.w);
}

Plane plane_anti_scalar_anti_wedge(Plane self, AntiScalar other) {
    return Plane(self.g0 * vec4(other.g0));
}

MultiVector plane_flector_anti_wedge(Plane self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity plane_flector_at_infinity_anti_wedge(Plane self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w));
}

LineAtInfinity plane_horizon_anti_wedge(Plane self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Point plane_line_anti_wedge(Plane self, Line other) {
    return Point(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity plane_line_at_infinity_anti_wedge(Plane self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point plane_line_at_origin_anti_wedge(Plane self, LineAtOrigin other) {
    return Point(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Plane plane_magnitude_anti_wedge(Plane self, Magnitude other) {
    return Plane(self.g0 * vec4(other.g0.y));
}

Flector plane_motor_anti_wedge(Plane self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0 * vec4(other.g0.w));
}

MultiVector plane_multi_vector_anti_wedge(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0) + vec2(self.g0.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g4.w) + vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), self.g0 * vec4(other.g0.y));
}

MultiVectorAtInfinity plane_multi_vector_at_infinity_anti_wedge(Plane self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0), vec3(self.g0.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y));
}

MultiVector plane_multi_vector_at_origin_anti_wedge(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.w) * vec2(other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g0.w) * other.g2, self.g0 * vec4(other.g0.y));
}

Scalar plane_origin_anti_wedge(Plane self, Origin other) {
    return Scalar(self.g0.w * other.g0);
}

Line plane_plane_anti_wedge(Plane self, Plane other) {
    return Line(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Line plane_plane_at_origin_anti_wedge(Plane self, PlaneAtOrigin other) {
    return Line(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.w) * other.g0);
}

Scalar plane_point_anti_wedge(Plane self, Point other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

Scalar plane_point_at_infinity_anti_wedge(Plane self, PointAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Flector plane_rotor_anti_wedge(Plane self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g0 * vec4(other.g0.w));
}

MultiVector plane_transflector_anti_wedge(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Transflector plane_translator_anti_wedge(Plane self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), self.g0 * vec4(other.g0.w));
}

PlaneAtOrigin plane_at_origin_anti_scalar_anti_wedge(PlaneAtOrigin self, AntiScalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

MultiVector plane_at_origin_flector_anti_wedge(PlaneAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g1.w), vec4(0.0));
}

MultiVectorAtInfinity plane_at_origin_flector_at_infinity_anti_wedge(PlaneAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - self.g0 * vec3(other.g0.w));
}

LineAtInfinity plane_at_origin_horizon_anti_wedge(PlaneAtOrigin self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0));
}

Point plane_at_origin_line_anti_wedge(PlaneAtOrigin self, Line other) {
    return Point(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

PointAtInfinity plane_at_origin_line_at_infinity_anti_wedge(PlaneAtOrigin self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Origin plane_at_origin_line_at_origin_anti_wedge(PlaneAtOrigin self, LineAtOrigin other) {
    return Origin(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin plane_at_origin_magnitude_anti_wedge(PlaneAtOrigin self, Magnitude other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0.y));
}

Flector plane_at_origin_motor_anti_wedge(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

MultiVector plane_at_origin_multi_vector_anti_wedge(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z), vec3(self.g0.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g4.w), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVectorAtInfinity plane_at_origin_multi_vector_at_infinity_anti_wedge(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0), vec3(self.g0.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g0.y));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_anti_wedge(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, 0.0), self.g0 * vec3(other.g0.y));
}

Line plane_at_origin_plane_anti_wedge(PlaneAtOrigin self, Plane other) {
    return Line(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g0.w));
}

LineAtOrigin plane_at_origin_plane_at_origin_anti_wedge(PlaneAtOrigin self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Scalar plane_at_origin_point_anti_wedge(PlaneAtOrigin self, Point other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar plane_at_origin_point_at_infinity_anti_wedge(PlaneAtOrigin self, PointAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Flector plane_at_origin_rotor_anti_wedge(PlaneAtOrigin self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

MultiVector plane_at_origin_transflector_anti_wedge(PlaneAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g1.w), vec4(0.0));
}

Transflector plane_at_origin_translator_anti_wedge(PlaneAtOrigin self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

Point point_anti_scalar_anti_wedge(Point self, AntiScalar other) {
    return Point(self.g0 * vec4(other.g0));
}

Scalar point_flector_anti_wedge(Point self, Flector other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g0.w * other.g1.w);
}

Scalar point_flector_at_infinity_anti_wedge(Point self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0.w * other.g0.w);
}

Scalar point_horizon_anti_wedge(Point self, Horizon other) {
    return Scalar(0.0 - self.g0.w * other.g0);
}

Point point_magnitude_anti_wedge(Point self, Magnitude other) {
    return Point(self.g0 * vec4(other.g0.y));
}

Point point_motor_anti_wedge(Point self, Motor other) {
    return Point(self.g0 * vec4(other.g0.w));
}

MultiVector point_multi_vector_anti_wedge(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g0.w) * vec2(-other.g4.w, 0.0), self.g0 * vec4(other.g0.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar point_multi_vector_at_infinity_anti_wedge(Point self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0.w * other.g0.y);
}

MultiVector point_multi_vector_at_origin_anti_wedge(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec4(other.g0.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar point_plane_anti_wedge(Point self, Plane other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z - self.g0.w * other.g0.w);
}

Scalar point_plane_at_origin_anti_wedge(Point self, PlaneAtOrigin other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Point point_rotor_anti_wedge(Point self, Rotor other) {
    return Point(self.g0 * vec4(other.g0.w));
}

Scalar point_transflector_anti_wedge(Point self, Transflector other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g0.w * other.g1.w);
}

Point point_translator_anti_wedge(Point self, Translator other) {
    return Point(self.g0 * vec4(other.g0.w));
}

PointAtInfinity point_at_infinity_anti_scalar_anti_wedge(PointAtInfinity self, AntiScalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

Scalar point_at_infinity_flector_anti_wedge(PointAtInfinity self, Flector other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

PointAtInfinity point_at_infinity_magnitude_anti_wedge(PointAtInfinity self, Magnitude other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.y));
}

PointAtInfinity point_at_infinity_motor_anti_wedge(PointAtInfinity self, Motor other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_anti_wedge(PointAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_origin_anti_wedge(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

Scalar point_at_infinity_plane_anti_wedge(PointAtInfinity self, Plane other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Scalar point_at_infinity_plane_at_origin_anti_wedge(PointAtInfinity self, PlaneAtOrigin other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PointAtInfinity point_at_infinity_rotor_anti_wedge(PointAtInfinity self, Rotor other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

Scalar point_at_infinity_transflector_anti_wedge(PointAtInfinity self, Transflector other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

PointAtInfinity point_at_infinity_translator_anti_wedge(PointAtInfinity self, Translator other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

Rotor rotor_anti_scalar_anti_wedge(Rotor self, AntiScalar other) {
    return Rotor(self.g0 * vec4(other.g0));
}

Flector rotor_flector_anti_wedge(Rotor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g0, vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity rotor_flector_at_infinity_anti_wedge(Rotor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

FlectorAtInfinity rotor_horizon_anti_wedge(Rotor self, Horizon other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector rotor_line_anti_wedge(Rotor self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity rotor_line_at_infinity_anti_wedge(Rotor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.w) * other.g0);
}

LineAtOrigin rotor_line_at_origin_anti_wedge(Rotor self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.w) * other.g0);
}

MultiVector rotor_magnitude_anti_wedge(Rotor self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec3(0.0), vec4(0.0));
}

MultiVector rotor_motor_anti_wedge(Rotor self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g1.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVector rotor_multi_vector_anti_wedge(Rotor self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g3.x, 0.0) + vec2(self.g0.y) * vec2(-other.g3.y, 0.0) + vec2(self.g0.z) * vec2(-other.g3.z, 0.0) + vec2(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g0.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g0.w) * other.g1, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.w) * other.g3, vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity rotor_multi_vector_at_infinity_anti_wedge(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_anti_wedge(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

Origin rotor_origin_anti_wedge(Rotor self, Origin other) {
    return Origin(self.g0.w * other.g0);
}

Flector rotor_plane_anti_wedge(Rotor self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.w) * other.g0);
}

Flector rotor_plane_at_origin_anti_wedge(Rotor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point rotor_point_anti_wedge(Rotor self, Point other) {
    return Point(vec4(self.g0.w) * other.g0);
}

PointAtInfinity rotor_point_at_infinity_anti_wedge(Rotor self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

Rotor rotor_rotor_anti_wedge(Rotor self, Rotor other) {
    return Rotor(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

Scalar rotor_scalar_anti_wedge(Rotor self, Scalar other) {
    return Scalar(self.g0.w * other.g0);
}

Flector rotor_transflector_anti_wedge(Rotor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.w) * other.g1);
}

MultiVector rotor_translator_anti_wedge(Rotor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Scalar scalar_anti_scalar_anti_wedge(Scalar self, AntiScalar other) {
    return Scalar(self.g0 * other.g0);
}

Scalar scalar_magnitude_anti_wedge(Scalar self, Magnitude other) {
    return Scalar(self.g0 * other.g0.y);
}

Scalar scalar_motor_anti_wedge(Scalar self, Motor other) {
    return Scalar(self.g0 * other.g0.w);
}

Scalar scalar_multi_vector_anti_wedge(Scalar self, MultiVector other) {
    return Scalar(self.g0 * other.g0.y);
}

Scalar scalar_multi_vector_at_origin_anti_wedge(Scalar self, MultiVectorAtOrigin other) {
    return Scalar(self.g0 * other.g0.y);
}

Scalar scalar_rotor_anti_wedge(Scalar self, Rotor other) {
    return Scalar(self.g0 * other.g0.w);
}

Scalar scalar_translator_anti_wedge(Scalar self, Translator other) {
    return Scalar(self.g0 * other.g0.w);
}

Transflector transflector_anti_scalar_anti_wedge(Transflector self, AntiScalar other) {
    return Transflector(self.g0 * vec3(other.g0), self.g1 * vec4(other.g0));
}

MultiVector transflector_flector_anti_wedge(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity transflector_flector_at_infinity_anti_wedge(Transflector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w));
}

LineAtInfinity transflector_horizon_anti_wedge(Transflector self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

Point transflector_line_anti_wedge(Transflector self, Line other) {
    return Point(vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity transflector_line_at_infinity_anti_wedge(Transflector self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point transflector_line_at_origin_anti_wedge(Transflector self, LineAtOrigin other) {
    return Point(vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Transflector transflector_magnitude_anti_wedge(Transflector self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.y), self.g1 * vec4(other.g0.y));
}

Flector transflector_motor_anti_wedge(Transflector self, Motor other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 * vec4(other.g0.w));
}

MultiVector transflector_multi_vector_anti_wedge(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z) * vec2(other.g1.z, 0.0) + vec2(self.g1.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g4.w) + vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), self.g1 * vec4(other.g0.y));
}

MultiVectorAtInfinity transflector_multi_vector_at_infinity_anti_wedge(Transflector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z) * vec2(other.g1.z, 0.0), vec3(self.g1.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.y));
}

MultiVector transflector_multi_vector_at_origin_anti_wedge(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.x, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g1.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g1.w) * other.g2, self.g1 * vec4(other.g0.y));
}

Scalar transflector_origin_anti_wedge(Transflector self, Origin other) {
    return Scalar(self.g1.w * other.g0);
}

MultiVector transflector_plane_anti_wedge(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_plane_at_origin_anti_wedge(Transflector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g1.w) * other.g0, vec4(0.0));
}

Scalar transflector_point_anti_wedge(Transflector self, Point other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z + self.g1.w * other.g0.w);
}

Scalar transflector_point_at_infinity_anti_wedge(Transflector self, PointAtInfinity other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Flector transflector_rotor_anti_wedge(Transflector self, Rotor other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g1 * vec4(other.g0.w));
}

MultiVector transflector_transflector_anti_wedge(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Transflector transflector_translator_anti_wedge(Transflector self, Translator other) {
    return Transflector(self.g0 * vec3(other.g0.w) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), self.g1 * vec4(other.g0.w));
}

Translator translator_anti_scalar_anti_wedge(Translator self, AntiScalar other) {
    return Translator(self.g0 * vec4(other.g0));
}

Flector translator_flector_anti_wedge(Translator self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0, vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity translator_flector_at_infinity_anti_wedge(Translator self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.w) * other.g0);
}

Horizon translator_horizon_anti_wedge(Translator self, Horizon other) {
    return Horizon(self.g0.w * other.g0);
}

MultiVector translator_line_anti_wedge(Translator self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec4(0.0));
}

LineAtInfinity translator_line_at_infinity_anti_wedge(Translator self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector translator_line_at_origin_anti_wedge(Translator self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(0.0), vec4(0.0));
}

MultiVector translator_magnitude_anti_wedge(Translator self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec4(0.0));
}

MultiVector translator_motor_anti_wedge(Translator self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVector translator_multi_vector_anti_wedge(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(0.0, -other.g4.z, other.g4.y, 0.0) + vec4(self.g0.y) * vec4(other.g4.z, 0.0, -other.g4.x, 0.0) + vec4(self.g0.z) * vec4(-other.g4.y, other.g4.x, 0.0, 0.0) + vec4(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g3, vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity translator_multi_vector_at_infinity_anti_wedge(Translator self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

MultiVector translator_multi_vector_at_origin_anti_wedge(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g1.z, other.g0.y), vec4(self.g0.x) * vec4(0.0, -other.g2.z, other.g2.y, 0.0) + vec4(self.g0.y) * vec4(other.g2.z, 0.0, -other.g2.x, 0.0) + self.g0.zzzw * vec4(-other.g2.y, other.g2.x, 0.0, other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Origin translator_origin_anti_wedge(Translator self, Origin other) {
    return Origin(self.g0.w * other.g0);
}

Transflector translator_plane_anti_wedge(Translator self, Plane other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.w) * other.g0);
}

Transflector translator_plane_at_origin_anti_wedge(Translator self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point translator_point_anti_wedge(Translator self, Point other) {
    return Point(vec4(self.g0.w) * other.g0);
}

PointAtInfinity translator_point_at_infinity_anti_wedge(Translator self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector translator_rotor_anti_wedge(Translator self, Rotor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec4(0.0));
}

Scalar translator_scalar_anti_wedge(Translator self, Scalar other) {
    return Scalar(self.g0.w * other.g0);
}

Transflector translator_transflector_anti_wedge(Translator self, Transflector other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g0.w) * other.g0, vec4(self.g0.w) * other.g1);
}

Translator translator_translator_anti_wedge(Translator self, Translator other) {
    return Translator(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

AntiScalar anti_scalar_magnitude_join(AntiScalar self, Magnitude other) {
    return AntiScalar(self.g0 * other.g0.x);
}

AntiScalar anti_scalar_multi_vector_join(AntiScalar self, MultiVector other) {
    return AntiScalar(self.g0 * other.g0.x);
}

AntiScalar anti_scalar_multi_vector_at_infinity_join(AntiScalar self, MultiVectorAtInfinity other) {
    return AntiScalar(self.g0 * other.g0.x);
}

AntiScalar anti_scalar_scalar_join(AntiScalar self, Scalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Motor flector_flector_join(Flector self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Motor flector_flector_at_infinity_join(Flector self, FlectorAtInfinity other) {
    return Motor(vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar flector_horizon_join(Flector self, Horizon other) {
    return AntiScalar(self.g0.w * other.g0);
}

Plane flector_line_join(Flector self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

Plane flector_line_at_infinity_join(Flector self, LineAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

PlaneAtOrigin flector_line_at_origin_join(Flector self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Flector flector_magnitude_join(Flector self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.x), self.g1 * vec4(other.g0.x));
}

Plane flector_motor_join(Flector self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector flector_multi_vector_join(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z) + vec2(self.g0.w) * vec2(0.0, other.g4.w) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) + vec2(self.g1.w) * vec2(0.0, -other.g1.w), self.g0 * vec4(other.g0.x), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0) + self.g1 * vec4(other.g0.x));
}

MultiVector flector_multi_vector_at_infinity_join(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.y) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), self.g0 * vec4(other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z) + self.g1 * vec4(other.g0.x));
}

MultiVectorAtOrigin flector_multi_vector_at_origin_join(Flector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z) + vec2(self.g1.w) * vec2(0.0, -other.g0.x), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

Rotor flector_origin_join(Flector self, Origin other) {
    return Rotor(self.g0.xyzx * vec4(-other.g0, -other.g0, -other.g0, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0));
}

AntiScalar flector_plane_join(Flector self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

AntiScalar flector_plane_at_origin_join(Flector self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Motor flector_point_join(Flector self, Point other) {
    return Motor(self.g0.xyzx * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Motor flector_point_at_infinity_join(Flector self, PointAtInfinity other) {
    return Motor(vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin flector_rotor_join(Flector self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Flector flector_scalar_join(Flector self, Scalar other) {
    return Flector(self.g0 * vec4(other.g0), self.g1 * vec4(other.g0));
}

Motor flector_transflector_join(Flector self, Transflector other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Plane flector_translator_join(Flector self, Translator other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

Motor flector_at_infinity_flector_join(FlectorAtInfinity self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtInfinity flector_at_infinity_flector_at_infinity_join(FlectorAtInfinity self, FlectorAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Plane flector_at_infinity_line_join(FlectorAtInfinity self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

Horizon flector_at_infinity_line_at_infinity_join(FlectorAtInfinity self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin flector_at_infinity_line_at_origin_join(FlectorAtInfinity self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

FlectorAtInfinity flector_at_infinity_magnitude_join(FlectorAtInfinity self, Magnitude other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.x));
}

Plane flector_at_infinity_motor_join(FlectorAtInfinity self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVector flector_at_infinity_multi_vector_join(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z) + vec2(self.g0.w) * vec2(0.0, -other.g1.w), self.g0.xyzx * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_join(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

MultiVectorAtOrigin flector_at_infinity_multi_vector_at_origin_join(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z) + vec2(self.g0.w) * vec2(0.0, -other.g0.x), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

Rotor flector_at_infinity_origin_join(FlectorAtInfinity self, Origin other) {
    return Rotor(vec4(0.0) - self.g0 * vec4(other.g0));
}

AntiScalar flector_at_infinity_plane_join(FlectorAtInfinity self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar flector_at_infinity_plane_at_origin_join(FlectorAtInfinity self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Motor flector_at_infinity_point_join(FlectorAtInfinity self, Point other) {
    return Motor(vec4(0.0) - self.g0 * vec4(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtInfinity flector_at_infinity_point_at_infinity_join(FlectorAtInfinity self, PointAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin flector_at_infinity_rotor_join(FlectorAtInfinity self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

FlectorAtInfinity flector_at_infinity_scalar_join(FlectorAtInfinity self, Scalar other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

Translator flector_at_infinity_transflector_join(FlectorAtInfinity self, Transflector other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g1.z));
}

Horizon flector_at_infinity_translator_join(FlectorAtInfinity self, Translator other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar horizon_flector_join(Horizon self, Flector other) {
    return AntiScalar(0.0 - self.g0 * other.g0.w);
}

Horizon horizon_magnitude_join(Horizon self, Magnitude other) {
    return Horizon(self.g0 * other.g0.x);
}

MultiVector horizon_multi_vector_join(Horizon self, MultiVector other) {
    return MultiVector(vec2(self.g0) * vec2(0.0, -other.g1.w), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

Horizon horizon_multi_vector_at_infinity_join(Horizon self, MultiVectorAtInfinity other) {
    return Horizon(self.g0 * other.g0.x);
}

AntiScalar horizon_multi_vector_at_origin_join(Horizon self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0 * other.g0.x);
}

AntiScalar horizon_origin_join(Horizon self, Origin other) {
    return AntiScalar(0.0 - self.g0 * other.g0);
}

AntiScalar horizon_point_join(Horizon self, Point other) {
    return AntiScalar(0.0 - self.g0 * other.g0.w);
}

Horizon horizon_scalar_join(Horizon self, Scalar other) {
    return Horizon(self.g0 * other.g0);
}

Plane line_flector_join(Line self, Flector other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Plane line_flector_at_infinity_join(Line self, FlectorAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar line_line_join(Line self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

AntiScalar line_line_at_infinity_join(Line self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_line_at_origin_join(Line self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Line line_magnitude_join(Line self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.x), self.g1 * vec3(other.g0.x));
}

AntiScalar line_motor_join(Line self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

MultiVector line_multi_vector_join(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) + vec2(self.g1.x) * vec2(0.0, -other.g2.x) + vec2(self.g1.y) * vec2(0.0, -other.g2.y) + vec2(self.g1.z) * vec2(0.0, -other.g2.z), vec4(0.0), self.g0 * vec3(other.g0.x), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVector line_multi_vector_at_infinity_join(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z), vec4(0.0), self.g0 * vec3(other.g0.x), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin line_multi_vector_at_origin_join(Line self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g1 * vec3(other.g0.x));
}

PlaneAtOrigin line_origin_join(Line self, Origin other) {
    return PlaneAtOrigin(self.g1 * vec3(other.g0));
}

Plane line_point_join(Line self, Point other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Plane line_point_at_infinity_join(Line self, PointAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar line_rotor_join(Line self, Rotor other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Line line_scalar_join(Line self, Scalar other) {
    return Line(self.g0 * vec3(other.g0), self.g1 * vec3(other.g0));
}

Plane line_transflector_join(Line self, Transflector other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar line_translator_join(Line self, Translator other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Plane line_at_infinity_flector_join(LineAtInfinity self, Flector other) {
    return Plane(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Horizon line_at_infinity_flector_at_infinity_join(LineAtInfinity self, FlectorAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_infinity_line_join(LineAtInfinity self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_infinity_line_at_origin_join(LineAtInfinity self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtInfinity line_at_infinity_magnitude_join(LineAtInfinity self, Magnitude other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.x));
}

AntiScalar line_at_infinity_motor_join(LineAtInfinity self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

MultiVector line_at_infinity_multi_vector_join(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z), vec4(0.0), vec3(0.0), self.g0 * vec3(other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_join(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g0 * vec3(other.g0.x));
}

MultiVectorAtOrigin line_at_infinity_multi_vector_at_origin_join(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g0 * vec3(other.g0.x));
}

PlaneAtOrigin line_at_infinity_origin_join(LineAtInfinity self, Origin other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

Plane line_at_infinity_point_join(LineAtInfinity self, Point other) {
    return Plane(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Horizon line_at_infinity_point_at_infinity_join(LineAtInfinity self, PointAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_infinity_rotor_join(LineAtInfinity self, Rotor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtInfinity line_at_infinity_scalar_join(LineAtInfinity self, Scalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

Horizon line_at_infinity_transflector_join(LineAtInfinity self, Transflector other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin line_at_origin_flector_join(LineAtOrigin self, Flector other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin line_at_origin_flector_at_infinity_join(LineAtOrigin self, FlectorAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar line_at_origin_line_join(LineAtOrigin self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

AntiScalar line_at_origin_line_at_infinity_join(LineAtOrigin self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtOrigin line_at_origin_magnitude_join(LineAtOrigin self, Magnitude other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.x));
}

AntiScalar line_at_origin_motor_join(LineAtOrigin self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

MultiVectorAtOrigin line_at_origin_multi_vector_join(LineAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z), self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_infinity_join(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z), self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

PlaneAtOrigin line_at_origin_point_join(LineAtOrigin self, Point other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin line_at_origin_point_at_infinity_join(LineAtOrigin self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtOrigin line_at_origin_scalar_join(LineAtOrigin self, Scalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

PlaneAtOrigin line_at_origin_transflector_join(LineAtOrigin self, Transflector other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar line_at_origin_translator_join(LineAtOrigin self, Translator other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar magnitude_anti_scalar_join(Magnitude self, AntiScalar other) {
    return AntiScalar(self.g0.x * other.g0);
}

Flector magnitude_flector_join(Magnitude self, Flector other) {
    return Flector(vec4(self.g0.x) * other.g0, vec4(self.g0.x) * other.g1);
}

FlectorAtInfinity magnitude_flector_at_infinity_join(Magnitude self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0);
}

Horizon magnitude_horizon_join(Magnitude self, Horizon other) {
    return Horizon(self.g0.x * other.g0);
}

Line magnitude_line_join(Magnitude self, Line other) {
    return Line(vec3(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1);
}

LineAtInfinity magnitude_line_at_infinity_join(Magnitude self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * other.g0);
}

LineAtOrigin magnitude_line_at_origin_join(Magnitude self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.x) * other.g0);
}

Magnitude magnitude_magnitude_join(Magnitude self, Magnitude other) {
    return Magnitude(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x));
}

Motor magnitude_motor_join(Magnitude self, Motor other) {
    return Motor(vec4(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1);
}

MultiVector magnitude_multi_vector_join(Magnitude self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x), vec4(self.g0.x) * other.g1, vec3(self.g0.x) * other.g2, vec3(self.g0.x) * other.g3, vec4(self.g0.x) * other.g4);
}

MultiVector magnitude_multi_vector_at_infinity_join(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 * vec2(other.g0.x), vec4(self.g0.x) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x) * other.g2, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin magnitude_multi_vector_at_origin_join(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1, vec3(self.g0.x) * other.g2);
}

Origin magnitude_origin_join(Magnitude self, Origin other) {
    return Origin(self.g0.x * other.g0);
}

Plane magnitude_plane_join(Magnitude self, Plane other) {
    return Plane(vec4(self.g0.x) * other.g0);
}

PlaneAtOrigin magnitude_plane_at_origin_join(Magnitude self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * other.g0);
}

Point magnitude_point_join(Magnitude self, Point other) {
    return Point(vec4(self.g0.x) * other.g0);
}

PointAtInfinity magnitude_point_at_infinity_join(Magnitude self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.x) * other.g0);
}

Rotor magnitude_rotor_join(Magnitude self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0);
}

Magnitude magnitude_scalar_join(Magnitude self, Scalar other) {
    return Magnitude(self.g0 * vec2(other.g0));
}

Transflector magnitude_transflector_join(Magnitude self, Transflector other) {
    return Transflector(vec3(self.g0.x) * other.g0, vec4(self.g0.x) * other.g1);
}

Translator magnitude_translator_join(Magnitude self, Translator other) {
    return Translator(vec4(self.g0.x) * other.g0);
}

Plane motor_flector_join(Motor self, Flector other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Plane motor_flector_at_infinity_join(Motor self, FlectorAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar motor_line_join(Motor self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

AntiScalar motor_line_at_infinity_join(Motor self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar motor_line_at_origin_join(Motor self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Motor motor_magnitude_join(Motor self, Magnitude other) {
    return Motor(self.g0 * vec4(other.g0.x), self.g1 * vec3(other.g0.x));
}

AntiScalar motor_motor_join(Motor self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

MultiVector motor_multi_vector_join(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, -other.g2.x) + vec2(self.g1.y) * vec2(0.0, -other.g2.y) + vec2(self.g1.z) * vec2(0.0, -other.g2.z), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVector motor_multi_vector_at_infinity_join(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin motor_multi_vector_at_origin_join(Motor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g1 * vec3(other.g0.x));
}

PlaneAtOrigin motor_origin_join(Motor self, Origin other) {
    return PlaneAtOrigin(self.g1 * vec3(other.g0));
}

Plane motor_point_join(Motor self, Point other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Plane motor_point_at_infinity_join(Motor self, PointAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar motor_rotor_join(Motor self, Rotor other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Motor motor_scalar_join(Motor self, Scalar other) {
    return Motor(self.g0 * vec4(other.g0), self.g1 * vec3(other.g0));
}

Plane motor_transflector_join(Motor self, Transflector other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar motor_translator_join(Motor self, Translator other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar multi_vector_anti_scalar_join(MultiVector self, AntiScalar other) {
    return AntiScalar(self.g0.x * other.g0);
}

MultiVector multi_vector_flector_join(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g1.x) + vec2(self.g1.y) * vec2(0.0, other.g1.y) + vec2(self.g1.z) * vec2(0.0, other.g1.z) + vec2(self.g1.w) * vec2(0.0, other.g1.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.w) * vec2(0.0, -other.g0.w), vec4(self.g0.x) * other.g0, vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVector multi_vector_flector_at_infinity_join(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, other.g0.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.w) + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVector multi_vector_horizon_join(MultiVector self, Horizon other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, other.g0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector multi_vector_line_join(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1, vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector multi_vector_line_at_infinity_join(MultiVector self, LineAtInfinity other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(0.0), vec3(self.g0.x) * other.g0, vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_line_at_origin_join(MultiVector self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_magnitude_join(MultiVector self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x), self.g1 * vec4(other.g0.x), self.g2 * vec3(other.g0.x), self.g3 * vec3(other.g0.x), self.g4 * vec4(other.g0.x));
}

MultiVector multi_vector_motor_join(MultiVector self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * other.g1, vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector multi_vector_multi_vector_join(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, other.g4.x) + vec2(self.g1.y) * vec2(0.0, other.g4.y) + vec2(self.g1.z) * vec2(0.0, other.g4.z) + vec2(self.g1.w) * vec2(0.0, other.g4.w) + vec2(self.g2.x) * vec2(0.0, -other.g3.x) + vec2(self.g2.y) * vec2(0.0, -other.g3.y) + vec2(self.g2.z) * vec2(0.0, -other.g3.z) + vec2(self.g3.x) * vec2(0.0, -other.g2.x) + vec2(self.g3.y) * vec2(0.0, -other.g2.y) + vec2(self.g3.z) * vec2(0.0, -other.g2.z) + vec2(self.g4.x) * vec2(0.0, -other.g1.x) + vec2(self.g4.y) * vec2(0.0, -other.g1.y) + vec2(self.g4.z) * vec2(0.0, -other.g1.z) + vec2(self.g4.w) * vec2(0.0, -other.g1.w), vec4(self.g0.x) * other.g1 + self.g1 * vec4(other.g0.x), vec3(self.g0.x) * other.g2 - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + self.g2 * vec3(other.g0.x), vec3(self.g0.x) * other.g3 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g3 * vec3(other.g0.x), vec4(self.g0.x) * other.g4 + vec4(self.g1.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0) + vec4(self.g2.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g2.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g2.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g3.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + self.g4 * vec4(other.g0.x));
}

MultiVector multi_vector_multi_vector_at_infinity_join(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 * vec2(other.g0.x) + vec2(self.g1.w) * vec2(0.0, other.g0.y) + vec2(self.g2.x) * vec2(0.0, -other.g2.x) + vec2(self.g2.y) * vec2(0.0, -other.g2.y) + vec2(self.g2.z) * vec2(0.0, -other.g2.z) + vec2(self.g4.x) * vec2(0.0, -other.g1.x) + vec2(self.g4.y) * vec2(0.0, -other.g1.y) + vec2(self.g4.z) * vec2(0.0, -other.g1.z), vec4(self.g0.x) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + self.g1 * vec4(other.g0.x), vec3(self.g1.w) * other.g1 + self.g2 * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g3 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g1.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z) + vec4(self.g2.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g2.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g2.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + self.g4 * vec4(other.g0.x));
}

MultiVectorAtOrigin multi_vector_multi_vector_at_origin_join(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g1.x) * vec2(0.0, other.g2.x) + vec2(self.g1.y) * vec2(0.0, other.g2.y) + vec2(self.g1.z) * vec2(0.0, other.g2.z) + vec2(self.g3.x) * vec2(0.0, -other.g1.x) + vec2(self.g3.y) * vec2(0.0, -other.g1.y) + vec2(self.g3.z) * vec2(0.0, -other.g1.z) + vec2(self.g4.w) * vec2(0.0, -other.g0.x), vec3(self.g0.x) * other.g1 - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0) + self.g3 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_origin_join(MultiVector self, Origin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0, 0.0) + vec2(self.g4.w) * vec2(0.0, -other.g0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), self.g3 * vec3(other.g0));
}

MultiVector multi_vector_plane_join(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z) + vec2(self.g1.w) * vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x) * other.g0);
}

MultiVectorAtOrigin multi_vector_plane_at_origin_join(MultiVector self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec3(0.0), vec3(self.g0.x) * other.g0);
}

MultiVector multi_vector_point_join(MultiVector self, Point other) {
    return MultiVector(vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.w) * vec2(0.0, -other.g0.w), vec4(self.g0.x) * other.g0, vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVector multi_vector_point_at_infinity_join(MultiVector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g1.w) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_rotor_join(MultiVector self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_scalar_join(MultiVector self, Scalar other) {
    return MultiVector(self.g0 * vec2(other.g0), self.g1 * vec4(other.g0), self.g2 * vec3(other.g0), self.g3 * vec3(other.g0), self.g4 * vec4(other.g0));
}

MultiVector multi_vector_transflector_join(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g1.x) + vec2(self.g1.y) * vec2(0.0, other.g1.y) + vec2(self.g1.z) * vec2(0.0, other.g1.z) + vec2(self.g1.w) * vec2(0.0, other.g1.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g1.w) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVector multi_vector_translator_join(MultiVector self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

AntiScalar multi_vector_at_infinity_anti_scalar_join(MultiVectorAtInfinity self, AntiScalar other) {
    return AntiScalar(self.g0.x * other.g0);
}

MultiVector multi_vector_at_infinity_flector_join(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, -other.g0.w) + vec2(self.g1.x) * vec2(0.0, other.g1.x) + vec2(self.g1.y) * vec2(0.0, other.g1.y) + vec2(self.g1.z) * vec2(0.0, other.g1.z), vec4(self.g0.x) * other.g0, vec3(0.0) - self.g1 * vec3(other.g0.w), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_join(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Horizon multi_vector_at_infinity_horizon_join(MultiVectorAtInfinity self, Horizon other) {
    return Horizon(self.g0.x * other.g0);
}

MultiVector multi_vector_at_infinity_line_join(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1, vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_join(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec3(0.0), vec3(self.g0.x) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_infinity_line_at_origin_join(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_infinity_magnitude_join(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * other.g0, vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0), self.g2 * vec3(other.g0.x), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

MultiVector multi_vector_at_infinity_motor_join(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * other.g1, vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVector multi_vector_at_infinity_multi_vector_join(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, -other.g1.w) + vec2(self.g1.x) * vec2(0.0, other.g4.x) + vec2(self.g1.y) * vec2(0.0, other.g4.y) + vec2(self.g1.z) * vec2(0.0, other.g4.z) + vec2(self.g2.x) * vec2(0.0, -other.g2.x) + vec2(self.g2.y) * vec2(0.0, -other.g2.y) + vec2(self.g2.z) * vec2(0.0, -other.g2.z), vec4(self.g0.x) * other.g1 + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(self.g0.x) * other.g2 - self.g1 * vec3(other.g1.w), vec3(self.g0.x) * other.g3 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g2 * vec3(other.g0.x), vec4(self.g0.x) * other.g4 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g2.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g2.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_join(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, -other.g2.x) + vec2(self.g1.y) * vec2(0.0, -other.g2.y) + vec2(self.g1.z) * vec2(0.0, -other.g2.z) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z), vec3(self.g0.x) * other.g1 + self.g1 * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_infinity_multi_vector_at_origin_join(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, -other.g0.x) + vec2(self.g1.x) * vec2(0.0, other.g2.x) + vec2(self.g1.y) * vec2(0.0, other.g2.y) + vec2(self.g1.z) * vec2(0.0, other.g2.z) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z), vec3(self.g0.x) * other.g1 - self.g1 * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0) + self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_infinity_origin_join(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), vec3(0.0) - self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_plane_join(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_infinity_plane_at_origin_join(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec3(0.0), vec3(self.g0.x) * other.g0);
}

MultiVector multi_vector_at_infinity_point_join(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, -other.g0.w), vec4(self.g0.x) * other.g0, vec3(0.0) - self.g1 * vec3(other.g0.w), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_join(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_rotor_join(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_scalar_join(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_transflector_join(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g1.x) + vec2(self.g1.y) * vec2(0.0, other.g1.y) + vec2(self.g1.z) * vec2(0.0, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVector multi_vector_at_infinity_translator_join(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_join(MultiVectorAtOrigin self, Flector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g1.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_at_infinity_join(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar multi_vector_at_origin_horizon_join(MultiVectorAtOrigin self, Horizon other) {
    return AntiScalar(self.g0.x * other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_line_join(MultiVectorAtOrigin self, Line other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec3(0.0), vec3(self.g0.x) * other.g1);
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_infinity_join(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec3(0.0), vec3(self.g0.x) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_magnitude_join(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0.x), self.g1 * vec3(other.g0.x), self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_motor_join(MultiVectorAtOrigin self, Motor other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec3(0.0), vec3(self.g0.x) * other.g1);
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_join(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0.x, other.g4.w) + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, -other.g3.x) + vec2(self.g1.y) * vec2(0.0, -other.g3.y) + vec2(self.g1.z) * vec2(0.0, -other.g3.z) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z), vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + self.g1 * vec3(other.g0.x), vec3(self.g0.x) * other.g3 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_infinity_join(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, -other.g2.x) + vec2(self.g1.y) * vec2(0.0, -other.g2.y) + vec2(self.g1.z) * vec2(0.0, -other.g2.z) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z), vec3(self.g0.x) * other.g1 + self.g1 * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g2 * vec3(other.g0.x));
}

AntiScalar multi_vector_at_origin_plane_join(MultiVectorAtOrigin self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.w);
}

MultiVectorAtOrigin multi_vector_at_origin_point_join(MultiVectorAtOrigin self, Point other) {
    return MultiVectorAtOrigin(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_point_at_infinity_join(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_scalar_join(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVectorAtOrigin multi_vector_at_origin_transflector_join(MultiVectorAtOrigin self, Transflector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g1.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_translator_join(MultiVectorAtOrigin self, Translator other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Rotor origin_flector_join(Origin self, Flector other) {
    return Rotor(vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w));
}

Rotor origin_flector_at_infinity_join(Origin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0) * other.g0);
}

AntiScalar origin_horizon_join(Origin self, Horizon other) {
    return AntiScalar(self.g0 * other.g0);
}

PlaneAtOrigin origin_line_join(Origin self, Line other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g1);
}

PlaneAtOrigin origin_line_at_infinity_join(Origin self, LineAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Origin origin_magnitude_join(Origin self, Magnitude other) {
    return Origin(self.g0 * other.g0.x);
}

PlaneAtOrigin origin_motor_join(Origin self, Motor other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin origin_multi_vector_join(Origin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0) * vec2(other.g0.x, other.g4.w), vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0) * other.g3);
}

MultiVectorAtOrigin origin_multi_vector_at_infinity_join(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

AntiScalar origin_plane_join(Origin self, Plane other) {
    return AntiScalar(self.g0 * other.g0.w);
}

LineAtOrigin origin_point_join(Origin self, Point other) {
    return LineAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtOrigin origin_point_at_infinity_join(Origin self, PointAtInfinity other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Origin origin_scalar_join(Origin self, Scalar other) {
    return Origin(self.g0 * other.g0);
}

Rotor origin_transflector_join(Origin self, Transflector other) {
    return Rotor(vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w));
}

PlaneAtOrigin origin_translator_join(Origin self, Translator other) {
    return PlaneAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

AntiScalar plane_flector_join(Plane self, Flector other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z - self.g0.w * other.g0.w);
}

AntiScalar plane_flector_at_infinity_join(Plane self, FlectorAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Plane plane_magnitude_join(Plane self, Magnitude other) {
    return Plane(self.g0 * vec4(other.g0.x));
}

MultiVector plane_multi_vector_join(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) + vec2(self.g0.w) * vec2(0.0, -other.g1.w), vec4(0.0), vec3(0.0), vec3(0.0), self.g0 * vec4(other.g0.x));
}

MultiVector plane_multi_vector_at_infinity_join(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec4(0.0), vec3(0.0), vec3(0.0), self.g0 * vec4(other.g0.x));
}

AntiScalar plane_multi_vector_at_origin_join(Plane self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0.x);
}

AntiScalar plane_origin_join(Plane self, Origin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0);
}

AntiScalar plane_point_join(Plane self, Point other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z - self.g0.w * other.g0.w);
}

AntiScalar plane_point_at_infinity_join(Plane self, PointAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Plane plane_scalar_join(Plane self, Scalar other) {
    return Plane(self.g0 * vec4(other.g0));
}

AntiScalar plane_transflector_join(Plane self, Transflector other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar plane_at_origin_flector_join(PlaneAtOrigin self, Flector other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar plane_at_origin_flector_at_infinity_join(PlaneAtOrigin self, FlectorAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin plane_at_origin_magnitude_join(PlaneAtOrigin self, Magnitude other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0.x));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_join(PlaneAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g0 * vec3(other.g0.x));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_infinity_join(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g0 * vec3(other.g0.x));
}

AntiScalar plane_at_origin_point_join(PlaneAtOrigin self, Point other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar plane_at_origin_point_at_infinity_join(PlaneAtOrigin self, PointAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin plane_at_origin_scalar_join(PlaneAtOrigin self, Scalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

AntiScalar plane_at_origin_transflector_join(PlaneAtOrigin self, Transflector other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Motor point_flector_join(Point self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Motor point_flector_at_infinity_join(Point self, FlectorAtInfinity other) {
    return Motor(vec4(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar point_horizon_join(Point self, Horizon other) {
    return AntiScalar(self.g0.w * other.g0);
}

Plane point_line_join(Point self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

Plane point_line_at_infinity_join(Point self, LineAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

PlaneAtOrigin point_line_at_origin_join(Point self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point point_magnitude_join(Point self, Magnitude other) {
    return Point(self.g0 * vec4(other.g0.x));
}

Plane point_motor_join(Point self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector point_multi_vector_join(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z) + vec2(self.g0.w) * vec2(0.0, other.g4.w), self.g0 * vec4(other.g0.x), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0));
}

MultiVector point_multi_vector_at_infinity_join(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.y), self.g0 * vec4(other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z));
}

MultiVectorAtOrigin point_multi_vector_at_origin_join(Point self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

LineAtOrigin point_origin_join(Point self, Origin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

AntiScalar point_plane_join(Point self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

AntiScalar point_plane_at_origin_join(Point self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Line point_point_join(Point self, Point other) {
    return Line(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Line point_point_at_infinity_join(Point self, PointAtInfinity other) {
    return Line(vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin point_rotor_join(Point self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point point_scalar_join(Point self, Scalar other) {
    return Point(self.g0 * vec4(other.g0));
}

Motor point_transflector_join(Point self, Transflector other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Plane point_translator_join(Point self, Translator other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

Motor point_at_infinity_flector_join(PointAtInfinity self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtInfinity point_at_infinity_flector_at_infinity_join(PointAtInfinity self, FlectorAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Plane point_at_infinity_line_join(PointAtInfinity self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

Horizon point_at_infinity_line_at_infinity_join(PointAtInfinity self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin point_at_infinity_line_at_origin_join(PointAtInfinity self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

PointAtInfinity point_at_infinity_magnitude_join(PointAtInfinity self, Magnitude other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.x));
}

Plane point_at_infinity_motor_join(PointAtInfinity self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVector point_at_infinity_multi_vector_join(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_join(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z), self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

MultiVectorAtOrigin point_at_infinity_multi_vector_at_origin_join(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z), vec3(0.0) - self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

LineAtOrigin point_at_infinity_origin_join(PointAtInfinity self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0));
}

AntiScalar point_at_infinity_plane_join(PointAtInfinity self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar point_at_infinity_plane_at_origin_join(PointAtInfinity self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Line point_at_infinity_point_join(PointAtInfinity self, Point other) {
    return Line(vec3(0.0) - self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtInfinity point_at_infinity_point_at_infinity_join(PointAtInfinity self, PointAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin point_at_infinity_rotor_join(PointAtInfinity self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

PointAtInfinity point_at_infinity_scalar_join(PointAtInfinity self, Scalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

Translator point_at_infinity_transflector_join(PointAtInfinity self, Transflector other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g1.z));
}

Horizon point_at_infinity_translator_join(PointAtInfinity self, Translator other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin rotor_flector_join(Rotor self, Flector other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin rotor_flector_at_infinity_join(Rotor self, FlectorAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar rotor_line_join(Rotor self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

AntiScalar rotor_line_at_infinity_join(Rotor self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Rotor rotor_magnitude_join(Rotor self, Magnitude other) {
    return Rotor(self.g0 * vec4(other.g0.x));
}

AntiScalar rotor_motor_join(Rotor self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

MultiVectorAtOrigin rotor_multi_vector_join(Rotor self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

MultiVectorAtOrigin rotor_multi_vector_at_infinity_join(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

PlaneAtOrigin rotor_point_join(Rotor self, Point other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin rotor_point_at_infinity_join(Rotor self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Rotor rotor_scalar_join(Rotor self, Scalar other) {
    return Rotor(self.g0 * vec4(other.g0));
}

PlaneAtOrigin rotor_transflector_join(Rotor self, Transflector other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar rotor_translator_join(Rotor self, Translator other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar scalar_anti_scalar_join(Scalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector scalar_flector_join(Scalar self, Flector other) {
    return Flector(vec4(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

FlectorAtInfinity scalar_flector_at_infinity_join(Scalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

Horizon scalar_horizon_join(Scalar self, Horizon other) {
    return Horizon(self.g0 * other.g0);
}

Line scalar_line_join(Scalar self, Line other) {
    return Line(vec3(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

LineAtInfinity scalar_line_at_infinity_join(Scalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtOrigin scalar_line_at_origin_join(Scalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Magnitude scalar_magnitude_join(Scalar self, Magnitude other) {
    return Magnitude(vec2(self.g0) * other.g0);
}

Motor scalar_motor_join(Scalar self, Motor other) {
    return Motor(vec4(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

MultiVector scalar_multi_vector_join(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0) * other.g0, vec4(self.g0) * other.g1, vec3(self.g0) * other.g2, vec3(self.g0) * other.g3, vec4(self.g0) * other.g4);
}

MultiVectorAtInfinity scalar_multi_vector_at_infinity_join(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

MultiVectorAtOrigin scalar_multi_vector_at_origin_join(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Origin scalar_origin_join(Scalar self, Origin other) {
    return Origin(self.g0 * other.g0);
}

Plane scalar_plane_join(Scalar self, Plane other) {
    return Plane(vec4(self.g0) * other.g0);
}

PlaneAtOrigin scalar_plane_at_origin_join(Scalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Point scalar_point_join(Scalar self, Point other) {
    return Point(vec4(self.g0) * other.g0);
}

PointAtInfinity scalar_point_at_infinity_join(Scalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Rotor scalar_rotor_join(Scalar self, Rotor other) {
    return Rotor(vec4(self.g0) * other.g0);
}

Scalar scalar_scalar_join(Scalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Transflector scalar_transflector_join(Scalar self, Transflector other) {
    return Transflector(vec3(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

Translator scalar_translator_join(Scalar self, Translator other) {
    return Translator(vec4(self.g0) * other.g0);
}

Motor transflector_flector_join(Transflector self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Translator transflector_flector_at_infinity_join(Transflector self, FlectorAtInfinity other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Plane transflector_line_join(Transflector self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

Horizon transflector_line_at_infinity_join(Transflector self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin transflector_line_at_origin_join(Transflector self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Transflector transflector_magnitude_join(Transflector self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.x), self.g1 * vec4(other.g0.x));
}

Plane transflector_motor_join(Transflector self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVector transflector_multi_vector_join(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) + vec2(self.g1.w) * vec2(0.0, -other.g1.w), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + self.g1 * vec4(other.g0.x));
}

MultiVector transflector_multi_vector_at_infinity_join(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + self.g1 * vec4(other.g0.x));
}

MultiVectorAtOrigin transflector_multi_vector_at_origin_join(Transflector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z) + vec2(self.g1.w) * vec2(0.0, -other.g0.x), vec3(0.0) - self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

Rotor transflector_origin_join(Transflector self, Origin other) {
    return Rotor(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0));
}

AntiScalar transflector_plane_join(Transflector self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar transflector_plane_at_origin_join(Transflector self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Motor transflector_point_join(Transflector self, Point other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Translator transflector_point_at_infinity_join(Transflector self, PointAtInfinity other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

PlaneAtOrigin transflector_rotor_join(Transflector self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Transflector transflector_scalar_join(Transflector self, Scalar other) {
    return Transflector(self.g0 * vec3(other.g0), self.g1 * vec4(other.g0));
}

Translator transflector_transflector_join(Transflector self, Transflector other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g1.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Horizon transflector_translator_join(Transflector self, Translator other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Plane translator_flector_join(Translator self, Flector other) {
    return Plane(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Horizon translator_flector_at_infinity_join(Translator self, FlectorAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar translator_line_join(Translator self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar translator_line_at_origin_join(Translator self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Translator translator_magnitude_join(Translator self, Magnitude other) {
    return Translator(self.g0 * vec4(other.g0.x));
}

AntiScalar translator_motor_join(Translator self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

MultiVector translator_multi_vector_join(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVector translator_multi_vector_at_infinity_join(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.x), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin translator_multi_vector_at_origin_join(Translator self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x));
}

PlaneAtOrigin translator_origin_join(Translator self, Origin other) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Plane translator_point_join(Translator self, Point other) {
    return Plane(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Horizon translator_point_at_infinity_join(Translator self, PointAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar translator_rotor_join(Translator self, Rotor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Translator translator_scalar_join(Translator self, Scalar other) {
    return Translator(self.g0 * vec4(other.g0));
}

Horizon translator_transflector_join(Translator self, Transflector other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar anti_scalar_anti_scalar_meet(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector anti_scalar_flector_meet(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

FlectorAtInfinity anti_scalar_flector_at_infinity_meet(AntiScalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

Horizon anti_scalar_horizon_meet(AntiScalar self, Horizon other) {
    return Horizon(self.g0 * other.g0);
}

Line anti_scalar_line_meet(AntiScalar self, Line other) {
    return Line(vec3(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

LineAtInfinity anti_scalar_line_at_infinity_meet(AntiScalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtOrigin anti_scalar_line_at_origin_meet(AntiScalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Magnitude anti_scalar_magnitude_meet(AntiScalar self, Magnitude other) {
    return Magnitude(vec2(self.g0) * other.g0);
}

Motor anti_scalar_motor_meet(AntiScalar self, Motor other) {
    return Motor(vec4(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

MultiVector anti_scalar_multi_vector_meet(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(self.g0) * other.g0, vec4(self.g0) * other.g1, vec3(self.g0) * other.g2, vec3(self.g0) * other.g3, vec4(self.g0) * other.g4);
}

MultiVectorAtInfinity anti_scalar_multi_vector_at_infinity_meet(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_origin_meet(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Origin anti_scalar_origin_meet(AntiScalar self, Origin other) {
    return Origin(self.g0 * other.g0);
}

Plane anti_scalar_plane_meet(AntiScalar self, Plane other) {
    return Plane(vec4(self.g0) * other.g0);
}

PlaneAtOrigin anti_scalar_plane_at_origin_meet(AntiScalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Point anti_scalar_point_meet(AntiScalar self, Point other) {
    return Point(vec4(self.g0) * other.g0);
}

PointAtInfinity anti_scalar_point_at_infinity_meet(AntiScalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Rotor anti_scalar_rotor_meet(AntiScalar self, Rotor other) {
    return Rotor(vec4(self.g0) * other.g0);
}

Scalar anti_scalar_scalar_meet(AntiScalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Transflector anti_scalar_transflector_meet(AntiScalar self, Transflector other) {
    return Transflector(vec3(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

Translator anti_scalar_translator_meet(AntiScalar self, Translator other) {
    return Translator(vec4(self.g0) * other.g0);
}

Flector flector_anti_scalar_meet(Flector self, AntiScalar other) {
    return Flector(self.g0 * vec4(other.g0), self.g1 * vec4(other.g0));
}

MultiVector flector_flector_meet(Flector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity flector_flector_at_infinity_meet(Flector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w));
}

MultiVectorAtInfinity flector_horizon_meet(Flector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

Point flector_line_meet(Flector self, Line other) {
    return Point(vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity flector_line_at_infinity_meet(Flector self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point flector_line_at_origin_meet(Flector self, LineAtOrigin other) {
    return Point(vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Flector flector_magnitude_meet(Flector self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.y), self.g1 * vec4(other.g0.y));
}

Flector flector_motor_meet(Flector self, Motor other) {
    return Flector(self.g0 * vec4(other.g0.w) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 * vec4(other.g0.w));
}

MultiVector flector_multi_vector_meet(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g0.w) * vec2(-other.g4.w, 0.0) + vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z) * vec2(other.g1.z, 0.0) + vec2(self.g1.w) * vec2(other.g1.w, 0.0), self.g0 * vec4(other.g0.y) + vec4(self.g1.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g4.w) + vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), self.g1 * vec4(other.g0.y));
}

MultiVectorAtInfinity flector_multi_vector_at_infinity_meet(Flector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * vec2(-other.g0.y, 0.0) + vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z) * vec2(other.g1.z, 0.0), vec3(self.g1.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.y));
}

MultiVector flector_multi_vector_at_origin_meet(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.x, 0.0), self.g0 * vec4(other.g0.y) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g1.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g1.w) * other.g2, self.g1 * vec4(other.g0.y));
}

Scalar flector_origin_meet(Flector self, Origin other) {
    return Scalar(self.g1.w * other.g0);
}

MultiVector flector_plane_meet(Flector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0) + vec2(self.g0.w) * vec2(-other.g0.w, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector flector_plane_at_origin_meet(Flector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g1.w) * other.g0, vec4(0.0));
}

Scalar flector_point_meet(Flector self, Point other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z + self.g1.w * other.g0.w);
}

Scalar flector_point_at_infinity_meet(Flector self, PointAtInfinity other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Flector flector_rotor_meet(Flector self, Rotor other) {
    return Flector(self.g0 * vec4(other.g0.w) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g1 * vec4(other.g0.w));
}

MultiVector flector_transflector_meet(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(-other.g1.w, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Flector flector_translator_meet(Flector self, Translator other) {
    return Flector(self.g0 * vec4(other.g0.w) + vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g1 * vec4(other.g0.w));
}

FlectorAtInfinity flector_at_infinity_anti_scalar_meet(FlectorAtInfinity self, AntiScalar other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVectorAtInfinity flector_at_infinity_flector_meet(FlectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

PointAtInfinity flector_at_infinity_line_meet(FlectorAtInfinity self, Line other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

PointAtInfinity flector_at_infinity_line_at_origin_meet(FlectorAtInfinity self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

FlectorAtInfinity flector_at_infinity_magnitude_meet(FlectorAtInfinity self, Magnitude other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.y));
}

FlectorAtInfinity flector_at_infinity_motor_meet(FlectorAtInfinity self, Motor other) {
    return FlectorAtInfinity(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_meet(FlectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g0.w) * vec2(other.g1.w, other.g0.y), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_origin_meet(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

Scalar flector_at_infinity_origin_meet(FlectorAtInfinity self, Origin other) {
    return Scalar(self.g0.w * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_plane_meet(FlectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity flector_at_infinity_plane_at_origin_meet(FlectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.w) * other.g0);
}

Scalar flector_at_infinity_point_meet(FlectorAtInfinity self, Point other) {
    return Scalar(self.g0.w * other.g0.w);
}

FlectorAtInfinity flector_at_infinity_rotor_meet(FlectorAtInfinity self, Rotor other) {
    return FlectorAtInfinity(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

MultiVectorAtInfinity flector_at_infinity_transflector_meet(FlectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(0.0), vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

FlectorAtInfinity flector_at_infinity_translator_meet(FlectorAtInfinity self, Translator other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.w));
}

Horizon horizon_anti_scalar_meet(Horizon self, AntiScalar other) {
    return Horizon(self.g0 * other.g0);
}

MultiVectorAtInfinity horizon_flector_meet(Horizon self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g0.w, 0.0), vec3(0.0), vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

PointAtInfinity horizon_line_meet(Horizon self, Line other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

PointAtInfinity horizon_line_at_origin_meet(Horizon self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Horizon horizon_magnitude_meet(Horizon self, Magnitude other) {
    return Horizon(self.g0 * other.g0.y);
}

FlectorAtInfinity horizon_motor_meet(Horizon self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

MultiVectorAtInfinity horizon_multi_vector_meet(Horizon self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0) * vec2(other.g1.w, other.g0.y), vec3(self.g0) * other.g2, vec3(self.g0) * vec3(other.g4.x, other.g4.y, other.g4.z));
}

MultiVectorAtInfinity horizon_multi_vector_at_origin_meet(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Scalar horizon_origin_meet(Horizon self, Origin other) {
    return Scalar(self.g0 * other.g0);
}

LineAtInfinity horizon_plane_meet(Horizon self, Plane other) {
    return LineAtInfinity(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtInfinity horizon_plane_at_origin_meet(Horizon self, PlaneAtOrigin other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

Scalar horizon_point_meet(Horizon self, Point other) {
    return Scalar(self.g0 * other.g0.w);
}

FlectorAtInfinity horizon_rotor_meet(Horizon self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

LineAtInfinity horizon_transflector_meet(Horizon self, Transflector other) {
    return LineAtInfinity(vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

Horizon horizon_translator_meet(Horizon self, Translator other) {
    return Horizon(self.g0 * other.g0.w);
}

Line line_anti_scalar_meet(Line self, AntiScalar other) {
    return Line(self.g0 * vec3(other.g0), self.g1 * vec3(other.g0));
}

Point line_flector_meet(Line self, Flector other) {
    return Point(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0));
}

PointAtInfinity line_flector_at_infinity_meet(Line self, FlectorAtInfinity other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

PointAtInfinity line_horizon_meet(Line self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

Scalar line_line_meet(Line self, Line other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Scalar line_line_at_infinity_meet(Line self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Scalar line_line_at_origin_meet(Line self, LineAtOrigin other) {
    return Scalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Line line_magnitude_meet(Line self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.y), self.g1 * vec3(other.g0.y));
}

MultiVector line_motor_meet(Line self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), self.g1 * vec3(other.g0.w), vec4(0.0));
}

MultiVector line_multi_vector_meet(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g3.x, 0.0) + vec2(self.g0.y) * vec2(-other.g3.y, 0.0) + vec2(self.g0.z) * vec2(-other.g3.z, 0.0) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g0.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g1.x) * vec4(0.0, -other.g4.z, other.g4.y, 0.0) + vec4(self.g1.y) * vec4(other.g4.z, 0.0, -other.g4.x, 0.0) + vec4(self.g1.z) * vec4(-other.g4.y, other.g4.x, 0.0, 0.0), self.g0 * vec3(other.g0.y), self.g1 * vec3(other.g0.y), vec4(0.0));
}

MultiVectorAtInfinity line_multi_vector_at_infinity_meet(Line self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

MultiVector line_multi_vector_at_origin_meet(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g1.x) * vec4(0.0, -other.g2.z, other.g2.y, 0.0) + vec4(self.g1.y) * vec4(other.g2.z, 0.0, -other.g2.x, 0.0) + vec4(self.g1.z) * vec4(-other.g2.y, other.g2.x, 0.0, 0.0), self.g0 * vec3(other.g0.y), self.g1 * vec3(other.g0.y), vec4(0.0));
}

Point line_plane_meet(Line self, Plane other) {
    return Point(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0));
}

Point line_plane_at_origin_meet(Line self, PlaneAtOrigin other) {
    return Point(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0));
}

MultiVector line_rotor_meet(Line self, Rotor other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), self.g1 * vec3(other.g0.w), vec4(0.0));
}

Point line_transflector_meet(Line self, Transflector other) {
    return Point(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0));
}

MultiVector line_translator_meet(Line self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), self.g1 * vec3(other.g0.w), vec4(0.0));
}

LineAtInfinity line_at_infinity_anti_scalar_meet(LineAtInfinity self, AntiScalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

PointAtInfinity line_at_infinity_flector_meet(LineAtInfinity self, Flector other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

Scalar line_at_infinity_line_meet(LineAtInfinity self, Line other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Scalar line_at_infinity_line_at_origin_meet(LineAtInfinity self, LineAtOrigin other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtInfinity line_at_infinity_magnitude_meet(LineAtInfinity self, Magnitude other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.y));
}

MultiVectorAtInfinity line_at_infinity_motor_meet(LineAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), self.g0 * vec3(other.g0.w));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_meet(LineAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, 0.0), self.g0 * vec3(other.g0.y));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_origin_meet(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, 0.0), self.g0 * vec3(other.g0.y));
}

PointAtInfinity line_at_infinity_plane_meet(LineAtInfinity self, Plane other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PointAtInfinity line_at_infinity_plane_at_origin_meet(LineAtInfinity self, PlaneAtOrigin other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtInfinity line_at_infinity_rotor_meet(LineAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), self.g0 * vec3(other.g0.w));
}

PointAtInfinity line_at_infinity_transflector_meet(LineAtInfinity self, Transflector other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

LineAtInfinity line_at_infinity_translator_meet(LineAtInfinity self, Translator other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.w));
}

LineAtOrigin line_at_origin_anti_scalar_meet(LineAtOrigin self, AntiScalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

Point line_at_origin_flector_meet(LineAtOrigin self, Flector other) {
    return Point(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

PointAtInfinity line_at_origin_flector_at_infinity_meet(LineAtOrigin self, FlectorAtInfinity other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

PointAtInfinity line_at_origin_horizon_meet(LineAtOrigin self, Horizon other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

Scalar line_at_origin_line_meet(LineAtOrigin self, Line other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

Scalar line_at_origin_line_at_infinity_meet(LineAtOrigin self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtOrigin line_at_origin_magnitude_meet(LineAtOrigin self, Magnitude other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.y));
}

MultiVector line_at_origin_motor_meet(LineAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(0.0), vec4(0.0));
}

MultiVector line_at_origin_multi_vector_meet(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g3.x, 0.0) + vec2(self.g0.y) * vec2(-other.g3.y, 0.0) + vec2(self.g0.z) * vec2(-other.g3.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g0.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z), self.g0 * vec3(other.g0.y), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity line_at_origin_multi_vector_at_infinity_meet(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_meet(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

Point line_at_origin_plane_meet(LineAtOrigin self, Plane other) {
    return Point(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Origin line_at_origin_plane_at_origin_meet(LineAtOrigin self, PlaneAtOrigin other) {
    return Origin(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtOrigin line_at_origin_rotor_meet(LineAtOrigin self, Rotor other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.w));
}

Point line_at_origin_transflector_meet(LineAtOrigin self, Transflector other) {
    return Point(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVector line_at_origin_translator_meet(LineAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), self.g0 * vec3(other.g0.w), vec3(0.0), vec4(0.0));
}

Magnitude magnitude_anti_scalar_meet(Magnitude self, AntiScalar other) {
    return Magnitude(self.g0 * vec2(other.g0));
}

Flector magnitude_flector_meet(Magnitude self, Flector other) {
    return Flector(vec4(self.g0.y) * other.g0, vec4(self.g0.y) * other.g1);
}

FlectorAtInfinity magnitude_flector_at_infinity_meet(Magnitude self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.y) * other.g0);
}

Horizon magnitude_horizon_meet(Magnitude self, Horizon other) {
    return Horizon(self.g0.y * other.g0);
}

Line magnitude_line_meet(Magnitude self, Line other) {
    return Line(vec3(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1);
}

LineAtInfinity magnitude_line_at_infinity_meet(Magnitude self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.y) * other.g0);
}

LineAtOrigin magnitude_line_at_origin_meet(Magnitude self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.y) * other.g0);
}

Magnitude magnitude_magnitude_meet(Magnitude self, Magnitude other) {
    return Magnitude(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0);
}

MultiVector magnitude_motor_meet(Magnitude self, Motor other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.y) * other.g1, vec4(0.0));
}

MultiVector magnitude_multi_vector_meet(Magnitude self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0, vec4(self.g0.y) * other.g1, vec3(self.g0.y) * other.g2, vec3(self.g0.y) * other.g3, vec4(self.g0.y) * other.g4);
}

MultiVectorAtInfinity magnitude_multi_vector_at_infinity_meet(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1, vec3(self.g0.y) * other.g2);
}

MultiVector magnitude_multi_vector_at_origin_meet(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 * vec2(other.g0.y), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x), vec3(self.g0.y) * other.g1, vec3(0.0), vec4(self.g0.y) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Origin magnitude_origin_meet(Magnitude self, Origin other) {
    return Origin(self.g0.y * other.g0);
}

Plane magnitude_plane_meet(Magnitude self, Plane other) {
    return Plane(vec4(self.g0.y) * other.g0);
}

PlaneAtOrigin magnitude_plane_at_origin_meet(Magnitude self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.y) * other.g0);
}

Point magnitude_point_meet(Magnitude self, Point other) {
    return Point(vec4(self.g0.y) * other.g0);
}

PointAtInfinity magnitude_point_at_infinity_meet(Magnitude self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.y) * other.g0);
}

MultiVector magnitude_rotor_meet(Magnitude self, Rotor other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(0.0), vec4(0.0));
}

Scalar magnitude_scalar_meet(Magnitude self, Scalar other) {
    return Scalar(self.g0.y * other.g0);
}

Transflector magnitude_transflector_meet(Magnitude self, Transflector other) {
    return Transflector(vec3(self.g0.y) * other.g0, vec4(self.g0.y) * other.g1);
}

MultiVector magnitude_translator_meet(Magnitude self, Translator other) {
    return MultiVector(self.g0 * vec2(other.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Motor motor_anti_scalar_meet(Motor self, AntiScalar other) {
    return Motor(self.g0 * vec4(other.g0), self.g1 * vec3(other.g0));
}

Flector motor_flector_meet(Motor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity motor_flector_at_infinity_meet(Motor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

FlectorAtInfinity motor_horizon_meet(Motor self, Horizon other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector motor_line_meet(Motor self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity motor_line_at_infinity_meet(Motor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.w) * other.g0);
}

MultiVector motor_line_at_origin_meet(Motor self, LineAtOrigin other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(0.0), vec4(0.0));
}

MultiVector motor_magnitude_meet(Motor self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), self.g1 * vec3(other.g0.y), vec4(0.0));
}

MultiVector motor_motor_meet(Motor self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g1.z, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.w) * other.g1 + self.g1 * vec3(other.g0.w), vec4(0.0));
}

MultiVector motor_multi_vector_meet(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g3.x, 0.0) + vec2(self.g0.y) * vec2(-other.g3.y, 0.0) + vec2(self.g0.z) * vec2(-other.g3.z, 0.0) + vec2(self.g0.w) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0), vec4(self.g0.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g0.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g0.w) * other.g1 + vec4(self.g1.x) * vec4(0.0, -other.g4.z, other.g4.y, 0.0) + vec4(self.g1.y) * vec4(other.g4.z, 0.0, -other.g4.x, 0.0) + vec4(self.g1.z) * vec4(-other.g4.y, other.g4.x, 0.0, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.w) * other.g3 + self.g1 * vec3(other.g0.y), vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity motor_multi_vector_at_infinity_meet(Motor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

MultiVector motor_multi_vector_at_origin_meet(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.y) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x) * vec4(0.0, -other.g2.z, other.g2.y, 0.0) + vec4(self.g1.y) * vec4(other.g2.z, 0.0, -other.g2.x, 0.0) + vec4(self.g1.z) * vec4(-other.g2.y, other.g2.x, 0.0, 0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, self.g1 * vec3(other.g0.y), vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Origin motor_origin_meet(Motor self, Origin other) {
    return Origin(self.g0.w * other.g0);
}

Flector motor_plane_meet(Motor self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.w) * other.g0);
}

Flector motor_plane_at_origin_meet(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g1.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g1.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point motor_point_meet(Motor self, Point other) {
    return Point(vec4(self.g0.w) * other.g0);
}

PointAtInfinity motor_point_at_infinity_meet(Motor self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector motor_rotor_meet(Motor self, Rotor other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), self.g1 * vec3(other.g0.w), vec4(0.0));
}

Scalar motor_scalar_meet(Motor self, Scalar other) {
    return Scalar(self.g0.w * other.g0);
}

Flector motor_transflector_meet(Motor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g1.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g1.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec4(self.g0.w) * other.g1);
}

MultiVector motor_translator_meet(Motor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec4(0.0));
}

MultiVector multi_vector_anti_scalar_meet(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0 * vec2(other.g0), self.g1 * vec4(other.g0), self.g2 * vec3(other.g0), self.g3 * vec3(other.g0), self.g4 * vec4(other.g0));
}

MultiVector multi_vector_flector_meet(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.w) * vec2(-other.g1.w, 0.0) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g2.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g2.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g3.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g3.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec3(self.g4.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g1.w) + vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.y) * other.g1);
}

MultiVectorAtInfinity multi_vector_flector_at_infinity_meet(MultiVector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g2 * vec3(other.g0.w), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_horizon_meet(MultiVector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(0.0, other.g0) + vec2(self.g1.w) * vec2(-other.g0, 0.0), self.g2 * vec3(other.g0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0));
}

MultiVector multi_vector_line_meet(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity multi_vector_line_at_infinity_meet(MultiVector self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g4.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g4.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g4.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0);
}

MultiVector multi_vector_line_at_origin_meet(MultiVector self, LineAtOrigin other) {
    return MultiVector(vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z), vec3(self.g0.y) * other.g0, vec3(0.0), vec4(0.0));
}

MultiVector multi_vector_magnitude_meet(MultiVector self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0, self.g1 * vec4(other.g0.y), self.g2 * vec3(other.g0.y), self.g3 * vec3(other.g0.y), self.g4 * vec4(other.g0.y));
}

MultiVector multi_vector_motor_meet(MultiVector self, Motor other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), self.g1 * vec4(other.g0.w) + vec4(self.g4.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g4.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g4.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g4.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g2 * vec3(other.g0.w), vec3(self.g0.y) * other.g1 + self.g3 * vec3(other.g0.w), self.g4 * vec4(other.g0.w));
}

MultiVector multi_vector_multi_vector_meet(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g4.x, 0.0) + vec2(self.g1.y) * vec2(-other.g4.y, 0.0) + vec2(self.g1.z) * vec2(-other.g4.z, 0.0) + vec2(self.g1.w) * vec2(-other.g4.w, 0.0) + vec2(self.g2.x) * vec2(-other.g3.x, 0.0) + vec2(self.g2.y) * vec2(-other.g3.y, 0.0) + vec2(self.g2.z) * vec2(-other.g3.z, 0.0) + vec2(self.g3.x) * vec2(-other.g2.x, 0.0) + vec2(self.g3.y) * vec2(-other.g2.y, 0.0) + vec2(self.g3.z) * vec2(-other.g2.z, 0.0) + vec2(self.g4.x) * vec2(other.g1.x, 0.0) + vec2(self.g4.y) * vec2(other.g1.y, 0.0) + vec2(self.g4.z) * vec2(other.g1.z, 0.0) + vec2(self.g4.w) * vec2(other.g1.w, 0.0), vec4(self.g0.y) * other.g1 + self.g1 * vec4(other.g0.y) + vec4(self.g2.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g2.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g3.x) * vec4(0.0, -other.g4.z, other.g4.y, 0.0) + vec4(self.g3.y) * vec4(other.g4.z, 0.0, -other.g4.x, 0.0) + vec4(self.g3.z) * vec4(-other.g4.y, other.g4.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g4.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g4.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z) + vec4(self.g4.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g0.y) * other.g2 + self.g2 * vec3(other.g0.y) + vec3(self.g4.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g4.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g4.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(self.g0.y) * other.g3 + self.g3 * vec3(other.g0.y) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g4.w) + vec3(self.g4.w) * vec3(other.g4.x, other.g4.y, other.g4.z), vec4(self.g0.y) * other.g4 + self.g4 * vec4(other.g0.y));
}

MultiVectorAtInfinity multi_vector_multi_vector_at_infinity_meet(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * other.g0 + vec2(self.g1.w) * vec2(-other.g0.y, 0.0) + vec2(self.g2.x) * vec2(-other.g2.x, 0.0) + vec2(self.g2.y) * vec2(-other.g2.y, 0.0) + vec2(self.g2.z) * vec2(-other.g2.z, 0.0) + vec2(self.g4.x) * vec2(other.g1.x, 0.0) + vec2(self.g4.y) * vec2(other.g1.y, 0.0) + vec2(self.g4.z) * vec2(other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + self.g2 * vec3(other.g0.y) + vec3(self.g4.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g4.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g4.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(self.g0.y) * other.g2 - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.y));
}

MultiVector multi_vector_multi_vector_at_origin_meet(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0 * vec2(other.g0.y) + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0) + vec2(self.g3.x) * vec2(-other.g1.x, 0.0) + vec2(self.g3.y) * vec2(-other.g1.y, 0.0) + vec2(self.g3.z) * vec2(-other.g1.z, 0.0) + vec2(self.g4.w) * vec2(other.g0.x, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x) + self.g1 * vec4(other.g0.y) + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + vec4(self.g3.x) * vec4(0.0, -other.g2.z, other.g2.y, 0.0) + vec4(self.g3.y) * vec4(other.g2.z, 0.0, -other.g2.x, 0.0) + vec4(self.g3.z) * vec4(-other.g2.y, other.g2.x, 0.0, 0.0) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g4.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.y) * other.g1 + self.g2 * vec3(other.g0.y) + vec3(self.g4.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g4.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g4.z) * vec3(-other.g2.y, other.g2.x, 0.0), self.g3 * vec3(other.g0.y) + vec3(self.g4.w) * other.g2, vec4(self.g0.y) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0) + self.g4 * vec4(other.g0.y));
}

MultiVector multi_vector_origin_meet(MultiVector self, Origin other) {
    return MultiVector(vec2(self.g4.w) * vec2(other.g0, 0.0), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector multi_vector_plane_meet(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0) + vec2(self.g1.w) * vec2(-other.g0.w, 0.0), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g3.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g3.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g0.w) + vec3(self.g4.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g0.y) * other.g0);
}

MultiVector multi_vector_plane_at_origin_meet(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g3.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g3.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g3.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0), vec3(self.g4.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g4.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g4.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g4.w) * other.g0, vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

MultiVector multi_vector_point_meet(MultiVector self, Point other) {
    return MultiVector(vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0) + vec2(self.g4.w) * vec2(other.g0.w, 0.0), vec4(self.g0.y) * other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multi_vector_point_at_infinity_meet(MultiVector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVector multi_vector_rotor_meet(MultiVector self, Rotor other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g3.x) * vec2(-other.g0.x, 0.0) + vec2(self.g3.y) * vec2(-other.g0.y, 0.0) + vec2(self.g3.z) * vec2(-other.g0.z, 0.0), self.g1 * vec4(other.g0.w) + vec4(self.g4.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g4.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g4.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g2 * vec3(other.g0.w), self.g3 * vec3(other.g0.w), self.g4 * vec4(other.g0.w));
}

Scalar multi_vector_scalar_meet(MultiVector self, Scalar other) {
    return Scalar(self.g0.y * other.g0);
}

MultiVector multi_vector_transflector_meet(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.w) * vec2(-other.g1.w, 0.0) + vec2(self.g4.x) * vec2(other.g0.x, 0.0) + vec2(self.g4.y) * vec2(other.g0.y, 0.0) + vec2(self.g4.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g2.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g2.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g3.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g3.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g3.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0), vec3(self.g4.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g4.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g4.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g4.x, self.g4.y, self.g4.z) * vec3(other.g1.w) + vec3(self.g4.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(self.g0.y) * other.g1);
}

MultiVector multi_vector_translator_meet(MultiVector self, Translator other) {
    return MultiVector(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), self.g1 * vec4(other.g0.w) + vec4(self.g4.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g4.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g4.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g2 * vec3(other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g3 * vec3(other.g0.w), self.g4 * vec4(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_anti_scalar_meet(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_meet(MultiVectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0.y) * vec2(other.g0.w, 0.0) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_meet(MultiVectorAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_origin_meet(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_magnitude_meet(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.y), self.g1 * vec3(other.g0.y), self.g2 * vec3(other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_motor_meet(MultiVectorAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_meet(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * vec2(other.g1.w, other.g0.y) + vec2(self.g1.x) * vec2(-other.g4.x, 0.0) + vec2(self.g1.y) * vec2(-other.g4.y, 0.0) + vec2(self.g1.z) * vec2(-other.g4.z, 0.0) + vec2(self.g2.x) * vec2(-other.g2.x, 0.0) + vec2(self.g2.y) * vec2(-other.g2.y, 0.0) + vec2(self.g2.z) * vec2(-other.g2.z, 0.0), vec3(self.g0.y) * other.g2 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g2.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g2.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(self.g0.y) * vec3(other.g4.x, other.g4.y, other.g4.z) + self.g2 * vec3(other.g0.y));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_origin_meet(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g2.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g2.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g0.y) * other.g2 + self.g2 * vec3(other.g0.y));
}

Scalar multi_vector_at_infinity_origin_meet(MultiVectorAtInfinity self, Origin other) {
    return Scalar(self.g0.y * other.g0);
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_meet(MultiVectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_at_origin_meet(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * other.g0);
}

Scalar multi_vector_at_infinity_point_meet(MultiVectorAtInfinity self, Point other) {
    return Scalar(self.g0.y * other.g0.w);
}

MultiVectorAtInfinity multi_vector_at_infinity_rotor_meet(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_infinity_transflector_meet(MultiVectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(self.g0.y) * vec3(other.g1.x, other.g1.y, other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_translator_meet(MultiVectorAtInfinity self, Translator other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0.w), self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

MultiVectorAtOrigin multi_vector_at_origin_anti_scalar_meet(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_flector_meet(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.w, 0.0) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * other.g0 + vec4(self.g1.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z), vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - self.g2 * vec3(other.g1.w), vec4(self.g0.y) * other.g1);
}

MultiVectorAtInfinity multi_vector_at_origin_flector_at_infinity_meet(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0 * vec2(-other.g0.w) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec3(0.0) - self.g2 * vec3(other.g0.w));
}

MultiVectorAtInfinity multi_vector_at_origin_horizon_meet(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtInfinity(self.g0 * vec2(-other.g0), self.g1 * vec3(other.g0), vec3(0.0) - self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_origin_line_meet(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.y) * other.g0, vec3(self.g0.y) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity multi_vector_at_origin_line_at_infinity_meet(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec3(self.g2.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g2.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g2.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec3(self.g0.y) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_origin_meet(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVector multi_vector_at_origin_magnitude_meet(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVector(vec2(self.g0.y) * other.g0, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y), self.g1 * vec3(other.g0.y), vec3(0.0), vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVector multi_vector_at_origin_motor_meet(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g1.x, 0.0) + vec2(self.g1.y) * vec2(-other.g1.y, 0.0) + vec2(self.g1.z) * vec2(-other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.w) + vec4(self.g2.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g2.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g2.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), vec3(self.g0.y) * other.g1, vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

MultiVector multi_vector_at_origin_multi_vector_meet(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.w, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g3.x, 0.0) + vec2(self.g1.y) * vec2(-other.g3.y, 0.0) + vec2(self.g1.z) * vec2(-other.g3.z, 0.0) + vec2(self.g2.x) * vec2(other.g1.x, 0.0) + vec2(self.g2.y) * vec2(other.g1.y, 0.0) + vec2(self.g2.z) * vec2(other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g0.y) * other.g1 + vec4(self.g1.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g1.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g2.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g2.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g2.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z), vec3(self.g0.y) * other.g2 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g2.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g2.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(self.g0.y) * other.g3 - self.g2 * vec3(other.g4.w), vec4(self.g0.y) * other.g4 + vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVectorAtInfinity multi_vector_at_origin_multi_vector_at_infinity_meet(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0) + vec2(self.g2.x) * vec2(other.g1.x, 0.0) + vec2(self.g2.y) * vec2(other.g1.y, 0.0) + vec2(self.g2.z) * vec2(other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g2.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g2.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(self.g0.y) * other.g2 - self.g2 * vec3(other.g0.y));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_meet(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0.y, 0.0) + vec2(self.g0.y) * other.g0 + vec2(self.g1.x) * vec2(-other.g2.x, 0.0) + vec2(self.g1.y) * vec2(-other.g2.y, 0.0) + vec2(self.g1.z) * vec2(-other.g2.z, 0.0) + vec2(self.g2.x) * vec2(-other.g1.x, 0.0) + vec2(self.g2.y) * vec2(-other.g1.y, 0.0) + vec2(self.g2.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.y) * other.g1 + self.g1 * vec3(other.g0.y) + vec3(self.g2.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g2.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g2.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g0.y) * other.g2 + self.g2 * vec3(other.g0.y));
}

Origin multi_vector_at_origin_origin_meet(MultiVectorAtOrigin self, Origin other) {
    return Origin(self.g0.y * other.g0);
}

MultiVector multi_vector_at_origin_plane_meet(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.w, 0.0), vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - self.g2 * vec3(other.g0.w), vec4(self.g0.y) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_plane_at_origin_meet(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec3(self.g2.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g2.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g2.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.y) * other.g0);
}

MultiVector multi_vector_at_origin_point_meet(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * other.g0, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multi_vector_at_origin_point_at_infinity_meet(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec3(self.g0.y) * other.g0, vec3(0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_rotor_meet(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0.w) + vec2(self.g2.x) * vec2(-other.g0.x, 0.0) + vec2(self.g2.y) * vec2(-other.g0.y, 0.0) + vec2(self.g2.z) * vec2(-other.g0.z, 0.0), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z) + self.g1 * vec3(other.g0.w), self.g2 * vec3(other.g0.w));
}

Scalar multi_vector_at_origin_scalar_meet(MultiVectorAtOrigin self, Scalar other) {
    return Scalar(self.g0.y * other.g0);
}

MultiVector multi_vector_at_origin_transflector_meet(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.w, 0.0) + vec2(self.g2.x) * vec2(other.g0.x, 0.0) + vec2(self.g2.y) * vec2(other.g0.y, 0.0) + vec2(self.g2.z) * vec2(other.g0.z, 0.0), vec4(self.g0.y) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z), vec3(self.g2.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g2.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g2.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - self.g2 * vec3(other.g1.w), vec4(self.g0.y) * other.g1);
}

MultiVector multi_vector_at_origin_translator_meet(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, other.g0.w) + vec2(self.g1.x) * vec2(-other.g0.x, 0.0) + vec2(self.g1.y) * vec2(-other.g0.y, 0.0) + vec2(self.g1.z) * vec2(-other.g0.z, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.w) + vec4(self.g2.x) * vec4(0.0, other.g0.z, -other.g0.y, 0.0) + vec4(self.g2.y) * vec4(-other.g0.z, 0.0, other.g0.x, 0.0) + vec4(self.g2.z) * vec4(other.g0.y, -other.g0.x, 0.0, 0.0), self.g1 * vec3(other.g0.w), vec3(self.g0.y) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g2.x, self.g2.y, self.g2.z, self.g2.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

Origin origin_anti_scalar_meet(Origin self, AntiScalar other) {
    return Origin(self.g0 * other.g0);
}

Scalar origin_flector_meet(Origin self, Flector other) {
    return Scalar(0.0 - self.g0 * other.g1.w);
}

Scalar origin_flector_at_infinity_meet(Origin self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0 * other.g0.w);
}

Scalar origin_horizon_meet(Origin self, Horizon other) {
    return Scalar(0.0 - self.g0 * other.g0);
}

Origin origin_magnitude_meet(Origin self, Magnitude other) {
    return Origin(self.g0 * other.g0.y);
}

Origin origin_motor_meet(Origin self, Motor other) {
    return Origin(self.g0 * other.g0.w);
}

MultiVector origin_multi_vector_meet(Origin self, MultiVector other) {
    return MultiVector(vec2(self.g0) * vec2(-other.g4.w, 0.0), vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar origin_multi_vector_at_infinity_meet(Origin self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0 * other.g0.y);
}

Origin origin_multi_vector_at_origin_meet(Origin self, MultiVectorAtOrigin other) {
    return Origin(self.g0 * other.g0.y);
}

Scalar origin_plane_meet(Origin self, Plane other) {
    return Scalar(0.0 - self.g0 * other.g0.w);
}

Origin origin_rotor_meet(Origin self, Rotor other) {
    return Origin(self.g0 * other.g0.w);
}

Scalar origin_transflector_meet(Origin self, Transflector other) {
    return Scalar(0.0 - self.g0 * other.g1.w);
}

Origin origin_translator_meet(Origin self, Translator other) {
    return Origin(self.g0 * other.g0.w);
}

Plane plane_anti_scalar_meet(Plane self, AntiScalar other) {
    return Plane(self.g0 * vec4(other.g0));
}

MultiVector plane_flector_meet(Plane self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0) + vec2(self.g0.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity plane_flector_at_infinity_meet(Plane self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w));
}

LineAtInfinity plane_horizon_meet(Plane self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Point plane_line_meet(Plane self, Line other) {
    return Point(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity plane_line_at_infinity_meet(Plane self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point plane_line_at_origin_meet(Plane self, LineAtOrigin other) {
    return Point(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Plane plane_magnitude_meet(Plane self, Magnitude other) {
    return Plane(self.g0 * vec4(other.g0.y));
}

Flector plane_motor_meet(Plane self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g0 * vec4(other.g0.w));
}

MultiVector plane_multi_vector_meet(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0) + vec2(self.g0.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z) + vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g4.w) + vec3(self.g0.w) * vec3(other.g4.x, other.g4.y, other.g4.z), self.g0 * vec4(other.g0.y));
}

MultiVectorAtInfinity plane_multi_vector_at_infinity_meet(Plane self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0), vec3(self.g0.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y));
}

MultiVector plane_multi_vector_at_origin_meet(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.w) * vec2(other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g0.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g0.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g0.w) * other.g2, self.g0 * vec4(other.g0.y));
}

Scalar plane_origin_meet(Plane self, Origin other) {
    return Scalar(self.g0.w * other.g0);
}

Line plane_plane_meet(Plane self, Plane other) {
    return Line(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Line plane_plane_at_origin_meet(Plane self, PlaneAtOrigin other) {
    return Line(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g0.w) * other.g0);
}

Scalar plane_point_meet(Plane self, Point other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

Scalar plane_point_at_infinity_meet(Plane self, PointAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Flector plane_rotor_meet(Plane self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g0 * vec4(other.g0.w));
}

MultiVector plane_transflector_meet(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Transflector plane_translator_meet(Plane self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), self.g0 * vec4(other.g0.w));
}

PlaneAtOrigin plane_at_origin_anti_scalar_meet(PlaneAtOrigin self, AntiScalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

MultiVector plane_at_origin_flector_meet(PlaneAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g1.w), vec4(0.0));
}

MultiVectorAtInfinity plane_at_origin_flector_at_infinity_meet(PlaneAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - self.g0 * vec3(other.g0.w));
}

LineAtInfinity plane_at_origin_horizon_meet(PlaneAtOrigin self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0 * vec3(other.g0));
}

Point plane_at_origin_line_meet(PlaneAtOrigin self, Line other) {
    return Point(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z));
}

PointAtInfinity plane_at_origin_line_at_infinity_meet(PlaneAtOrigin self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Origin plane_at_origin_line_at_origin_meet(PlaneAtOrigin self, LineAtOrigin other) {
    return Origin(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin plane_at_origin_magnitude_meet(PlaneAtOrigin self, Magnitude other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0.y));
}

Flector plane_at_origin_motor_meet(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g0.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g0.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

MultiVector plane_at_origin_multi_vector_meet(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0), vec4(self.g0.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g0.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g0.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z), vec3(self.g0.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g0.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g0.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g4.w), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0));
}

MultiVectorAtInfinity plane_at_origin_multi_vector_at_infinity_meet(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(other.g1.x, 0.0) + vec2(self.g0.y) * vec2(other.g1.y, 0.0) + vec2(self.g0.z) * vec2(other.g1.z, 0.0), vec3(self.g0.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g0.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g0.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g0.y));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_meet(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec3(self.g0.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g0.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g0.z) * vec3(-other.g2.y, other.g2.x, 0.0), self.g0 * vec3(other.g0.y));
}

Line plane_at_origin_plane_meet(PlaneAtOrigin self, Plane other) {
    return Line(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g0.w));
}

LineAtOrigin plane_at_origin_plane_at_origin_meet(PlaneAtOrigin self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Scalar plane_at_origin_point_meet(PlaneAtOrigin self, Point other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar plane_at_origin_point_at_infinity_meet(PlaneAtOrigin self, PointAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Flector plane_at_origin_rotor_meet(PlaneAtOrigin self, Rotor other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

MultiVector plane_at_origin_transflector_meet(PlaneAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(other.g0.x, 0.0) + vec2(self.g0.y) * vec2(other.g0.y, 0.0) + vec2(self.g0.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g1.w), vec4(0.0));
}

Transflector plane_at_origin_translator_meet(PlaneAtOrigin self, Translator other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0));
}

Point point_anti_scalar_meet(Point self, AntiScalar other) {
    return Point(self.g0 * vec4(other.g0));
}

Scalar point_flector_meet(Point self, Flector other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g0.w * other.g1.w);
}

Scalar point_flector_at_infinity_meet(Point self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0.w * other.g0.w);
}

Scalar point_horizon_meet(Point self, Horizon other) {
    return Scalar(0.0 - self.g0.w * other.g0);
}

Point point_magnitude_meet(Point self, Magnitude other) {
    return Point(self.g0 * vec4(other.g0.y));
}

Point point_motor_meet(Point self, Motor other) {
    return Point(self.g0 * vec4(other.g0.w));
}

MultiVector point_multi_vector_meet(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g0.w) * vec2(-other.g4.w, 0.0), self.g0 * vec4(other.g0.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar point_multi_vector_at_infinity_meet(Point self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0.w * other.g0.y);
}

MultiVector point_multi_vector_at_origin_meet(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec4(other.g0.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar point_plane_meet(Point self, Plane other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z - self.g0.w * other.g0.w);
}

Scalar point_plane_at_origin_meet(Point self, PlaneAtOrigin other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Point point_rotor_meet(Point self, Rotor other) {
    return Point(self.g0 * vec4(other.g0.w));
}

Scalar point_transflector_meet(Point self, Transflector other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g0.w * other.g1.w);
}

Point point_translator_meet(Point self, Translator other) {
    return Point(self.g0 * vec4(other.g0.w));
}

PointAtInfinity point_at_infinity_anti_scalar_meet(PointAtInfinity self, AntiScalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

Scalar point_at_infinity_flector_meet(PointAtInfinity self, Flector other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

PointAtInfinity point_at_infinity_magnitude_meet(PointAtInfinity self, Magnitude other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.y));
}

PointAtInfinity point_at_infinity_motor_meet(PointAtInfinity self, Motor other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_meet(PointAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_origin_meet(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0), self.g0 * vec3(other.g0.y), vec3(0.0));
}

Scalar point_at_infinity_plane_meet(PointAtInfinity self, Plane other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Scalar point_at_infinity_plane_at_origin_meet(PointAtInfinity self, PlaneAtOrigin other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PointAtInfinity point_at_infinity_rotor_meet(PointAtInfinity self, Rotor other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

Scalar point_at_infinity_transflector_meet(PointAtInfinity self, Transflector other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

PointAtInfinity point_at_infinity_translator_meet(PointAtInfinity self, Translator other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.w));
}

Rotor rotor_anti_scalar_meet(Rotor self, AntiScalar other) {
    return Rotor(self.g0 * vec4(other.g0));
}

Flector rotor_flector_meet(Rotor self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g0.w) * other.g0, vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity rotor_flector_at_infinity_meet(Rotor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

FlectorAtInfinity rotor_horizon_meet(Rotor self, Horizon other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

MultiVector rotor_line_meet(Rotor self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVectorAtInfinity rotor_line_at_infinity_meet(Rotor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec3(0.0), vec3(self.g0.w) * other.g0);
}

LineAtOrigin rotor_line_at_origin_meet(Rotor self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.w) * other.g0);
}

MultiVector rotor_magnitude_meet(Rotor self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec3(0.0), vec4(0.0));
}

MultiVector rotor_motor_meet(Rotor self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g1.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVector rotor_multi_vector_meet(Rotor self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g3.x, 0.0) + vec2(self.g0.y) * vec2(-other.g3.y, 0.0) + vec2(self.g0.z) * vec2(-other.g3.z, 0.0) + vec2(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(other.g4.w, 0.0, 0.0, -other.g4.x) + vec4(self.g0.y) * vec4(0.0, other.g4.w, 0.0, -other.g4.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g4.w, -other.g4.z) + vec4(self.g0.w) * other.g1, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g2, vec3(self.g0.w) * other.g3, vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity rotor_multi_vector_at_infinity_meet(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_meet(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

Origin rotor_origin_meet(Rotor self, Origin other) {
    return Origin(self.g0.w * other.g0);
}

Flector rotor_plane_meet(Rotor self, Plane other) {
    return Flector(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z), vec4(self.g0.w) * other.g0);
}

Flector rotor_plane_at_origin_meet(Rotor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point rotor_point_meet(Rotor self, Point other) {
    return Point(vec4(self.g0.w) * other.g0);
}

PointAtInfinity rotor_point_at_infinity_meet(Rotor self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

Rotor rotor_rotor_meet(Rotor self, Rotor other) {
    return Rotor(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

Scalar rotor_scalar_meet(Rotor self, Scalar other) {
    return Scalar(self.g0.w * other.g0);
}

Flector rotor_transflector_meet(Rotor self, Transflector other) {
    return Flector(vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec4(self.g0.w) * other.g1);
}

MultiVector rotor_translator_meet(Rotor self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

Scalar scalar_anti_scalar_meet(Scalar self, AntiScalar other) {
    return Scalar(self.g0 * other.g0);
}

Scalar scalar_magnitude_meet(Scalar self, Magnitude other) {
    return Scalar(self.g0 * other.g0.y);
}

Scalar scalar_motor_meet(Scalar self, Motor other) {
    return Scalar(self.g0 * other.g0.w);
}

Scalar scalar_multi_vector_meet(Scalar self, MultiVector other) {
    return Scalar(self.g0 * other.g0.y);
}

Scalar scalar_multi_vector_at_origin_meet(Scalar self, MultiVectorAtOrigin other) {
    return Scalar(self.g0 * other.g0.y);
}

Scalar scalar_rotor_meet(Scalar self, Rotor other) {
    return Scalar(self.g0 * other.g0.w);
}

Scalar scalar_translator_meet(Scalar self, Translator other) {
    return Scalar(self.g0 * other.g0.w);
}

Transflector transflector_anti_scalar_meet(Transflector self, AntiScalar other) {
    return Transflector(self.g0 * vec3(other.g0), self.g1 * vec4(other.g0));
}

MultiVector transflector_flector_meet(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.w, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

MultiVectorAtInfinity transflector_flector_at_infinity_meet(Transflector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w));
}

LineAtInfinity transflector_horizon_meet(Transflector self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0));
}

Point transflector_line_meet(Transflector self, Line other) {
    return Point(vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

PointAtInfinity transflector_line_at_infinity_meet(Transflector self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point transflector_line_at_origin_meet(Transflector self, LineAtOrigin other) {
    return Point(vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

Transflector transflector_magnitude_meet(Transflector self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.y), self.g1 * vec4(other.g0.y));
}

Flector transflector_motor_meet(Transflector self, Motor other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g1.z, -other.g1.y, -other.g0.x) + vec4(self.g1.y) * vec4(-other.g1.z, 0.0, other.g1.x, -other.g0.y) + vec4(self.g1.z) * vec4(other.g1.y, -other.g1.x, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), self.g1 * vec4(other.g0.w));
}

MultiVector transflector_multi_vector_meet(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g4.x, 0.0) + vec2(self.g0.y) * vec2(-other.g4.y, 0.0) + vec2(self.g0.z) * vec2(-other.g4.z, 0.0) + vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z) * vec2(other.g1.z, 0.0) + vec2(self.g1.w) * vec2(other.g1.w, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + vec4(self.g1.x) * vec4(0.0, other.g3.z, -other.g3.y, -other.g2.x) + vec4(self.g1.y) * vec4(-other.g3.z, 0.0, other.g3.x, -other.g2.y) + vec4(self.g1.z) * vec4(other.g3.y, -other.g3.x, 0.0, -other.g2.z) + vec4(self.g1.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0), vec3(self.g1.x) * vec3(0.0, -other.g4.z, other.g4.y) + vec3(self.g1.y) * vec3(other.g4.z, 0.0, -other.g4.x) + vec3(self.g1.z) * vec3(-other.g4.y, other.g4.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g4.w) + vec3(self.g1.w) * vec3(other.g4.x, other.g4.y, other.g4.z), self.g1 * vec4(other.g0.y));
}

MultiVectorAtInfinity transflector_multi_vector_at_infinity_meet(Transflector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(other.g1.x, 0.0) + vec2(self.g1.y) * vec2(other.g1.y, 0.0) + vec2(self.g1.z) * vec2(other.g1.z, 0.0), vec3(self.g1.x) * vec3(0.0, other.g2.z, -other.g2.y) + vec3(self.g1.y) * vec3(-other.g2.z, 0.0, other.g2.x) + vec3(self.g1.z) * vec3(other.g2.y, -other.g2.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.y));
}

MultiVector transflector_multi_vector_at_origin_meet(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g1.w) * vec2(other.g0.x, 0.0), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.y, other.g0.y, other.g0.y, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + self.g1.wwwz * vec4(other.g1.x, other.g1.y, other.g1.z, -other.g1.z), vec3(self.g1.x) * vec3(0.0, -other.g2.z, other.g2.y) + vec3(self.g1.y) * vec3(other.g2.z, 0.0, -other.g2.x) + vec3(self.g1.z) * vec3(-other.g2.y, other.g2.x, 0.0), vec3(self.g1.w) * other.g2, self.g1 * vec4(other.g0.y));
}

Scalar transflector_origin_meet(Transflector self, Origin other) {
    return Scalar(self.g1.w * other.g0);
}

MultiVector transflector_plane_meet(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(0.0));
}

MultiVector transflector_plane_at_origin_meet(Transflector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec3(self.g1.w) * other.g0, vec4(0.0));
}

Scalar transflector_point_meet(Transflector self, Point other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z + self.g1.w * other.g0.w);
}

Scalar transflector_point_at_infinity_meet(Transflector self, PointAtInfinity other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Flector transflector_rotor_meet(Transflector self, Rotor other) {
    return Flector(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g1 * vec4(other.g0.w));
}

MultiVector transflector_transflector_meet(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z) * vec2(-other.g1.z, 0.0) + vec2(self.g1.x) * vec2(other.g0.x, 0.0) + vec2(self.g1.y) * vec2(other.g0.y, 0.0) + vec2(self.g1.z) * vec2(other.g0.z, 0.0), vec4(0.0), vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec4(0.0));
}

Transflector transflector_translator_meet(Transflector self, Translator other) {
    return Transflector(self.g0 * vec3(other.g0.w) + vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0), self.g1 * vec4(other.g0.w));
}

Translator translator_anti_scalar_meet(Translator self, AntiScalar other) {
    return Translator(self.g0 * vec4(other.g0));
}

Flector translator_flector_meet(Translator self, Flector other) {
    return Flector(vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g0.w) * other.g0, vec4(self.g0.w) * other.g1);
}

FlectorAtInfinity translator_flector_at_infinity_meet(Translator self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.w) * other.g0);
}

Horizon translator_horizon_meet(Translator self, Horizon other) {
    return Horizon(self.g0.w * other.g0);
}

MultiVector translator_line_meet(Translator self, Line other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec4(0.0));
}

LineAtInfinity translator_line_at_infinity_meet(Translator self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector translator_line_at_origin_meet(Translator self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z) * vec2(-other.g0.z, 0.0), vec4(0.0), vec3(self.g0.w) * other.g0, vec3(0.0), vec4(0.0));
}

MultiVector translator_magnitude_meet(Translator self, Magnitude other) {
    return MultiVector(vec2(self.g0.w) * other.g0, vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec4(0.0));
}

MultiVector translator_motor_meet(Translator self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * other.g1, vec4(0.0));
}

MultiVector translator_multi_vector_meet(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g2.x, 0.0) + vec2(self.g0.y) * vec2(-other.g2.y, 0.0) + vec2(self.g0.z) * vec2(-other.g2.z, 0.0) + vec2(self.g0.w) * other.g0, vec4(self.g0.x) * vec4(0.0, -other.g4.z, other.g4.y, 0.0) + vec4(self.g0.y) * vec4(other.g4.z, 0.0, -other.g4.x, 0.0) + vec4(self.g0.z) * vec4(-other.g4.y, other.g4.x, 0.0, 0.0) + vec4(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y) + vec3(self.g0.w) * other.g3, vec4(self.g0.w) * other.g4);
}

MultiVectorAtInfinity translator_multi_vector_at_infinity_meet(Translator self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.w) * other.g0, vec3(self.g0.w) * other.g1, vec3(self.g0.w) * other.g2);
}

MultiVector translator_multi_vector_at_origin_meet(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g1.x, 0.0) + vec2(self.g0.y) * vec2(-other.g1.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g1.z, other.g0.y), vec4(self.g0.x) * vec4(0.0, -other.g2.z, other.g2.y, 0.0) + vec4(self.g0.y) * vec4(other.g2.z, 0.0, -other.g2.x, 0.0) + self.g0.zzzw * vec4(-other.g2.y, other.g2.x, 0.0, other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.y), vec4(self.g0.w) * vec4(other.g2.x, other.g2.y, other.g2.z, 0.0));
}

Origin translator_origin_meet(Translator self, Origin other) {
    return Origin(self.g0.w * other.g0);
}

Transflector translator_plane_meet(Translator self, Plane other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.w) * other.g0);
}

Transflector translator_plane_at_origin_meet(Translator self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0));
}

Point translator_point_meet(Translator self, Point other) {
    return Point(vec4(self.g0.w) * other.g0);
}

PointAtInfinity translator_point_at_infinity_meet(Translator self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.w) * other.g0);
}

MultiVector translator_rotor_meet(Translator self, Rotor other) {
    return MultiVector(vec2(self.g0.x) * vec2(-other.g0.x, 0.0) + vec2(self.g0.y) * vec2(-other.g0.y, 0.0) + vec2(self.g0.z, self.g0.w) * vec2(-other.g0.z, other.g0.w), vec4(0.0), vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w), vec4(0.0));
}

Scalar translator_scalar_meet(Translator self, Scalar other) {
    return Scalar(self.g0.w * other.g0);
}

Transflector translator_transflector_meet(Translator self, Transflector other) {
    return Transflector(vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0) + vec3(self.g0.w) * other.g0, vec4(self.g0.w) * other.g1);
}

Translator translator_translator_meet(Translator self, Translator other) {
    return Translator(self.g0.xyzx * vec4(other.g0.w, other.g0.w, other.g0.w, 0.0) + vec4(self.g0.w) * other.g0);
}

AntiScalar anti_scalar_magnitude_wedge(AntiScalar self, Magnitude other) {
    return AntiScalar(self.g0 * other.g0.x);
}

AntiScalar anti_scalar_multi_vector_wedge(AntiScalar self, MultiVector other) {
    return AntiScalar(self.g0 * other.g0.x);
}

AntiScalar anti_scalar_multi_vector_at_infinity_wedge(AntiScalar self, MultiVectorAtInfinity other) {
    return AntiScalar(self.g0 * other.g0.x);
}

AntiScalar anti_scalar_scalar_wedge(AntiScalar self, Scalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Motor flector_flector_wedge(Flector self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Motor flector_flector_at_infinity_wedge(Flector self, FlectorAtInfinity other) {
    return Motor(vec4(self.g0.w) * other.g0 + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar flector_horizon_wedge(Flector self, Horizon other) {
    return AntiScalar(self.g0.w * other.g0);
}

Plane flector_line_wedge(Flector self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

Plane flector_line_at_infinity_wedge(Flector self, LineAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

PlaneAtOrigin flector_line_at_origin_wedge(Flector self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Flector flector_magnitude_wedge(Flector self, Magnitude other) {
    return Flector(self.g0 * vec4(other.g0.x), self.g1 * vec4(other.g0.x));
}

Plane flector_motor_wedge(Flector self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector flector_multi_vector_wedge(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z) + vec2(self.g0.w) * vec2(0.0, other.g4.w) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) + vec2(self.g1.w) * vec2(0.0, -other.g1.w), self.g0 * vec4(other.g0.x), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0) + self.g1 * vec4(other.g0.x));
}

MultiVector flector_multi_vector_at_infinity_wedge(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.y) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), self.g0 * vec4(other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z) + self.g1 * vec4(other.g0.x));
}

MultiVectorAtOrigin flector_multi_vector_at_origin_wedge(Flector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z) + vec2(self.g1.w) * vec2(0.0, -other.g0.x), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

Rotor flector_origin_wedge(Flector self, Origin other) {
    return Rotor(self.g0.xyzx * vec4(-other.g0, -other.g0, -other.g0, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0));
}

AntiScalar flector_plane_wedge(Flector self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

AntiScalar flector_plane_at_origin_wedge(Flector self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Motor flector_point_wedge(Flector self, Point other) {
    return Motor(self.g0.xyzx * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Motor flector_point_at_infinity_wedge(Flector self, PointAtInfinity other) {
    return Motor(vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin flector_rotor_wedge(Flector self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Flector flector_scalar_wedge(Flector self, Scalar other) {
    return Flector(self.g0 * vec4(other.g0), self.g1 * vec4(other.g0));
}

Motor flector_transflector_wedge(Flector self, Transflector other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Plane flector_translator_wedge(Flector self, Translator other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

Motor flector_at_infinity_flector_wedge(FlectorAtInfinity self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtInfinity flector_at_infinity_flector_at_infinity_wedge(FlectorAtInfinity self, FlectorAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Plane flector_at_infinity_line_wedge(FlectorAtInfinity self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

Horizon flector_at_infinity_line_at_infinity_wedge(FlectorAtInfinity self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin flector_at_infinity_line_at_origin_wedge(FlectorAtInfinity self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

FlectorAtInfinity flector_at_infinity_magnitude_wedge(FlectorAtInfinity self, Magnitude other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0.x));
}

Plane flector_at_infinity_motor_wedge(FlectorAtInfinity self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVector flector_at_infinity_multi_vector_wedge(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z) + vec2(self.g0.w) * vec2(0.0, -other.g1.w), self.g0.xyzx * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g0.w) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_wedge(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

MultiVectorAtOrigin flector_at_infinity_multi_vector_at_origin_wedge(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z) + vec2(self.g0.w) * vec2(0.0, -other.g0.x), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

Rotor flector_at_infinity_origin_wedge(FlectorAtInfinity self, Origin other) {
    return Rotor(vec4(0.0) - self.g0 * vec4(other.g0));
}

AntiScalar flector_at_infinity_plane_wedge(FlectorAtInfinity self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar flector_at_infinity_plane_at_origin_wedge(FlectorAtInfinity self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Motor flector_at_infinity_point_wedge(FlectorAtInfinity self, Point other) {
    return Motor(vec4(0.0) - self.g0 * vec4(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtInfinity flector_at_infinity_point_at_infinity_wedge(FlectorAtInfinity self, PointAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin flector_at_infinity_rotor_wedge(FlectorAtInfinity self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

FlectorAtInfinity flector_at_infinity_scalar_wedge(FlectorAtInfinity self, Scalar other) {
    return FlectorAtInfinity(self.g0 * vec4(other.g0));
}

Translator flector_at_infinity_transflector_wedge(FlectorAtInfinity self, Transflector other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g1.z));
}

Horizon flector_at_infinity_translator_wedge(FlectorAtInfinity self, Translator other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar horizon_flector_wedge(Horizon self, Flector other) {
    return AntiScalar(0.0 - self.g0 * other.g0.w);
}

Horizon horizon_magnitude_wedge(Horizon self, Magnitude other) {
    return Horizon(self.g0 * other.g0.x);
}

MultiVector horizon_multi_vector_wedge(Horizon self, MultiVector other) {
    return MultiVector(vec2(self.g0) * vec2(0.0, -other.g1.w), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

Horizon horizon_multi_vector_at_infinity_wedge(Horizon self, MultiVectorAtInfinity other) {
    return Horizon(self.g0 * other.g0.x);
}

AntiScalar horizon_multi_vector_at_origin_wedge(Horizon self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0 * other.g0.x);
}

AntiScalar horizon_origin_wedge(Horizon self, Origin other) {
    return AntiScalar(0.0 - self.g0 * other.g0);
}

AntiScalar horizon_point_wedge(Horizon self, Point other) {
    return AntiScalar(0.0 - self.g0 * other.g0.w);
}

Horizon horizon_scalar_wedge(Horizon self, Scalar other) {
    return Horizon(self.g0 * other.g0);
}

Plane line_flector_wedge(Line self, Flector other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Plane line_flector_at_infinity_wedge(Line self, FlectorAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar line_line_wedge(Line self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

AntiScalar line_line_at_infinity_wedge(Line self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_line_at_origin_wedge(Line self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Line line_magnitude_wedge(Line self, Magnitude other) {
    return Line(self.g0 * vec3(other.g0.x), self.g1 * vec3(other.g0.x));
}

AntiScalar line_motor_wedge(Line self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

MultiVector line_multi_vector_wedge(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) + vec2(self.g1.x) * vec2(0.0, -other.g2.x) + vec2(self.g1.y) * vec2(0.0, -other.g2.y) + vec2(self.g1.z) * vec2(0.0, -other.g2.z), vec4(0.0), self.g0 * vec3(other.g0.x), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVector line_multi_vector_at_infinity_wedge(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z), vec4(0.0), self.g0 * vec3(other.g0.x), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin line_multi_vector_at_origin_wedge(Line self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g1 * vec3(other.g0.x));
}

PlaneAtOrigin line_origin_wedge(Line self, Origin other) {
    return PlaneAtOrigin(self.g1 * vec3(other.g0));
}

Plane line_point_wedge(Line self, Point other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Plane line_point_at_infinity_wedge(Line self, PointAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar line_rotor_wedge(Line self, Rotor other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Line line_scalar_wedge(Line self, Scalar other) {
    return Line(self.g0 * vec3(other.g0), self.g1 * vec3(other.g0));
}

Plane line_transflector_wedge(Line self, Transflector other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar line_translator_wedge(Line self, Translator other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Plane line_at_infinity_flector_wedge(LineAtInfinity self, Flector other) {
    return Plane(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Horizon line_at_infinity_flector_at_infinity_wedge(LineAtInfinity self, FlectorAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_infinity_line_wedge(LineAtInfinity self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_infinity_line_at_origin_wedge(LineAtInfinity self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtInfinity line_at_infinity_magnitude_wedge(LineAtInfinity self, Magnitude other) {
    return LineAtInfinity(self.g0 * vec3(other.g0.x));
}

AntiScalar line_at_infinity_motor_wedge(LineAtInfinity self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

MultiVector line_at_infinity_multi_vector_wedge(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z), vec4(0.0), vec3(0.0), self.g0 * vec3(other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_wedge(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g0 * vec3(other.g0.x));
}

MultiVectorAtOrigin line_at_infinity_multi_vector_at_origin_wedge(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g0 * vec3(other.g0.x));
}

PlaneAtOrigin line_at_infinity_origin_wedge(LineAtInfinity self, Origin other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

Plane line_at_infinity_point_wedge(LineAtInfinity self, Point other) {
    return Plane(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Horizon line_at_infinity_point_at_infinity_wedge(LineAtInfinity self, PointAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_infinity_rotor_wedge(LineAtInfinity self, Rotor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtInfinity line_at_infinity_scalar_wedge(LineAtInfinity self, Scalar other) {
    return LineAtInfinity(self.g0 * vec3(other.g0));
}

Horizon line_at_infinity_transflector_wedge(LineAtInfinity self, Transflector other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin line_at_origin_flector_wedge(LineAtOrigin self, Flector other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin line_at_origin_flector_at_infinity_wedge(LineAtOrigin self, FlectorAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar line_at_origin_line_wedge(LineAtOrigin self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

AntiScalar line_at_origin_line_at_infinity_wedge(LineAtOrigin self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

LineAtOrigin line_at_origin_magnitude_wedge(LineAtOrigin self, Magnitude other) {
    return LineAtOrigin(self.g0 * vec3(other.g0.x));
}

AntiScalar line_at_origin_motor_wedge(LineAtOrigin self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

MultiVectorAtOrigin line_at_origin_multi_vector_wedge(LineAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z), self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_infinity_wedge(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z), self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

PlaneAtOrigin line_at_origin_point_wedge(LineAtOrigin self, Point other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin line_at_origin_point_at_infinity_wedge(LineAtOrigin self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtOrigin line_at_origin_scalar_wedge(LineAtOrigin self, Scalar other) {
    return LineAtOrigin(self.g0 * vec3(other.g0));
}

PlaneAtOrigin line_at_origin_transflector_wedge(LineAtOrigin self, Transflector other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar line_at_origin_translator_wedge(LineAtOrigin self, Translator other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar magnitude_anti_scalar_wedge(Magnitude self, AntiScalar other) {
    return AntiScalar(self.g0.x * other.g0);
}

Flector magnitude_flector_wedge(Magnitude self, Flector other) {
    return Flector(vec4(self.g0.x) * other.g0, vec4(self.g0.x) * other.g1);
}

FlectorAtInfinity magnitude_flector_at_infinity_wedge(Magnitude self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0.x) * other.g0);
}

Horizon magnitude_horizon_wedge(Magnitude self, Horizon other) {
    return Horizon(self.g0.x * other.g0);
}

Line magnitude_line_wedge(Magnitude self, Line other) {
    return Line(vec3(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1);
}

LineAtInfinity magnitude_line_at_infinity_wedge(Magnitude self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * other.g0);
}

LineAtOrigin magnitude_line_at_origin_wedge(Magnitude self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0.x) * other.g0);
}

Magnitude magnitude_magnitude_wedge(Magnitude self, Magnitude other) {
    return Magnitude(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x));
}

Motor magnitude_motor_wedge(Magnitude self, Motor other) {
    return Motor(vec4(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1);
}

MultiVector magnitude_multi_vector_wedge(Magnitude self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x), vec4(self.g0.x) * other.g1, vec3(self.g0.x) * other.g2, vec3(self.g0.x) * other.g3, vec4(self.g0.x) * other.g4);
}

MultiVector magnitude_multi_vector_at_infinity_wedge(Magnitude self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 * vec2(other.g0.x), vec4(self.g0.x) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0), vec3(0.0), vec3(self.g0.x) * other.g2, vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y));
}

MultiVectorAtOrigin magnitude_multi_vector_at_origin_wedge(Magnitude self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1, vec3(self.g0.x) * other.g2);
}

Origin magnitude_origin_wedge(Magnitude self, Origin other) {
    return Origin(self.g0.x * other.g0);
}

Plane magnitude_plane_wedge(Magnitude self, Plane other) {
    return Plane(vec4(self.g0.x) * other.g0);
}

PlaneAtOrigin magnitude_plane_at_origin_wedge(Magnitude self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * other.g0);
}

Point magnitude_point_wedge(Magnitude self, Point other) {
    return Point(vec4(self.g0.x) * other.g0);
}

PointAtInfinity magnitude_point_at_infinity_wedge(Magnitude self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0.x) * other.g0);
}

Rotor magnitude_rotor_wedge(Magnitude self, Rotor other) {
    return Rotor(vec4(self.g0.x) * other.g0);
}

Magnitude magnitude_scalar_wedge(Magnitude self, Scalar other) {
    return Magnitude(self.g0 * vec2(other.g0));
}

Transflector magnitude_transflector_wedge(Magnitude self, Transflector other) {
    return Transflector(vec3(self.g0.x) * other.g0, vec4(self.g0.x) * other.g1);
}

Translator magnitude_translator_wedge(Magnitude self, Translator other) {
    return Translator(vec4(self.g0.x) * other.g0);
}

Plane motor_flector_wedge(Motor self, Flector other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Plane motor_flector_at_infinity_wedge(Motor self, FlectorAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar motor_line_wedge(Motor self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

AntiScalar motor_line_at_infinity_wedge(Motor self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar motor_line_at_origin_wedge(Motor self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Motor motor_magnitude_wedge(Motor self, Magnitude other) {
    return Motor(self.g0 * vec4(other.g0.x), self.g1 * vec3(other.g0.x));
}

AntiScalar motor_motor_wedge(Motor self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

MultiVector motor_multi_vector_wedge(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, -other.g2.x) + vec2(self.g1.y) * vec2(0.0, -other.g2.y) + vec2(self.g1.z) * vec2(0.0, -other.g2.z), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVector motor_multi_vector_at_infinity_wedge(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec4(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), self.g1 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g0.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g0.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin motor_multi_vector_at_origin_wedge(Motor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g1 * vec3(other.g0.x));
}

PlaneAtOrigin motor_origin_wedge(Motor self, Origin other) {
    return PlaneAtOrigin(self.g1 * vec3(other.g0));
}

Plane motor_point_wedge(Motor self, Point other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Plane motor_point_at_infinity_wedge(Motor self, PointAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar motor_rotor_wedge(Motor self, Rotor other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Motor motor_scalar_wedge(Motor self, Scalar other) {
    return Motor(self.g0 * vec4(other.g0), self.g1 * vec3(other.g0));
}

Plane motor_transflector_wedge(Motor self, Transflector other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

AntiScalar motor_translator_wedge(Motor self, Translator other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar multi_vector_anti_scalar_wedge(MultiVector self, AntiScalar other) {
    return AntiScalar(self.g0.x * other.g0);
}

MultiVector multi_vector_flector_wedge(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g1.x) + vec2(self.g1.y) * vec2(0.0, other.g1.y) + vec2(self.g1.z) * vec2(0.0, other.g1.z) + vec2(self.g1.w) * vec2(0.0, other.g1.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.w) * vec2(0.0, -other.g0.w), vec4(self.g0.x) * other.g0, vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVector multi_vector_flector_at_infinity_wedge(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, other.g0.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.w) + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVector multi_vector_horizon_wedge(MultiVector self, Horizon other) {
    return MultiVector(vec2(self.g1.w) * vec2(0.0, other.g0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0));
}

MultiVector multi_vector_line_wedge(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1, vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector multi_vector_line_at_infinity_wedge(MultiVector self, LineAtInfinity other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(0.0), vec3(self.g0.x) * other.g0, vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_line_at_origin_wedge(MultiVector self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_magnitude_wedge(MultiVector self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x), self.g1 * vec4(other.g0.x), self.g2 * vec3(other.g0.x), self.g3 * vec3(other.g0.x), self.g4 * vec4(other.g0.x));
}

MultiVector multi_vector_motor_wedge(MultiVector self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * other.g1, vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g1.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector multi_vector_multi_vector_wedge(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, other.g4.x) + vec2(self.g1.y) * vec2(0.0, other.g4.y) + vec2(self.g1.z) * vec2(0.0, other.g4.z) + vec2(self.g1.w) * vec2(0.0, other.g4.w) + vec2(self.g2.x) * vec2(0.0, -other.g3.x) + vec2(self.g2.y) * vec2(0.0, -other.g3.y) + vec2(self.g2.z) * vec2(0.0, -other.g3.z) + vec2(self.g3.x) * vec2(0.0, -other.g2.x) + vec2(self.g3.y) * vec2(0.0, -other.g2.y) + vec2(self.g3.z) * vec2(0.0, -other.g2.z) + vec2(self.g4.x) * vec2(0.0, -other.g1.x) + vec2(self.g4.y) * vec2(0.0, -other.g1.y) + vec2(self.g4.z) * vec2(0.0, -other.g1.z) + vec2(self.g4.w) * vec2(0.0, -other.g1.w), vec4(self.g0.x) * other.g1 + self.g1 * vec4(other.g0.x), vec3(self.g0.x) * other.g2 - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g1.w) + vec3(self.g1.w) * vec3(other.g1.x, other.g1.y, other.g1.z) + self.g2 * vec3(other.g0.x), vec3(self.g0.x) * other.g3 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g3 * vec3(other.g0.x), vec4(self.g0.x) * other.g4 + vec4(self.g1.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g1.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0) + vec4(self.g2.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g2.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g2.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g3.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z) + self.g4 * vec4(other.g0.x));
}

MultiVector multi_vector_multi_vector_at_infinity_wedge(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0 * vec2(other.g0.x) + vec2(self.g1.w) * vec2(0.0, other.g0.y) + vec2(self.g2.x) * vec2(0.0, -other.g2.x) + vec2(self.g2.y) * vec2(0.0, -other.g2.y) + vec2(self.g2.z) * vec2(0.0, -other.g2.z) + vec2(self.g4.x) * vec2(0.0, -other.g1.x) + vec2(self.g4.y) * vec2(0.0, -other.g1.y) + vec2(self.g4.z) * vec2(0.0, -other.g1.z), vec4(self.g0.x) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0) + self.g1 * vec4(other.g0.x), vec3(self.g1.w) * other.g1 + self.g2 * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g3 * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g0.y) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g1.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z) + vec4(self.g2.x) * vec4(0.0, -other.g1.z, other.g1.y, 0.0) + vec4(self.g2.y) * vec4(other.g1.z, 0.0, -other.g1.x, 0.0) + vec4(self.g2.z) * vec4(-other.g1.y, other.g1.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g1.z) + self.g4 * vec4(other.g0.x));
}

MultiVectorAtOrigin multi_vector_multi_vector_at_origin_wedge(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g1.x) * vec2(0.0, other.g2.x) + vec2(self.g1.y) * vec2(0.0, other.g2.y) + vec2(self.g1.z) * vec2(0.0, other.g2.z) + vec2(self.g3.x) * vec2(0.0, -other.g1.x) + vec2(self.g3.y) * vec2(0.0, -other.g1.y) + vec2(self.g3.z) * vec2(0.0, -other.g1.z) + vec2(self.g4.w) * vec2(0.0, -other.g0.x), vec3(self.g0.x) * other.g1 - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0) + self.g3 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_origin_wedge(MultiVector self, Origin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0, 0.0) + vec2(self.g4.w) * vec2(0.0, -other.g0), vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0), self.g3 * vec3(other.g0));
}

MultiVector multi_vector_plane_wedge(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z) + vec2(self.g1.w) * vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x) * other.g0);
}

MultiVectorAtOrigin multi_vector_plane_at_origin_wedge(MultiVector self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec3(0.0), vec3(self.g0.x) * other.g0);
}

MultiVector multi_vector_point_wedge(MultiVector self, Point other) {
    return MultiVector(vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z) + vec2(self.g4.w) * vec2(0.0, -other.g0.w), vec4(self.g0.x) * other.g0, vec3(0.0) - vec3(self.g1.x, self.g1.y, self.g1.z) * vec3(other.g0.w) + vec3(self.g1.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVector multi_vector_point_at_infinity_wedge(MultiVector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g1.w) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_rotor_wedge(MultiVector self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g3.x) * vec2(0.0, -other.g0.x) + vec2(self.g3.y) * vec2(0.0, -other.g0.y) + vec2(self.g3.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_scalar_wedge(MultiVector self, Scalar other) {
    return MultiVector(self.g0 * vec2(other.g0), self.g1 * vec4(other.g0), self.g2 * vec3(other.g0), self.g3 * vec3(other.g0), self.g4 * vec4(other.g0));
}

MultiVector multi_vector_transflector_wedge(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g1.x) + vec2(self.g1.y) * vec2(0.0, other.g1.y) + vec2(self.g1.z) * vec2(0.0, other.g1.z) + vec2(self.g1.w) * vec2(0.0, other.g1.w) + vec2(self.g4.x) * vec2(0.0, -other.g0.x) + vec2(self.g4.y) * vec2(0.0, -other.g0.y) + vec2(self.g4.z) * vec2(0.0, -other.g0.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(self.g1.w) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g2.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g2.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g3.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g3.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g3.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVector multi_vector_translator_wedge(MultiVector self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g1.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

AntiScalar multi_vector_at_infinity_anti_scalar_wedge(MultiVectorAtInfinity self, AntiScalar other) {
    return AntiScalar(self.g0.x * other.g0);
}

MultiVector multi_vector_at_infinity_flector_wedge(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, -other.g0.w) + vec2(self.g1.x) * vec2(0.0, other.g1.x) + vec2(self.g1.y) * vec2(0.0, other.g1.y) + vec2(self.g1.z) * vec2(0.0, other.g1.z), vec4(self.g0.x) * other.g0, vec3(0.0) - self.g1 * vec3(other.g0.w), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_wedge(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Horizon multi_vector_at_infinity_horizon_wedge(MultiVectorAtInfinity self, Horizon other) {
    return Horizon(self.g0.x * other.g0);
}

MultiVector multi_vector_at_infinity_line_wedge(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.x) * other.g0, vec3(self.g0.x) * other.g1, vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_wedge(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec3(0.0), vec3(self.g0.x) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_infinity_line_at_origin_wedge(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVector multi_vector_at_infinity_magnitude_wedge(MultiVectorAtInfinity self, Magnitude other) {
    return MultiVector(vec2(self.g0.x) * other.g0, vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0), self.g2 * vec3(other.g0.x), vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x));
}

MultiVector multi_vector_at_infinity_motor_wedge(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec4(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * other.g1, vec4(self.g1.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g1.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g1.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVector multi_vector_at_infinity_multi_vector_wedge(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, -other.g1.w) + vec2(self.g1.x) * vec2(0.0, other.g4.x) + vec2(self.g1.y) * vec2(0.0, other.g4.y) + vec2(self.g1.z) * vec2(0.0, other.g4.z) + vec2(self.g2.x) * vec2(0.0, -other.g2.x) + vec2(self.g2.y) * vec2(0.0, -other.g2.y) + vec2(self.g2.z) * vec2(0.0, -other.g2.z), vec4(self.g0.x) * other.g1 + vec4(self.g1.x, self.g1.y, self.g1.z, self.g1.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(self.g0.x) * other.g2 - self.g1 * vec3(other.g1.w), vec3(self.g0.x) * other.g3 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g2 * vec3(other.g0.x), vec4(self.g0.x) * other.g4 + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g0.x) + vec4(self.g1.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g1.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g1.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g2.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g2.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_wedge(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, -other.g2.x) + vec2(self.g1.y) * vec2(0.0, -other.g2.y) + vec2(self.g1.z) * vec2(0.0, -other.g2.z) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z), vec3(self.g0.x) * other.g1 + self.g1 * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_infinity_multi_vector_at_origin_wedge(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, -other.g0.x) + vec2(self.g1.x) * vec2(0.0, other.g2.x) + vec2(self.g1.y) * vec2(0.0, other.g2.y) + vec2(self.g1.z) * vec2(0.0, other.g2.z) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z), vec3(self.g0.x) * other.g1 - self.g1 * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g1.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g1.z) * vec3(other.g1.y, -other.g1.x, 0.0) + self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_infinity_origin_wedge(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), vec3(0.0) - self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_plane_wedge(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0.x) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_infinity_plane_at_origin_wedge(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, other.g0.x) + vec2(self.g1.y) * vec2(0.0, other.g0.y) + vec2(self.g1.z) * vec2(0.0, other.g0.z), vec3(0.0), vec3(self.g0.x) * other.g0);
}

MultiVector multi_vector_at_infinity_point_wedge(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0.y) * vec2(0.0, -other.g0.w), vec4(self.g0.x) * other.g0, vec3(0.0) - self.g1 * vec3(other.g0.w), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g2.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_wedge(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_infinity_rotor_wedge(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g1.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g1.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_scalar_wedge(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVector multi_vector_at_infinity_transflector_wedge(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, other.g1.x) + vec2(self.g1.y) * vec2(0.0, other.g1.y) + vec2(self.g1.z) * vec2(0.0, other.g1.z), vec4(self.g0.x) * vec4(other.g0.x, other.g0.y, other.g0.z, 0.0), vec3(0.0), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0), vec4(self.g0.x) * other.g1 + vec4(self.g2.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g2.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g2.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVector multi_vector_at_infinity_translator_wedge(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g0.w), vec4(0.0), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_wedge(MultiVectorAtOrigin self, Flector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g1.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_at_infinity_wedge(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g0.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar multi_vector_at_origin_horizon_wedge(MultiVectorAtOrigin self, Horizon other) {
    return AntiScalar(self.g0.x * other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_line_wedge(MultiVectorAtOrigin self, Line other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec3(0.0), vec3(self.g0.x) * other.g1);
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_infinity_wedge(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec3(0.0), vec3(self.g0.x) * other.g0);
}

MultiVectorAtOrigin multi_vector_at_origin_magnitude_wedge(MultiVectorAtOrigin self, Magnitude other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0.x), self.g1 * vec3(other.g0.x), self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_motor_wedge(MultiVectorAtOrigin self, Motor other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec3(0.0), vec3(self.g0.x) * other.g1);
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_wedge(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(other.g0.x, other.g4.w) + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, -other.g3.x) + vec2(self.g1.y) * vec2(0.0, -other.g3.y) + vec2(self.g1.z) * vec2(0.0, -other.g3.z) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z), vec3(self.g0.x) * vec3(other.g1.x, other.g1.y, other.g1.z) + self.g1 * vec3(other.g0.x), vec3(self.g0.x) * other.g3 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g2 * vec3(other.g0.x));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_infinity_wedge(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * other.g0 + vec2(self.g0.y) * vec2(0.0, other.g0.x) + vec2(self.g1.x) * vec2(0.0, -other.g2.x) + vec2(self.g1.y) * vec2(0.0, -other.g2.y) + vec2(self.g1.z) * vec2(0.0, -other.g2.z) + vec2(self.g2.x) * vec2(0.0, -other.g1.x) + vec2(self.g2.y) * vec2(0.0, -other.g1.y) + vec2(self.g2.z) * vec2(0.0, -other.g1.z), vec3(self.g0.x) * other.g1 + self.g1 * vec3(other.g0.x), vec3(self.g0.x) * other.g2 + vec3(self.g1.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g1.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g1.z) * vec3(-other.g1.y, other.g1.x, 0.0) + self.g2 * vec3(other.g0.x));
}

AntiScalar multi_vector_at_origin_plane_wedge(MultiVectorAtOrigin self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.w);
}

MultiVectorAtOrigin multi_vector_at_origin_point_wedge(MultiVectorAtOrigin self, Point other) {
    return MultiVectorAtOrigin(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_point_at_infinity_wedge(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_scalar_wedge(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtOrigin(self.g0 * vec2(other.g0), self.g1 * vec3(other.g0), self.g2 * vec3(other.g0));
}

MultiVectorAtOrigin multi_vector_at_origin_transflector_wedge(MultiVectorAtOrigin self, Transflector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g1.w) + vec2(self.g2.x) * vec2(0.0, -other.g0.x) + vec2(self.g2.y) * vec2(0.0, -other.g0.y) + vec2(self.g2.z) * vec2(0.0, -other.g0.z), vec3(self.g0.x) * other.g0, vec3(self.g1.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g1.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g1.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

MultiVectorAtOrigin multi_vector_at_origin_translator_wedge(MultiVectorAtOrigin self, Translator other) {
    return MultiVectorAtOrigin(vec2(self.g1.x) * vec2(0.0, -other.g0.x) + vec2(self.g1.y) * vec2(0.0, -other.g0.y) + vec2(self.g1.z) * vec2(0.0, -other.g0.z), vec3(0.0), vec3(self.g0.x) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

Rotor origin_flector_wedge(Origin self, Flector other) {
    return Rotor(vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w));
}

Rotor origin_flector_at_infinity_wedge(Origin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0) * other.g0);
}

AntiScalar origin_horizon_wedge(Origin self, Horizon other) {
    return AntiScalar(self.g0 * other.g0);
}

PlaneAtOrigin origin_line_wedge(Origin self, Line other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g1);
}

PlaneAtOrigin origin_line_at_infinity_wedge(Origin self, LineAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Origin origin_magnitude_wedge(Origin self, Magnitude other) {
    return Origin(self.g0 * other.g0.x);
}

PlaneAtOrigin origin_motor_wedge(Origin self, Motor other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g1);
}

MultiVectorAtOrigin origin_multi_vector_wedge(Origin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0) * vec2(other.g0.x, other.g4.w), vec3(self.g0) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0) * other.g3);
}

MultiVectorAtOrigin origin_multi_vector_at_infinity_wedge(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

AntiScalar origin_plane_wedge(Origin self, Plane other) {
    return AntiScalar(self.g0 * other.g0.w);
}

LineAtOrigin origin_point_wedge(Origin self, Point other) {
    return LineAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

LineAtOrigin origin_point_at_infinity_wedge(Origin self, PointAtInfinity other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Origin origin_scalar_wedge(Origin self, Scalar other) {
    return Origin(self.g0 * other.g0);
}

Rotor origin_transflector_wedge(Origin self, Transflector other) {
    return Rotor(vec4(self.g0) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w));
}

PlaneAtOrigin origin_translator_wedge(Origin self, Translator other) {
    return PlaneAtOrigin(vec3(self.g0) * vec3(other.g0.x, other.g0.y, other.g0.z));
}

AntiScalar plane_flector_wedge(Plane self, Flector other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z - self.g0.w * other.g0.w);
}

AntiScalar plane_flector_at_infinity_wedge(Plane self, FlectorAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Plane plane_magnitude_wedge(Plane self, Magnitude other) {
    return Plane(self.g0 * vec4(other.g0.x));
}

MultiVector plane_multi_vector_wedge(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z) + vec2(self.g0.w) * vec2(0.0, -other.g1.w), vec4(0.0), vec3(0.0), vec3(0.0), self.g0 * vec4(other.g0.x));
}

MultiVector plane_multi_vector_at_infinity_wedge(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec4(0.0), vec3(0.0), vec3(0.0), self.g0 * vec4(other.g0.x));
}

AntiScalar plane_multi_vector_at_origin_wedge(Plane self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0.x);
}

AntiScalar plane_origin_wedge(Plane self, Origin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0);
}

AntiScalar plane_point_wedge(Plane self, Point other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z - self.g0.w * other.g0.w);
}

AntiScalar plane_point_at_infinity_wedge(Plane self, PointAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Plane plane_scalar_wedge(Plane self, Scalar other) {
    return Plane(self.g0 * vec4(other.g0));
}

AntiScalar plane_transflector_wedge(Plane self, Transflector other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar plane_at_origin_flector_wedge(PlaneAtOrigin self, Flector other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar plane_at_origin_flector_at_infinity_wedge(PlaneAtOrigin self, FlectorAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin plane_at_origin_magnitude_wedge(PlaneAtOrigin self, Magnitude other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0.x));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_wedge(PlaneAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g0 * vec3(other.g0.x));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_infinity_wedge(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), self.g0 * vec3(other.g0.x));
}

AntiScalar plane_at_origin_point_wedge(PlaneAtOrigin self, Point other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar plane_at_origin_point_at_infinity_wedge(PlaneAtOrigin self, PointAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin plane_at_origin_scalar_wedge(PlaneAtOrigin self, Scalar other) {
    return PlaneAtOrigin(self.g0 * vec3(other.g0));
}

AntiScalar plane_at_origin_transflector_wedge(PlaneAtOrigin self, Transflector other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Motor point_flector_wedge(Point self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Motor point_flector_at_infinity_wedge(Point self, FlectorAtInfinity other) {
    return Motor(vec4(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar point_horizon_wedge(Point self, Horizon other) {
    return AntiScalar(self.g0.w * other.g0);
}

Plane point_line_wedge(Point self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

Plane point_line_at_infinity_wedge(Point self, LineAtInfinity other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * vec4(other.g0.x, other.g0.y, other.g0.z, -other.g0.z));
}

PlaneAtOrigin point_line_at_origin_wedge(Point self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point point_magnitude_wedge(Point self, Magnitude other) {
    return Point(self.g0 * vec4(other.g0.x));
}

Plane point_motor_wedge(Point self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z) + vec4(self.g0.w) * vec4(other.g1.x, other.g1.y, other.g1.z, 0.0));
}

MultiVector point_multi_vector_wedge(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z) + vec2(self.g0.w) * vec2(0.0, other.g4.w), self.g0 * vec4(other.g0.x), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g1.w) + vec3(self.g0.w) * vec3(other.g1.x, other.g1.y, other.g1.z), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + vec4(self.g0.w) * vec4(other.g3.x, other.g3.y, other.g3.z, 0.0));
}

MultiVector point_multi_vector_at_infinity_wedge(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.y), self.g0 * vec4(other.g0.x), vec3(self.g0.w) * other.g1, vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + self.g0.wwwz * vec4(other.g2.x, other.g2.y, other.g2.z, -other.g2.z));
}

MultiVectorAtOrigin point_multi_vector_at_origin_wedge(Point self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z), vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

LineAtOrigin point_origin_wedge(Point self, Origin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

AntiScalar point_plane_wedge(Point self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

AntiScalar point_plane_at_origin_wedge(Point self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Line point_point_wedge(Point self, Point other) {
    return Line(vec3(0.0) - vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.w) + vec3(self.g0.w) * vec3(other.g0.x, other.g0.y, other.g0.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Line point_point_at_infinity_wedge(Point self, PointAtInfinity other) {
    return Line(vec3(self.g0.w) * other.g0, vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin point_rotor_wedge(Point self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Point point_scalar_wedge(Point self, Scalar other) {
    return Point(self.g0 * vec4(other.g0));
}

Motor point_transflector_wedge(Point self, Transflector other) {
    return Motor(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, other.g1.z) + vec4(self.g0.w) * vec4(other.g0.x, other.g0.y, other.g0.z, other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Plane point_translator_wedge(Point self, Translator other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + self.g0.wwwz * other.g0.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

Motor point_at_infinity_flector_wedge(PointAtInfinity self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtInfinity point_at_infinity_flector_at_infinity_wedge(PointAtInfinity self, FlectorAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Plane point_at_infinity_line_wedge(PointAtInfinity self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

Horizon point_at_infinity_line_at_infinity_wedge(PointAtInfinity self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin point_at_infinity_line_at_origin_wedge(PointAtInfinity self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

PointAtInfinity point_at_infinity_magnitude_wedge(PointAtInfinity self, Magnitude other) {
    return PointAtInfinity(self.g0 * vec3(other.g0.x));
}

Plane point_at_infinity_motor_wedge(PointAtInfinity self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVector point_at_infinity_multi_vector_wedge(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_wedge(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z), self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

MultiVectorAtOrigin point_at_infinity_multi_vector_at_origin_wedge(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z), vec3(0.0) - self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

LineAtOrigin point_at_infinity_origin_wedge(PointAtInfinity self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0 * vec3(other.g0));
}

AntiScalar point_at_infinity_plane_wedge(PointAtInfinity self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar point_at_infinity_plane_at_origin_wedge(PointAtInfinity self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Line point_at_infinity_point_wedge(PointAtInfinity self, Point other) {
    return Line(vec3(0.0) - self.g0 * vec3(other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

LineAtInfinity point_at_infinity_point_at_infinity_wedge(PointAtInfinity self, PointAtInfinity other) {
    return LineAtInfinity(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin point_at_infinity_rotor_wedge(PointAtInfinity self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

PointAtInfinity point_at_infinity_scalar_wedge(PointAtInfinity self, Scalar other) {
    return PointAtInfinity(self.g0 * vec3(other.g0));
}

Translator point_at_infinity_transflector_wedge(PointAtInfinity self, Transflector other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g1.z));
}

Horizon point_at_infinity_translator_wedge(PointAtInfinity self, Translator other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin rotor_flector_wedge(Rotor self, Flector other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin rotor_flector_at_infinity_wedge(Rotor self, FlectorAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar rotor_line_wedge(Rotor self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

AntiScalar rotor_line_at_infinity_wedge(Rotor self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Rotor rotor_magnitude_wedge(Rotor self, Magnitude other) {
    return Rotor(self.g0 * vec4(other.g0.x));
}

AntiScalar rotor_motor_wedge(Rotor self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

MultiVectorAtOrigin rotor_multi_vector_wedge(Rotor self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g3.x) + vec2(self.g0.y) * vec2(0.0, -other.g3.y) + vec2(self.g0.z) * vec2(0.0, -other.g3.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

MultiVectorAtOrigin rotor_multi_vector_at_infinity_wedge(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0));
}

PlaneAtOrigin rotor_point_wedge(Rotor self, Point other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

PlaneAtOrigin rotor_point_at_infinity_wedge(Rotor self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Rotor rotor_scalar_wedge(Rotor self, Scalar other) {
    return Rotor(self.g0 * vec4(other.g0));
}

PlaneAtOrigin rotor_transflector_wedge(Rotor self, Transflector other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

AntiScalar rotor_translator_wedge(Rotor self, Translator other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar scalar_anti_scalar_wedge(Scalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

Flector scalar_flector_wedge(Scalar self, Flector other) {
    return Flector(vec4(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

FlectorAtInfinity scalar_flector_at_infinity_wedge(Scalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0) * other.g0);
}

Horizon scalar_horizon_wedge(Scalar self, Horizon other) {
    return Horizon(self.g0 * other.g0);
}

Line scalar_line_wedge(Scalar self, Line other) {
    return Line(vec3(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

LineAtInfinity scalar_line_at_infinity_wedge(Scalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0) * other.g0);
}

LineAtOrigin scalar_line_at_origin_wedge(Scalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0) * other.g0);
}

Magnitude scalar_magnitude_wedge(Scalar self, Magnitude other) {
    return Magnitude(vec2(self.g0) * other.g0);
}

Motor scalar_motor_wedge(Scalar self, Motor other) {
    return Motor(vec4(self.g0) * other.g0, vec3(self.g0) * other.g1);
}

MultiVector scalar_multi_vector_wedge(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0) * other.g0, vec4(self.g0) * other.g1, vec3(self.g0) * other.g2, vec3(self.g0) * other.g3, vec4(self.g0) * other.g4);
}

MultiVectorAtInfinity scalar_multi_vector_at_infinity_wedge(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

MultiVectorAtOrigin scalar_multi_vector_at_origin_wedge(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0) * other.g0, vec3(self.g0) * other.g1, vec3(self.g0) * other.g2);
}

Origin scalar_origin_wedge(Scalar self, Origin other) {
    return Origin(self.g0 * other.g0);
}

Plane scalar_plane_wedge(Scalar self, Plane other) {
    return Plane(vec4(self.g0) * other.g0);
}

PlaneAtOrigin scalar_plane_at_origin_wedge(Scalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0) * other.g0);
}

Point scalar_point_wedge(Scalar self, Point other) {
    return Point(vec4(self.g0) * other.g0);
}

PointAtInfinity scalar_point_at_infinity_wedge(Scalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0) * other.g0);
}

Rotor scalar_rotor_wedge(Scalar self, Rotor other) {
    return Rotor(vec4(self.g0) * other.g0);
}

Scalar scalar_scalar_wedge(Scalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Transflector scalar_transflector_wedge(Scalar self, Transflector other) {
    return Transflector(vec3(self.g0) * other.g0, vec4(self.g0) * other.g1);
}

Translator scalar_translator_wedge(Scalar self, Translator other) {
    return Translator(vec4(self.g0) * other.g0);
}

Motor transflector_flector_wedge(Transflector self, Flector other) {
    return Motor(vec4(self.g0.x) * vec4(-other.g0.w, 0.0, 0.0, other.g1.x) + vec4(self.g0.y) * vec4(0.0, -other.g0.w, 0.0, other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, -other.g0.w, other.g1.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Translator transflector_flector_at_infinity_wedge(Transflector self, FlectorAtInfinity other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Plane transflector_line_wedge(Transflector self, Line other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

Horizon transflector_line_at_infinity_wedge(Transflector self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

PlaneAtOrigin transflector_line_at_origin_wedge(Transflector self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Transflector transflector_magnitude_wedge(Transflector self, Magnitude other) {
    return Transflector(self.g0 * vec3(other.g0.x), self.g1 * vec4(other.g0.x));
}

Plane transflector_motor_wedge(Transflector self, Motor other) {
    return Plane(vec4(self.g0.x) * vec4(0.0, other.g0.z, -other.g0.y, -other.g1.x) + vec4(self.g0.y) * vec4(-other.g0.z, 0.0, other.g0.x, -other.g1.y) + vec4(self.g0.z) * vec4(other.g0.y, -other.g0.x, 0.0, -other.g1.z));
}

MultiVector transflector_multi_vector_wedge(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, other.g4.x) + vec2(self.g0.y) * vec2(0.0, other.g4.y) + vec2(self.g0.z) * vec2(0.0, other.g4.z) + vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z) + vec2(self.g1.w) * vec2(0.0, -other.g1.w), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0) - self.g0 * vec3(other.g1.w), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, other.g2.z, -other.g2.y, -other.g3.x) + vec4(self.g0.y) * vec4(-other.g2.z, 0.0, other.g2.x, -other.g3.y) + vec4(self.g0.z) * vec4(other.g2.y, -other.g2.x, 0.0, -other.g3.z) + self.g1 * vec4(other.g0.x));
}

MultiVector transflector_multi_vector_at_infinity_wedge(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g1.x) * vec2(0.0, -other.g1.x) + vec2(self.g1.y) * vec2(0.0, -other.g1.y) + vec2(self.g1.z) * vec2(0.0, -other.g1.z), vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(other.g0.x, other.g0.x, other.g0.x, 0.0), vec3(0.0), vec3(self.g0.x) * vec3(0.0, -other.g1.z, other.g1.y) + vec3(self.g0.y) * vec3(other.g1.z, 0.0, -other.g1.x) + vec3(self.g0.z) * vec3(-other.g1.y, other.g1.x, 0.0), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g2.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g2.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g2.z) + self.g1 * vec4(other.g0.x));
}

MultiVectorAtOrigin transflector_multi_vector_at_origin_wedge(Transflector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, other.g2.x) + vec2(self.g0.y) * vec2(0.0, other.g2.y) + vec2(self.g0.z) * vec2(0.0, other.g2.z) + vec2(self.g1.w) * vec2(0.0, -other.g0.x), vec3(0.0) - self.g0 * vec3(other.g0.x), vec3(self.g0.x) * vec3(0.0, other.g1.z, -other.g1.y) + vec3(self.g0.y) * vec3(-other.g1.z, 0.0, other.g1.x) + vec3(self.g0.z) * vec3(other.g1.y, -other.g1.x, 0.0));
}

Rotor transflector_origin_wedge(Transflector self, Origin other) {
    return Rotor(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0, -other.g0, -other.g0, 0.0) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0));
}

AntiScalar transflector_plane_wedge(Transflector self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar transflector_plane_at_origin_wedge(Transflector self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Motor transflector_point_wedge(Transflector self, Point other) {
    return Motor(vec4(self.g0.x, self.g0.y, self.g0.z, self.g0.x) * vec4(-other.g0.w, -other.g0.w, -other.g0.w, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z) + vec4(self.g1.w) * vec4(0.0, 0.0, 0.0, -other.g0.w), vec3(self.g0.x) * vec3(0.0, -other.g0.z, other.g0.y) + vec3(self.g0.y) * vec3(other.g0.z, 0.0, -other.g0.x) + vec3(self.g0.z) * vec3(-other.g0.y, other.g0.x, 0.0));
}

Translator transflector_point_at_infinity_wedge(Transflector self, PointAtInfinity other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, 0.0) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, 0.0) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, 0.0) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

PlaneAtOrigin transflector_rotor_wedge(Transflector self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0.x) * vec3(0.0, other.g0.z, -other.g0.y) + vec3(self.g0.y) * vec3(-other.g0.z, 0.0, other.g0.x) + vec3(self.g0.z) * vec3(other.g0.y, -other.g0.x, 0.0));
}

Transflector transflector_scalar_wedge(Transflector self, Scalar other) {
    return Transflector(self.g0 * vec3(other.g0), self.g1 * vec4(other.g0));
}

Translator transflector_transflector_wedge(Transflector self, Transflector other) {
    return Translator(vec4(self.g0.x) * vec4(0.0, -other.g0.z, other.g0.y, other.g1.x) + vec4(self.g0.y) * vec4(other.g0.z, 0.0, -other.g0.x, other.g1.y) + vec4(self.g0.z) * vec4(-other.g0.y, other.g0.x, 0.0, other.g1.z) + vec4(self.g1.x) * vec4(0.0, 0.0, 0.0, -other.g0.x) + vec4(self.g1.y) * vec4(0.0, 0.0, 0.0, -other.g0.y) + vec4(self.g1.z) * vec4(0.0, 0.0, 0.0, -other.g0.z));
}

Horizon transflector_translator_wedge(Transflector self, Translator other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Plane translator_flector_wedge(Translator self, Flector other) {
    return Plane(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Horizon translator_flector_at_infinity_wedge(Translator self, FlectorAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar translator_line_wedge(Translator self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar translator_line_at_origin_wedge(Translator self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Translator translator_magnitude_wedge(Translator self, Magnitude other) {
    return Translator(self.g0 * vec4(other.g0.x));
}

AntiScalar translator_motor_wedge(Translator self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

MultiVector translator_multi_vector_wedge(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0.x) * vec2(0.0, -other.g2.x) + vec2(self.g0.y) * vec2(0.0, -other.g2.y) + vec2(self.g0.z) * vec2(0.0, -other.g2.z) + vec2(self.g0.w) * vec2(0.0, other.g0.x), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec4(self.g0.x) * vec4(other.g1.w, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, other.g1.w, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g1.w, -other.g1.z));
}

MultiVector translator_multi_vector_at_infinity_wedge(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0.w) * vec2(0.0, other.g0.x), vec4(0.0), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x), vec4(self.g0.x) * vec4(0.0, 0.0, 0.0, -other.g1.x) + vec4(self.g0.y) * vec4(0.0, 0.0, 0.0, -other.g1.y) + vec4(self.g0.z) * vec4(0.0, 0.0, 0.0, -other.g1.z));
}

MultiVectorAtOrigin translator_multi_vector_at_origin_wedge(Translator self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0.x) * vec2(0.0, -other.g1.x) + vec2(self.g0.y) * vec2(0.0, -other.g1.y) + vec2(self.g0.z) * vec2(0.0, -other.g1.z), vec3(0.0), vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0.x));
}

PlaneAtOrigin translator_origin_wedge(Translator self, Origin other) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z) * vec3(other.g0));
}

Plane translator_point_wedge(Translator self, Point other) {
    return Plane(vec4(self.g0.x) * vec4(other.g0.w, 0.0, 0.0, -other.g0.x) + vec4(self.g0.y) * vec4(0.0, other.g0.w, 0.0, -other.g0.y) + vec4(self.g0.z) * vec4(0.0, 0.0, other.g0.w, -other.g0.z));
}

Horizon translator_point_at_infinity_wedge(Translator self, PointAtInfinity other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar translator_rotor_wedge(Translator self, Rotor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Translator translator_scalar_wedge(Translator self, Scalar other) {
    return Translator(self.g0 * vec4(other.g0));
}

Horizon translator_transflector_wedge(Translator self, Transflector other) {
    return Horizon(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar anti_scalar_anti_scalar_anti_dot(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0 * other.g0);
}

AntiScalar anti_scalar_magnitude_anti_dot(AntiScalar self, Magnitude other) {
    return AntiScalar(self.g0 * other.g0.y);
}

AntiScalar anti_scalar_motor_anti_dot(AntiScalar self, Motor other) {
    return AntiScalar(self.g0 * other.g0.w);
}

AntiScalar anti_scalar_multi_vector_anti_dot(AntiScalar self, MultiVector other) {
    return AntiScalar(self.g0 * other.g0.y);
}

AntiScalar anti_scalar_multi_vector_at_origin_anti_dot(AntiScalar self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0 * other.g0.y);
}

AntiScalar anti_scalar_rotor_anti_dot(AntiScalar self, Rotor other) {
    return AntiScalar(self.g0 * other.g0.w);
}

AntiScalar anti_scalar_translator_anti_dot(AntiScalar self, Translator other) {
    return AntiScalar(self.g0 * other.g0.w);
}

AntiScalar flector_flector_anti_dot(Flector self, Flector other) {
    return AntiScalar(0.0 - self.g0.w * other.g0.w + self.g1.x * other.g1.x + self.g1.y * other.g1.y + self.g1.z * other.g1.z);
}

AntiScalar flector_multi_vector_anti_dot(Flector self, MultiVector other) {
    return AntiScalar(0.0 - self.g0.w * other.g1.w + self.g1.x * other.g4.x + self.g1.y * other.g4.y + self.g1.z * other.g4.z);
}

AntiScalar flector_multi_vector_at_origin_anti_dot(Flector self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0.x + self.g1.x * other.g2.x + self.g1.y * other.g2.y + self.g1.z * other.g2.z);
}

AntiScalar flector_origin_anti_dot(Flector self, Origin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0);
}

AntiScalar flector_plane_anti_dot(Flector self, Plane other) {
    return AntiScalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

AntiScalar flector_plane_at_origin_anti_dot(Flector self, PlaneAtOrigin other) {
    return AntiScalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

AntiScalar flector_point_anti_dot(Flector self, Point other) {
    return AntiScalar(0.0 - self.g0.w * other.g0.w);
}

AntiScalar flector_transflector_anti_dot(Flector self, Transflector other) {
    return AntiScalar(self.g1.x * other.g1.x + self.g1.y * other.g1.y + self.g1.z * other.g1.z);
}

AntiScalar line_line_anti_dot(Line self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_line_at_origin_anti_dot(Line self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_motor_anti_dot(Line self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_multi_vector_anti_dot(Line self, MultiVector other) {
    return AntiScalar(0.0 - self.g0.x * other.g2.x - self.g0.y * other.g2.y - self.g0.z * other.g2.z);
}

AntiScalar line_multi_vector_at_origin_anti_dot(Line self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

AntiScalar line_rotor_anti_dot(Line self, Rotor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_origin_line_anti_dot(LineAtOrigin self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_origin_line_at_origin_anti_dot(LineAtOrigin self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_origin_motor_anti_dot(LineAtOrigin self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar line_at_origin_multi_vector_anti_dot(LineAtOrigin self, MultiVector other) {
    return AntiScalar(0.0 - self.g0.x * other.g2.x - self.g0.y * other.g2.y - self.g0.z * other.g2.z);
}

AntiScalar line_at_origin_multi_vector_at_origin_anti_dot(LineAtOrigin self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

AntiScalar line_at_origin_rotor_anti_dot(LineAtOrigin self, Rotor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar magnitude_anti_scalar_anti_dot(Magnitude self, AntiScalar other) {
    return AntiScalar(self.g0.y * other.g0);
}

AntiScalar magnitude_magnitude_anti_dot(Magnitude self, Magnitude other) {
    return AntiScalar(self.g0.y * other.g0.y);
}

AntiScalar magnitude_motor_anti_dot(Magnitude self, Motor other) {
    return AntiScalar(self.g0.y * other.g0.w);
}

AntiScalar magnitude_multi_vector_anti_dot(Magnitude self, MultiVector other) {
    return AntiScalar(self.g0.y * other.g0.y);
}

AntiScalar magnitude_multi_vector_at_origin_anti_dot(Magnitude self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0.y * other.g0.y);
}

AntiScalar magnitude_rotor_anti_dot(Magnitude self, Rotor other) {
    return AntiScalar(self.g0.y * other.g0.w);
}

AntiScalar magnitude_translator_anti_dot(Magnitude self, Translator other) {
    return AntiScalar(self.g0.y * other.g0.w);
}

AntiScalar motor_anti_scalar_anti_dot(Motor self, AntiScalar other) {
    return AntiScalar(self.g0.w * other.g0);
}

AntiScalar motor_line_anti_dot(Motor self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar motor_line_at_origin_anti_dot(Motor self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar motor_magnitude_anti_dot(Motor self, Magnitude other) {
    return AntiScalar(self.g0.w * other.g0.y);
}

AntiScalar motor_motor_anti_dot(Motor self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

AntiScalar motor_multi_vector_anti_dot(Motor self, MultiVector other) {
    return AntiScalar(0.0 - self.g0.x * other.g2.x - self.g0.y * other.g2.y - self.g0.z * other.g2.z + self.g0.w * other.g0.y);
}

AntiScalar motor_multi_vector_at_origin_anti_dot(Motor self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z + self.g0.w * other.g0.y);
}

AntiScalar motor_rotor_anti_dot(Motor self, Rotor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

AntiScalar motor_translator_anti_dot(Motor self, Translator other) {
    return AntiScalar(self.g0.w * other.g0.w);
}

AntiScalar multi_vector_anti_scalar_anti_dot(MultiVector self, AntiScalar other) {
    return AntiScalar(self.g0.y * other.g0);
}

AntiScalar multi_vector_flector_anti_dot(MultiVector self, Flector other) {
    return AntiScalar(0.0 - self.g1.w * other.g0.w + self.g4.x * other.g1.x + self.g4.y * other.g1.y + self.g4.z * other.g1.z);
}

AntiScalar multi_vector_line_anti_dot(MultiVector self, Line other) {
    return AntiScalar(0.0 - self.g2.x * other.g0.x - self.g2.y * other.g0.y - self.g2.z * other.g0.z);
}

AntiScalar multi_vector_line_at_origin_anti_dot(MultiVector self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g2.x * other.g0.x - self.g2.y * other.g0.y - self.g2.z * other.g0.z);
}

AntiScalar multi_vector_magnitude_anti_dot(MultiVector self, Magnitude other) {
    return AntiScalar(self.g0.y * other.g0.y);
}

AntiScalar multi_vector_motor_anti_dot(MultiVector self, Motor other) {
    return AntiScalar(self.g0.y * other.g0.w - self.g2.x * other.g0.x - self.g2.y * other.g0.y - self.g2.z * other.g0.z);
}

AntiScalar multi_vector_multi_vector_anti_dot(MultiVector self, MultiVector other) {
    return AntiScalar(self.g0.y * other.g0.y - self.g1.w * other.g1.w - self.g2.x * other.g2.x - self.g2.y * other.g2.y - self.g2.z * other.g2.z + self.g4.x * other.g4.x + self.g4.y * other.g4.y + self.g4.z * other.g4.z);
}

AntiScalar multi_vector_multi_vector_at_origin_anti_dot(MultiVector self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0.y * other.g0.y - self.g1.w * other.g0.x - self.g2.x * other.g1.x - self.g2.y * other.g1.y - self.g2.z * other.g1.z + self.g4.x * other.g2.x + self.g4.y * other.g2.y + self.g4.z * other.g2.z);
}

AntiScalar multi_vector_origin_anti_dot(MultiVector self, Origin other) {
    return AntiScalar(0.0 - self.g1.w * other.g0);
}

AntiScalar multi_vector_plane_anti_dot(MultiVector self, Plane other) {
    return AntiScalar(self.g4.x * other.g0.x + self.g4.y * other.g0.y + self.g4.z * other.g0.z);
}

AntiScalar multi_vector_plane_at_origin_anti_dot(MultiVector self, PlaneAtOrigin other) {
    return AntiScalar(self.g4.x * other.g0.x + self.g4.y * other.g0.y + self.g4.z * other.g0.z);
}

AntiScalar multi_vector_point_anti_dot(MultiVector self, Point other) {
    return AntiScalar(0.0 - self.g1.w * other.g0.w);
}

AntiScalar multi_vector_rotor_anti_dot(MultiVector self, Rotor other) {
    return AntiScalar(self.g0.y * other.g0.w - self.g2.x * other.g0.x - self.g2.y * other.g0.y - self.g2.z * other.g0.z);
}

AntiScalar multi_vector_transflector_anti_dot(MultiVector self, Transflector other) {
    return AntiScalar(self.g4.x * other.g1.x + self.g4.y * other.g1.y + self.g4.z * other.g1.z);
}

AntiScalar multi_vector_translator_anti_dot(MultiVector self, Translator other) {
    return AntiScalar(self.g0.y * other.g0.w);
}

AntiScalar multi_vector_at_origin_anti_scalar_anti_dot(MultiVectorAtOrigin self, AntiScalar other) {
    return AntiScalar(self.g0.y * other.g0);
}

AntiScalar multi_vector_at_origin_flector_anti_dot(MultiVectorAtOrigin self, Flector other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.w + self.g2.x * other.g1.x + self.g2.y * other.g1.y + self.g2.z * other.g1.z);
}

AntiScalar multi_vector_at_origin_line_anti_dot(MultiVectorAtOrigin self, Line other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

AntiScalar multi_vector_at_origin_line_at_origin_anti_dot(MultiVectorAtOrigin self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

AntiScalar multi_vector_at_origin_magnitude_anti_dot(MultiVectorAtOrigin self, Magnitude other) {
    return AntiScalar(self.g0.y * other.g0.y);
}

AntiScalar multi_vector_at_origin_motor_anti_dot(MultiVectorAtOrigin self, Motor other) {
    return AntiScalar(self.g0.y * other.g0.w - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

AntiScalar multi_vector_at_origin_multi_vector_anti_dot(MultiVectorAtOrigin self, MultiVector other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.w + self.g0.y * other.g0.y - self.g1.x * other.g2.x - self.g1.y * other.g2.y - self.g1.z * other.g2.z + self.g2.x * other.g4.x + self.g2.y * other.g4.y + self.g2.z * other.g4.z);
}

AntiScalar multi_vector_at_origin_multi_vector_at_origin_anti_dot(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x + self.g0.y * other.g0.y - self.g1.x * other.g1.x - self.g1.y * other.g1.y - self.g1.z * other.g1.z + self.g2.x * other.g2.x + self.g2.y * other.g2.y + self.g2.z * other.g2.z);
}

AntiScalar multi_vector_at_origin_origin_anti_dot(MultiVectorAtOrigin self, Origin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0);
}

AntiScalar multi_vector_at_origin_plane_anti_dot(MultiVectorAtOrigin self, Plane other) {
    return AntiScalar(self.g2.x * other.g0.x + self.g2.y * other.g0.y + self.g2.z * other.g0.z);
}

AntiScalar multi_vector_at_origin_plane_at_origin_anti_dot(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return AntiScalar(self.g2.x * other.g0.x + self.g2.y * other.g0.y + self.g2.z * other.g0.z);
}

AntiScalar multi_vector_at_origin_point_anti_dot(MultiVectorAtOrigin self, Point other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.w);
}

AntiScalar multi_vector_at_origin_rotor_anti_dot(MultiVectorAtOrigin self, Rotor other) {
    return AntiScalar(self.g0.y * other.g0.w - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

AntiScalar multi_vector_at_origin_transflector_anti_dot(MultiVectorAtOrigin self, Transflector other) {
    return AntiScalar(self.g2.x * other.g1.x + self.g2.y * other.g1.y + self.g2.z * other.g1.z);
}

AntiScalar multi_vector_at_origin_translator_anti_dot(MultiVectorAtOrigin self, Translator other) {
    return AntiScalar(self.g0.y * other.g0.w);
}

AntiScalar origin_flector_anti_dot(Origin self, Flector other) {
    return AntiScalar(0.0 - self.g0 * other.g0.w);
}

AntiScalar origin_multi_vector_anti_dot(Origin self, MultiVector other) {
    return AntiScalar(0.0 - self.g0 * other.g1.w);
}

AntiScalar origin_multi_vector_at_origin_anti_dot(Origin self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0 * other.g0.x);
}

AntiScalar origin_origin_anti_dot(Origin self, Origin other) {
    return AntiScalar(0.0 - self.g0 * other.g0);
}

AntiScalar origin_point_anti_dot(Origin self, Point other) {
    return AntiScalar(0.0 - self.g0 * other.g0.w);
}

AntiScalar plane_flector_anti_dot(Plane self, Flector other) {
    return AntiScalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z);
}

AntiScalar plane_multi_vector_anti_dot(Plane self, MultiVector other) {
    return AntiScalar(self.g0.x * other.g4.x + self.g0.y * other.g4.y + self.g0.z * other.g4.z);
}

AntiScalar plane_multi_vector_at_origin_anti_dot(Plane self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0.x * other.g2.x + self.g0.y * other.g2.y + self.g0.z * other.g2.z);
}

AntiScalar plane_plane_anti_dot(Plane self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar plane_plane_at_origin_anti_dot(Plane self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar plane_transflector_anti_dot(Plane self, Transflector other) {
    return AntiScalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z);
}

AntiScalar plane_at_origin_flector_anti_dot(PlaneAtOrigin self, Flector other) {
    return AntiScalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z);
}

AntiScalar plane_at_origin_multi_vector_anti_dot(PlaneAtOrigin self, MultiVector other) {
    return AntiScalar(self.g0.x * other.g4.x + self.g0.y * other.g4.y + self.g0.z * other.g4.z);
}

AntiScalar plane_at_origin_multi_vector_at_origin_anti_dot(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0.x * other.g2.x + self.g0.y * other.g2.y + self.g0.z * other.g2.z);
}

AntiScalar plane_at_origin_plane_anti_dot(PlaneAtOrigin self, Plane other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar plane_at_origin_plane_at_origin_anti_dot(PlaneAtOrigin self, PlaneAtOrigin other) {
    return AntiScalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

AntiScalar plane_at_origin_transflector_anti_dot(PlaneAtOrigin self, Transflector other) {
    return AntiScalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z);
}

AntiScalar point_flector_anti_dot(Point self, Flector other) {
    return AntiScalar(0.0 - self.g0.w * other.g0.w);
}

AntiScalar point_multi_vector_anti_dot(Point self, MultiVector other) {
    return AntiScalar(0.0 - self.g0.w * other.g1.w);
}

AntiScalar point_multi_vector_at_origin_anti_dot(Point self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0.x);
}

AntiScalar point_origin_anti_dot(Point self, Origin other) {
    return AntiScalar(0.0 - self.g0.w * other.g0);
}

AntiScalar point_point_anti_dot(Point self, Point other) {
    return AntiScalar(0.0 - self.g0.w * other.g0.w);
}

AntiScalar rotor_anti_scalar_anti_dot(Rotor self, AntiScalar other) {
    return AntiScalar(self.g0.w * other.g0);
}

AntiScalar rotor_line_anti_dot(Rotor self, Line other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar rotor_line_at_origin_anti_dot(Rotor self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

AntiScalar rotor_magnitude_anti_dot(Rotor self, Magnitude other) {
    return AntiScalar(self.g0.w * other.g0.y);
}

AntiScalar rotor_motor_anti_dot(Rotor self, Motor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

AntiScalar rotor_multi_vector_anti_dot(Rotor self, MultiVector other) {
    return AntiScalar(0.0 - self.g0.x * other.g2.x - self.g0.y * other.g2.y - self.g0.z * other.g2.z + self.g0.w * other.g0.y);
}

AntiScalar rotor_multi_vector_at_origin_anti_dot(Rotor self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z + self.g0.w * other.g0.y);
}

AntiScalar rotor_rotor_anti_dot(Rotor self, Rotor other) {
    return AntiScalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z + self.g0.w * other.g0.w);
}

AntiScalar rotor_translator_anti_dot(Rotor self, Translator other) {
    return AntiScalar(self.g0.w * other.g0.w);
}

AntiScalar transflector_flector_anti_dot(Transflector self, Flector other) {
    return AntiScalar(self.g1.x * other.g1.x + self.g1.y * other.g1.y + self.g1.z * other.g1.z);
}

AntiScalar transflector_multi_vector_anti_dot(Transflector self, MultiVector other) {
    return AntiScalar(self.g1.x * other.g4.x + self.g1.y * other.g4.y + self.g1.z * other.g4.z);
}

AntiScalar transflector_multi_vector_at_origin_anti_dot(Transflector self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g1.x * other.g2.x + self.g1.y * other.g2.y + self.g1.z * other.g2.z);
}

AntiScalar transflector_plane_anti_dot(Transflector self, Plane other) {
    return AntiScalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

AntiScalar transflector_plane_at_origin_anti_dot(Transflector self, PlaneAtOrigin other) {
    return AntiScalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

AntiScalar transflector_transflector_anti_dot(Transflector self, Transflector other) {
    return AntiScalar(self.g1.x * other.g1.x + self.g1.y * other.g1.y + self.g1.z * other.g1.z);
}

AntiScalar translator_anti_scalar_anti_dot(Translator self, AntiScalar other) {
    return AntiScalar(self.g0.w * other.g0);
}

AntiScalar translator_magnitude_anti_dot(Translator self, Magnitude other) {
    return AntiScalar(self.g0.w * other.g0.y);
}

AntiScalar translator_motor_anti_dot(Translator self, Motor other) {
    return AntiScalar(self.g0.w * other.g0.w);
}

AntiScalar translator_multi_vector_anti_dot(Translator self, MultiVector other) {
    return AntiScalar(self.g0.w * other.g0.y);
}

AntiScalar translator_multi_vector_at_origin_anti_dot(Translator self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0.w * other.g0.y);
}

AntiScalar translator_rotor_anti_dot(Translator self, Rotor other) {
    return AntiScalar(self.g0.w * other.g0.w);
}

AntiScalar translator_translator_anti_dot(Translator self, Translator other) {
    return AntiScalar(self.g0.w * other.g0.w);
}

Scalar flector_flector_dot(Flector self, Flector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z - self.g1.w * other.g1.w);
}

Scalar flector_flector_at_infinity_dot(Flector self, FlectorAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z - self.g1.w * other.g0.w);
}

Scalar flector_horizon_dot(Flector self, Horizon other) {
    return Scalar(0.0 - self.g1.w * other.g0);
}

Scalar flector_multi_vector_dot(Flector self, MultiVector other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z - self.g1.w * other.g4.w);
}

Scalar flector_multi_vector_at_infinity_dot(Flector self, MultiVectorAtInfinity other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z - self.g1.w * other.g0.y);
}

Scalar flector_plane_dot(Flector self, Plane other) {
    return Scalar(0.0 - self.g1.w * other.g0.w);
}

Scalar flector_point_dot(Flector self, Point other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar flector_point_at_infinity_dot(Flector self, PointAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar flector_transflector_dot(Flector self, Transflector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z - self.g1.w * other.g1.w);
}

Scalar flector_at_infinity_flector_dot(FlectorAtInfinity self, Flector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z - self.g0.w * other.g1.w);
}

Scalar flector_at_infinity_flector_at_infinity_dot(FlectorAtInfinity self, FlectorAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z - self.g0.w * other.g0.w);
}

Scalar flector_at_infinity_horizon_dot(FlectorAtInfinity self, Horizon other) {
    return Scalar(0.0 - self.g0.w * other.g0);
}

Scalar flector_at_infinity_multi_vector_dot(FlectorAtInfinity self, MultiVector other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z - self.g0.w * other.g4.w);
}

Scalar flector_at_infinity_multi_vector_at_infinity_dot(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z - self.g0.w * other.g0.y);
}

Scalar flector_at_infinity_plane_dot(FlectorAtInfinity self, Plane other) {
    return Scalar(0.0 - self.g0.w * other.g0.w);
}

Scalar flector_at_infinity_point_dot(FlectorAtInfinity self, Point other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar flector_at_infinity_point_at_infinity_dot(FlectorAtInfinity self, PointAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar flector_at_infinity_transflector_dot(FlectorAtInfinity self, Transflector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z - self.g0.w * other.g1.w);
}

Scalar horizon_flector_dot(Horizon self, Flector other) {
    return Scalar(0.0 - self.g0 * other.g1.w);
}

Scalar horizon_flector_at_infinity_dot(Horizon self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0 * other.g0.w);
}

Scalar horizon_horizon_dot(Horizon self, Horizon other) {
    return Scalar(0.0 - self.g0 * other.g0);
}

Scalar horizon_multi_vector_dot(Horizon self, MultiVector other) {
    return Scalar(0.0 - self.g0 * other.g4.w);
}

Scalar horizon_multi_vector_at_infinity_dot(Horizon self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0 * other.g0.y);
}

Scalar horizon_plane_dot(Horizon self, Plane other) {
    return Scalar(0.0 - self.g0 * other.g0.w);
}

Scalar horizon_transflector_dot(Horizon self, Transflector other) {
    return Scalar(0.0 - self.g0 * other.g1.w);
}

Scalar line_line_dot(Line self, Line other) {
    return Scalar(0.0 - self.g1.x * other.g1.x - self.g1.y * other.g1.y - self.g1.z * other.g1.z);
}

Scalar line_line_at_infinity_dot(Line self, LineAtInfinity other) {
    return Scalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Scalar line_motor_dot(Line self, Motor other) {
    return Scalar(0.0 - self.g1.x * other.g1.x - self.g1.y * other.g1.y - self.g1.z * other.g1.z);
}

Scalar line_multi_vector_dot(Line self, MultiVector other) {
    return Scalar(0.0 - self.g1.x * other.g3.x - self.g1.y * other.g3.y - self.g1.z * other.g3.z);
}

Scalar line_multi_vector_at_infinity_dot(Line self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g1.x * other.g2.x - self.g1.y * other.g2.y - self.g1.z * other.g2.z);
}

Scalar line_translator_dot(Line self, Translator other) {
    return Scalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Scalar line_at_infinity_line_dot(LineAtInfinity self, Line other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

Scalar line_at_infinity_line_at_infinity_dot(LineAtInfinity self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Scalar line_at_infinity_motor_dot(LineAtInfinity self, Motor other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

Scalar line_at_infinity_multi_vector_dot(LineAtInfinity self, MultiVector other) {
    return Scalar(0.0 - self.g0.x * other.g3.x - self.g0.y * other.g3.y - self.g0.z * other.g3.z);
}

Scalar line_at_infinity_multi_vector_at_infinity_dot(LineAtInfinity self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0.x * other.g2.x - self.g0.y * other.g2.y - self.g0.z * other.g2.z);
}

Scalar line_at_infinity_translator_dot(LineAtInfinity self, Translator other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Scalar magnitude_magnitude_dot(Magnitude self, Magnitude other) {
    return Scalar(self.g0.x * other.g0.x);
}

Scalar magnitude_multi_vector_dot(Magnitude self, MultiVector other) {
    return Scalar(self.g0.x * other.g0.x);
}

Scalar magnitude_multi_vector_at_infinity_dot(Magnitude self, MultiVectorAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x);
}

Scalar magnitude_scalar_dot(Magnitude self, Scalar other) {
    return Scalar(self.g0.x * other.g0);
}

Scalar motor_line_dot(Motor self, Line other) {
    return Scalar(0.0 - self.g1.x * other.g1.x - self.g1.y * other.g1.y - self.g1.z * other.g1.z);
}

Scalar motor_line_at_infinity_dot(Motor self, LineAtInfinity other) {
    return Scalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Scalar motor_motor_dot(Motor self, Motor other) {
    return Scalar(0.0 - self.g1.x * other.g1.x - self.g1.y * other.g1.y - self.g1.z * other.g1.z);
}

Scalar motor_multi_vector_dot(Motor self, MultiVector other) {
    return Scalar(0.0 - self.g1.x * other.g3.x - self.g1.y * other.g3.y - self.g1.z * other.g3.z);
}

Scalar motor_multi_vector_at_infinity_dot(Motor self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g1.x * other.g2.x - self.g1.y * other.g2.y - self.g1.z * other.g2.z);
}

Scalar motor_translator_dot(Motor self, Translator other) {
    return Scalar(0.0 - self.g1.x * other.g0.x - self.g1.y * other.g0.y - self.g1.z * other.g0.z);
}

Scalar multi_vector_flector_dot(MultiVector self, Flector other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z - self.g4.w * other.g1.w);
}

Scalar multi_vector_flector_at_infinity_dot(MultiVector self, FlectorAtInfinity other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z - self.g4.w * other.g0.w);
}

Scalar multi_vector_horizon_dot(MultiVector self, Horizon other) {
    return Scalar(0.0 - self.g4.w * other.g0);
}

Scalar multi_vector_line_dot(MultiVector self, Line other) {
    return Scalar(0.0 - self.g3.x * other.g1.x - self.g3.y * other.g1.y - self.g3.z * other.g1.z);
}

Scalar multi_vector_line_at_infinity_dot(MultiVector self, LineAtInfinity other) {
    return Scalar(0.0 - self.g3.x * other.g0.x - self.g3.y * other.g0.y - self.g3.z * other.g0.z);
}

Scalar multi_vector_magnitude_dot(MultiVector self, Magnitude other) {
    return Scalar(self.g0.x * other.g0.x);
}

Scalar multi_vector_motor_dot(MultiVector self, Motor other) {
    return Scalar(0.0 - self.g3.x * other.g1.x - self.g3.y * other.g1.y - self.g3.z * other.g1.z);
}

Scalar multi_vector_multi_vector_dot(MultiVector self, MultiVector other) {
    return Scalar(self.g0.x * other.g0.x + self.g1.x * other.g1.x + self.g1.y * other.g1.y + self.g1.z * other.g1.z - self.g3.x * other.g3.x - self.g3.y * other.g3.y - self.g3.z * other.g3.z - self.g4.w * other.g4.w);
}

Scalar multi_vector_multi_vector_at_infinity_dot(MultiVector self, MultiVectorAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g1.x * other.g1.x + self.g1.y * other.g1.y + self.g1.z * other.g1.z - self.g3.x * other.g2.x - self.g3.y * other.g2.y - self.g3.z * other.g2.z - self.g4.w * other.g0.y);
}

Scalar multi_vector_plane_dot(MultiVector self, Plane other) {
    return Scalar(0.0 - self.g4.w * other.g0.w);
}

Scalar multi_vector_point_dot(MultiVector self, Point other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Scalar multi_vector_point_at_infinity_dot(MultiVector self, PointAtInfinity other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Scalar multi_vector_scalar_dot(MultiVector self, Scalar other) {
    return Scalar(self.g0.x * other.g0);
}

Scalar multi_vector_transflector_dot(MultiVector self, Transflector other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z - self.g4.w * other.g1.w);
}

Scalar multi_vector_translator_dot(MultiVector self, Translator other) {
    return Scalar(0.0 - self.g3.x * other.g0.x - self.g3.y * other.g0.y - self.g3.z * other.g0.z);
}

Scalar multi_vector_at_infinity_flector_dot(MultiVectorAtInfinity self, Flector other) {
    return Scalar(0.0 - self.g0.y * other.g1.w + self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Scalar multi_vector_at_infinity_flector_at_infinity_dot(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0.y * other.g0.w + self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Scalar multi_vector_at_infinity_horizon_dot(MultiVectorAtInfinity self, Horizon other) {
    return Scalar(0.0 - self.g0.y * other.g0);
}

Scalar multi_vector_at_infinity_line_dot(MultiVectorAtInfinity self, Line other) {
    return Scalar(0.0 - self.g2.x * other.g1.x - self.g2.y * other.g1.y - self.g2.z * other.g1.z);
}

Scalar multi_vector_at_infinity_line_at_infinity_dot(MultiVectorAtInfinity self, LineAtInfinity other) {
    return Scalar(0.0 - self.g2.x * other.g0.x - self.g2.y * other.g0.y - self.g2.z * other.g0.z);
}

Scalar multi_vector_at_infinity_magnitude_dot(MultiVectorAtInfinity self, Magnitude other) {
    return Scalar(self.g0.x * other.g0.x);
}

Scalar multi_vector_at_infinity_motor_dot(MultiVectorAtInfinity self, Motor other) {
    return Scalar(0.0 - self.g2.x * other.g1.x - self.g2.y * other.g1.y - self.g2.z * other.g1.z);
}

Scalar multi_vector_at_infinity_multi_vector_dot(MultiVectorAtInfinity self, MultiVector other) {
    return Scalar(self.g0.x * other.g0.x - self.g0.y * other.g4.w + self.g1.x * other.g1.x + self.g1.y * other.g1.y + self.g1.z * other.g1.z - self.g2.x * other.g3.x - self.g2.y * other.g3.y - self.g2.z * other.g3.z);
}

Scalar multi_vector_at_infinity_multi_vector_at_infinity_dot(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x - self.g0.y * other.g0.y + self.g1.x * other.g1.x + self.g1.y * other.g1.y + self.g1.z * other.g1.z - self.g2.x * other.g2.x - self.g2.y * other.g2.y - self.g2.z * other.g2.z);
}

Scalar multi_vector_at_infinity_plane_dot(MultiVectorAtInfinity self, Plane other) {
    return Scalar(0.0 - self.g0.y * other.g0.w);
}

Scalar multi_vector_at_infinity_point_dot(MultiVectorAtInfinity self, Point other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Scalar multi_vector_at_infinity_point_at_infinity_dot(MultiVectorAtInfinity self, PointAtInfinity other) {
    return Scalar(self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Scalar multi_vector_at_infinity_scalar_dot(MultiVectorAtInfinity self, Scalar other) {
    return Scalar(self.g0.x * other.g0);
}

Scalar multi_vector_at_infinity_transflector_dot(MultiVectorAtInfinity self, Transflector other) {
    return Scalar(0.0 - self.g0.y * other.g1.w + self.g1.x * other.g0.x + self.g1.y * other.g0.y + self.g1.z * other.g0.z);
}

Scalar multi_vector_at_infinity_translator_dot(MultiVectorAtInfinity self, Translator other) {
    return Scalar(0.0 - self.g2.x * other.g0.x - self.g2.y * other.g0.y - self.g2.z * other.g0.z);
}

Scalar plane_flector_dot(Plane self, Flector other) {
    return Scalar(0.0 - self.g0.w * other.g1.w);
}

Scalar plane_flector_at_infinity_dot(Plane self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0.w * other.g0.w);
}

Scalar plane_horizon_dot(Plane self, Horizon other) {
    return Scalar(0.0 - self.g0.w * other.g0);
}

Scalar plane_multi_vector_dot(Plane self, MultiVector other) {
    return Scalar(0.0 - self.g0.w * other.g4.w);
}

Scalar plane_multi_vector_at_infinity_dot(Plane self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0.w * other.g0.y);
}

Scalar plane_plane_dot(Plane self, Plane other) {
    return Scalar(0.0 - self.g0.w * other.g0.w);
}

Scalar plane_transflector_dot(Plane self, Transflector other) {
    return Scalar(0.0 - self.g0.w * other.g1.w);
}

Scalar point_flector_dot(Point self, Flector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar point_flector_at_infinity_dot(Point self, FlectorAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar point_multi_vector_dot(Point self, MultiVector other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z);
}

Scalar point_multi_vector_at_infinity_dot(Point self, MultiVectorAtInfinity other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z);
}

Scalar point_point_dot(Point self, Point other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar point_point_at_infinity_dot(Point self, PointAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar point_transflector_dot(Point self, Transflector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar point_at_infinity_flector_dot(PointAtInfinity self, Flector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar point_at_infinity_flector_at_infinity_dot(PointAtInfinity self, FlectorAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar point_at_infinity_multi_vector_dot(PointAtInfinity self, MultiVector other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z);
}

Scalar point_at_infinity_multi_vector_at_infinity_dot(PointAtInfinity self, MultiVectorAtInfinity other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z);
}

Scalar point_at_infinity_point_dot(PointAtInfinity self, Point other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar point_at_infinity_point_at_infinity_dot(PointAtInfinity self, PointAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar point_at_infinity_transflector_dot(PointAtInfinity self, Transflector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar scalar_magnitude_dot(Scalar self, Magnitude other) {
    return Scalar(self.g0 * other.g0.x);
}

Scalar scalar_multi_vector_dot(Scalar self, MultiVector other) {
    return Scalar(self.g0 * other.g0.x);
}

Scalar scalar_multi_vector_at_infinity_dot(Scalar self, MultiVectorAtInfinity other) {
    return Scalar(self.g0 * other.g0.x);
}

Scalar scalar_scalar_dot(Scalar self, Scalar other) {
    return Scalar(self.g0 * other.g0);
}

Scalar transflector_flector_dot(Transflector self, Flector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z - self.g1.w * other.g1.w);
}

Scalar transflector_flector_at_infinity_dot(Transflector self, FlectorAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z - self.g1.w * other.g0.w);
}

Scalar transflector_horizon_dot(Transflector self, Horizon other) {
    return Scalar(0.0 - self.g1.w * other.g0);
}

Scalar transflector_multi_vector_dot(Transflector self, MultiVector other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z - self.g1.w * other.g4.w);
}

Scalar transflector_multi_vector_at_infinity_dot(Transflector self, MultiVectorAtInfinity other) {
    return Scalar(self.g0.x * other.g1.x + self.g0.y * other.g1.y + self.g0.z * other.g1.z - self.g1.w * other.g0.y);
}

Scalar transflector_plane_dot(Transflector self, Plane other) {
    return Scalar(0.0 - self.g1.w * other.g0.w);
}

Scalar transflector_point_dot(Transflector self, Point other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar transflector_point_at_infinity_dot(Transflector self, PointAtInfinity other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z);
}

Scalar transflector_transflector_dot(Transflector self, Transflector other) {
    return Scalar(self.g0.x * other.g0.x + self.g0.y * other.g0.y + self.g0.z * other.g0.z - self.g1.w * other.g1.w);
}

Scalar translator_line_dot(Translator self, Line other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

Scalar translator_line_at_infinity_dot(Translator self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

Scalar translator_motor_dot(Translator self, Motor other) {
    return Scalar(0.0 - self.g0.x * other.g1.x - self.g0.y * other.g1.y - self.g0.z * other.g1.z);
}

Scalar translator_multi_vector_dot(Translator self, MultiVector other) {
    return Scalar(0.0 - self.g0.x * other.g3.x - self.g0.y * other.g3.y - self.g0.z * other.g3.z);
}

Scalar translator_multi_vector_at_infinity_dot(Translator self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0.x * other.g2.x - self.g0.y * other.g2.y - self.g0.z * other.g2.z);
}

Scalar translator_translator_dot(Translator self, Translator other) {
    return Scalar(0.0 - self.g0.x * other.g0.x - self.g0.y * other.g0.y - self.g0.z * other.g0.z);
}

FlectorAtInfinity flector_bulk(Flector self) {
    return FlectorAtInfinity(vec4(self.g0.x, self.g0.y, self.g0.z, self.g1.w));
}

FlectorAtInfinity flector_at_infinity_bulk(FlectorAtInfinity self) {
    return self;
}

Horizon horizon_bulk(Horizon self) {
    return self;
}

LineAtInfinity line_bulk(Line self) {
    return LineAtInfinity(self.g1);
}

LineAtInfinity line_at_infinity_bulk(LineAtInfinity self) {
    return self;
}

Scalar magnitude_bulk(Magnitude self) {
    return Scalar(self.g0.x);
}

LineAtInfinity motor_bulk(Motor self) {
    return LineAtInfinity(self.g1);
}

MultiVectorAtInfinity multi_vector_bulk(MultiVector self) {
    return MultiVectorAtInfinity(vec2(self.g0.x, self.g4.w), vec3(self.g1.x, self.g1.y, self.g1.z), self.g3);
}

MultiVectorAtInfinity multi_vector_at_infinity_bulk(MultiVectorAtInfinity self) {
    return self;
}

Horizon plane_bulk(Plane self) {
    return Horizon(self.g0.w);
}

PointAtInfinity point_bulk(Point self) {
    return PointAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z));
}

PointAtInfinity point_at_infinity_bulk(PointAtInfinity self) {
    return self;
}

Scalar scalar_bulk(Scalar self) {
    return self;
}

FlectorAtInfinity transflector_bulk(Transflector self) {
    return FlectorAtInfinity(vec4(self.g0.x, self.g0.y, self.g0.z, self.g1.w));
}

LineAtInfinity translator_bulk(Translator self) {
    return LineAtInfinity(vec3(self.g0.x, self.g0.y, self.g0.z));
}

AntiScalar anti_scalar_weight(AntiScalar self) {
    return self;
}

Flector flector_weight(Flector self) {
    return Flector(self.g0 * vec4(0.0, 0.0, 0.0, 1.0), self.g1 * vec4(1.0, 1.0, 1.0, 0.0));
}

LineAtOrigin line_weight(Line self) {
    return LineAtOrigin(self.g0);
}

LineAtOrigin line_at_origin_weight(LineAtOrigin self) {
    return self;
}

AntiScalar magnitude_weight(Magnitude self) {
    return AntiScalar(self.g0.y);
}

Rotor motor_weight(Motor self) {
    return Rotor(self.g0);
}

MultiVectorAtOrigin multi_vector_weight(MultiVector self) {
    return MultiVectorAtOrigin(vec2(self.g1.w, self.g0.y), self.g2, vec3(self.g4.x, self.g4.y, self.g4.z));
}

MultiVectorAtOrigin multi_vector_at_origin_weight(MultiVectorAtOrigin self) {
    return self;
}

Origin origin_weight(Origin self) {
    return self;
}

PlaneAtOrigin plane_weight(Plane self) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z));
}

PlaneAtOrigin plane_at_origin_weight(PlaneAtOrigin self) {
    return self;
}

Origin point_weight(Point self) {
    return Origin(self.g0.w);
}

Rotor rotor_weight(Rotor self) {
    return self;
}

PlaneAtOrigin transflector_weight(Transflector self) {
    return PlaneAtOrigin(vec3(self.g1.x, self.g1.y, self.g1.z));
}

AntiScalar translator_weight(Translator self) {
    return AntiScalar(self.g0.w);
}

FlectorAtInfinity flector_anti_dual(Flector self) {
    return FlectorAtInfinity(vec4(-self.g1.x, -self.g1.y, -self.g1.z, self.g0.w));
}

LineAtInfinity line_anti_dual(Line self) {
    return LineAtInfinity(self.g0 * vec3(-1.0));
}

LineAtInfinity line_at_origin_anti_dual(LineAtOrigin self) {
    return LineAtInfinity(self.g0 * vec3(-1.0));
}

MultiVectorAtInfinity motor_anti_dual(Motor self) {
    return MultiVectorAtInfinity(vec2(0.0), vec3(0.0), vec3(-self.g0.x, self.g0.y, self.g0.z));
}

MultiVectorAtInfinity multi_vector_anti_dual(MultiVector self) {
    return MultiVectorAtInfinity(vec2(0.0, self.g1.w), vec3(-self.g4.x, self.g4.y, self.g4.z), self.g2 * vec3(-1.0));
}

MultiVectorAtInfinity multi_vector_at_origin_anti_dual(MultiVectorAtOrigin self) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0.x), self.g2 * vec3(-1.0), self.g1 * vec3(-1.0));
}

Horizon origin_anti_dual(Origin self) {
    return Horizon(self.g0);
}

PointAtInfinity plane_anti_dual(Plane self) {
    return PointAtInfinity(vec3(-self.g0.x, self.g0.y, self.g0.z));
}

PointAtInfinity plane_at_origin_anti_dual(PlaneAtOrigin self) {
    return PointAtInfinity(self.g0 * vec3(-1.0));
}

Horizon point_anti_dual(Point self) {
    return Horizon(self.g0.w);
}

MultiVectorAtInfinity rotor_anti_dual(Rotor self) {
    return MultiVectorAtInfinity(vec2(0.0), vec3(0.0), vec3(-self.g0.x, self.g0.y, self.g0.z));
}

PointAtInfinity transflector_anti_dual(Transflector self) {
    return PointAtInfinity(vec3(-self.g1.x, self.g1.y, self.g1.z));
}

AntiScalar anti_scalar_anti_reversal(AntiScalar self) {
    return AntiScalar(self.g0);
}

Flector flector_anti_reversal(Flector self) {
    return Flector(self.g0 * vec4(-1.0), self.g1 * vec4(-1.0, 1.0, -1.0, 1.0));
}

FlectorAtInfinity flector_at_infinity_anti_reversal(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0 * vec4(-1.0, -1.0, -1.0, 1.0));
}

Horizon horizon_anti_reversal(Horizon self) {
    return Horizon(self.g0);
}

Line line_anti_reversal(Line self) {
    return Line(self.g0 * vec3(-1.0, 1.0, -1.0), self.g1 * vec3(-1.0));
}

LineAtInfinity line_at_infinity_anti_reversal(LineAtInfinity self) {
    return LineAtInfinity(self.g0 * vec3(-1.0));
}

LineAtOrigin line_at_origin_anti_reversal(LineAtOrigin self) {
    return LineAtOrigin(self.g0 * vec3(-1.0, 1.0, -1.0));
}

Magnitude magnitude_anti_reversal(Magnitude self) {
    return Magnitude(self.g0);
}

Motor motor_anti_reversal(Motor self) {
    return Motor(self.g0 * vec4(-1.0, 1.0, -1.0, 1.0), self.g1 * vec3(-1.0));
}

MultiVector multi_vector_anti_reversal(MultiVector self) {
    return MultiVector(self.g0, self.g1 * vec4(-1.0), self.g2 * vec3(-1.0, 1.0, -1.0), self.g3 * vec3(-1.0), self.g4 * vec4(-1.0, 1.0, -1.0, 1.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_anti_reversal(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0, self.g1 * vec3(-1.0), self.g2 * vec3(-1.0));
}

MultiVectorAtOrigin multi_vector_at_origin_anti_reversal(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0 * vec2(-1.0, 1.0), self.g1 * vec3(-1.0, 1.0, -1.0), self.g2 * vec3(-1.0, 1.0, -1.0));
}

Origin origin_anti_reversal(Origin self) {
    return Origin(-self.g0);
}

Plane plane_anti_reversal(Plane self) {
    return Plane(self.g0 * vec4(-1.0, 1.0, -1.0, 1.0));
}

PlaneAtOrigin plane_at_origin_anti_reversal(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0 * vec3(-1.0, 1.0, -1.0));
}

Point point_anti_reversal(Point self) {
    return Point(self.g0 * vec4(-1.0));
}

PointAtInfinity point_at_infinity_anti_reversal(PointAtInfinity self) {
    return PointAtInfinity(self.g0 * vec3(-1.0));
}

Rotor rotor_anti_reversal(Rotor self) {
    return Rotor(self.g0 * vec4(-1.0, 1.0, -1.0, 1.0));
}

Scalar scalar_anti_reversal(Scalar self) {
    return Scalar(self.g0);
}

Transflector transflector_anti_reversal(Transflector self) {
    return Transflector(self.g0 * vec3(-1.0), self.g1 * vec4(-1.0, 1.0, -1.0, 1.0));
}

Translator translator_anti_reversal(Translator self) {
    return Translator(self.g0 * vec4(-1.0, -1.0, -1.0, 1.0));
}

AntiScalar anti_scalar_automorphism(AntiScalar self) {
    return AntiScalar(self.g0);
}

Flector flector_automorphism(Flector self) {
    return Flector(self.g0 * vec4(-1.0), self.g1 * vec4(1.0, -1.0, 1.0, -1.0));
}

FlectorAtInfinity flector_at_infinity_automorphism(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0 * vec4(-1.0));
}

Horizon horizon_automorphism(Horizon self) {
    return Horizon(-self.g0);
}

Line line_automorphism(Line self) {
    return Line(self.g0 * vec3(1.0, -1.0, 1.0), self.g1);
}

LineAtInfinity line_at_infinity_automorphism(LineAtInfinity self) {
    return LineAtInfinity(self.g0);
}

LineAtOrigin line_at_origin_automorphism(LineAtOrigin self) {
    return LineAtOrigin(self.g0 * vec3(1.0, -1.0, 1.0));
}

Magnitude magnitude_automorphism(Magnitude self) {
    return Magnitude(self.g0);
}

Motor motor_automorphism(Motor self) {
    return Motor(self.g0 * vec4(1.0, -1.0, 1.0, 1.0), self.g1);
}

MultiVector multi_vector_automorphism(MultiVector self) {
    return MultiVector(self.g0, self.g1 * vec4(-1.0), self.g2 * vec3(1.0, -1.0, 1.0), self.g3, self.g4 * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_automorphism(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0 * vec2(1.0, -1.0), self.g1 * vec3(-1.0), self.g2);
}

MultiVectorAtOrigin multi_vector_at_origin_automorphism(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0 * vec2(-1.0, 1.0), self.g1 * vec3(1.0, -1.0, 1.0), self.g2 * vec3(1.0, -1.0, 1.0));
}

Origin origin_automorphism(Origin self) {
    return Origin(-self.g0);
}

Plane plane_automorphism(Plane self) {
    return Plane(self.g0 * vec4(1.0, -1.0, 1.0, -1.0));
}

PlaneAtOrigin plane_at_origin_automorphism(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0 * vec3(1.0, -1.0, 1.0));
}

Point point_automorphism(Point self) {
    return Point(self.g0 * vec4(-1.0));
}

PointAtInfinity point_at_infinity_automorphism(PointAtInfinity self) {
    return PointAtInfinity(self.g0 * vec3(-1.0));
}

Rotor rotor_automorphism(Rotor self) {
    return Rotor(self.g0 * vec4(1.0, -1.0, 1.0, 1.0));
}

Scalar scalar_automorphism(Scalar self) {
    return Scalar(self.g0);
}

Transflector transflector_automorphism(Transflector self) {
    return Transflector(self.g0 * vec3(-1.0), self.g1 * vec4(1.0, -1.0, 1.0, -1.0));
}

Translator translator_automorphism(Translator self) {
    return Translator(self.g0);
}

AntiScalar anti_scalar_conjugation(AntiScalar self) {
    return AntiScalar(self.g0);
}

Flector flector_conjugation(Flector self) {
    return Flector(self.g0 * vec4(-1.0), self.g1 * vec4(-1.0, 1.0, -1.0, 1.0));
}

FlectorAtInfinity flector_at_infinity_conjugation(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0 * vec4(-1.0, -1.0, -1.0, 1.0));
}

Horizon horizon_conjugation(Horizon self) {
    return Horizon(self.g0);
}

Line line_conjugation(Line self) {
    return Line(self.g0 * vec3(-1.0, 1.0, -1.0), self.g1 * vec3(-1.0));
}

LineAtInfinity line_at_infinity_conjugation(LineAtInfinity self) {
    return LineAtInfinity(self.g0 * vec3(-1.0));
}

LineAtOrigin line_at_origin_conjugation(LineAtOrigin self) {
    return LineAtOrigin(self.g0 * vec3(-1.0, 1.0, -1.0));
}

Magnitude magnitude_conjugation(Magnitude self) {
    return Magnitude(self.g0);
}

Motor motor_conjugation(Motor self) {
    return Motor(self.g0 * vec4(-1.0, 1.0, -1.0, 1.0), self.g1 * vec3(-1.0));
}

MultiVector multi_vector_conjugation(MultiVector self) {
    return MultiVector(self.g0, self.g1 * vec4(-1.0), self.g2 * vec3(-1.0, 1.0, -1.0), self.g3 * vec3(-1.0), self.g4 * vec4(-1.0, 1.0, -1.0, 1.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_conjugation(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0, self.g1 * vec3(-1.0), self.g2 * vec3(-1.0));
}

MultiVectorAtOrigin multi_vector_at_origin_conjugation(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0 * vec2(-1.0, 1.0), self.g1 * vec3(-1.0, 1.0, -1.0), self.g2 * vec3(-1.0, 1.0, -1.0));
}

Origin origin_conjugation(Origin self) {
    return Origin(-self.g0);
}

Plane plane_conjugation(Plane self) {
    return Plane(self.g0 * vec4(-1.0, 1.0, -1.0, 1.0));
}

PlaneAtOrigin plane_at_origin_conjugation(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0 * vec3(-1.0, 1.0, -1.0));
}

Point point_conjugation(Point self) {
    return Point(self.g0 * vec4(-1.0));
}

PointAtInfinity point_at_infinity_conjugation(PointAtInfinity self) {
    return PointAtInfinity(self.g0 * vec3(-1.0));
}

Rotor rotor_conjugation(Rotor self) {
    return Rotor(self.g0 * vec4(-1.0, 1.0, -1.0, 1.0));
}

Scalar scalar_conjugation(Scalar self) {
    return Scalar(self.g0);
}

Transflector transflector_conjugation(Transflector self) {
    return Transflector(self.g0 * vec3(-1.0), self.g1 * vec4(-1.0, 1.0, -1.0, 1.0));
}

Translator translator_conjugation(Translator self) {
    return Translator(self.g0 * vec4(-1.0, -1.0, -1.0, 1.0));
}

AntiScalar anti_scalar_double_complement(AntiScalar self) {
    return AntiScalar(self.g0);
}

Flector flector_double_complement(Flector self) {
    return Flector(self.g0 * vec4(-1.0), self.g1 * vec4(-1.0));
}

FlectorAtInfinity flector_at_infinity_double_complement(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0 * vec4(-1.0));
}

Horizon horizon_double_complement(Horizon self) {
    return Horizon(-self.g0);
}

Line line_double_complement(Line self) {
    return Line(self.g0, self.g1);
}

LineAtInfinity line_at_infinity_double_complement(LineAtInfinity self) {
    return LineAtInfinity(self.g0);
}

LineAtOrigin line_at_origin_double_complement(LineAtOrigin self) {
    return LineAtOrigin(self.g0);
}

Magnitude magnitude_double_complement(Magnitude self) {
    return Magnitude(self.g0);
}

Motor motor_double_complement(Motor self) {
    return Motor(self.g0, self.g1);
}

MultiVector multi_vector_double_complement(MultiVector self) {
    return MultiVector(self.g0, self.g1 * vec4(-1.0), self.g2, self.g3, self.g4 * vec4(-1.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_double_complement(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0 * vec2(1.0, -1.0), self.g1 * vec3(-1.0), self.g2);
}

MultiVectorAtOrigin multi_vector_at_origin_double_complement(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0 * vec2(-1.0, 1.0), self.g1, self.g2 * vec3(-1.0));
}

Origin origin_double_complement(Origin self) {
    return Origin(-self.g0);
}

Plane plane_double_complement(Plane self) {
    return Plane(self.g0 * vec4(-1.0));
}

PlaneAtOrigin plane_at_origin_double_complement(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0 * vec3(-1.0));
}

Point point_double_complement(Point self) {
    return Point(self.g0 * vec4(-1.0));
}

PointAtInfinity point_at_infinity_double_complement(PointAtInfinity self) {
    return PointAtInfinity(self.g0 * vec3(-1.0));
}

Rotor rotor_double_complement(Rotor self) {
    return Rotor(self.g0);
}

Scalar scalar_double_complement(Scalar self) {
    return Scalar(self.g0);
}

Transflector transflector_double_complement(Transflector self) {
    return Transflector(self.g0 * vec3(-1.0), self.g1 * vec4(-1.0));
}

Translator translator_double_complement(Translator self) {
    return Translator(self.g0);
}

Flector flector_dual(Flector self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g1.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Flector flector_at_infinity_dual(FlectorAtInfinity self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Origin horizon_dual(Horizon self) {
    return Origin(-self.g0);
}

LineAtOrigin line_dual(Line self) {
    return LineAtOrigin(self.g1 * vec3(-1.0));
}

LineAtOrigin line_at_infinity_dual(LineAtInfinity self) {
    return LineAtOrigin(self.g0 * vec3(-1.0));
}

AntiScalar magnitude_dual(Magnitude self) {
    return AntiScalar(self.g0.x);
}

LineAtOrigin motor_dual(Motor self) {
    return LineAtOrigin(self.g1 * vec3(-1.0));
}

MultiVectorAtOrigin multi_vector_dual(MultiVector self) {
    return MultiVectorAtOrigin(vec2(-self.g4.w, self.g0.x), self.g3 * vec3(-1.0), vec3(self.g1.x, self.g1.y, self.g1.z));
}

MultiVectorAtOrigin multi_vector_at_infinity_dual(MultiVectorAtInfinity self) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-1.0, 1.0), self.g2 * vec3(-1.0), self.g1);
}

Origin plane_dual(Plane self) {
    return Origin(-self.g0.w);
}

PlaneAtOrigin point_dual(Point self) {
    return PlaneAtOrigin(vec3(self.g0.x, self.g0.y, self.g0.z));
}

PlaneAtOrigin point_at_infinity_dual(PointAtInfinity self) {
    return PlaneAtOrigin(self.g0);
}

AntiScalar scalar_dual(Scalar self) {
    return AntiScalar(self.g0);
}

Flector transflector_dual(Transflector self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g1.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

LineAtOrigin translator_dual(Translator self) {
    return LineAtOrigin(vec3(-self.g0.x, self.g0.y, self.g0.z));
}

Scalar anti_scalar_left_complement(AntiScalar self) {
    return Scalar(self.g0);
}

Flector flector_left_complement(Flector self) {
    return Flector(self.g1 * vec4(-1.0), self.g0);
}

Flector flector_at_infinity_left_complement(FlectorAtInfinity self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Origin horizon_left_complement(Horizon self) {
    return Origin(-self.g0);
}

Line line_left_complement(Line self) {
    return Line(self.g1 * vec3(-1.0), self.g0 * vec3(-1.0));
}

LineAtOrigin line_at_infinity_left_complement(LineAtInfinity self) {
    return LineAtOrigin(self.g0 * vec3(-1.0));
}

LineAtInfinity line_at_origin_left_complement(LineAtOrigin self) {
    return LineAtInfinity(self.g0 * vec3(-1.0));
}

Magnitude magnitude_left_complement(Magnitude self) {
    return Magnitude(self.g0.yx);
}

MultiVector motor_left_complement(Motor self) {
    return MultiVector(vec2(self.g0.w, 0.0), vec4(0.0), self.g1 * vec3(-1.0), vec3(-self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

MultiVector multi_vector_left_complement(MultiVector self) {
    return MultiVector(self.g0.yx, self.g4 * vec4(-1.0), self.g3 * vec3(-1.0), self.g2 * vec3(-1.0), self.g1);
}

MultiVectorAtOrigin multi_vector_at_infinity_left_complement(MultiVectorAtInfinity self) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-1.0, 1.0), self.g2 * vec3(-1.0), self.g1);
}

MultiVectorAtInfinity multi_vector_at_origin_left_complement(MultiVectorAtOrigin self) {
    return MultiVectorAtInfinity(self.g0.yx, self.g2 * vec3(-1.0), self.g1 * vec3(-1.0));
}

Horizon origin_left_complement(Origin self) {
    return Horizon(self.g0);
}

Point plane_left_complement(Plane self) {
    return Point(self.g0 * vec4(-1.0));
}

PointAtInfinity plane_at_origin_left_complement(PlaneAtOrigin self) {
    return PointAtInfinity(self.g0 * vec3(-1.0));
}

Plane point_left_complement(Point self) {
    return Plane(self.g0);
}

PlaneAtOrigin point_at_infinity_left_complement(PointAtInfinity self) {
    return PlaneAtOrigin(self.g0);
}

MultiVectorAtInfinity rotor_left_complement(Rotor self) {
    return MultiVectorAtInfinity(vec2(self.g0.w, 0.0), vec3(0.0), vec3(-self.g0.x, self.g0.y, self.g0.z));
}

AntiScalar scalar_left_complement(Scalar self) {
    return AntiScalar(self.g0);
}

Flector transflector_left_complement(Transflector self) {
    return Flector(self.g1 * vec4(-1.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector translator_left_complement(Translator self) {
    return MultiVector(vec2(self.g0.w, 0.0), vec4(0.0), vec3(-self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

AntiScalar anti_scalar_reversal(AntiScalar self) {
    return AntiScalar(self.g0);
}

Flector flector_reversal(Flector self) {
    return Flector(self.g0, self.g1 * vec4(1.0, -1.0, 1.0, -1.0));
}

FlectorAtInfinity flector_at_infinity_reversal(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0 * vec4(1.0, 1.0, 1.0, -1.0));
}

Horizon horizon_reversal(Horizon self) {
    return Horizon(-self.g0);
}

Line line_reversal(Line self) {
    return Line(self.g0 * vec3(-1.0, 1.0, -1.0), self.g1 * vec3(-1.0));
}

LineAtInfinity line_at_infinity_reversal(LineAtInfinity self) {
    return LineAtInfinity(self.g0 * vec3(-1.0));
}

LineAtOrigin line_at_origin_reversal(LineAtOrigin self) {
    return LineAtOrigin(self.g0 * vec3(-1.0, 1.0, -1.0));
}

Magnitude magnitude_reversal(Magnitude self) {
    return Magnitude(self.g0);
}

Motor motor_reversal(Motor self) {
    return Motor(self.g0 * vec4(-1.0, 1.0, -1.0, 1.0), self.g1 * vec3(-1.0));
}

MultiVector multi_vector_reversal(MultiVector self) {
    return MultiVector(self.g0, self.g1, self.g2 * vec3(-1.0, 1.0, -1.0), self.g3 * vec3(-1.0), self.g4 * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity multi_vector_at_infinity_reversal(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0 * vec2(1.0, -1.0), self.g1, self.g2 * vec3(-1.0));
}

MultiVectorAtOrigin multi_vector_at_origin_reversal(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0, self.g1 * vec3(-1.0, 1.0, -1.0), self.g2 * vec3(1.0, -1.0, 1.0));
}

Origin origin_reversal(Origin self) {
    return Origin(self.g0);
}

Plane plane_reversal(Plane self) {
    return Plane(self.g0 * vec4(1.0, -1.0, 1.0, -1.0));
}

PlaneAtOrigin plane_at_origin_reversal(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0 * vec3(1.0, -1.0, 1.0));
}

Point point_reversal(Point self) {
    return Point(self.g0);
}

PointAtInfinity point_at_infinity_reversal(PointAtInfinity self) {
    return PointAtInfinity(self.g0);
}

Rotor rotor_reversal(Rotor self) {
    return Rotor(self.g0 * vec4(-1.0, 1.0, -1.0, 1.0));
}

Scalar scalar_reversal(Scalar self) {
    return Scalar(self.g0);
}

Transflector transflector_reversal(Transflector self) {
    return Transflector(self.g0, self.g1 * vec4(1.0, -1.0, 1.0, -1.0));
}

Translator translator_reversal(Translator self) {
    return Translator(self.g0 * vec4(-1.0, -1.0, -1.0, 1.0));
}

Scalar anti_scalar_right_complement(AntiScalar self) {
    return Scalar(self.g0);
}

Flector flector_right_complement(Flector self) {
    return Flector(self.g1 * vec4(-1.0), self.g0);
}

Flector flector_at_infinity_right_complement(FlectorAtInfinity self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g0.w), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

Origin horizon_right_complement(Horizon self) {
    return Origin(-self.g0);
}

Line line_right_complement(Line self) {
    return Line(self.g1 * vec3(-1.0), self.g0 * vec3(-1.0));
}

LineAtOrigin line_at_infinity_right_complement(LineAtInfinity self) {
    return LineAtOrigin(self.g0 * vec3(-1.0));
}

LineAtInfinity line_at_origin_right_complement(LineAtOrigin self) {
    return LineAtInfinity(self.g0 * vec3(-1.0));
}

Magnitude magnitude_right_complement(Magnitude self) {
    return Magnitude(self.g0.yx);
}

MultiVector motor_right_complement(Motor self) {
    return MultiVector(vec2(self.g0.w, 0.0), vec4(0.0), self.g1 * vec3(-1.0), vec3(-self.g0.x, self.g0.y, self.g0.z), vec4(0.0));
}

MultiVector multi_vector_right_complement(MultiVector self) {
    return MultiVector(self.g0.yx, self.g4 * vec4(-1.0), self.g3 * vec3(-1.0), self.g2 * vec3(-1.0), self.g1);
}

MultiVectorAtOrigin multi_vector_at_infinity_right_complement(MultiVectorAtInfinity self) {
    return MultiVectorAtOrigin(self.g0.yx * vec2(-1.0, 1.0), self.g2 * vec3(-1.0), self.g1);
}

MultiVectorAtInfinity multi_vector_at_origin_right_complement(MultiVectorAtOrigin self) {
    return MultiVectorAtInfinity(self.g0.yx, self.g2 * vec3(-1.0), self.g1 * vec3(-1.0));
}

Horizon origin_right_complement(Origin self) {
    return Horizon(self.g0);
}

Point plane_right_complement(Plane self) {
    return Point(self.g0 * vec4(-1.0));
}

PointAtInfinity plane_at_origin_right_complement(PlaneAtOrigin self) {
    return PointAtInfinity(self.g0 * vec3(-1.0));
}

Plane point_right_complement(Point self) {
    return Plane(self.g0);
}

PlaneAtOrigin point_at_infinity_right_complement(PointAtInfinity self) {
    return PlaneAtOrigin(self.g0);
}

MultiVectorAtInfinity rotor_right_complement(Rotor self) {
    return MultiVectorAtInfinity(vec2(self.g0.w, 0.0), vec3(0.0), vec3(-self.g0.x, self.g0.y, self.g0.z));
}

AntiScalar scalar_right_complement(Scalar self) {
    return AntiScalar(self.g0);
}

Flector transflector_right_complement(Transflector self) {
    return Flector(self.g1 * vec4(-1.0), vec4(self.g0.x, self.g0.y, self.g0.z, 0.0));
}

MultiVector translator_right_complement(Translator self) {
    return MultiVector(vec2(self.g0.w, 0.0), vec4(0.0), vec3(-self.g0.x, self.g0.y, self.g0.z), vec3(0.0), vec4(0.0));
}

Flector flector_left_bulk_dual(Flector self) {
    return flector_at_infinity_left_complement(flector_bulk(self));
}

Flector flector_at_infinity_left_bulk_dual(FlectorAtInfinity self) {
    return flector_at_infinity_left_complement(flector_at_infinity_bulk(self));
}

Origin horizon_left_bulk_dual(Horizon self) {
    return horizon_left_complement(horizon_bulk(self));
}

LineAtOrigin line_left_bulk_dual(Line self) {
    return line_at_infinity_left_complement(line_bulk(self));
}

LineAtOrigin line_at_infinity_left_bulk_dual(LineAtInfinity self) {
    return line_at_infinity_left_complement(line_at_infinity_bulk(self));
}

AntiScalar magnitude_left_bulk_dual(Magnitude self) {
    return scalar_left_complement(magnitude_bulk(self));
}

LineAtOrigin motor_left_bulk_dual(Motor self) {
    return line_at_infinity_left_complement(motor_bulk(self));
}

MultiVectorAtOrigin multi_vector_left_bulk_dual(MultiVector self) {
    return multi_vector_at_infinity_left_complement(multi_vector_bulk(self));
}

MultiVectorAtOrigin multi_vector_at_infinity_left_bulk_dual(MultiVectorAtInfinity self) {
    return multi_vector_at_infinity_left_complement(multi_vector_at_infinity_bulk(self));
}

Origin plane_left_bulk_dual(Plane self) {
    return horizon_left_complement(plane_bulk(self));
}

PlaneAtOrigin point_left_bulk_dual(Point self) {
    return point_at_infinity_left_complement(point_bulk(self));
}

PlaneAtOrigin point_at_infinity_left_bulk_dual(PointAtInfinity self) {
    return point_at_infinity_left_complement(point_at_infinity_bulk(self));
}

AntiScalar scalar_left_bulk_dual(Scalar self) {
    return scalar_left_complement(scalar_bulk(self));
}

Flector transflector_left_bulk_dual(Transflector self) {
    return flector_at_infinity_left_complement(transflector_bulk(self));
}

LineAtOrigin translator_left_bulk_dual(Translator self) {
    return line_at_infinity_left_complement(translator_bulk(self));
}

Scalar anti_scalar_left_weight_dual(AntiScalar self) {
    return anti_scalar_left_complement(anti_scalar_weight(self));
}

Flector flector_left_weight_dual(Flector self) {
    return flector_left_complement(flector_weight(self));
}

LineAtInfinity line_left_weight_dual(Line self) {
    return line_at_origin_left_complement(line_weight(self));
}

LineAtInfinity line_at_origin_left_weight_dual(LineAtOrigin self) {
    return line_at_origin_left_complement(line_at_origin_weight(self));
}

Scalar magnitude_left_weight_dual(Magnitude self) {
    return anti_scalar_left_complement(magnitude_weight(self));
}

MultiVectorAtInfinity motor_left_weight_dual(Motor self) {
    return rotor_left_complement(motor_weight(self));
}

MultiVectorAtInfinity multi_vector_left_weight_dual(MultiVector self) {
    return multi_vector_at_origin_left_complement(multi_vector_weight(self));
}

MultiVectorAtInfinity multi_vector_at_origin_left_weight_dual(MultiVectorAtOrigin self) {
    return multi_vector_at_origin_left_complement(multi_vector_at_origin_weight(self));
}

Horizon origin_left_weight_dual(Origin self) {
    return origin_left_complement(origin_weight(self));
}

PointAtInfinity plane_left_weight_dual(Plane self) {
    return plane_at_origin_left_complement(plane_weight(self));
}

PointAtInfinity plane_at_origin_left_weight_dual(PlaneAtOrigin self) {
    return plane_at_origin_left_complement(plane_at_origin_weight(self));
}

Horizon point_left_weight_dual(Point self) {
    return origin_left_complement(point_weight(self));
}

MultiVectorAtInfinity rotor_left_weight_dual(Rotor self) {
    return rotor_left_complement(rotor_weight(self));
}

PointAtInfinity transflector_left_weight_dual(Transflector self) {
    return plane_at_origin_left_complement(transflector_weight(self));
}

Scalar translator_left_weight_dual(Translator self) {
    return anti_scalar_left_complement(translator_weight(self));
}

Flector flector_right_bulk_dual(Flector self) {
    return flector_at_infinity_right_complement(flector_bulk(self));
}

Flector flector_at_infinity_right_bulk_dual(FlectorAtInfinity self) {
    return flector_at_infinity_right_complement(flector_at_infinity_bulk(self));
}

Origin horizon_right_bulk_dual(Horizon self) {
    return horizon_right_complement(horizon_bulk(self));
}

LineAtOrigin line_right_bulk_dual(Line self) {
    return line_at_infinity_right_complement(line_bulk(self));
}

LineAtOrigin line_at_infinity_right_bulk_dual(LineAtInfinity self) {
    return line_at_infinity_right_complement(line_at_infinity_bulk(self));
}

AntiScalar magnitude_right_bulk_dual(Magnitude self) {
    return scalar_right_complement(magnitude_bulk(self));
}

LineAtOrigin motor_right_bulk_dual(Motor self) {
    return line_at_infinity_right_complement(motor_bulk(self));
}

MultiVectorAtOrigin multi_vector_right_bulk_dual(MultiVector self) {
    return multi_vector_at_infinity_right_complement(multi_vector_bulk(self));
}

MultiVectorAtOrigin multi_vector_at_infinity_right_bulk_dual(MultiVectorAtInfinity self) {
    return multi_vector_at_infinity_right_complement(multi_vector_at_infinity_bulk(self));
}

Origin plane_right_bulk_dual(Plane self) {
    return horizon_right_complement(plane_bulk(self));
}

PlaneAtOrigin point_right_bulk_dual(Point self) {
    return point_at_infinity_right_complement(point_bulk(self));
}

PlaneAtOrigin point_at_infinity_right_bulk_dual(PointAtInfinity self) {
    return point_at_infinity_right_complement(point_at_infinity_bulk(self));
}

AntiScalar scalar_right_bulk_dual(Scalar self) {
    return scalar_right_complement(scalar_bulk(self));
}

Flector transflector_right_bulk_dual(Transflector self) {
    return flector_at_infinity_right_complement(transflector_bulk(self));
}

LineAtOrigin translator_right_bulk_dual(Translator self) {
    return line_at_infinity_right_complement(translator_bulk(self));
}

Scalar anti_scalar_right_weight_dual(AntiScalar self) {
    return anti_scalar_right_complement(anti_scalar_weight(self));
}

Flector flector_right_weight_dual(Flector self) {
    return flector_right_complement(flector_weight(self));
}

LineAtInfinity line_right_weight_dual(Line self) {
    return line_at_origin_right_complement(line_weight(self));
}

LineAtInfinity line_at_origin_right_weight_dual(LineAtOrigin self) {
    return line_at_origin_right_complement(line_at_origin_weight(self));
}

Scalar magnitude_right_weight_dual(Magnitude self) {
    return anti_scalar_right_complement(magnitude_weight(self));
}

MultiVectorAtInfinity motor_right_weight_dual(Motor self) {
    return rotor_right_complement(motor_weight(self));
}

MultiVectorAtInfinity multi_vector_right_weight_dual(MultiVector self) {
    return multi_vector_at_origin_right_complement(multi_vector_weight(self));
}

MultiVectorAtInfinity multi_vector_at_origin_right_weight_dual(MultiVectorAtOrigin self) {
    return multi_vector_at_origin_right_complement(multi_vector_at_origin_weight(self));
}

Horizon origin_right_weight_dual(Origin self) {
    return origin_right_complement(origin_weight(self));
}

PointAtInfinity plane_right_weight_dual(Plane self) {
    return plane_at_origin_right_complement(plane_weight(self));
}

PointAtInfinity plane_at_origin_right_weight_dual(PlaneAtOrigin self) {
    return plane_at_origin_right_complement(plane_at_origin_weight(self));
}

Horizon point_right_weight_dual(Point self) {
    return origin_right_complement(point_weight(self));
}

MultiVectorAtInfinity rotor_right_weight_dual(Rotor self) {
    return rotor_right_complement(rotor_weight(self));
}

PointAtInfinity transflector_right_weight_dual(Transflector self) {
    return plane_at_origin_right_complement(transflector_weight(self));
}

Scalar translator_right_weight_dual(Translator self) {
    return anti_scalar_right_complement(translator_weight(self));
}

int anti_scalar_anti_grade() {
    return 0;
}

int horizon_anti_grade() {
    return 1;
}

int line_anti_grade() {
    return 2;
}

int line_at_infinity_anti_grade() {
    return 2;
}

int line_at_origin_anti_grade() {
    return 2;
}

int origin_anti_grade() {
    return 3;
}

int plane_anti_grade() {
    return 1;
}

int plane_at_origin_anti_grade() {
    return 1;
}

int point_anti_grade() {
    return 3;
}

int point_at_infinity_anti_grade() {
    return 3;
}

int scalar_anti_grade() {
    return 4;
}

int anti_scalar_grade() {
    return 4;
}

int horizon_grade() {
    return 3;
}

int line_grade() {
    return 2;
}

int line_at_infinity_grade() {
    return 2;
}

int line_at_origin_grade() {
    return 2;
}

int origin_grade() {
    return 1;
}

int plane_grade() {
    return 3;
}

int plane_at_origin_grade() {
    return 3;
}

int point_grade() {
    return 1;
}

int point_at_infinity_grade() {
    return 1;
}

int scalar_grade() {
    return 0;
}

Horizon anti_scalar_attitude(AntiScalar self) {
    return anti_scalar_horizon_anti_wedge(self, horizon_one());
}

MultiVectorAtInfinity flector_attitude(Flector self) {
    return flector_horizon_anti_wedge(self, horizon_one());
}

PointAtInfinity line_attitude(Line self) {
    return line_horizon_anti_wedge(self, horizon_one());
}

PointAtInfinity line_at_origin_attitude(LineAtOrigin self) {
    return line_at_origin_horizon_anti_wedge(self, horizon_one());
}

Horizon magnitude_attitude(Magnitude self) {
    return magnitude_horizon_anti_wedge(self, horizon_one());
}

FlectorAtInfinity motor_attitude(Motor self) {
    return motor_horizon_anti_wedge(self, horizon_one());
}

MultiVectorAtInfinity multi_vector_attitude(MultiVector self) {
    return multi_vector_horizon_anti_wedge(self, horizon_one());
}

MultiVectorAtInfinity multi_vector_at_origin_attitude(MultiVectorAtOrigin self) {
    return multi_vector_at_origin_horizon_anti_wedge(self, horizon_one());
}

Scalar origin_attitude(Origin self) {
    return origin_horizon_anti_wedge(self, horizon_one());
}

LineAtInfinity plane_attitude(Plane self) {
    return plane_horizon_anti_wedge(self, horizon_one());
}

LineAtInfinity plane_at_origin_attitude(PlaneAtOrigin self) {
    return plane_at_origin_horizon_anti_wedge(self, horizon_one());
}

Scalar point_attitude(Point self) {
    return point_horizon_anti_wedge(self, horizon_one());
}

FlectorAtInfinity rotor_attitude(Rotor self) {
    return rotor_horizon_anti_wedge(self, horizon_one());
}

LineAtInfinity transflector_attitude(Transflector self) {
    return transflector_horizon_anti_wedge(self, horizon_one());
}

Horizon translator_attitude(Translator self) {
    return translator_horizon_anti_wedge(self, horizon_one());
}

AntiScalar anti_scalar_sqrt(AntiScalar self) {
    return AntiScalar(sqrt(self.g0));
}

Scalar scalar_sqrt(Scalar self) {
    return Scalar(sqrt(self.g0));
}

AntiScalar anti_scalar_anti_inverse(AntiScalar self) {
    return anti_scalar_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), anti_scalar_anti_scalar_anti_dot(self, self)));
}

Flector flector_anti_inverse(Flector self) {
    return flector_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), flector_flector_anti_dot(self, self)));
}

Line line_anti_inverse(Line self) {
    return line_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), line_line_anti_dot(self, self)));
}

LineAtOrigin line_at_origin_anti_inverse(LineAtOrigin self) {
    return line_at_origin_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), line_at_origin_line_at_origin_anti_dot(self, self)));
}

Magnitude magnitude_anti_inverse(Magnitude self) {
    return magnitude_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), magnitude_magnitude_anti_dot(self, self)));
}

Motor motor_anti_inverse(Motor self) {
    return motor_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), motor_motor_anti_dot(self, self)));
}

MultiVector multi_vector_anti_inverse(MultiVector self) {
    return multi_vector_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), multi_vector_multi_vector_anti_dot(self, self)));
}

MultiVectorAtOrigin multi_vector_at_origin_anti_inverse(MultiVectorAtOrigin self) {
    return multi_vector_at_origin_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), multi_vector_at_origin_multi_vector_at_origin_anti_dot(self, self)));
}

Origin origin_anti_inverse(Origin self) {
    return origin_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), origin_origin_anti_dot(self, self)));
}

Plane plane_anti_inverse(Plane self) {
    return plane_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), plane_plane_anti_dot(self, self)));
}

PlaneAtOrigin plane_at_origin_anti_inverse(PlaneAtOrigin self) {
    return plane_at_origin_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), plane_at_origin_plane_at_origin_anti_dot(self, self)));
}

Point point_anti_inverse(Point self) {
    return point_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), point_point_anti_dot(self, self)));
}

Rotor rotor_anti_inverse(Rotor self) {
    return rotor_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), rotor_rotor_anti_dot(self, self)));
}

Transflector transflector_anti_inverse(Transflector self) {
    return transflector_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), transflector_transflector_anti_dot(self, self)));
}

Translator translator_anti_inverse(Translator self) {
    return translator_anti_scalar_geometric_anti_product(self, anti_scalar_anti_scalar_div(anti_scalar_one(), translator_translator_anti_dot(self, self)));
}

Flector flector_inverse(Flector self) {
    return flector_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), flector_flector_dot(self, self)));
}

FlectorAtInfinity flector_at_infinity_inverse(FlectorAtInfinity self) {
    return flector_at_infinity_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), flector_at_infinity_flector_at_infinity_dot(self, self)));
}

Horizon horizon_inverse(Horizon self) {
    return horizon_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), horizon_horizon_dot(self, self)));
}

Line line_inverse(Line self) {
    return line_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), line_line_dot(self, self)));
}

LineAtInfinity line_at_infinity_inverse(LineAtInfinity self) {
    return line_at_infinity_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), line_at_infinity_line_at_infinity_dot(self, self)));
}

Magnitude magnitude_inverse(Magnitude self) {
    return magnitude_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), magnitude_magnitude_dot(self, self)));
}

Motor motor_inverse(Motor self) {
    return motor_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), motor_motor_dot(self, self)));
}

MultiVector multi_vector_inverse(MultiVector self) {
    return multi_vector_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), multi_vector_multi_vector_dot(self, self)));
}

MultiVectorAtInfinity multi_vector_at_infinity_inverse(MultiVectorAtInfinity self) {
    return multi_vector_at_infinity_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), multi_vector_at_infinity_multi_vector_at_infinity_dot(self, self)));
}

Plane plane_inverse(Plane self) {
    return plane_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), plane_plane_dot(self, self)));
}

Point point_inverse(Point self) {
    return point_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), point_point_dot(self, self)));
}

PointAtInfinity point_at_infinity_inverse(PointAtInfinity self) {
    return point_at_infinity_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), point_at_infinity_point_at_infinity_dot(self, self)));
}

Scalar scalar_inverse(Scalar self) {
    return scalar_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), scalar_scalar_dot(self, self)));
}

Transflector transflector_inverse(Transflector self) {
    return transflector_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), transflector_transflector_dot(self, self)));
}

Translator translator_inverse(Translator self) {
    return translator_scalar_geometric_product(self, scalar_scalar_div(scalar_one(), translator_translator_dot(self, self)));
}

Scalar flector_bulk_norm_squared(Flector self) {
    return flector_flector_dot(self, self);
}

Scalar flector_at_infinity_bulk_norm_squared(FlectorAtInfinity self) {
    return flector_at_infinity_flector_at_infinity_dot(self, self);
}

Scalar horizon_bulk_norm_squared(Horizon self) {
    return horizon_horizon_dot(self, self);
}

Scalar line_bulk_norm_squared(Line self) {
    return line_line_dot(self, self);
}

Scalar line_at_infinity_bulk_norm_squared(LineAtInfinity self) {
    return line_at_infinity_line_at_infinity_dot(self, self);
}

Scalar magnitude_bulk_norm_squared(Magnitude self) {
    return magnitude_magnitude_dot(self, self);
}

Scalar motor_bulk_norm_squared(Motor self) {
    return motor_motor_dot(self, self);
}

Scalar multi_vector_bulk_norm_squared(MultiVector self) {
    return multi_vector_multi_vector_dot(self, self);
}

Scalar multi_vector_at_infinity_bulk_norm_squared(MultiVectorAtInfinity self) {
    return multi_vector_at_infinity_multi_vector_at_infinity_dot(self, self);
}

Scalar plane_bulk_norm_squared(Plane self) {
    return plane_plane_dot(self, self);
}

Scalar point_bulk_norm_squared(Point self) {
    return point_point_dot(self, self);
}

Scalar point_at_infinity_bulk_norm_squared(PointAtInfinity self) {
    return point_at_infinity_point_at_infinity_dot(self, self);
}

Scalar scalar_bulk_norm_squared(Scalar self) {
    return scalar_scalar_dot(self, self);
}

Scalar transflector_bulk_norm_squared(Transflector self) {
    return transflector_transflector_dot(self, self);
}

Scalar translator_bulk_norm_squared(Translator self) {
    return translator_translator_dot(self, self);
}

Scalar flector_bulk_norm(Flector self) {
    return scalar_sqrt(flector_flector_dot(self, self));
}

Scalar flector_at_infinity_bulk_norm(FlectorAtInfinity self) {
    return scalar_sqrt(flector_at_infinity_flector_at_infinity_dot(self, self));
}

Scalar horizon_bulk_norm(Horizon self) {
    return scalar_sqrt(horizon_horizon_dot(self, self));
}

Scalar line_bulk_norm(Line self) {
    return scalar_sqrt(line_line_dot(self, self));
}

Scalar line_at_infinity_bulk_norm(LineAtInfinity self) {
    return scalar_sqrt(line_at_infinity_line_at_infinity_dot(self, self));
}

Scalar magnitude_bulk_norm(Magnitude self) {
    return scalar_sqrt(magnitude_magnitude_dot(self, self));
}

Scalar motor_bulk_norm(Motor self) {
    return scalar_sqrt(motor_motor_dot(self, self));
}

Scalar multi_vector_bulk_norm(MultiVector self) {
    return scalar_sqrt(multi_vector_multi_vector_dot(self, self));
}

Scalar multi_vector_at_infinity_bulk_norm(MultiVectorAtInfinity self) {
    return scalar_sqrt(multi_vector_at_infinity_multi_vector_at_infinity_dot(self, self));
}

Scalar plane_bulk_norm(Plane self) {
    return scalar_sqrt(plane_plane_dot(self, self));
}

Scalar point_bulk_norm(Point self) {
    return scalar_sqrt(point_point_dot(self, self));
}

Scalar point_at_infinity_bulk_norm(PointAtInfinity self) {
    return scalar_sqrt(point_at_infinity_point_at_infinity_dot(self, self));
}

Scalar scalar_bulk_norm(Scalar self) {
    return scalar_sqrt(scalar_scalar_dot(self, self));
}

Scalar transflector_bulk_norm(Transflector self) {
    return scalar_sqrt(transflector_transflector_dot(self, self));
}

Scalar translator_bulk_norm(Translator self) {
    return scalar_sqrt(translator_translator_dot(self, self));
}

AntiScalar anti_scalar_weight_norm_squared(AntiScalar self) {
    return anti_scalar_anti_scalar_anti_dot(self, self);
}

AntiScalar flector_weight_norm_squared(Flector self) {
    return flector_flector_anti_dot(self, self);
}

AntiScalar line_weight_norm_squared(Line self) {
    return line_line_anti_dot(self, self);
}

AntiScalar line_at_origin_weight_norm_squared(LineAtOrigin self) {
    return line_at_origin_line_at_origin_anti_dot(self, self);
}

AntiScalar magnitude_weight_norm_squared(Magnitude self) {
    return magnitude_magnitude_anti_dot(self, self);
}

AntiScalar motor_weight_norm_squared(Motor self) {
    return motor_motor_anti_dot(self, self);
}

AntiScalar multi_vector_weight_norm_squared(MultiVector self) {
    return multi_vector_multi_vector_anti_dot(self, self);
}

AntiScalar multi_vector_at_origin_weight_norm_squared(MultiVectorAtOrigin self) {
    return multi_vector_at_origin_multi_vector_at_origin_anti_dot(self, self);
}

AntiScalar origin_weight_norm_squared(Origin self) {
    return origin_origin_anti_dot(self, self);
}

AntiScalar plane_weight_norm_squared(Plane self) {
    return plane_plane_anti_dot(self, self);
}

AntiScalar plane_at_origin_weight_norm_squared(PlaneAtOrigin self) {
    return plane_at_origin_plane_at_origin_anti_dot(self, self);
}

AntiScalar point_weight_norm_squared(Point self) {
    return point_point_anti_dot(self, self);
}

AntiScalar rotor_weight_norm_squared(Rotor self) {
    return rotor_rotor_anti_dot(self, self);
}

AntiScalar transflector_weight_norm_squared(Transflector self) {
    return transflector_transflector_anti_dot(self, self);
}

AntiScalar translator_weight_norm_squared(Translator self) {
    return translator_translator_anti_dot(self, self);
}

AntiScalar anti_scalar_weight_norm(AntiScalar self) {
    return anti_scalar_sqrt(anti_scalar_anti_scalar_anti_dot(self, self));
}

AntiScalar flector_weight_norm(Flector self) {
    return anti_scalar_sqrt(flector_flector_anti_dot(self, self));
}

AntiScalar line_weight_norm(Line self) {
    return anti_scalar_sqrt(line_line_anti_dot(self, self));
}

AntiScalar line_at_origin_weight_norm(LineAtOrigin self) {
    return anti_scalar_sqrt(line_at_origin_line_at_origin_anti_dot(self, self));
}

AntiScalar magnitude_weight_norm(Magnitude self) {
    return anti_scalar_sqrt(magnitude_magnitude_anti_dot(self, self));
}

AntiScalar motor_weight_norm(Motor self) {
    return anti_scalar_sqrt(motor_motor_anti_dot(self, self));
}

AntiScalar multi_vector_weight_norm(MultiVector self) {
    return anti_scalar_sqrt(multi_vector_multi_vector_anti_dot(self, self));
}

AntiScalar multi_vector_at_origin_weight_norm(MultiVectorAtOrigin self) {
    return anti_scalar_sqrt(multi_vector_at_origin_multi_vector_at_origin_anti_dot(self, self));
}

AntiScalar origin_weight_norm(Origin self) {
    return anti_scalar_sqrt(origin_origin_anti_dot(self, self));
}

AntiScalar plane_weight_norm(Plane self) {
    return anti_scalar_sqrt(plane_plane_anti_dot(self, self));
}

AntiScalar plane_at_origin_weight_norm(PlaneAtOrigin self) {
    return anti_scalar_sqrt(plane_at_origin_plane_at_origin_anti_dot(self, self));
}

AntiScalar point_weight_norm(Point self) {
    return anti_scalar_sqrt(point_point_anti_dot(self, self));
}

AntiScalar rotor_weight_norm(Rotor self) {
    return anti_scalar_sqrt(rotor_rotor_anti_dot(self, self));
}

AntiScalar transflector_weight_norm(Transflector self) {
    return anti_scalar_sqrt(transflector_transflector_anti_dot(self, self));
}

AntiScalar translator_weight_norm(Translator self) {
    return anti_scalar_sqrt(translator_translator_anti_dot(self, self));
}

Magnitude flector_geometric_norm(Flector self) {
    return scalar_anti_scalar_add(flector_bulk_norm(self), flector_weight_norm(self));
}

Magnitude line_geometric_norm(Line self) {
    return scalar_anti_scalar_add(line_bulk_norm(self), line_weight_norm(self));
}

Magnitude magnitude_geometric_norm(Magnitude self) {
    return scalar_anti_scalar_add(magnitude_bulk_norm(self), magnitude_weight_norm(self));
}

Magnitude motor_geometric_norm(Motor self) {
    return scalar_anti_scalar_add(motor_bulk_norm(self), motor_weight_norm(self));
}

Magnitude multi_vector_geometric_norm(MultiVector self) {
    return scalar_anti_scalar_add(multi_vector_bulk_norm(self), multi_vector_weight_norm(self));
}

Magnitude plane_geometric_norm(Plane self) {
    return scalar_anti_scalar_add(plane_bulk_norm(self), plane_weight_norm(self));
}

Magnitude point_geometric_norm(Point self) {
    return scalar_anti_scalar_add(point_bulk_norm(self), point_weight_norm(self));
}

Magnitude transflector_geometric_norm(Transflector self) {
    return scalar_anti_scalar_add(transflector_bulk_norm(self), transflector_weight_norm(self));
}

Magnitude translator_geometric_norm(Translator self) {
    return scalar_anti_scalar_add(translator_bulk_norm(self), translator_weight_norm(self));
}

float flector_unitized_norm_squared(Flector self) {
    return flector_bulk_norm_squared(self).g0 / flector_weight_norm_squared(self).g0;
}

float line_unitized_norm_squared(Line self) {
    return line_bulk_norm_squared(self).g0 / line_weight_norm_squared(self).g0;
}

float magnitude_unitized_norm_squared(Magnitude self) {
    return magnitude_bulk_norm_squared(self).g0 / magnitude_weight_norm_squared(self).g0;
}

float motor_unitized_norm_squared(Motor self) {
    return motor_bulk_norm_squared(self).g0 / motor_weight_norm_squared(self).g0;
}

float multi_vector_unitized_norm_squared(MultiVector self) {
    return multi_vector_bulk_norm_squared(self).g0 / multi_vector_weight_norm_squared(self).g0;
}

float plane_unitized_norm_squared(Plane self) {
    return plane_bulk_norm_squared(self).g0 / plane_weight_norm_squared(self).g0;
}

float point_unitized_norm_squared(Point self) {
    return point_bulk_norm_squared(self).g0 / point_weight_norm_squared(self).g0;
}

float transflector_unitized_norm_squared(Transflector self) {
    return transflector_bulk_norm_squared(self).g0 / transflector_weight_norm_squared(self).g0;
}

float translator_unitized_norm_squared(Translator self) {
    return translator_bulk_norm_squared(self).g0 / translator_weight_norm_squared(self).g0;
}

float flector_unitized_norm(Flector self) {
    return sqrt(flector_unitized_norm_squared(self));
}

float line_unitized_norm(Line self) {
    return sqrt(line_unitized_norm_squared(self));
}

float magnitude_unitized_norm(Magnitude self) {
    return sqrt(magnitude_unitized_norm_squared(self));
}

float motor_unitized_norm(Motor self) {
    return sqrt(motor_unitized_norm_squared(self));
}

float multi_vector_unitized_norm(MultiVector self) {
    return sqrt(multi_vector_unitized_norm_squared(self));
}

float plane_unitized_norm(Plane self) {
    return sqrt(plane_unitized_norm_squared(self));
}

float point_unitized_norm(Point self) {
    return sqrt(point_unitized_norm_squared(self));
}

float transflector_unitized_norm(Transflector self) {
    return sqrt(transflector_unitized_norm_squared(self));
}

float translator_unitized_norm(Translator self) {
    return sqrt(translator_unitized_norm_squared(self));
}

AntiScalar anti_scalar_unitize(AntiScalar self) {
    return anti_scalar_scalar_geometric_product(self, Scalar(1.0 / anti_scalar_weight_norm(self).g0));
}

Flector flector_unitize(Flector self) {
    return flector_scalar_geometric_product(self, Scalar(1.0 / flector_weight_norm(self).g0));
}

Line line_unitize(Line self) {
    return line_scalar_geometric_product(self, Scalar(1.0 / line_weight_norm(self).g0));
}

LineAtOrigin line_at_origin_unitize(LineAtOrigin self) {
    return line_at_origin_scalar_geometric_product(self, Scalar(1.0 / line_at_origin_weight_norm(self).g0));
}

Magnitude magnitude_unitize(Magnitude self) {
    return magnitude_scalar_geometric_product(self, Scalar(1.0 / magnitude_weight_norm(self).g0));
}

Motor motor_unitize(Motor self) {
    return motor_scalar_geometric_product(self, Scalar(1.0 / motor_weight_norm(self).g0));
}

MultiVector multi_vector_unitize(MultiVector self) {
    return multi_vector_scalar_geometric_product(self, Scalar(1.0 / multi_vector_weight_norm(self).g0));
}

MultiVectorAtOrigin multi_vector_at_origin_unitize(MultiVectorAtOrigin self) {
    return multi_vector_at_origin_scalar_geometric_product(self, Scalar(1.0 / multi_vector_at_origin_weight_norm(self).g0));
}

Origin origin_unitize(Origin self) {
    return origin_scalar_geometric_product(self, Scalar(1.0 / origin_weight_norm(self).g0));
}

Plane plane_unitize(Plane self) {
    return plane_scalar_geometric_product(self, Scalar(1.0 / plane_weight_norm(self).g0));
}

PlaneAtOrigin plane_at_origin_unitize(PlaneAtOrigin self) {
    return plane_at_origin_scalar_geometric_product(self, Scalar(1.0 / plane_at_origin_weight_norm(self).g0));
}

Point point_unitize(Point self) {
    return point_scalar_geometric_product(self, Scalar(1.0 / point_weight_norm(self).g0));
}

Rotor rotor_unitize(Rotor self) {
    return rotor_scalar_geometric_product(self, Scalar(1.0 / rotor_weight_norm(self).g0));
}

Transflector transflector_unitize(Transflector self) {
    return transflector_scalar_geometric_product(self, Scalar(1.0 / transflector_weight_norm(self).g0));
}

Translator translator_unitize(Translator self) {
    return translator_scalar_geometric_product(self, Scalar(1.0 / translator_weight_norm(self).g0));
}

Flector anti_scalar_flector_sandwich(AntiScalar self, Flector other) {
    return flector_anti_scalar_geometric_anti_product(anti_scalar_flector_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

FlectorAtInfinity anti_scalar_flector_at_infinity_sandwich(AntiScalar self, FlectorAtInfinity other) {
    return flector_at_infinity_anti_scalar_geometric_anti_product(anti_scalar_flector_at_infinity_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Horizon anti_scalar_horizon_sandwich(AntiScalar self, Horizon other) {
    return horizon_anti_scalar_geometric_anti_product(anti_scalar_horizon_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Line anti_scalar_line_sandwich(AntiScalar self, Line other) {
    return line_anti_scalar_geometric_anti_product(anti_scalar_line_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

LineAtInfinity anti_scalar_line_at_infinity_sandwich(AntiScalar self, LineAtInfinity other) {
    return line_at_infinity_anti_scalar_geometric_anti_product(anti_scalar_line_at_infinity_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

LineAtOrigin anti_scalar_line_at_origin_sandwich(AntiScalar self, LineAtOrigin other) {
    return line_at_origin_anti_scalar_geometric_anti_product(anti_scalar_line_at_origin_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Motor anti_scalar_motor_sandwich(AntiScalar self, Motor other) {
    return motor_anti_scalar_geometric_anti_product(anti_scalar_motor_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

MultiVector anti_scalar_multi_vector_sandwich(AntiScalar self, MultiVector other) {
    return multi_vector_anti_scalar_geometric_anti_product(anti_scalar_multi_vector_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

MultiVectorAtInfinity anti_scalar_multi_vector_at_infinity_sandwich(AntiScalar self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_anti_scalar_geometric_anti_product(anti_scalar_multi_vector_at_infinity_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_origin_sandwich(AntiScalar self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_anti_scalar_geometric_anti_product(anti_scalar_multi_vector_at_origin_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Origin anti_scalar_origin_sandwich(AntiScalar self, Origin other) {
    return origin_anti_scalar_geometric_anti_product(anti_scalar_origin_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Plane anti_scalar_plane_sandwich(AntiScalar self, Plane other) {
    return plane_anti_scalar_geometric_anti_product(anti_scalar_plane_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

PlaneAtOrigin anti_scalar_plane_at_origin_sandwich(AntiScalar self, PlaneAtOrigin other) {
    return plane_at_origin_anti_scalar_geometric_anti_product(anti_scalar_plane_at_origin_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Point anti_scalar_point_sandwich(AntiScalar self, Point other) {
    return point_anti_scalar_geometric_anti_product(anti_scalar_point_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

PointAtInfinity anti_scalar_point_at_infinity_sandwich(AntiScalar self, PointAtInfinity other) {
    return point_at_infinity_anti_scalar_geometric_anti_product(anti_scalar_point_at_infinity_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Rotor anti_scalar_rotor_sandwich(AntiScalar self, Rotor other) {
    return rotor_anti_scalar_geometric_anti_product(anti_scalar_rotor_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Transflector anti_scalar_transflector_sandwich(AntiScalar self, Transflector other) {
    return transflector_anti_scalar_geometric_anti_product(anti_scalar_transflector_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Translator anti_scalar_translator_sandwich(AntiScalar self, Translator other) {
    return translator_anti_scalar_geometric_anti_product(anti_scalar_translator_geometric_anti_product(self, other), anti_scalar_anti_reversal(self));
}

Flector flector_flector_sandwich(Flector self, Flector other) {
    return multi_vector_flector_into(multi_vector_flector_geometric_anti_product(flector_flector_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

FlectorAtInfinity flector_flector_at_infinity_sandwich(Flector self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_at_infinity_into(multi_vector_at_infinity_flector_geometric_anti_product(flector_flector_at_infinity_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Horizon flector_horizon_sandwich(Flector self, Horizon other) {
    return multi_vector_at_infinity_horizon_into(multi_vector_at_infinity_flector_geometric_anti_product(flector_horizon_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Line flector_line_sandwich(Flector self, Line other) {
    return multi_vector_line_into(flector_flector_geometric_anti_product(flector_line_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

LineAtInfinity flector_line_at_infinity_sandwich(Flector self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(flector_at_infinity_flector_geometric_anti_product(flector_line_at_infinity_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Line flector_line_at_origin_sandwich(Flector self, LineAtOrigin other) {
    return multi_vector_line_into(flector_flector_geometric_anti_product(flector_line_at_origin_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Motor flector_motor_sandwich(Flector self, Motor other) {
    return multi_vector_motor_into(flector_flector_geometric_anti_product(flector_motor_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

MultiVector flector_multi_vector_sandwich(Flector self, MultiVector other) {
    return multi_vector_flector_geometric_anti_product(flector_multi_vector_geometric_anti_product(self, other), flector_anti_reversal(self));
}

MultiVectorAtInfinity flector_multi_vector_at_infinity_sandwich(Flector self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_flector_geometric_anti_product(flector_multi_vector_at_infinity_geometric_anti_product(self, other), flector_anti_reversal(self));
}

MultiVectorAtOrigin flector_multi_vector_at_origin_sandwich(Flector self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_into(multi_vector_flector_geometric_anti_product(flector_multi_vector_at_origin_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Point flector_origin_sandwich(Flector self, Origin other) {
    return multi_vector_point_into(multi_vector_flector_geometric_anti_product(flector_origin_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Plane flector_plane_sandwich(Flector self, Plane other) {
    return multi_vector_plane_into(multi_vector_flector_geometric_anti_product(flector_plane_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Plane flector_plane_at_origin_sandwich(Flector self, PlaneAtOrigin other) {
    return multi_vector_plane_into(multi_vector_flector_geometric_anti_product(flector_plane_at_origin_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Point flector_point_sandwich(Flector self, Point other) {
    return multi_vector_point_into(multi_vector_flector_geometric_anti_product(flector_point_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

PointAtInfinity flector_point_at_infinity_sandwich(Flector self, PointAtInfinity other) {
    return multi_vector_at_infinity_point_at_infinity_into(multi_vector_at_infinity_flector_geometric_anti_product(flector_point_at_infinity_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Motor flector_rotor_sandwich(Flector self, Rotor other) {
    return multi_vector_motor_into(flector_flector_geometric_anti_product(flector_rotor_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Transflector flector_transflector_sandwich(Flector self, Transflector other) {
    return multi_vector_transflector_into(multi_vector_flector_geometric_anti_product(flector_transflector_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Translator flector_translator_sandwich(Flector self, Translator other) {
    return multi_vector_translator_into(flector_flector_geometric_anti_product(flector_translator_geometric_anti_product(self, other), flector_anti_reversal(self)));
}

Flector line_flector_sandwich(Line self, Flector other) {
    return flector_line_geometric_anti_product(line_flector_geometric_anti_product(self, other), line_anti_reversal(self));
}

FlectorAtInfinity line_flector_at_infinity_sandwich(Line self, FlectorAtInfinity other) {
    return flector_at_infinity_line_geometric_anti_product(line_flector_at_infinity_geometric_anti_product(self, other), line_anti_reversal(self));
}

Horizon line_horizon_sandwich(Line self, Horizon other) {
    return flector_at_infinity_horizon_into(point_at_infinity_line_geometric_anti_product(line_horizon_geometric_anti_product(self, other), line_anti_reversal(self)));
}

Line line_line_sandwich(Line self, Line other) {
    return multi_vector_line_into(multi_vector_line_geometric_anti_product(line_line_geometric_anti_product(self, other), line_anti_reversal(self)));
}

LineAtInfinity line_line_at_infinity_sandwich(Line self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(multi_vector_at_infinity_line_geometric_anti_product(line_line_at_infinity_geometric_anti_product(self, other), line_anti_reversal(self)));
}

LineAtOrigin line_line_at_origin_sandwich(Line self, LineAtOrigin other) {
    return multi_vector_line_at_origin_into(multi_vector_line_geometric_anti_product(line_line_at_origin_geometric_anti_product(self, other), line_anti_reversal(self)));
}

Motor line_motor_sandwich(Line self, Motor other) {
    return multi_vector_motor_into(multi_vector_line_geometric_anti_product(line_motor_geometric_anti_product(self, other), line_anti_reversal(self)));
}

MultiVector line_multi_vector_sandwich(Line self, MultiVector other) {
    return multi_vector_line_geometric_anti_product(line_multi_vector_geometric_anti_product(self, other), line_anti_reversal(self));
}

MultiVectorAtInfinity line_multi_vector_at_infinity_sandwich(Line self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_line_geometric_anti_product(line_multi_vector_at_infinity_geometric_anti_product(self, other), line_anti_reversal(self));
}

MultiVectorAtOrigin line_multi_vector_at_origin_sandwich(Line self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_into(multi_vector_line_geometric_anti_product(line_multi_vector_at_origin_geometric_anti_product(self, other), line_anti_reversal(self)));
}

Origin line_origin_sandwich(Line self, Origin other) {
    return flector_origin_into(transflector_line_geometric_anti_product(line_origin_geometric_anti_product(self, other), line_anti_reversal(self)));
}

Plane line_plane_sandwich(Line self, Plane other) {
    return flector_plane_into(flector_line_geometric_anti_product(line_plane_geometric_anti_product(self, other), line_anti_reversal(self)));
}

PlaneAtOrigin line_plane_at_origin_sandwich(Line self, PlaneAtOrigin other) {
    return flector_plane_at_origin_into(flector_line_geometric_anti_product(line_plane_at_origin_geometric_anti_product(self, other), line_anti_reversal(self)));
}

Point line_point_sandwich(Line self, Point other) {
    return flector_point_into(transflector_line_geometric_anti_product(line_point_geometric_anti_product(self, other), line_anti_reversal(self)));
}

PointAtInfinity line_point_at_infinity_sandwich(Line self, PointAtInfinity other) {
    return flector_at_infinity_point_at_infinity_into(flector_at_infinity_line_geometric_anti_product(line_point_at_infinity_geometric_anti_product(self, other), line_anti_reversal(self)));
}

Rotor line_rotor_sandwich(Line self, Rotor other) {
    return multi_vector_rotor_into(multi_vector_line_geometric_anti_product(line_rotor_geometric_anti_product(self, other), line_anti_reversal(self)));
}

Transflector line_transflector_sandwich(Line self, Transflector other) {
    return flector_transflector_into(flector_line_geometric_anti_product(line_transflector_geometric_anti_product(self, other), line_anti_reversal(self)));
}

Translator line_translator_sandwich(Line self, Translator other) {
    return multi_vector_translator_into(multi_vector_line_geometric_anti_product(line_translator_geometric_anti_product(self, other), line_anti_reversal(self)));
}

Flector line_at_origin_flector_sandwich(LineAtOrigin self, Flector other) {
    return flector_line_at_origin_geometric_anti_product(line_at_origin_flector_geometric_anti_product(self, other), line_at_origin_anti_reversal(self));
}

FlectorAtInfinity line_at_origin_flector_at_infinity_sandwich(LineAtOrigin self, FlectorAtInfinity other) {
    return flector_at_infinity_line_at_origin_geometric_anti_product(line_at_origin_flector_at_infinity_geometric_anti_product(self, other), line_at_origin_anti_reversal(self));
}

Horizon line_at_origin_horizon_sandwich(LineAtOrigin self, Horizon other) {
    return flector_at_infinity_horizon_into(point_at_infinity_line_at_origin_geometric_anti_product(line_at_origin_horizon_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

Line line_at_origin_line_sandwich(LineAtOrigin self, Line other) {
    return multi_vector_line_into(multi_vector_line_at_origin_geometric_anti_product(line_at_origin_line_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

LineAtInfinity line_at_origin_line_at_infinity_sandwich(LineAtOrigin self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(multi_vector_at_infinity_line_at_origin_geometric_anti_product(line_at_origin_line_at_infinity_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

LineAtOrigin line_at_origin_line_at_origin_sandwich(LineAtOrigin self, LineAtOrigin other) {
    return rotor_line_at_origin_into(rotor_line_at_origin_geometric_anti_product(line_at_origin_line_at_origin_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

Motor line_at_origin_motor_sandwich(LineAtOrigin self, Motor other) {
    return multi_vector_motor_into(multi_vector_line_at_origin_geometric_anti_product(line_at_origin_motor_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

MultiVector line_at_origin_multi_vector_sandwich(LineAtOrigin self, MultiVector other) {
    return multi_vector_line_at_origin_geometric_anti_product(line_at_origin_multi_vector_geometric_anti_product(self, other), line_at_origin_anti_reversal(self));
}

MultiVectorAtInfinity line_at_origin_multi_vector_at_infinity_sandwich(LineAtOrigin self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_line_at_origin_geometric_anti_product(line_at_origin_multi_vector_at_infinity_geometric_anti_product(self, other), line_at_origin_anti_reversal(self));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_sandwich(LineAtOrigin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_line_at_origin_geometric_anti_product(line_at_origin_multi_vector_at_origin_geometric_anti_product(self, other), line_at_origin_anti_reversal(self));
}

Origin line_at_origin_origin_sandwich(LineAtOrigin self, Origin other) {
    return flector_origin_into(plane_at_origin_line_at_origin_geometric_anti_product(line_at_origin_origin_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

Plane line_at_origin_plane_sandwich(LineAtOrigin self, Plane other) {
    return flector_plane_into(flector_line_at_origin_geometric_anti_product(line_at_origin_plane_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

PlaneAtOrigin line_at_origin_plane_at_origin_sandwich(LineAtOrigin self, PlaneAtOrigin other) {
    return flector_plane_at_origin_into(flector_line_at_origin_geometric_anti_product(line_at_origin_plane_at_origin_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

Point line_at_origin_point_sandwich(LineAtOrigin self, Point other) {
    return flector_point_into(transflector_line_at_origin_geometric_anti_product(line_at_origin_point_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

PointAtInfinity line_at_origin_point_at_infinity_sandwich(LineAtOrigin self, PointAtInfinity other) {
    return flector_at_infinity_point_at_infinity_into(flector_at_infinity_line_at_origin_geometric_anti_product(line_at_origin_point_at_infinity_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

Rotor line_at_origin_rotor_sandwich(LineAtOrigin self, Rotor other) {
    return rotor_line_at_origin_geometric_anti_product(line_at_origin_rotor_geometric_anti_product(self, other), line_at_origin_anti_reversal(self));
}

Transflector line_at_origin_transflector_sandwich(LineAtOrigin self, Transflector other) {
    return flector_transflector_into(flector_line_at_origin_geometric_anti_product(line_at_origin_transflector_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

Translator line_at_origin_translator_sandwich(LineAtOrigin self, Translator other) {
    return multi_vector_translator_into(multi_vector_line_at_origin_geometric_anti_product(line_at_origin_translator_geometric_anti_product(self, other), line_at_origin_anti_reversal(self)));
}

Flector magnitude_flector_sandwich(Magnitude self, Flector other) {
    return flector_magnitude_geometric_anti_product(magnitude_flector_geometric_anti_product(self, other), magnitude_anti_reversal(self));
}

FlectorAtInfinity magnitude_flector_at_infinity_sandwich(Magnitude self, FlectorAtInfinity other) {
    return flector_at_infinity_magnitude_geometric_anti_product(magnitude_flector_at_infinity_geometric_anti_product(self, other), magnitude_anti_reversal(self));
}

Horizon magnitude_horizon_sandwich(Magnitude self, Horizon other) {
    return horizon_magnitude_geometric_anti_product(magnitude_horizon_geometric_anti_product(self, other), magnitude_anti_reversal(self));
}

Line magnitude_line_sandwich(Magnitude self, Line other) {
    return line_magnitude_geometric_anti_product(magnitude_line_geometric_anti_product(self, other), magnitude_anti_reversal(self));
}

LineAtInfinity magnitude_line_at_infinity_sandwich(Magnitude self, LineAtInfinity other) {
    return line_at_infinity_magnitude_geometric_anti_product(magnitude_line_at_infinity_geometric_anti_product(self, other), magnitude_anti_reversal(self));
}

LineAtOrigin magnitude_line_at_origin_sandwich(Magnitude self, LineAtOrigin other) {
    return line_line_at_origin_into(line_magnitude_geometric_anti_product(magnitude_line_at_origin_geometric_anti_product(self, other), magnitude_anti_reversal(self)));
}

Motor magnitude_motor_sandwich(Magnitude self, Motor other) {
    return multi_vector_motor_into(multi_vector_magnitude_geometric_anti_product(magnitude_motor_geometric_anti_product(self, other), magnitude_anti_reversal(self)));
}

MultiVector magnitude_multi_vector_sandwich(Magnitude self, MultiVector other) {
    return multi_vector_magnitude_geometric_anti_product(magnitude_multi_vector_geometric_anti_product(self, other), magnitude_anti_reversal(self));
}

MultiVectorAtInfinity magnitude_multi_vector_at_infinity_sandwich(Magnitude self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_magnitude_geometric_anti_product(magnitude_multi_vector_at_infinity_geometric_anti_product(self, other), magnitude_anti_reversal(self));
}

MultiVectorAtOrigin magnitude_multi_vector_at_origin_sandwich(Magnitude self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_into(multi_vector_magnitude_geometric_anti_product(magnitude_multi_vector_at_origin_geometric_anti_product(self, other), magnitude_anti_reversal(self)));
}

Origin magnitude_origin_sandwich(Magnitude self, Origin other) {
    return flector_origin_into(flector_magnitude_geometric_anti_product(magnitude_origin_geometric_anti_product(self, other), magnitude_anti_reversal(self)));
}

Plane magnitude_plane_sandwich(Magnitude self, Plane other) {
    return transflector_plane_into(transflector_magnitude_geometric_anti_product(magnitude_plane_geometric_anti_product(self, other), magnitude_anti_reversal(self)));
}

PlaneAtOrigin magnitude_plane_at_origin_sandwich(Magnitude self, PlaneAtOrigin other) {
    return transflector_plane_at_origin_into(transflector_magnitude_geometric_anti_product(magnitude_plane_at_origin_geometric_anti_product(self, other), magnitude_anti_reversal(self)));
}

Point magnitude_point_sandwich(Magnitude self, Point other) {
    return flector_point_into(flector_magnitude_geometric_anti_product(magnitude_point_geometric_anti_product(self, other), magnitude_anti_reversal(self)));
}

PointAtInfinity magnitude_point_at_infinity_sandwich(Magnitude self, PointAtInfinity other) {
    return point_at_infinity_magnitude_geometric_anti_product(magnitude_point_at_infinity_geometric_anti_product(self, other), magnitude_anti_reversal(self));
}

Rotor magnitude_rotor_sandwich(Magnitude self, Rotor other) {
    return multi_vector_rotor_into(multi_vector_magnitude_geometric_anti_product(magnitude_rotor_geometric_anti_product(self, other), magnitude_anti_reversal(self)));
}

Transflector magnitude_transflector_sandwich(Magnitude self, Transflector other) {
    return transflector_magnitude_geometric_anti_product(magnitude_transflector_geometric_anti_product(self, other), magnitude_anti_reversal(self));
}

Translator magnitude_translator_sandwich(Magnitude self, Translator other) {
    return multi_vector_translator_into(multi_vector_magnitude_geometric_anti_product(magnitude_translator_geometric_anti_product(self, other), magnitude_anti_reversal(self)));
}

Flector motor_flector_sandwich(Motor self, Flector other) {
    return flector_motor_geometric_anti_product(motor_flector_geometric_anti_product(self, other), motor_anti_reversal(self));
}

FlectorAtInfinity motor_flector_at_infinity_sandwich(Motor self, FlectorAtInfinity other) {
    return flector_at_infinity_motor_geometric_anti_product(motor_flector_at_infinity_geometric_anti_product(self, other), motor_anti_reversal(self));
}

Horizon motor_horizon_sandwich(Motor self, Horizon other) {
    return flector_at_infinity_horizon_into(flector_at_infinity_motor_geometric_anti_product(motor_horizon_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Line motor_line_sandwich(Motor self, Line other) {
    return multi_vector_line_into(multi_vector_motor_geometric_anti_product(motor_line_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

LineAtInfinity motor_line_at_infinity_sandwich(Motor self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(multi_vector_at_infinity_motor_geometric_anti_product(motor_line_at_infinity_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Line motor_line_at_origin_sandwich(Motor self, LineAtOrigin other) {
    return multi_vector_line_into(multi_vector_motor_geometric_anti_product(motor_line_at_origin_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Motor motor_motor_sandwich(Motor self, Motor other) {
    return multi_vector_motor_into(multi_vector_motor_geometric_anti_product(motor_motor_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

MultiVector motor_multi_vector_sandwich(Motor self, MultiVector other) {
    return multi_vector_motor_geometric_anti_product(motor_multi_vector_geometric_anti_product(self, other), motor_anti_reversal(self));
}

MultiVectorAtInfinity motor_multi_vector_at_infinity_sandwich(Motor self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_motor_geometric_anti_product(motor_multi_vector_at_infinity_geometric_anti_product(self, other), motor_anti_reversal(self));
}

MultiVectorAtOrigin motor_multi_vector_at_origin_sandwich(Motor self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_into(multi_vector_motor_geometric_anti_product(motor_multi_vector_at_origin_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Point motor_origin_sandwich(Motor self, Origin other) {
    return flector_point_into(flector_motor_geometric_anti_product(motor_origin_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Plane motor_plane_sandwich(Motor self, Plane other) {
    return flector_plane_into(flector_motor_geometric_anti_product(motor_plane_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Plane motor_plane_at_origin_sandwich(Motor self, PlaneAtOrigin other) {
    return flector_plane_into(flector_motor_geometric_anti_product(motor_plane_at_origin_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Point motor_point_sandwich(Motor self, Point other) {
    return flector_point_into(flector_motor_geometric_anti_product(motor_point_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

PointAtInfinity motor_point_at_infinity_sandwich(Motor self, PointAtInfinity other) {
    return flector_at_infinity_point_at_infinity_into(flector_at_infinity_motor_geometric_anti_product(motor_point_at_infinity_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Motor motor_rotor_sandwich(Motor self, Rotor other) {
    return multi_vector_motor_into(multi_vector_motor_geometric_anti_product(motor_rotor_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Transflector motor_transflector_sandwich(Motor self, Transflector other) {
    return flector_transflector_into(flector_motor_geometric_anti_product(motor_transflector_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Translator motor_translator_sandwich(Motor self, Translator other) {
    return multi_vector_translator_into(multi_vector_motor_geometric_anti_product(motor_translator_geometric_anti_product(self, other), motor_anti_reversal(self)));
}

Flector multi_vector_flector_sandwich(MultiVector self, Flector other) {
    return multi_vector_flector_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_flector_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

FlectorAtInfinity multi_vector_flector_at_infinity_sandwich(MultiVector self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_at_infinity_into(multi_vector_at_infinity_multi_vector_geometric_anti_product(multi_vector_flector_at_infinity_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Horizon multi_vector_horizon_sandwich(MultiVector self, Horizon other) {
    return multi_vector_at_infinity_horizon_into(multi_vector_at_infinity_multi_vector_geometric_anti_product(multi_vector_horizon_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Line multi_vector_line_sandwich(MultiVector self, Line other) {
    return multi_vector_line_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_line_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

LineAtInfinity multi_vector_line_at_infinity_sandwich(MultiVector self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(multi_vector_at_infinity_multi_vector_geometric_anti_product(multi_vector_line_at_infinity_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

LineAtOrigin multi_vector_line_at_origin_sandwich(MultiVector self, LineAtOrigin other) {
    return multi_vector_line_at_origin_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_line_at_origin_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Motor multi_vector_motor_sandwich(MultiVector self, Motor other) {
    return multi_vector_motor_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_motor_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

MultiVector multi_vector_multi_vector_sandwich(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_geometric_anti_product(multi_vector_multi_vector_geometric_anti_product(self, other), multi_vector_anti_reversal(self));
}

MultiVectorAtInfinity multi_vector_multi_vector_at_infinity_sandwich(MultiVector self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_geometric_anti_product(multi_vector_multi_vector_at_infinity_geometric_anti_product(self, other), multi_vector_anti_reversal(self));
}

MultiVectorAtOrigin multi_vector_multi_vector_at_origin_sandwich(MultiVector self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_multi_vector_at_origin_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Origin multi_vector_origin_sandwich(MultiVector self, Origin other) {
    return multi_vector_origin_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_origin_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Plane multi_vector_plane_sandwich(MultiVector self, Plane other) {
    return multi_vector_plane_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_plane_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

PlaneAtOrigin multi_vector_plane_at_origin_sandwich(MultiVector self, PlaneAtOrigin other) {
    return multi_vector_plane_at_origin_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_plane_at_origin_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Point multi_vector_point_sandwich(MultiVector self, Point other) {
    return multi_vector_point_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_point_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

PointAtInfinity multi_vector_point_at_infinity_sandwich(MultiVector self, PointAtInfinity other) {
    return multi_vector_at_infinity_point_at_infinity_into(multi_vector_at_infinity_multi_vector_geometric_anti_product(multi_vector_point_at_infinity_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Rotor multi_vector_rotor_sandwich(MultiVector self, Rotor other) {
    return multi_vector_rotor_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_rotor_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Transflector multi_vector_transflector_sandwich(MultiVector self, Transflector other) {
    return multi_vector_transflector_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_transflector_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Translator multi_vector_translator_sandwich(MultiVector self, Translator other) {
    return multi_vector_translator_into(multi_vector_multi_vector_geometric_anti_product(multi_vector_translator_geometric_anti_product(self, other), multi_vector_anti_reversal(self)));
}

Flector multi_vector_at_origin_flector_sandwich(MultiVectorAtOrigin self, Flector other) {
    return multi_vector_flector_into(multi_vector_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_flector_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

FlectorAtInfinity multi_vector_at_origin_flector_at_infinity_sandwich(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_at_infinity_into(multi_vector_at_infinity_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_flector_at_infinity_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

Horizon multi_vector_at_origin_horizon_sandwich(MultiVectorAtOrigin self, Horizon other) {
    return multi_vector_at_infinity_horizon_into(multi_vector_at_infinity_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_horizon_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

Line multi_vector_at_origin_line_sandwich(MultiVectorAtOrigin self, Line other) {
    return multi_vector_line_into(multi_vector_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_line_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

LineAtInfinity multi_vector_at_origin_line_at_infinity_sandwich(MultiVectorAtOrigin self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(multi_vector_at_infinity_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_line_at_infinity_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

LineAtOrigin multi_vector_at_origin_line_at_origin_sandwich(MultiVectorAtOrigin self, LineAtOrigin other) {
    return multi_vector_at_origin_line_at_origin_into(multi_vector_at_origin_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_line_at_origin_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

Motor multi_vector_at_origin_motor_sandwich(MultiVectorAtOrigin self, Motor other) {
    return multi_vector_motor_into(multi_vector_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_motor_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

MultiVector multi_vector_at_origin_multi_vector_sandwich(MultiVectorAtOrigin self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_multi_vector_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self));
}

MultiVectorAtInfinity multi_vector_at_origin_multi_vector_at_infinity_sandwich(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_multi_vector_at_infinity_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_sandwich(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_multi_vector_at_origin_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self));
}

Origin multi_vector_at_origin_origin_sandwich(MultiVectorAtOrigin self, Origin other) {
    return multi_vector_at_origin_origin_into(multi_vector_at_origin_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_origin_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

Plane multi_vector_at_origin_plane_sandwich(MultiVectorAtOrigin self, Plane other) {
    return multi_vector_plane_into(multi_vector_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_plane_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

PlaneAtOrigin multi_vector_at_origin_plane_at_origin_sandwich(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return multi_vector_at_origin_plane_at_origin_into(multi_vector_at_origin_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_plane_at_origin_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

Point multi_vector_at_origin_point_sandwich(MultiVectorAtOrigin self, Point other) {
    return multi_vector_point_into(multi_vector_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_point_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

PointAtInfinity multi_vector_at_origin_point_at_infinity_sandwich(MultiVectorAtOrigin self, PointAtInfinity other) {
    return multi_vector_at_infinity_point_at_infinity_into(multi_vector_at_infinity_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_point_at_infinity_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

Rotor multi_vector_at_origin_rotor_sandwich(MultiVectorAtOrigin self, Rotor other) {
    return multi_vector_at_origin_rotor_into(multi_vector_at_origin_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_rotor_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

Transflector multi_vector_at_origin_transflector_sandwich(MultiVectorAtOrigin self, Transflector other) {
    return multi_vector_transflector_into(multi_vector_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_transflector_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

Translator multi_vector_at_origin_translator_sandwich(MultiVectorAtOrigin self, Translator other) {
    return multi_vector_translator_into(multi_vector_multi_vector_at_origin_geometric_anti_product(multi_vector_at_origin_translator_geometric_anti_product(self, other), multi_vector_at_origin_anti_reversal(self)));
}

Flector origin_flector_sandwich(Origin self, Flector other) {
    return multi_vector_flector_into(multi_vector_origin_geometric_anti_product(origin_flector_geometric_anti_product(self, other), origin_anti_reversal(self)));
}

FlectorAtInfinity origin_flector_at_infinity_sandwich(Origin self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_at_infinity_into(multi_vector_at_infinity_origin_geometric_anti_product(origin_flector_at_infinity_geometric_anti_product(self, other), origin_anti_reversal(self)));
}

Horizon origin_horizon_sandwich(Origin self, Horizon other) {
    return scalar_origin_geometric_anti_product(origin_horizon_geometric_anti_product(self, other), origin_anti_reversal(self));
}

Line origin_line_sandwich(Origin self, Line other) {
    return multi_vector_line_into(transflector_origin_geometric_anti_product(origin_line_geometric_anti_product(self, other), origin_anti_reversal(self)));
}

LineAtInfinity origin_line_at_infinity_sandwich(Origin self, LineAtInfinity other) {
    return point_at_infinity_origin_geometric_anti_product(origin_line_at_infinity_geometric_anti_product(self, other), origin_anti_reversal(self));
}

LineAtOrigin origin_line_at_origin_sandwich(Origin self, LineAtOrigin other) {
    return plane_at_origin_origin_geometric_anti_product(origin_line_at_origin_geometric_anti_product(self, other), origin_anti_reversal(self));
}

Motor origin_motor_sandwich(Origin self, Motor other) {
    return multi_vector_motor_into(flector_origin_geometric_anti_product(origin_motor_geometric_anti_product(self, other), origin_anti_reversal(self)));
}

MultiVector origin_multi_vector_sandwich(Origin self, MultiVector other) {
    return multi_vector_origin_geometric_anti_product(origin_multi_vector_geometric_anti_product(self, other), origin_anti_reversal(self));
}

MultiVectorAtInfinity origin_multi_vector_at_infinity_sandwich(Origin self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_origin_geometric_anti_product(origin_multi_vector_at_infinity_geometric_anti_product(self, other), origin_anti_reversal(self));
}

MultiVectorAtOrigin origin_multi_vector_at_origin_sandwich(Origin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_origin_geometric_anti_product(origin_multi_vector_at_origin_geometric_anti_product(self, other), origin_anti_reversal(self));
}

Origin origin_origin_sandwich(Origin self, Origin other) {
    return anti_scalar_origin_geometric_anti_product(origin_origin_geometric_anti_product(self, other), origin_anti_reversal(self));
}

Plane origin_plane_sandwich(Origin self, Plane other) {
    return multi_vector_plane_into(multi_vector_origin_geometric_anti_product(origin_plane_geometric_anti_product(self, other), origin_anti_reversal(self)));
}

PlaneAtOrigin origin_plane_at_origin_sandwich(Origin self, PlaneAtOrigin other) {
    return line_at_origin_origin_geometric_anti_product(origin_plane_at_origin_geometric_anti_product(self, other), origin_anti_reversal(self));
}

Point origin_point_sandwich(Origin self, Point other) {
    return translator_origin_geometric_anti_product(origin_point_geometric_anti_product(self, other), origin_anti_reversal(self));
}

PointAtInfinity origin_point_at_infinity_sandwich(Origin self, PointAtInfinity other) {
    return line_at_infinity_origin_geometric_anti_product(origin_point_at_infinity_geometric_anti_product(self, other), origin_anti_reversal(self));
}

Rotor origin_rotor_sandwich(Origin self, Rotor other) {
    return multi_vector_rotor_into(flector_origin_geometric_anti_product(origin_rotor_geometric_anti_product(self, other), origin_anti_reversal(self)));
}

Transflector origin_transflector_sandwich(Origin self, Transflector other) {
    return multi_vector_transflector_into(multi_vector_origin_geometric_anti_product(origin_transflector_geometric_anti_product(self, other), origin_anti_reversal(self)));
}

Translator origin_translator_sandwich(Origin self, Translator other) {
    return point_origin_geometric_anti_product(origin_translator_geometric_anti_product(self, other), origin_anti_reversal(self));
}

Flector plane_flector_sandwich(Plane self, Flector other) {
    return multi_vector_flector_into(multi_vector_plane_geometric_anti_product(plane_flector_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

FlectorAtInfinity plane_flector_at_infinity_sandwich(Plane self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_at_infinity_into(multi_vector_at_infinity_plane_geometric_anti_product(plane_flector_at_infinity_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Horizon plane_horizon_sandwich(Plane self, Horizon other) {
    return flector_at_infinity_horizon_into(line_at_infinity_plane_geometric_anti_product(plane_horizon_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Line plane_line_sandwich(Plane self, Line other) {
    return multi_vector_line_into(flector_plane_geometric_anti_product(plane_line_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

LineAtInfinity plane_line_at_infinity_sandwich(Plane self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(flector_at_infinity_plane_geometric_anti_product(plane_line_at_infinity_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

LineAtOrigin plane_line_at_origin_sandwich(Plane self, LineAtOrigin other) {
    return multi_vector_line_at_origin_into(flector_plane_geometric_anti_product(plane_line_at_origin_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Motor plane_motor_sandwich(Plane self, Motor other) {
    return multi_vector_motor_into(flector_plane_geometric_anti_product(plane_motor_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

MultiVector plane_multi_vector_sandwich(Plane self, MultiVector other) {
    return multi_vector_plane_geometric_anti_product(plane_multi_vector_geometric_anti_product(self, other), plane_anti_reversal(self));
}

MultiVectorAtInfinity plane_multi_vector_at_infinity_sandwich(Plane self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_plane_geometric_anti_product(plane_multi_vector_at_infinity_geometric_anti_product(self, other), plane_anti_reversal(self));
}

MultiVectorAtOrigin plane_multi_vector_at_origin_sandwich(Plane self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_into(multi_vector_plane_geometric_anti_product(plane_multi_vector_at_origin_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Origin plane_origin_sandwich(Plane self, Origin other) {
    return multi_vector_origin_into(multi_vector_plane_geometric_anti_product(plane_origin_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Plane plane_plane_sandwich(Plane self, Plane other) {
    return flector_plane_into(motor_plane_geometric_anti_product(plane_plane_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

PlaneAtOrigin plane_plane_at_origin_sandwich(Plane self, PlaneAtOrigin other) {
    return flector_plane_at_origin_into(motor_plane_geometric_anti_product(plane_plane_at_origin_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Point plane_point_sandwich(Plane self, Point other) {
    return multi_vector_point_into(multi_vector_plane_geometric_anti_product(plane_point_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

PointAtInfinity plane_point_at_infinity_sandwich(Plane self, PointAtInfinity other) {
    return multi_vector_at_infinity_point_at_infinity_into(multi_vector_at_infinity_plane_geometric_anti_product(plane_point_at_infinity_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Rotor plane_rotor_sandwich(Plane self, Rotor other) {
    return multi_vector_rotor_into(flector_plane_geometric_anti_product(plane_rotor_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Transflector plane_transflector_sandwich(Plane self, Transflector other) {
    return multi_vector_transflector_into(multi_vector_plane_geometric_anti_product(plane_transflector_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Translator plane_translator_sandwich(Plane self, Translator other) {
    return multi_vector_translator_into(transflector_plane_geometric_anti_product(plane_translator_geometric_anti_product(self, other), plane_anti_reversal(self)));
}

Flector plane_at_origin_flector_sandwich(PlaneAtOrigin self, Flector other) {
    return multi_vector_flector_into(multi_vector_plane_at_origin_geometric_anti_product(plane_at_origin_flector_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

FlectorAtInfinity plane_at_origin_flector_at_infinity_sandwich(PlaneAtOrigin self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_at_infinity_into(multi_vector_at_infinity_plane_at_origin_geometric_anti_product(plane_at_origin_flector_at_infinity_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

Horizon plane_at_origin_horizon_sandwich(PlaneAtOrigin self, Horizon other) {
    return flector_at_infinity_horizon_into(line_at_infinity_plane_at_origin_geometric_anti_product(plane_at_origin_horizon_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

Line plane_at_origin_line_sandwich(PlaneAtOrigin self, Line other) {
    return multi_vector_line_into(flector_plane_at_origin_geometric_anti_product(plane_at_origin_line_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

LineAtInfinity plane_at_origin_line_at_infinity_sandwich(PlaneAtOrigin self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(flector_at_infinity_plane_at_origin_geometric_anti_product(plane_at_origin_line_at_infinity_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

LineAtOrigin plane_at_origin_line_at_origin_sandwich(PlaneAtOrigin self, LineAtOrigin other) {
    return multi_vector_line_at_origin_into(flector_plane_at_origin_geometric_anti_product(plane_at_origin_line_at_origin_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

Motor plane_at_origin_motor_sandwich(PlaneAtOrigin self, Motor other) {
    return multi_vector_motor_into(flector_plane_at_origin_geometric_anti_product(plane_at_origin_motor_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

MultiVector plane_at_origin_multi_vector_sandwich(PlaneAtOrigin self, MultiVector other) {
    return multi_vector_plane_at_origin_geometric_anti_product(plane_at_origin_multi_vector_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self));
}

MultiVectorAtInfinity plane_at_origin_multi_vector_at_infinity_sandwich(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_plane_at_origin_geometric_anti_product(plane_at_origin_multi_vector_at_infinity_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_sandwich(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_plane_at_origin_geometric_anti_product(plane_at_origin_multi_vector_at_origin_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self));
}

Origin plane_at_origin_origin_sandwich(PlaneAtOrigin self, Origin other) {
    return flector_origin_into(line_at_origin_plane_at_origin_geometric_anti_product(plane_at_origin_origin_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

Plane plane_at_origin_plane_sandwich(PlaneAtOrigin self, Plane other) {
    return flector_plane_into(motor_plane_at_origin_geometric_anti_product(plane_at_origin_plane_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

PlaneAtOrigin plane_at_origin_plane_at_origin_sandwich(PlaneAtOrigin self, PlaneAtOrigin other) {
    return flector_plane_at_origin_into(rotor_plane_at_origin_geometric_anti_product(plane_at_origin_plane_at_origin_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

Point plane_at_origin_point_sandwich(PlaneAtOrigin self, Point other) {
    return multi_vector_point_into(multi_vector_plane_at_origin_geometric_anti_product(plane_at_origin_point_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

PointAtInfinity plane_at_origin_point_at_infinity_sandwich(PlaneAtOrigin self, PointAtInfinity other) {
    return multi_vector_at_infinity_point_at_infinity_into(multi_vector_at_infinity_plane_at_origin_geometric_anti_product(plane_at_origin_point_at_infinity_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

Rotor plane_at_origin_rotor_sandwich(PlaneAtOrigin self, Rotor other) {
    return multi_vector_rotor_into(flector_plane_at_origin_geometric_anti_product(plane_at_origin_rotor_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

Transflector plane_at_origin_transflector_sandwich(PlaneAtOrigin self, Transflector other) {
    return multi_vector_transflector_into(multi_vector_plane_at_origin_geometric_anti_product(plane_at_origin_transflector_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

Translator plane_at_origin_translator_sandwich(PlaneAtOrigin self, Translator other) {
    return multi_vector_translator_into(transflector_plane_at_origin_geometric_anti_product(plane_at_origin_translator_geometric_anti_product(self, other), plane_at_origin_anti_reversal(self)));
}

Flector point_flector_sandwich(Point self, Flector other) {
    return multi_vector_flector_into(multi_vector_point_geometric_anti_product(point_flector_geometric_anti_product(self, other), point_anti_reversal(self)));
}

FlectorAtInfinity point_flector_at_infinity_sandwich(Point self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_at_infinity_into(multi_vector_at_infinity_point_geometric_anti_product(point_flector_at_infinity_geometric_anti_product(self, other), point_anti_reversal(self)));
}

Horizon point_horizon_sandwich(Point self, Horizon other) {
    return scalar_point_geometric_anti_product(point_horizon_geometric_anti_product(self, other), point_anti_reversal(self));
}

Line point_line_sandwich(Point self, Line other) {
    return multi_vector_line_into(transflector_point_geometric_anti_product(point_line_geometric_anti_product(self, other), point_anti_reversal(self)));
}

LineAtInfinity point_line_at_infinity_sandwich(Point self, LineAtInfinity other) {
    return point_at_infinity_point_geometric_anti_product(point_line_at_infinity_geometric_anti_product(self, other), point_anti_reversal(self));
}

LineAtOrigin point_line_at_origin_sandwich(Point self, LineAtOrigin other) {
    return multi_vector_line_at_origin_into(transflector_point_geometric_anti_product(point_line_at_origin_geometric_anti_product(self, other), point_anti_reversal(self)));
}

Motor point_motor_sandwich(Point self, Motor other) {
    return multi_vector_motor_into(flector_point_geometric_anti_product(point_motor_geometric_anti_product(self, other), point_anti_reversal(self)));
}

MultiVector point_multi_vector_sandwich(Point self, MultiVector other) {
    return multi_vector_point_geometric_anti_product(point_multi_vector_geometric_anti_product(self, other), point_anti_reversal(self));
}

MultiVectorAtInfinity point_multi_vector_at_infinity_sandwich(Point self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_point_geometric_anti_product(point_multi_vector_at_infinity_geometric_anti_product(self, other), point_anti_reversal(self));
}

MultiVectorAtOrigin point_multi_vector_at_origin_sandwich(Point self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_into(multi_vector_point_geometric_anti_product(point_multi_vector_at_origin_geometric_anti_product(self, other), point_anti_reversal(self)));
}

Origin point_origin_sandwich(Point self, Origin other) {
    return point_origin_into(translator_point_geometric_anti_product(point_origin_geometric_anti_product(self, other), point_anti_reversal(self)));
}

Plane point_plane_sandwich(Point self, Plane other) {
    return multi_vector_plane_into(multi_vector_point_geometric_anti_product(point_plane_geometric_anti_product(self, other), point_anti_reversal(self)));
}

PlaneAtOrigin point_plane_at_origin_sandwich(Point self, PlaneAtOrigin other) {
    return multi_vector_plane_at_origin_into(multi_vector_point_geometric_anti_product(point_plane_at_origin_geometric_anti_product(self, other), point_anti_reversal(self)));
}

Point point_point_sandwich(Point self, Point other) {
    return translator_point_geometric_anti_product(point_point_geometric_anti_product(self, other), point_anti_reversal(self));
}

PointAtInfinity point_point_at_infinity_sandwich(Point self, PointAtInfinity other) {
    return line_at_infinity_point_geometric_anti_product(point_point_at_infinity_geometric_anti_product(self, other), point_anti_reversal(self));
}

Rotor point_rotor_sandwich(Point self, Rotor other) {
    return multi_vector_rotor_into(flector_point_geometric_anti_product(point_rotor_geometric_anti_product(self, other), point_anti_reversal(self)));
}

Transflector point_transflector_sandwich(Point self, Transflector other) {
    return multi_vector_transflector_into(multi_vector_point_geometric_anti_product(point_transflector_geometric_anti_product(self, other), point_anti_reversal(self)));
}

Translator point_translator_sandwich(Point self, Translator other) {
    return point_point_geometric_anti_product(point_translator_geometric_anti_product(self, other), point_anti_reversal(self));
}

Flector rotor_flector_sandwich(Rotor self, Flector other) {
    return flector_rotor_geometric_anti_product(rotor_flector_geometric_anti_product(self, other), rotor_anti_reversal(self));
}

FlectorAtInfinity rotor_flector_at_infinity_sandwich(Rotor self, FlectorAtInfinity other) {
    return flector_at_infinity_rotor_geometric_anti_product(rotor_flector_at_infinity_geometric_anti_product(self, other), rotor_anti_reversal(self));
}

Horizon rotor_horizon_sandwich(Rotor self, Horizon other) {
    return flector_at_infinity_horizon_into(flector_at_infinity_rotor_geometric_anti_product(rotor_horizon_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

Line rotor_line_sandwich(Rotor self, Line other) {
    return multi_vector_line_into(multi_vector_rotor_geometric_anti_product(rotor_line_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

LineAtInfinity rotor_line_at_infinity_sandwich(Rotor self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(multi_vector_at_infinity_rotor_geometric_anti_product(rotor_line_at_infinity_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

LineAtOrigin rotor_line_at_origin_sandwich(Rotor self, LineAtOrigin other) {
    return rotor_line_at_origin_into(rotor_rotor_geometric_anti_product(rotor_line_at_origin_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

Motor rotor_motor_sandwich(Rotor self, Motor other) {
    return multi_vector_motor_into(multi_vector_rotor_geometric_anti_product(rotor_motor_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

MultiVector rotor_multi_vector_sandwich(Rotor self, MultiVector other) {
    return multi_vector_rotor_geometric_anti_product(rotor_multi_vector_geometric_anti_product(self, other), rotor_anti_reversal(self));
}

MultiVectorAtInfinity rotor_multi_vector_at_infinity_sandwich(Rotor self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_rotor_geometric_anti_product(rotor_multi_vector_at_infinity_geometric_anti_product(self, other), rotor_anti_reversal(self));
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_sandwich(Rotor self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_rotor_geometric_anti_product(rotor_multi_vector_at_origin_geometric_anti_product(self, other), rotor_anti_reversal(self));
}

Origin rotor_origin_sandwich(Rotor self, Origin other) {
    return flector_origin_into(flector_rotor_geometric_anti_product(rotor_origin_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

Plane rotor_plane_sandwich(Rotor self, Plane other) {
    return flector_plane_into(flector_rotor_geometric_anti_product(rotor_plane_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

PlaneAtOrigin rotor_plane_at_origin_sandwich(Rotor self, PlaneAtOrigin other) {
    return flector_plane_at_origin_into(flector_rotor_geometric_anti_product(rotor_plane_at_origin_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

Point rotor_point_sandwich(Rotor self, Point other) {
    return flector_point_into(flector_rotor_geometric_anti_product(rotor_point_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

PointAtInfinity rotor_point_at_infinity_sandwich(Rotor self, PointAtInfinity other) {
    return flector_at_infinity_point_at_infinity_into(flector_at_infinity_rotor_geometric_anti_product(rotor_point_at_infinity_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

Rotor rotor_rotor_sandwich(Rotor self, Rotor other) {
    return rotor_rotor_geometric_anti_product(rotor_rotor_geometric_anti_product(self, other), rotor_anti_reversal(self));
}

Transflector rotor_transflector_sandwich(Rotor self, Transflector other) {
    return flector_transflector_into(flector_rotor_geometric_anti_product(rotor_transflector_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

Translator rotor_translator_sandwich(Rotor self, Translator other) {
    return multi_vector_translator_into(multi_vector_rotor_geometric_anti_product(rotor_translator_geometric_anti_product(self, other), rotor_anti_reversal(self)));
}

Flector transflector_flector_sandwich(Transflector self, Flector other) {
    return multi_vector_flector_into(multi_vector_transflector_geometric_anti_product(transflector_flector_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

FlectorAtInfinity transflector_flector_at_infinity_sandwich(Transflector self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_at_infinity_into(multi_vector_at_infinity_transflector_geometric_anti_product(transflector_flector_at_infinity_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Horizon transflector_horizon_sandwich(Transflector self, Horizon other) {
    return flector_at_infinity_horizon_into(line_at_infinity_transflector_geometric_anti_product(transflector_horizon_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Line transflector_line_sandwich(Transflector self, Line other) {
    return multi_vector_line_into(flector_transflector_geometric_anti_product(transflector_line_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

LineAtInfinity transflector_line_at_infinity_sandwich(Transflector self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_into(flector_at_infinity_transflector_geometric_anti_product(transflector_line_at_infinity_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

LineAtOrigin transflector_line_at_origin_sandwich(Transflector self, LineAtOrigin other) {
    return multi_vector_line_at_origin_into(flector_transflector_geometric_anti_product(transflector_line_at_origin_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Motor transflector_motor_sandwich(Transflector self, Motor other) {
    return multi_vector_motor_into(flector_transflector_geometric_anti_product(transflector_motor_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

MultiVector transflector_multi_vector_sandwich(Transflector self, MultiVector other) {
    return multi_vector_transflector_geometric_anti_product(transflector_multi_vector_geometric_anti_product(self, other), transflector_anti_reversal(self));
}

MultiVectorAtInfinity transflector_multi_vector_at_infinity_sandwich(Transflector self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_transflector_geometric_anti_product(transflector_multi_vector_at_infinity_geometric_anti_product(self, other), transflector_anti_reversal(self));
}

MultiVectorAtOrigin transflector_multi_vector_at_origin_sandwich(Transflector self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_into(multi_vector_transflector_geometric_anti_product(transflector_multi_vector_at_origin_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Origin transflector_origin_sandwich(Transflector self, Origin other) {
    return multi_vector_origin_into(multi_vector_transflector_geometric_anti_product(transflector_origin_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Plane transflector_plane_sandwich(Transflector self, Plane other) {
    return multi_vector_plane_into(multi_vector_transflector_geometric_anti_product(transflector_plane_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

PlaneAtOrigin transflector_plane_at_origin_sandwich(Transflector self, PlaneAtOrigin other) {
    return multi_vector_plane_at_origin_into(multi_vector_transflector_geometric_anti_product(transflector_plane_at_origin_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Point transflector_point_sandwich(Transflector self, Point other) {
    return multi_vector_point_into(multi_vector_transflector_geometric_anti_product(transflector_point_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

PointAtInfinity transflector_point_at_infinity_sandwich(Transflector self, PointAtInfinity other) {
    return multi_vector_at_infinity_point_at_infinity_into(multi_vector_at_infinity_transflector_geometric_anti_product(transflector_point_at_infinity_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Rotor transflector_rotor_sandwich(Transflector self, Rotor other) {
    return multi_vector_rotor_into(flector_transflector_geometric_anti_product(transflector_rotor_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Transflector transflector_transflector_sandwich(Transflector self, Transflector other) {
    return multi_vector_transflector_into(multi_vector_transflector_geometric_anti_product(transflector_transflector_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Translator transflector_translator_sandwich(Transflector self, Translator other) {
    return multi_vector_translator_into(transflector_transflector_geometric_anti_product(transflector_translator_geometric_anti_product(self, other), transflector_anti_reversal(self)));
}

Flector translator_flector_sandwich(Translator self, Flector other) {
    return flector_translator_geometric_anti_product(translator_flector_geometric_anti_product(self, other), translator_anti_reversal(self));
}

FlectorAtInfinity translator_flector_at_infinity_sandwich(Translator self, FlectorAtInfinity other) {
    return flector_at_infinity_translator_geometric_anti_product(translator_flector_at_infinity_geometric_anti_product(self, other), translator_anti_reversal(self));
}

Horizon translator_horizon_sandwich(Translator self, Horizon other) {
    return horizon_translator_geometric_anti_product(translator_horizon_geometric_anti_product(self, other), translator_anti_reversal(self));
}

Line translator_line_sandwich(Translator self, Line other) {
    return multi_vector_line_into(multi_vector_translator_geometric_anti_product(translator_line_geometric_anti_product(self, other), translator_anti_reversal(self)));
}

LineAtInfinity translator_line_at_infinity_sandwich(Translator self, LineAtInfinity other) {
    return line_at_infinity_translator_geometric_anti_product(translator_line_at_infinity_geometric_anti_product(self, other), translator_anti_reversal(self));
}

Line translator_line_at_origin_sandwich(Translator self, LineAtOrigin other) {
    return multi_vector_line_into(multi_vector_translator_geometric_anti_product(translator_line_at_origin_geometric_anti_product(self, other), translator_anti_reversal(self)));
}

Motor translator_motor_sandwich(Translator self, Motor other) {
    return multi_vector_motor_into(multi_vector_translator_geometric_anti_product(translator_motor_geometric_anti_product(self, other), translator_anti_reversal(self)));
}

MultiVector translator_multi_vector_sandwich(Translator self, MultiVector other) {
    return multi_vector_translator_geometric_anti_product(translator_multi_vector_geometric_anti_product(self, other), translator_anti_reversal(self));
}

MultiVectorAtInfinity translator_multi_vector_at_infinity_sandwich(Translator self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_translator_geometric_anti_product(translator_multi_vector_at_infinity_geometric_anti_product(self, other), translator_anti_reversal(self));
}

MultiVectorAtOrigin translator_multi_vector_at_origin_sandwich(Translator self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_into(multi_vector_translator_geometric_anti_product(translator_multi_vector_at_origin_geometric_anti_product(self, other), translator_anti_reversal(self)));
}

Point translator_origin_sandwich(Translator self, Origin other) {
    return point_translator_geometric_anti_product(translator_origin_geometric_anti_product(self, other), translator_anti_reversal(self));
}

Plane translator_plane_sandwich(Translator self, Plane other) {
    return transflector_plane_into(transflector_translator_geometric_anti_product(translator_plane_geometric_anti_product(self, other), translator_anti_reversal(self)));
}

Plane translator_plane_at_origin_sandwich(Translator self, PlaneAtOrigin other) {
    return transflector_plane_into(transflector_translator_geometric_anti_product(translator_plane_at_origin_geometric_anti_product(self, other), translator_anti_reversal(self)));
}

Point translator_point_sandwich(Translator self, Point other) {
    return point_translator_geometric_anti_product(translator_point_geometric_anti_product(self, other), translator_anti_reversal(self));
}

PointAtInfinity translator_point_at_infinity_sandwich(Translator self, PointAtInfinity other) {
    return point_at_infinity_translator_geometric_anti_product(translator_point_at_infinity_geometric_anti_product(self, other), translator_anti_reversal(self));
}

Motor translator_rotor_sandwich(Translator self, Rotor other) {
    return multi_vector_motor_into(multi_vector_translator_geometric_anti_product(translator_rotor_geometric_anti_product(self, other), translator_anti_reversal(self)));
}

Transflector translator_transflector_sandwich(Translator self, Transflector other) {
    return transflector_translator_geometric_anti_product(translator_transflector_geometric_anti_product(self, other), translator_anti_reversal(self));
}

Translator translator_translator_sandwich(Translator self, Translator other) {
    return translator_translator_geometric_anti_product(translator_translator_geometric_anti_product(self, other), translator_anti_reversal(self));
}

Flector point_flector_point_inversion(Point self, Flector other) {
    return point_flector_sandwich(point_unitize(self), other);
}

FlectorAtInfinity point_flector_at_infinity_point_inversion(Point self, FlectorAtInfinity other) {
    return point_flector_at_infinity_sandwich(point_unitize(self), other);
}

Horizon point_horizon_point_inversion(Point self, Horizon other) {
    return point_horizon_sandwich(point_unitize(self), other);
}

Line point_line_point_inversion(Point self, Line other) {
    return point_line_sandwich(point_unitize(self), other);
}

LineAtInfinity point_line_at_infinity_point_inversion(Point self, LineAtInfinity other) {
    return point_line_at_infinity_sandwich(point_unitize(self), other);
}

LineAtOrigin point_line_at_origin_point_inversion(Point self, LineAtOrigin other) {
    return point_line_at_origin_sandwich(point_unitize(self), other);
}

Motor point_motor_point_inversion(Point self, Motor other) {
    return point_motor_sandwich(point_unitize(self), other);
}

MultiVector point_multi_vector_point_inversion(Point self, MultiVector other) {
    return point_multi_vector_sandwich(point_unitize(self), other);
}

MultiVectorAtInfinity point_multi_vector_at_infinity_point_inversion(Point self, MultiVectorAtInfinity other) {
    return point_multi_vector_at_infinity_sandwich(point_unitize(self), other);
}

MultiVectorAtOrigin point_multi_vector_at_origin_point_inversion(Point self, MultiVectorAtOrigin other) {
    return point_multi_vector_at_origin_sandwich(point_unitize(self), other);
}

Origin point_origin_point_inversion(Point self, Origin other) {
    return point_origin_sandwich(point_unitize(self), other);
}

Plane point_plane_point_inversion(Point self, Plane other) {
    return point_plane_sandwich(point_unitize(self), other);
}

PlaneAtOrigin point_plane_at_origin_point_inversion(Point self, PlaneAtOrigin other) {
    return point_plane_at_origin_sandwich(point_unitize(self), other);
}

Point point_point_point_inversion(Point self, Point other) {
    return point_point_sandwich(point_unitize(self), other);
}

PointAtInfinity point_point_at_infinity_point_inversion(Point self, PointAtInfinity other) {
    return point_point_at_infinity_sandwich(point_unitize(self), other);
}

Rotor point_rotor_point_inversion(Point self, Rotor other) {
    return point_rotor_sandwich(point_unitize(self), other);
}

Transflector point_transflector_point_inversion(Point self, Transflector other) {
    return point_transflector_sandwich(point_unitize(self), other);
}

Translator point_translator_point_inversion(Point self, Translator other) {
    return point_translator_sandwich(point_unitize(self), other);
}

Flector plane_flector_reflect(Plane self, Flector other) {
    return plane_flector_sandwich(plane_unitize(self), other);
}

FlectorAtInfinity plane_flector_at_infinity_reflect(Plane self, FlectorAtInfinity other) {
    return plane_flector_at_infinity_sandwich(plane_unitize(self), other);
}

Horizon plane_horizon_reflect(Plane self, Horizon other) {
    return plane_horizon_sandwich(plane_unitize(self), other);
}

Line plane_line_reflect(Plane self, Line other) {
    return plane_line_sandwich(plane_unitize(self), other);
}

LineAtInfinity plane_line_at_infinity_reflect(Plane self, LineAtInfinity other) {
    return plane_line_at_infinity_sandwich(plane_unitize(self), other);
}

LineAtOrigin plane_line_at_origin_reflect(Plane self, LineAtOrigin other) {
    return plane_line_at_origin_sandwich(plane_unitize(self), other);
}

Motor plane_motor_reflect(Plane self, Motor other) {
    return plane_motor_sandwich(plane_unitize(self), other);
}

MultiVector plane_multi_vector_reflect(Plane self, MultiVector other) {
    return plane_multi_vector_sandwich(plane_unitize(self), other);
}

MultiVectorAtInfinity plane_multi_vector_at_infinity_reflect(Plane self, MultiVectorAtInfinity other) {
    return plane_multi_vector_at_infinity_sandwich(plane_unitize(self), other);
}

MultiVectorAtOrigin plane_multi_vector_at_origin_reflect(Plane self, MultiVectorAtOrigin other) {
    return plane_multi_vector_at_origin_sandwich(plane_unitize(self), other);
}

Origin plane_origin_reflect(Plane self, Origin other) {
    return plane_origin_sandwich(plane_unitize(self), other);
}

Plane plane_plane_reflect(Plane self, Plane other) {
    return plane_plane_sandwich(plane_unitize(self), other);
}

PlaneAtOrigin plane_plane_at_origin_reflect(Plane self, PlaneAtOrigin other) {
    return plane_plane_at_origin_sandwich(plane_unitize(self), other);
}

Point plane_point_reflect(Plane self, Point other) {
    return plane_point_sandwich(plane_unitize(self), other);
}

PointAtInfinity plane_point_at_infinity_reflect(Plane self, PointAtInfinity other) {
    return plane_point_at_infinity_sandwich(plane_unitize(self), other);
}

Rotor plane_rotor_reflect(Plane self, Rotor other) {
    return plane_rotor_sandwich(plane_unitize(self), other);
}

Transflector plane_transflector_reflect(Plane self, Transflector other) {
    return plane_transflector_sandwich(plane_unitize(self), other);
}

Translator plane_translator_reflect(Plane self, Translator other) {
    return plane_translator_sandwich(plane_unitize(self), other);
}

Flector rotor_flector_rotate(Rotor self, Flector other) {
    return rotor_flector_sandwich(self, other);
}

FlectorAtInfinity rotor_flector_at_infinity_rotate(Rotor self, FlectorAtInfinity other) {
    return rotor_flector_at_infinity_sandwich(self, other);
}

Horizon rotor_horizon_rotate(Rotor self, Horizon other) {
    return rotor_horizon_sandwich(self, other);
}

Line rotor_line_rotate(Rotor self, Line other) {
    return rotor_line_sandwich(self, other);
}

LineAtInfinity rotor_line_at_infinity_rotate(Rotor self, LineAtInfinity other) {
    return rotor_line_at_infinity_sandwich(self, other);
}

LineAtOrigin rotor_line_at_origin_rotate(Rotor self, LineAtOrigin other) {
    return rotor_line_at_origin_sandwich(self, other);
}

Motor rotor_motor_rotate(Rotor self, Motor other) {
    return rotor_motor_sandwich(self, other);
}

MultiVector rotor_multi_vector_rotate(Rotor self, MultiVector other) {
    return rotor_multi_vector_sandwich(self, other);
}

MultiVectorAtInfinity rotor_multi_vector_at_infinity_rotate(Rotor self, MultiVectorAtInfinity other) {
    return rotor_multi_vector_at_infinity_sandwich(self, other);
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_rotate(Rotor self, MultiVectorAtOrigin other) {
    return rotor_multi_vector_at_origin_sandwich(self, other);
}

Origin rotor_origin_rotate(Rotor self, Origin other) {
    return rotor_origin_sandwich(self, other);
}

Plane rotor_plane_rotate(Rotor self, Plane other) {
    return rotor_plane_sandwich(self, other);
}

PlaneAtOrigin rotor_plane_at_origin_rotate(Rotor self, PlaneAtOrigin other) {
    return rotor_plane_at_origin_sandwich(self, other);
}

Point rotor_point_rotate(Rotor self, Point other) {
    return rotor_point_sandwich(self, other);
}

PointAtInfinity rotor_point_at_infinity_rotate(Rotor self, PointAtInfinity other) {
    return rotor_point_at_infinity_sandwich(self, other);
}

Rotor rotor_rotor_rotate(Rotor self, Rotor other) {
    return rotor_rotor_sandwich(self, other);
}

Transflector rotor_transflector_rotate(Rotor self, Transflector other) {
    return rotor_transflector_sandwich(self, other);
}

Translator rotor_translator_rotate(Rotor self, Translator other) {
    return rotor_translator_sandwich(self, other);
}

Flector transflector_flector_transflect(Transflector self, Flector other) {
    return transflector_flector_sandwich(self, other);
}

FlectorAtInfinity transflector_flector_at_infinity_transflect(Transflector self, FlectorAtInfinity other) {
    return transflector_flector_at_infinity_sandwich(self, other);
}

Horizon transflector_horizon_transflect(Transflector self, Horizon other) {
    return transflector_horizon_sandwich(self, other);
}

Line transflector_line_transflect(Transflector self, Line other) {
    return transflector_line_sandwich(self, other);
}

LineAtInfinity transflector_line_at_infinity_transflect(Transflector self, LineAtInfinity other) {
    return transflector_line_at_infinity_sandwich(self, other);
}

LineAtOrigin transflector_line_at_origin_transflect(Transflector self, LineAtOrigin other) {
    return transflector_line_at_origin_sandwich(self, other);
}

Motor transflector_motor_transflect(Transflector self, Motor other) {
    return transflector_motor_sandwich(self, other);
}

MultiVector transflector_multi_vector_transflect(Transflector self, MultiVector other) {
    return transflector_multi_vector_sandwich(self, other);
}

MultiVectorAtInfinity transflector_multi_vector_at_infinity_transflect(Transflector self, MultiVectorAtInfinity other) {
    return transflector_multi_vector_at_infinity_sandwich(self, other);
}

MultiVectorAtOrigin transflector_multi_vector_at_origin_transflect(Transflector self, MultiVectorAtOrigin other) {
    return transflector_multi_vector_at_origin_sandwich(self, other);
}

Origin transflector_origin_transflect(Transflector self, Origin other) {
    return transflector_origin_sandwich(self, other);
}

Plane transflector_plane_transflect(Transflector self, Plane other) {
    return transflector_plane_sandwich(self, other);
}

PlaneAtOrigin transflector_plane_at_origin_transflect(Transflector self, PlaneAtOrigin other) {
    return transflector_plane_at_origin_sandwich(self, other);
}

Point transflector_point_transflect(Transflector self, Point other) {
    return transflector_point_sandwich(self, other);
}

PointAtInfinity transflector_point_at_infinity_transflect(Transflector self, PointAtInfinity other) {
    return transflector_point_at_infinity_sandwich(self, other);
}

Rotor transflector_rotor_transflect(Transflector self, Rotor other) {
    return transflector_rotor_sandwich(self, other);
}

Transflector transflector_transflector_transflect(Transflector self, Transflector other) {
    return transflector_transflector_sandwich(self, other);
}

Translator transflector_translator_transflect(Transflector self, Translator other) {
    return transflector_translator_sandwich(self, other);
}

Flector translator_flector_translate(Translator self, Flector other) {
    return translator_flector_sandwich(self, other);
}

FlectorAtInfinity translator_flector_at_infinity_translate(Translator self, FlectorAtInfinity other) {
    return translator_flector_at_infinity_sandwich(self, other);
}

Horizon translator_horizon_translate(Translator self, Horizon other) {
    return translator_horizon_sandwich(self, other);
}

Line translator_line_translate(Translator self, Line other) {
    return translator_line_sandwich(self, other);
}

LineAtInfinity translator_line_at_infinity_translate(Translator self, LineAtInfinity other) {
    return translator_line_at_infinity_sandwich(self, other);
}

Line translator_line_at_origin_translate(Translator self, LineAtOrigin other) {
    return translator_line_at_origin_sandwich(self, other);
}

Motor translator_motor_translate(Translator self, Motor other) {
    return translator_motor_sandwich(self, other);
}

MultiVector translator_multi_vector_translate(Translator self, MultiVector other) {
    return translator_multi_vector_sandwich(self, other);
}

MultiVectorAtInfinity translator_multi_vector_at_infinity_translate(Translator self, MultiVectorAtInfinity other) {
    return translator_multi_vector_at_infinity_sandwich(self, other);
}

MultiVectorAtOrigin translator_multi_vector_at_origin_translate(Translator self, MultiVectorAtOrigin other) {
    return translator_multi_vector_at_origin_sandwich(self, other);
}

Point translator_origin_translate(Translator self, Origin other) {
    return translator_origin_sandwich(self, other);
}

Plane translator_plane_translate(Translator self, Plane other) {
    return translator_plane_sandwich(self, other);
}

Plane translator_plane_at_origin_translate(Translator self, PlaneAtOrigin other) {
    return translator_plane_at_origin_sandwich(self, other);
}

Point translator_point_translate(Translator self, Point other) {
    return translator_point_sandwich(self, other);
}

PointAtInfinity translator_point_at_infinity_translate(Translator self, PointAtInfinity other) {
    return translator_point_at_infinity_sandwich(self, other);
}

Motor translator_rotor_translate(Translator self, Rotor other) {
    return translator_rotor_sandwich(self, other);
}

Transflector translator_transflector_translate(Translator self, Transflector other) {
    return translator_transflector_sandwich(self, other);
}

Translator translator_translator_translate(Translator self, Translator other) {
    return translator_translator_sandwich(self, other);
}

AntiScalar anti_scalar_anti_scalar_geometric_anti_quotient(AntiScalar self, AntiScalar other) {
    return anti_scalar_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

Flector anti_scalar_flector_geometric_anti_quotient(AntiScalar self, Flector other) {
    return anti_scalar_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

Line anti_scalar_line_geometric_anti_quotient(AntiScalar self, Line other) {
    return anti_scalar_line_geometric_anti_product(self, line_anti_inverse(other));
}

LineAtOrigin anti_scalar_line_at_origin_geometric_anti_quotient(AntiScalar self, LineAtOrigin other) {
    return anti_scalar_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Magnitude anti_scalar_magnitude_geometric_anti_quotient(AntiScalar self, Magnitude other) {
    return anti_scalar_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

Motor anti_scalar_motor_geometric_anti_quotient(AntiScalar self, Motor other) {
    return anti_scalar_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector anti_scalar_multi_vector_geometric_anti_quotient(AntiScalar self, MultiVector other) {
    return anti_scalar_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_origin_geometric_anti_quotient(AntiScalar self, MultiVectorAtOrigin other) {
    return anti_scalar_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

Origin anti_scalar_origin_geometric_anti_quotient(AntiScalar self, Origin other) {
    return anti_scalar_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

Plane anti_scalar_plane_geometric_anti_quotient(AntiScalar self, Plane other) {
    return anti_scalar_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

PlaneAtOrigin anti_scalar_plane_at_origin_geometric_anti_quotient(AntiScalar self, PlaneAtOrigin other) {
    return anti_scalar_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Point anti_scalar_point_geometric_anti_quotient(AntiScalar self, Point other) {
    return anti_scalar_point_geometric_anti_product(self, point_anti_inverse(other));
}

Rotor anti_scalar_rotor_geometric_anti_quotient(AntiScalar self, Rotor other) {
    return anti_scalar_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

Transflector anti_scalar_transflector_geometric_anti_quotient(AntiScalar self, Transflector other) {
    return anti_scalar_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Translator anti_scalar_translator_geometric_anti_quotient(AntiScalar self, Translator other) {
    return anti_scalar_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Flector flector_anti_scalar_geometric_anti_quotient(Flector self, AntiScalar other) {
    return flector_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVector flector_flector_geometric_anti_quotient(Flector self, Flector other) {
    return flector_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

Flector flector_line_geometric_anti_quotient(Flector self, Line other) {
    return flector_line_geometric_anti_product(self, line_anti_inverse(other));
}

Flector flector_line_at_origin_geometric_anti_quotient(Flector self, LineAtOrigin other) {
    return flector_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Flector flector_magnitude_geometric_anti_quotient(Flector self, Magnitude other) {
    return flector_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

Flector flector_motor_geometric_anti_quotient(Flector self, Motor other) {
    return flector_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector flector_multi_vector_geometric_anti_quotient(Flector self, MultiVector other) {
    return flector_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVector flector_multi_vector_at_origin_geometric_anti_quotient(Flector self, MultiVectorAtOrigin other) {
    return flector_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

MultiVector flector_origin_geometric_anti_quotient(Flector self, Origin other) {
    return flector_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

MultiVector flector_plane_geometric_anti_quotient(Flector self, Plane other) {
    return flector_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

MultiVector flector_plane_at_origin_geometric_anti_quotient(Flector self, PlaneAtOrigin other) {
    return flector_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

MultiVector flector_point_geometric_anti_quotient(Flector self, Point other) {
    return flector_point_geometric_anti_product(self, point_anti_inverse(other));
}

Flector flector_rotor_geometric_anti_quotient(Flector self, Rotor other) {
    return flector_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVector flector_transflector_geometric_anti_quotient(Flector self, Transflector other) {
    return flector_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Flector flector_translator_geometric_anti_quotient(Flector self, Translator other) {
    return flector_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

FlectorAtInfinity flector_at_infinity_anti_scalar_geometric_anti_quotient(FlectorAtInfinity self, AntiScalar other) {
    return flector_at_infinity_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_flector_geometric_anti_quotient(FlectorAtInfinity self, Flector other) {
    return flector_at_infinity_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

FlectorAtInfinity flector_at_infinity_line_geometric_anti_quotient(FlectorAtInfinity self, Line other) {
    return flector_at_infinity_line_geometric_anti_product(self, line_anti_inverse(other));
}

FlectorAtInfinity flector_at_infinity_line_at_origin_geometric_anti_quotient(FlectorAtInfinity self, LineAtOrigin other) {
    return flector_at_infinity_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

FlectorAtInfinity flector_at_infinity_magnitude_geometric_anti_quotient(FlectorAtInfinity self, Magnitude other) {
    return flector_at_infinity_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

FlectorAtInfinity flector_at_infinity_motor_geometric_anti_quotient(FlectorAtInfinity self, Motor other) {
    return flector_at_infinity_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_geometric_anti_quotient(FlectorAtInfinity self, MultiVector other) {
    return flector_at_infinity_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_origin_geometric_anti_quotient(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return flector_at_infinity_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_origin_geometric_anti_quotient(FlectorAtInfinity self, Origin other) {
    return flector_at_infinity_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_plane_geometric_anti_quotient(FlectorAtInfinity self, Plane other) {
    return flector_at_infinity_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_plane_at_origin_geometric_anti_quotient(FlectorAtInfinity self, PlaneAtOrigin other) {
    return flector_at_infinity_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_point_geometric_anti_quotient(FlectorAtInfinity self, Point other) {
    return flector_at_infinity_point_geometric_anti_product(self, point_anti_inverse(other));
}

FlectorAtInfinity flector_at_infinity_rotor_geometric_anti_quotient(FlectorAtInfinity self, Rotor other) {
    return flector_at_infinity_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_transflector_geometric_anti_quotient(FlectorAtInfinity self, Transflector other) {
    return flector_at_infinity_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

FlectorAtInfinity flector_at_infinity_translator_geometric_anti_quotient(FlectorAtInfinity self, Translator other) {
    return flector_at_infinity_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Horizon horizon_anti_scalar_geometric_anti_quotient(Horizon self, AntiScalar other) {
    return horizon_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVectorAtInfinity horizon_flector_geometric_anti_quotient(Horizon self, Flector other) {
    return horizon_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

PointAtInfinity horizon_line_geometric_anti_quotient(Horizon self, Line other) {
    return horizon_line_geometric_anti_product(self, line_anti_inverse(other));
}

PointAtInfinity horizon_line_at_origin_geometric_anti_quotient(Horizon self, LineAtOrigin other) {
    return horizon_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Horizon horizon_magnitude_geometric_anti_quotient(Horizon self, Magnitude other) {
    return horizon_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

FlectorAtInfinity horizon_motor_geometric_anti_quotient(Horizon self, Motor other) {
    return horizon_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVectorAtInfinity horizon_multi_vector_geometric_anti_quotient(Horizon self, MultiVector other) {
    return horizon_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtInfinity horizon_multi_vector_at_origin_geometric_anti_quotient(Horizon self, MultiVectorAtOrigin other) {
    return horizon_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

Scalar horizon_origin_geometric_anti_quotient(Horizon self, Origin other) {
    return horizon_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

LineAtInfinity horizon_plane_geometric_anti_quotient(Horizon self, Plane other) {
    return horizon_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

LineAtInfinity horizon_plane_at_origin_geometric_anti_quotient(Horizon self, PlaneAtOrigin other) {
    return horizon_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Scalar horizon_point_geometric_anti_quotient(Horizon self, Point other) {
    return horizon_point_geometric_anti_product(self, point_anti_inverse(other));
}

FlectorAtInfinity horizon_rotor_geometric_anti_quotient(Horizon self, Rotor other) {
    return horizon_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

LineAtInfinity horizon_transflector_geometric_anti_quotient(Horizon self, Transflector other) {
    return horizon_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Horizon horizon_translator_geometric_anti_quotient(Horizon self, Translator other) {
    return horizon_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Line line_anti_scalar_geometric_anti_quotient(Line self, AntiScalar other) {
    return line_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

Flector line_flector_geometric_anti_quotient(Line self, Flector other) {
    return line_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

MultiVector line_line_geometric_anti_quotient(Line self, Line other) {
    return line_line_geometric_anti_product(self, line_anti_inverse(other));
}

MultiVector line_line_at_origin_geometric_anti_quotient(Line self, LineAtOrigin other) {
    return line_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Line line_magnitude_geometric_anti_quotient(Line self, Magnitude other) {
    return line_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVector line_motor_geometric_anti_quotient(Line self, Motor other) {
    return line_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector line_multi_vector_geometric_anti_quotient(Line self, MultiVector other) {
    return line_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVector line_multi_vector_at_origin_geometric_anti_quotient(Line self, MultiVectorAtOrigin other) {
    return line_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

Transflector line_origin_geometric_anti_quotient(Line self, Origin other) {
    return line_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

Flector line_plane_geometric_anti_quotient(Line self, Plane other) {
    return line_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

Flector line_plane_at_origin_geometric_anti_quotient(Line self, PlaneAtOrigin other) {
    return line_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Transflector line_point_geometric_anti_quotient(Line self, Point other) {
    return line_point_geometric_anti_product(self, point_anti_inverse(other));
}

MultiVector line_rotor_geometric_anti_quotient(Line self, Rotor other) {
    return line_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

Flector line_transflector_geometric_anti_quotient(Line self, Transflector other) {
    return line_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

MultiVector line_translator_geometric_anti_quotient(Line self, Translator other) {
    return line_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

LineAtInfinity line_at_infinity_anti_scalar_geometric_anti_quotient(LineAtInfinity self, AntiScalar other) {
    return line_at_infinity_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

FlectorAtInfinity line_at_infinity_flector_geometric_anti_quotient(LineAtInfinity self, Flector other) {
    return line_at_infinity_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

MultiVectorAtInfinity line_at_infinity_line_geometric_anti_quotient(LineAtInfinity self, Line other) {
    return line_at_infinity_line_geometric_anti_product(self, line_anti_inverse(other));
}

MultiVectorAtInfinity line_at_infinity_line_at_origin_geometric_anti_quotient(LineAtInfinity self, LineAtOrigin other) {
    return line_at_infinity_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

LineAtInfinity line_at_infinity_magnitude_geometric_anti_quotient(LineAtInfinity self, Magnitude other) {
    return line_at_infinity_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVectorAtInfinity line_at_infinity_motor_geometric_anti_quotient(LineAtInfinity self, Motor other) {
    return line_at_infinity_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_geometric_anti_quotient(LineAtInfinity self, MultiVector other) {
    return line_at_infinity_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_origin_geometric_anti_quotient(LineAtInfinity self, MultiVectorAtOrigin other) {
    return line_at_infinity_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

PointAtInfinity line_at_infinity_origin_geometric_anti_quotient(LineAtInfinity self, Origin other) {
    return line_at_infinity_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

FlectorAtInfinity line_at_infinity_plane_geometric_anti_quotient(LineAtInfinity self, Plane other) {
    return line_at_infinity_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

FlectorAtInfinity line_at_infinity_plane_at_origin_geometric_anti_quotient(LineAtInfinity self, PlaneAtOrigin other) {
    return line_at_infinity_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

PointAtInfinity line_at_infinity_point_geometric_anti_quotient(LineAtInfinity self, Point other) {
    return line_at_infinity_point_geometric_anti_product(self, point_anti_inverse(other));
}

MultiVectorAtInfinity line_at_infinity_rotor_geometric_anti_quotient(LineAtInfinity self, Rotor other) {
    return line_at_infinity_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

FlectorAtInfinity line_at_infinity_transflector_geometric_anti_quotient(LineAtInfinity self, Transflector other) {
    return line_at_infinity_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

LineAtInfinity line_at_infinity_translator_geometric_anti_quotient(LineAtInfinity self, Translator other) {
    return line_at_infinity_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

LineAtOrigin line_at_origin_anti_scalar_geometric_anti_quotient(LineAtOrigin self, AntiScalar other) {
    return line_at_origin_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

Flector line_at_origin_flector_geometric_anti_quotient(LineAtOrigin self, Flector other) {
    return line_at_origin_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

MultiVector line_at_origin_line_geometric_anti_quotient(LineAtOrigin self, Line other) {
    return line_at_origin_line_geometric_anti_product(self, line_anti_inverse(other));
}

Rotor line_at_origin_line_at_origin_geometric_anti_quotient(LineAtOrigin self, LineAtOrigin other) {
    return line_at_origin_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Line line_at_origin_magnitude_geometric_anti_quotient(LineAtOrigin self, Magnitude other) {
    return line_at_origin_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVector line_at_origin_motor_geometric_anti_quotient(LineAtOrigin self, Motor other) {
    return line_at_origin_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector line_at_origin_multi_vector_geometric_anti_quotient(LineAtOrigin self, MultiVector other) {
    return line_at_origin_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_geometric_anti_quotient(LineAtOrigin self, MultiVectorAtOrigin other) {
    return line_at_origin_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

PlaneAtOrigin line_at_origin_origin_geometric_anti_quotient(LineAtOrigin self, Origin other) {
    return line_at_origin_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

Flector line_at_origin_plane_geometric_anti_quotient(LineAtOrigin self, Plane other) {
    return line_at_origin_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

Flector line_at_origin_plane_at_origin_geometric_anti_quotient(LineAtOrigin self, PlaneAtOrigin other) {
    return line_at_origin_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Transflector line_at_origin_point_geometric_anti_quotient(LineAtOrigin self, Point other) {
    return line_at_origin_point_geometric_anti_product(self, point_anti_inverse(other));
}

Rotor line_at_origin_rotor_geometric_anti_quotient(LineAtOrigin self, Rotor other) {
    return line_at_origin_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

Flector line_at_origin_transflector_geometric_anti_quotient(LineAtOrigin self, Transflector other) {
    return line_at_origin_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

MultiVector line_at_origin_translator_geometric_anti_quotient(LineAtOrigin self, Translator other) {
    return line_at_origin_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Magnitude magnitude_anti_scalar_geometric_anti_quotient(Magnitude self, AntiScalar other) {
    return magnitude_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

Flector magnitude_flector_geometric_anti_quotient(Magnitude self, Flector other) {
    return magnitude_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

Line magnitude_line_geometric_anti_quotient(Magnitude self, Line other) {
    return magnitude_line_geometric_anti_product(self, line_anti_inverse(other));
}

Line magnitude_line_at_origin_geometric_anti_quotient(Magnitude self, LineAtOrigin other) {
    return magnitude_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Magnitude magnitude_magnitude_geometric_anti_quotient(Magnitude self, Magnitude other) {
    return magnitude_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVector magnitude_motor_geometric_anti_quotient(Magnitude self, Motor other) {
    return magnitude_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector magnitude_multi_vector_geometric_anti_quotient(Magnitude self, MultiVector other) {
    return magnitude_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVector magnitude_multi_vector_at_origin_geometric_anti_quotient(Magnitude self, MultiVectorAtOrigin other) {
    return magnitude_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

Flector magnitude_origin_geometric_anti_quotient(Magnitude self, Origin other) {
    return magnitude_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

Transflector magnitude_plane_geometric_anti_quotient(Magnitude self, Plane other) {
    return magnitude_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

Transflector magnitude_plane_at_origin_geometric_anti_quotient(Magnitude self, PlaneAtOrigin other) {
    return magnitude_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Flector magnitude_point_geometric_anti_quotient(Magnitude self, Point other) {
    return magnitude_point_geometric_anti_product(self, point_anti_inverse(other));
}

MultiVector magnitude_rotor_geometric_anti_quotient(Magnitude self, Rotor other) {
    return magnitude_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

Transflector magnitude_transflector_geometric_anti_quotient(Magnitude self, Transflector other) {
    return magnitude_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

MultiVector magnitude_translator_geometric_anti_quotient(Magnitude self, Translator other) {
    return magnitude_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Motor motor_anti_scalar_geometric_anti_quotient(Motor self, AntiScalar other) {
    return motor_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

Flector motor_flector_geometric_anti_quotient(Motor self, Flector other) {
    return motor_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

MultiVector motor_line_geometric_anti_quotient(Motor self, Line other) {
    return motor_line_geometric_anti_product(self, line_anti_inverse(other));
}

MultiVector motor_line_at_origin_geometric_anti_quotient(Motor self, LineAtOrigin other) {
    return motor_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

MultiVector motor_magnitude_geometric_anti_quotient(Motor self, Magnitude other) {
    return motor_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVector motor_motor_geometric_anti_quotient(Motor self, Motor other) {
    return motor_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector motor_multi_vector_geometric_anti_quotient(Motor self, MultiVector other) {
    return motor_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVector motor_multi_vector_at_origin_geometric_anti_quotient(Motor self, MultiVectorAtOrigin other) {
    return motor_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

Flector motor_origin_geometric_anti_quotient(Motor self, Origin other) {
    return motor_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

Flector motor_plane_geometric_anti_quotient(Motor self, Plane other) {
    return motor_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

Flector motor_plane_at_origin_geometric_anti_quotient(Motor self, PlaneAtOrigin other) {
    return motor_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Flector motor_point_geometric_anti_quotient(Motor self, Point other) {
    return motor_point_geometric_anti_product(self, point_anti_inverse(other));
}

MultiVector motor_rotor_geometric_anti_quotient(Motor self, Rotor other) {
    return motor_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

Flector motor_transflector_geometric_anti_quotient(Motor self, Transflector other) {
    return motor_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

MultiVector motor_translator_geometric_anti_quotient(Motor self, Translator other) {
    return motor_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

MultiVector multi_vector_anti_scalar_geometric_anti_quotient(MultiVector self, AntiScalar other) {
    return multi_vector_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVector multi_vector_flector_geometric_anti_quotient(MultiVector self, Flector other) {
    return multi_vector_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

MultiVector multi_vector_line_geometric_anti_quotient(MultiVector self, Line other) {
    return multi_vector_line_geometric_anti_product(self, line_anti_inverse(other));
}

MultiVector multi_vector_line_at_origin_geometric_anti_quotient(MultiVector self, LineAtOrigin other) {
    return multi_vector_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

MultiVector multi_vector_magnitude_geometric_anti_quotient(MultiVector self, Magnitude other) {
    return multi_vector_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVector multi_vector_motor_geometric_anti_quotient(MultiVector self, Motor other) {
    return multi_vector_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector multi_vector_multi_vector_geometric_anti_quotient(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVector multi_vector_multi_vector_at_origin_geometric_anti_quotient(MultiVector self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

MultiVector multi_vector_origin_geometric_anti_quotient(MultiVector self, Origin other) {
    return multi_vector_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

MultiVector multi_vector_plane_geometric_anti_quotient(MultiVector self, Plane other) {
    return multi_vector_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

MultiVector multi_vector_plane_at_origin_geometric_anti_quotient(MultiVector self, PlaneAtOrigin other) {
    return multi_vector_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

MultiVector multi_vector_point_geometric_anti_quotient(MultiVector self, Point other) {
    return multi_vector_point_geometric_anti_product(self, point_anti_inverse(other));
}

MultiVector multi_vector_rotor_geometric_anti_quotient(MultiVector self, Rotor other) {
    return multi_vector_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVector multi_vector_transflector_geometric_anti_quotient(MultiVector self, Transflector other) {
    return multi_vector_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

MultiVector multi_vector_translator_geometric_anti_quotient(MultiVector self, Translator other) {
    return multi_vector_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_anti_scalar_geometric_anti_quotient(MultiVectorAtInfinity self, AntiScalar other) {
    return multi_vector_at_infinity_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_geometric_anti_quotient(MultiVectorAtInfinity self, Flector other) {
    return multi_vector_at_infinity_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_geometric_anti_quotient(MultiVectorAtInfinity self, Line other) {
    return multi_vector_at_infinity_line_geometric_anti_product(self, line_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_origin_geometric_anti_quotient(MultiVectorAtInfinity self, LineAtOrigin other) {
    return multi_vector_at_infinity_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_magnitude_geometric_anti_quotient(MultiVectorAtInfinity self, Magnitude other) {
    return multi_vector_at_infinity_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_motor_geometric_anti_quotient(MultiVectorAtInfinity self, Motor other) {
    return multi_vector_at_infinity_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_geometric_anti_quotient(MultiVectorAtInfinity self, MultiVector other) {
    return multi_vector_at_infinity_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_origin_geometric_anti_quotient(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return multi_vector_at_infinity_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_origin_geometric_anti_quotient(MultiVectorAtInfinity self, Origin other) {
    return multi_vector_at_infinity_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_geometric_anti_quotient(MultiVectorAtInfinity self, Plane other) {
    return multi_vector_at_infinity_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_at_origin_geometric_anti_quotient(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return multi_vector_at_infinity_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_geometric_anti_quotient(MultiVectorAtInfinity self, Point other) {
    return multi_vector_at_infinity_point_geometric_anti_product(self, point_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_rotor_geometric_anti_quotient(MultiVectorAtInfinity self, Rotor other) {
    return multi_vector_at_infinity_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_transflector_geometric_anti_quotient(MultiVectorAtInfinity self, Transflector other) {
    return multi_vector_at_infinity_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_translator_geometric_anti_quotient(MultiVectorAtInfinity self, Translator other) {
    return multi_vector_at_infinity_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_anti_scalar_geometric_anti_quotient(MultiVectorAtOrigin self, AntiScalar other) {
    return multi_vector_at_origin_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVector multi_vector_at_origin_flector_geometric_anti_quotient(MultiVectorAtOrigin self, Flector other) {
    return multi_vector_at_origin_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

MultiVector multi_vector_at_origin_line_geometric_anti_quotient(MultiVectorAtOrigin self, Line other) {
    return multi_vector_at_origin_line_geometric_anti_product(self, line_anti_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_origin_geometric_anti_quotient(MultiVectorAtOrigin self, LineAtOrigin other) {
    return multi_vector_at_origin_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

MultiVector multi_vector_at_origin_magnitude_geometric_anti_quotient(MultiVectorAtOrigin self, Magnitude other) {
    return multi_vector_at_origin_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVector multi_vector_at_origin_motor_geometric_anti_quotient(MultiVectorAtOrigin self, Motor other) {
    return multi_vector_at_origin_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector multi_vector_at_origin_multi_vector_geometric_anti_quotient(MultiVectorAtOrigin self, MultiVector other) {
    return multi_vector_at_origin_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_geometric_anti_quotient(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_origin_geometric_anti_quotient(MultiVectorAtOrigin self, Origin other) {
    return multi_vector_at_origin_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

MultiVector multi_vector_at_origin_plane_geometric_anti_quotient(MultiVectorAtOrigin self, Plane other) {
    return multi_vector_at_origin_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_plane_at_origin_geometric_anti_quotient(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return multi_vector_at_origin_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

MultiVector multi_vector_at_origin_point_geometric_anti_quotient(MultiVectorAtOrigin self, Point other) {
    return multi_vector_at_origin_point_geometric_anti_product(self, point_anti_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_rotor_geometric_anti_quotient(MultiVectorAtOrigin self, Rotor other) {
    return multi_vector_at_origin_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVector multi_vector_at_origin_transflector_geometric_anti_quotient(MultiVectorAtOrigin self, Transflector other) {
    return multi_vector_at_origin_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

MultiVector multi_vector_at_origin_translator_geometric_anti_quotient(MultiVectorAtOrigin self, Translator other) {
    return multi_vector_at_origin_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Origin origin_anti_scalar_geometric_anti_quotient(Origin self, AntiScalar other) {
    return origin_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVector origin_flector_geometric_anti_quotient(Origin self, Flector other) {
    return origin_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

Transflector origin_line_geometric_anti_quotient(Origin self, Line other) {
    return origin_line_geometric_anti_product(self, line_anti_inverse(other));
}

PlaneAtOrigin origin_line_at_origin_geometric_anti_quotient(Origin self, LineAtOrigin other) {
    return origin_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Flector origin_magnitude_geometric_anti_quotient(Origin self, Magnitude other) {
    return origin_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

Flector origin_motor_geometric_anti_quotient(Origin self, Motor other) {
    return origin_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector origin_multi_vector_geometric_anti_quotient(Origin self, MultiVector other) {
    return origin_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtOrigin origin_multi_vector_at_origin_geometric_anti_quotient(Origin self, MultiVectorAtOrigin other) {
    return origin_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

AntiScalar origin_origin_geometric_anti_quotient(Origin self, Origin other) {
    return origin_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

MultiVector origin_plane_geometric_anti_quotient(Origin self, Plane other) {
    return origin_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

LineAtOrigin origin_plane_at_origin_geometric_anti_quotient(Origin self, PlaneAtOrigin other) {
    return origin_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Translator origin_point_geometric_anti_quotient(Origin self, Point other) {
    return origin_point_geometric_anti_product(self, point_anti_inverse(other));
}

Flector origin_rotor_geometric_anti_quotient(Origin self, Rotor other) {
    return origin_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVector origin_transflector_geometric_anti_quotient(Origin self, Transflector other) {
    return origin_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Point origin_translator_geometric_anti_quotient(Origin self, Translator other) {
    return origin_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Plane plane_anti_scalar_geometric_anti_quotient(Plane self, AntiScalar other) {
    return plane_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVector plane_flector_geometric_anti_quotient(Plane self, Flector other) {
    return plane_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

Flector plane_line_geometric_anti_quotient(Plane self, Line other) {
    return plane_line_geometric_anti_product(self, line_anti_inverse(other));
}

Flector plane_line_at_origin_geometric_anti_quotient(Plane self, LineAtOrigin other) {
    return plane_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Transflector plane_magnitude_geometric_anti_quotient(Plane self, Magnitude other) {
    return plane_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

Flector plane_motor_geometric_anti_quotient(Plane self, Motor other) {
    return plane_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector plane_multi_vector_geometric_anti_quotient(Plane self, MultiVector other) {
    return plane_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVector plane_multi_vector_at_origin_geometric_anti_quotient(Plane self, MultiVectorAtOrigin other) {
    return plane_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

MultiVector plane_origin_geometric_anti_quotient(Plane self, Origin other) {
    return plane_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

Motor plane_plane_geometric_anti_quotient(Plane self, Plane other) {
    return plane_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

Motor plane_plane_at_origin_geometric_anti_quotient(Plane self, PlaneAtOrigin other) {
    return plane_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

MultiVector plane_point_geometric_anti_quotient(Plane self, Point other) {
    return plane_point_geometric_anti_product(self, point_anti_inverse(other));
}

Flector plane_rotor_geometric_anti_quotient(Plane self, Rotor other) {
    return plane_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVector plane_transflector_geometric_anti_quotient(Plane self, Transflector other) {
    return plane_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Transflector plane_translator_geometric_anti_quotient(Plane self, Translator other) {
    return plane_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

PlaneAtOrigin plane_at_origin_anti_scalar_geometric_anti_quotient(PlaneAtOrigin self, AntiScalar other) {
    return plane_at_origin_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVector plane_at_origin_flector_geometric_anti_quotient(PlaneAtOrigin self, Flector other) {
    return plane_at_origin_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

Flector plane_at_origin_line_geometric_anti_quotient(PlaneAtOrigin self, Line other) {
    return plane_at_origin_line_geometric_anti_product(self, line_anti_inverse(other));
}

Flector plane_at_origin_line_at_origin_geometric_anti_quotient(PlaneAtOrigin self, LineAtOrigin other) {
    return plane_at_origin_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Transflector plane_at_origin_magnitude_geometric_anti_quotient(PlaneAtOrigin self, Magnitude other) {
    return plane_at_origin_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

Flector plane_at_origin_motor_geometric_anti_quotient(PlaneAtOrigin self, Motor other) {
    return plane_at_origin_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector plane_at_origin_multi_vector_geometric_anti_quotient(PlaneAtOrigin self, MultiVector other) {
    return plane_at_origin_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_geometric_anti_quotient(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return plane_at_origin_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

LineAtOrigin plane_at_origin_origin_geometric_anti_quotient(PlaneAtOrigin self, Origin other) {
    return plane_at_origin_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

Motor plane_at_origin_plane_geometric_anti_quotient(PlaneAtOrigin self, Plane other) {
    return plane_at_origin_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

Rotor plane_at_origin_plane_at_origin_geometric_anti_quotient(PlaneAtOrigin self, PlaneAtOrigin other) {
    return plane_at_origin_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

MultiVector plane_at_origin_point_geometric_anti_quotient(PlaneAtOrigin self, Point other) {
    return plane_at_origin_point_geometric_anti_product(self, point_anti_inverse(other));
}

Flector plane_at_origin_rotor_geometric_anti_quotient(PlaneAtOrigin self, Rotor other) {
    return plane_at_origin_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVector plane_at_origin_transflector_geometric_anti_quotient(PlaneAtOrigin self, Transflector other) {
    return plane_at_origin_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Transflector plane_at_origin_translator_geometric_anti_quotient(PlaneAtOrigin self, Translator other) {
    return plane_at_origin_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Point point_anti_scalar_geometric_anti_quotient(Point self, AntiScalar other) {
    return point_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVector point_flector_geometric_anti_quotient(Point self, Flector other) {
    return point_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

Transflector point_line_geometric_anti_quotient(Point self, Line other) {
    return point_line_geometric_anti_product(self, line_anti_inverse(other));
}

Transflector point_line_at_origin_geometric_anti_quotient(Point self, LineAtOrigin other) {
    return point_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Flector point_magnitude_geometric_anti_quotient(Point self, Magnitude other) {
    return point_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

Flector point_motor_geometric_anti_quotient(Point self, Motor other) {
    return point_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector point_multi_vector_geometric_anti_quotient(Point self, MultiVector other) {
    return point_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVector point_multi_vector_at_origin_geometric_anti_quotient(Point self, MultiVectorAtOrigin other) {
    return point_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

Translator point_origin_geometric_anti_quotient(Point self, Origin other) {
    return point_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

MultiVector point_plane_geometric_anti_quotient(Point self, Plane other) {
    return point_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

MultiVector point_plane_at_origin_geometric_anti_quotient(Point self, PlaneAtOrigin other) {
    return point_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Translator point_point_geometric_anti_quotient(Point self, Point other) {
    return point_point_geometric_anti_product(self, point_anti_inverse(other));
}

Flector point_rotor_geometric_anti_quotient(Point self, Rotor other) {
    return point_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVector point_transflector_geometric_anti_quotient(Point self, Transflector other) {
    return point_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Point point_translator_geometric_anti_quotient(Point self, Translator other) {
    return point_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

PointAtInfinity point_at_infinity_anti_scalar_geometric_anti_quotient(PointAtInfinity self, AntiScalar other) {
    return point_at_infinity_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVectorAtInfinity point_at_infinity_flector_geometric_anti_quotient(PointAtInfinity self, Flector other) {
    return point_at_infinity_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

FlectorAtInfinity point_at_infinity_line_geometric_anti_quotient(PointAtInfinity self, Line other) {
    return point_at_infinity_line_geometric_anti_product(self, line_anti_inverse(other));
}

FlectorAtInfinity point_at_infinity_line_at_origin_geometric_anti_quotient(PointAtInfinity self, LineAtOrigin other) {
    return point_at_infinity_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

PointAtInfinity point_at_infinity_magnitude_geometric_anti_quotient(PointAtInfinity self, Magnitude other) {
    return point_at_infinity_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

FlectorAtInfinity point_at_infinity_motor_geometric_anti_quotient(PointAtInfinity self, Motor other) {
    return point_at_infinity_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_geometric_anti_quotient(PointAtInfinity self, MultiVector other) {
    return point_at_infinity_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_origin_geometric_anti_quotient(PointAtInfinity self, MultiVectorAtOrigin other) {
    return point_at_infinity_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

LineAtInfinity point_at_infinity_origin_geometric_anti_quotient(PointAtInfinity self, Origin other) {
    return point_at_infinity_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

MultiVectorAtInfinity point_at_infinity_plane_geometric_anti_quotient(PointAtInfinity self, Plane other) {
    return point_at_infinity_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

MultiVectorAtInfinity point_at_infinity_plane_at_origin_geometric_anti_quotient(PointAtInfinity self, PlaneAtOrigin other) {
    return point_at_infinity_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

LineAtInfinity point_at_infinity_point_geometric_anti_quotient(PointAtInfinity self, Point other) {
    return point_at_infinity_point_geometric_anti_product(self, point_anti_inverse(other));
}

FlectorAtInfinity point_at_infinity_rotor_geometric_anti_quotient(PointAtInfinity self, Rotor other) {
    return point_at_infinity_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVectorAtInfinity point_at_infinity_transflector_geometric_anti_quotient(PointAtInfinity self, Transflector other) {
    return point_at_infinity_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

PointAtInfinity point_at_infinity_translator_geometric_anti_quotient(PointAtInfinity self, Translator other) {
    return point_at_infinity_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Rotor rotor_anti_scalar_geometric_anti_quotient(Rotor self, AntiScalar other) {
    return rotor_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

Flector rotor_flector_geometric_anti_quotient(Rotor self, Flector other) {
    return rotor_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

MultiVector rotor_line_geometric_anti_quotient(Rotor self, Line other) {
    return rotor_line_geometric_anti_product(self, line_anti_inverse(other));
}

Rotor rotor_line_at_origin_geometric_anti_quotient(Rotor self, LineAtOrigin other) {
    return rotor_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

MultiVector rotor_magnitude_geometric_anti_quotient(Rotor self, Magnitude other) {
    return rotor_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVector rotor_motor_geometric_anti_quotient(Rotor self, Motor other) {
    return rotor_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector rotor_multi_vector_geometric_anti_quotient(Rotor self, MultiVector other) {
    return rotor_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_geometric_anti_quotient(Rotor self, MultiVectorAtOrigin other) {
    return rotor_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

Flector rotor_origin_geometric_anti_quotient(Rotor self, Origin other) {
    return rotor_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

Flector rotor_plane_geometric_anti_quotient(Rotor self, Plane other) {
    return rotor_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

Flector rotor_plane_at_origin_geometric_anti_quotient(Rotor self, PlaneAtOrigin other) {
    return rotor_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Flector rotor_point_geometric_anti_quotient(Rotor self, Point other) {
    return rotor_point_geometric_anti_product(self, point_anti_inverse(other));
}

Rotor rotor_rotor_geometric_anti_quotient(Rotor self, Rotor other) {
    return rotor_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

Flector rotor_transflector_geometric_anti_quotient(Rotor self, Transflector other) {
    return rotor_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

MultiVector rotor_translator_geometric_anti_quotient(Rotor self, Translator other) {
    return rotor_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Scalar scalar_anti_scalar_geometric_anti_quotient(Scalar self, AntiScalar other) {
    return scalar_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

FlectorAtInfinity scalar_flector_geometric_anti_quotient(Scalar self, Flector other) {
    return scalar_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

LineAtInfinity scalar_line_geometric_anti_quotient(Scalar self, Line other) {
    return scalar_line_geometric_anti_product(self, line_anti_inverse(other));
}

LineAtInfinity scalar_line_at_origin_geometric_anti_quotient(Scalar self, LineAtOrigin other) {
    return scalar_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Scalar scalar_magnitude_geometric_anti_quotient(Scalar self, Magnitude other) {
    return scalar_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVectorAtInfinity scalar_motor_geometric_anti_quotient(Scalar self, Motor other) {
    return scalar_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVectorAtInfinity scalar_multi_vector_geometric_anti_quotient(Scalar self, MultiVector other) {
    return scalar_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVectorAtInfinity scalar_multi_vector_at_origin_geometric_anti_quotient(Scalar self, MultiVectorAtOrigin other) {
    return scalar_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

Horizon scalar_origin_geometric_anti_quotient(Scalar self, Origin other) {
    return scalar_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

PointAtInfinity scalar_plane_geometric_anti_quotient(Scalar self, Plane other) {
    return scalar_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

PointAtInfinity scalar_plane_at_origin_geometric_anti_quotient(Scalar self, PlaneAtOrigin other) {
    return scalar_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Horizon scalar_point_geometric_anti_quotient(Scalar self, Point other) {
    return scalar_point_geometric_anti_product(self, point_anti_inverse(other));
}

MultiVectorAtInfinity scalar_rotor_geometric_anti_quotient(Scalar self, Rotor other) {
    return scalar_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

PointAtInfinity scalar_transflector_geometric_anti_quotient(Scalar self, Transflector other) {
    return scalar_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Scalar scalar_translator_geometric_anti_quotient(Scalar self, Translator other) {
    return scalar_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Transflector transflector_anti_scalar_geometric_anti_quotient(Transflector self, AntiScalar other) {
    return transflector_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

MultiVector transflector_flector_geometric_anti_quotient(Transflector self, Flector other) {
    return transflector_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

Flector transflector_line_geometric_anti_quotient(Transflector self, Line other) {
    return transflector_line_geometric_anti_product(self, line_anti_inverse(other));
}

Flector transflector_line_at_origin_geometric_anti_quotient(Transflector self, LineAtOrigin other) {
    return transflector_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

Transflector transflector_magnitude_geometric_anti_quotient(Transflector self, Magnitude other) {
    return transflector_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

Flector transflector_motor_geometric_anti_quotient(Transflector self, Motor other) {
    return transflector_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector transflector_multi_vector_geometric_anti_quotient(Transflector self, MultiVector other) {
    return transflector_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVector transflector_multi_vector_at_origin_geometric_anti_quotient(Transflector self, MultiVectorAtOrigin other) {
    return transflector_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

MultiVector transflector_origin_geometric_anti_quotient(Transflector self, Origin other) {
    return transflector_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

MultiVector transflector_plane_geometric_anti_quotient(Transflector self, Plane other) {
    return transflector_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

MultiVector transflector_plane_at_origin_geometric_anti_quotient(Transflector self, PlaneAtOrigin other) {
    return transflector_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

MultiVector transflector_point_geometric_anti_quotient(Transflector self, Point other) {
    return transflector_point_geometric_anti_product(self, point_anti_inverse(other));
}

Flector transflector_rotor_geometric_anti_quotient(Transflector self, Rotor other) {
    return transflector_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

MultiVector transflector_transflector_geometric_anti_quotient(Transflector self, Transflector other) {
    return transflector_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Transflector transflector_translator_geometric_anti_quotient(Transflector self, Translator other) {
    return transflector_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Translator translator_anti_scalar_geometric_anti_quotient(Translator self, AntiScalar other) {
    return translator_anti_scalar_geometric_anti_product(self, anti_scalar_anti_inverse(other));
}

Flector translator_flector_geometric_anti_quotient(Translator self, Flector other) {
    return translator_flector_geometric_anti_product(self, flector_anti_inverse(other));
}

MultiVector translator_line_geometric_anti_quotient(Translator self, Line other) {
    return translator_line_geometric_anti_product(self, line_anti_inverse(other));
}

MultiVector translator_line_at_origin_geometric_anti_quotient(Translator self, LineAtOrigin other) {
    return translator_line_at_origin_geometric_anti_product(self, line_at_origin_anti_inverse(other));
}

MultiVector translator_magnitude_geometric_anti_quotient(Translator self, Magnitude other) {
    return translator_magnitude_geometric_anti_product(self, magnitude_anti_inverse(other));
}

MultiVector translator_motor_geometric_anti_quotient(Translator self, Motor other) {
    return translator_motor_geometric_anti_product(self, motor_anti_inverse(other));
}

MultiVector translator_multi_vector_geometric_anti_quotient(Translator self, MultiVector other) {
    return translator_multi_vector_geometric_anti_product(self, multi_vector_anti_inverse(other));
}

MultiVector translator_multi_vector_at_origin_geometric_anti_quotient(Translator self, MultiVectorAtOrigin other) {
    return translator_multi_vector_at_origin_geometric_anti_product(self, multi_vector_at_origin_anti_inverse(other));
}

Point translator_origin_geometric_anti_quotient(Translator self, Origin other) {
    return translator_origin_geometric_anti_product(self, origin_anti_inverse(other));
}

Transflector translator_plane_geometric_anti_quotient(Translator self, Plane other) {
    return translator_plane_geometric_anti_product(self, plane_anti_inverse(other));
}

Transflector translator_plane_at_origin_geometric_anti_quotient(Translator self, PlaneAtOrigin other) {
    return translator_plane_at_origin_geometric_anti_product(self, plane_at_origin_anti_inverse(other));
}

Point translator_point_geometric_anti_quotient(Translator self, Point other) {
    return translator_point_geometric_anti_product(self, point_anti_inverse(other));
}

MultiVector translator_rotor_geometric_anti_quotient(Translator self, Rotor other) {
    return translator_rotor_geometric_anti_product(self, rotor_anti_inverse(other));
}

Transflector translator_transflector_geometric_anti_quotient(Translator self, Transflector other) {
    return translator_transflector_geometric_anti_product(self, transflector_anti_inverse(other));
}

Translator translator_translator_geometric_anti_quotient(Translator self, Translator other) {
    return translator_translator_geometric_anti_product(self, translator_anti_inverse(other));
}

Flector anti_scalar_flector_geometric_quotient(AntiScalar self, Flector other) {
    return anti_scalar_flector_geometric_product(self, flector_inverse(other));
}

Flector anti_scalar_flector_at_infinity_geometric_quotient(AntiScalar self, FlectorAtInfinity other) {
    return anti_scalar_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

Origin anti_scalar_horizon_geometric_quotient(AntiScalar self, Horizon other) {
    return anti_scalar_horizon_geometric_product(self, horizon_inverse(other));
}

LineAtOrigin anti_scalar_line_geometric_quotient(AntiScalar self, Line other) {
    return anti_scalar_line_geometric_product(self, line_inverse(other));
}

LineAtOrigin anti_scalar_line_at_infinity_geometric_quotient(AntiScalar self, LineAtInfinity other) {
    return anti_scalar_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

AntiScalar anti_scalar_magnitude_geometric_quotient(AntiScalar self, Magnitude other) {
    return anti_scalar_magnitude_geometric_product(self, magnitude_inverse(other));
}

LineAtOrigin anti_scalar_motor_geometric_quotient(AntiScalar self, Motor other) {
    return anti_scalar_motor_geometric_product(self, motor_inverse(other));
}

MultiVectorAtOrigin anti_scalar_multi_vector_geometric_quotient(AntiScalar self, MultiVector other) {
    return anti_scalar_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtOrigin anti_scalar_multi_vector_at_infinity_geometric_quotient(AntiScalar self, MultiVectorAtInfinity other) {
    return anti_scalar_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Origin anti_scalar_plane_geometric_quotient(AntiScalar self, Plane other) {
    return anti_scalar_plane_geometric_product(self, plane_inverse(other));
}

PlaneAtOrigin anti_scalar_point_geometric_quotient(AntiScalar self, Point other) {
    return anti_scalar_point_geometric_product(self, point_inverse(other));
}

PlaneAtOrigin anti_scalar_point_at_infinity_geometric_quotient(AntiScalar self, PointAtInfinity other) {
    return anti_scalar_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

AntiScalar anti_scalar_scalar_geometric_quotient(AntiScalar self, Scalar other) {
    return anti_scalar_scalar_geometric_product(self, scalar_inverse(other));
}

Flector anti_scalar_transflector_geometric_quotient(AntiScalar self, Transflector other) {
    return anti_scalar_transflector_geometric_product(self, transflector_inverse(other));
}

LineAtOrigin anti_scalar_translator_geometric_quotient(AntiScalar self, Translator other) {
    return anti_scalar_translator_geometric_product(self, translator_inverse(other));
}

MultiVector flector_flector_geometric_quotient(Flector self, Flector other) {
    return flector_flector_geometric_product(self, flector_inverse(other));
}

MultiVector flector_flector_at_infinity_geometric_quotient(Flector self, FlectorAtInfinity other) {
    return flector_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

MultiVector flector_horizon_geometric_quotient(Flector self, Horizon other) {
    return flector_horizon_geometric_product(self, horizon_inverse(other));
}

Flector flector_line_geometric_quotient(Flector self, Line other) {
    return flector_line_geometric_product(self, line_inverse(other));
}

Flector flector_line_at_infinity_geometric_quotient(Flector self, LineAtInfinity other) {
    return flector_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Flector flector_magnitude_geometric_quotient(Flector self, Magnitude other) {
    return flector_magnitude_geometric_product(self, magnitude_inverse(other));
}

Flector flector_motor_geometric_quotient(Flector self, Motor other) {
    return flector_motor_geometric_product(self, motor_inverse(other));
}

MultiVector flector_multi_vector_geometric_quotient(Flector self, MultiVector other) {
    return flector_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVector flector_multi_vector_at_infinity_geometric_quotient(Flector self, MultiVectorAtInfinity other) {
    return flector_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

MultiVector flector_plane_geometric_quotient(Flector self, Plane other) {
    return flector_plane_geometric_product(self, plane_inverse(other));
}

MultiVector flector_point_geometric_quotient(Flector self, Point other) {
    return flector_point_geometric_product(self, point_inverse(other));
}

MultiVector flector_point_at_infinity_geometric_quotient(Flector self, PointAtInfinity other) {
    return flector_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Flector flector_scalar_geometric_quotient(Flector self, Scalar other) {
    return flector_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVector flector_transflector_geometric_quotient(Flector self, Transflector other) {
    return flector_transflector_geometric_product(self, transflector_inverse(other));
}

Flector flector_translator_geometric_quotient(Flector self, Translator other) {
    return flector_translator_geometric_product(self, translator_inverse(other));
}

MultiVector flector_at_infinity_flector_geometric_quotient(FlectorAtInfinity self, Flector other) {
    return flector_at_infinity_flector_geometric_product(self, flector_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_flector_at_infinity_geometric_quotient(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_horizon_geometric_quotient(FlectorAtInfinity self, Horizon other) {
    return flector_at_infinity_horizon_geometric_product(self, horizon_inverse(other));
}

Flector flector_at_infinity_line_geometric_quotient(FlectorAtInfinity self, Line other) {
    return flector_at_infinity_line_geometric_product(self, line_inverse(other));
}

FlectorAtInfinity flector_at_infinity_line_at_infinity_geometric_quotient(FlectorAtInfinity self, LineAtInfinity other) {
    return flector_at_infinity_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Flector flector_at_infinity_magnitude_geometric_quotient(FlectorAtInfinity self, Magnitude other) {
    return flector_at_infinity_magnitude_geometric_product(self, magnitude_inverse(other));
}

Flector flector_at_infinity_motor_geometric_quotient(FlectorAtInfinity self, Motor other) {
    return flector_at_infinity_motor_geometric_product(self, motor_inverse(other));
}

MultiVector flector_at_infinity_multi_vector_geometric_quotient(FlectorAtInfinity self, MultiVector other) {
    return flector_at_infinity_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_geometric_quotient(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return flector_at_infinity_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

MultiVector flector_at_infinity_plane_geometric_quotient(FlectorAtInfinity self, Plane other) {
    return flector_at_infinity_plane_geometric_product(self, plane_inverse(other));
}

MultiVector flector_at_infinity_point_geometric_quotient(FlectorAtInfinity self, Point other) {
    return flector_at_infinity_point_geometric_product(self, point_inverse(other));
}

MultiVectorAtInfinity flector_at_infinity_point_at_infinity_geometric_quotient(FlectorAtInfinity self, PointAtInfinity other) {
    return flector_at_infinity_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

FlectorAtInfinity flector_at_infinity_scalar_geometric_quotient(FlectorAtInfinity self, Scalar other) {
    return flector_at_infinity_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVector flector_at_infinity_transflector_geometric_quotient(FlectorAtInfinity self, Transflector other) {
    return flector_at_infinity_transflector_geometric_product(self, transflector_inverse(other));
}

Flector flector_at_infinity_translator_geometric_quotient(FlectorAtInfinity self, Translator other) {
    return flector_at_infinity_translator_geometric_product(self, translator_inverse(other));
}

MultiVector horizon_flector_geometric_quotient(Horizon self, Flector other) {
    return horizon_flector_geometric_product(self, flector_inverse(other));
}

MultiVectorAtInfinity horizon_flector_at_infinity_geometric_quotient(Horizon self, FlectorAtInfinity other) {
    return horizon_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

Scalar horizon_horizon_geometric_quotient(Horizon self, Horizon other) {
    return horizon_horizon_geometric_product(self, horizon_inverse(other));
}

Transflector horizon_line_geometric_quotient(Horizon self, Line other) {
    return horizon_line_geometric_product(self, line_inverse(other));
}

PointAtInfinity horizon_line_at_infinity_geometric_quotient(Horizon self, LineAtInfinity other) {
    return horizon_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Flector horizon_magnitude_geometric_quotient(Horizon self, Magnitude other) {
    return horizon_magnitude_geometric_product(self, magnitude_inverse(other));
}

Flector horizon_motor_geometric_quotient(Horizon self, Motor other) {
    return horizon_motor_geometric_product(self, motor_inverse(other));
}

MultiVector horizon_multi_vector_geometric_quotient(Horizon self, MultiVector other) {
    return horizon_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtInfinity horizon_multi_vector_at_infinity_geometric_quotient(Horizon self, MultiVectorAtInfinity other) {
    return horizon_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

MultiVector horizon_plane_geometric_quotient(Horizon self, Plane other) {
    return horizon_plane_geometric_product(self, plane_inverse(other));
}

Translator horizon_point_geometric_quotient(Horizon self, Point other) {
    return horizon_point_geometric_product(self, point_inverse(other));
}

LineAtInfinity horizon_point_at_infinity_geometric_quotient(Horizon self, PointAtInfinity other) {
    return horizon_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Horizon horizon_scalar_geometric_quotient(Horizon self, Scalar other) {
    return horizon_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVector horizon_transflector_geometric_quotient(Horizon self, Transflector other) {
    return horizon_transflector_geometric_product(self, transflector_inverse(other));
}

Point horizon_translator_geometric_quotient(Horizon self, Translator other) {
    return horizon_translator_geometric_product(self, translator_inverse(other));
}

Flector line_flector_geometric_quotient(Line self, Flector other) {
    return line_flector_geometric_product(self, flector_inverse(other));
}

Flector line_flector_at_infinity_geometric_quotient(Line self, FlectorAtInfinity other) {
    return line_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

Transflector line_horizon_geometric_quotient(Line self, Horizon other) {
    return line_horizon_geometric_product(self, horizon_inverse(other));
}

MultiVector line_line_geometric_quotient(Line self, Line other) {
    return line_line_geometric_product(self, line_inverse(other));
}

MultiVector line_line_at_infinity_geometric_quotient(Line self, LineAtInfinity other) {
    return line_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Line line_magnitude_geometric_quotient(Line self, Magnitude other) {
    return line_magnitude_geometric_product(self, magnitude_inverse(other));
}

MultiVector line_motor_geometric_quotient(Line self, Motor other) {
    return line_motor_geometric_product(self, motor_inverse(other));
}

MultiVector line_multi_vector_geometric_quotient(Line self, MultiVector other) {
    return line_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVector line_multi_vector_at_infinity_geometric_quotient(Line self, MultiVectorAtInfinity other) {
    return line_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Flector line_plane_geometric_quotient(Line self, Plane other) {
    return line_plane_geometric_product(self, plane_inverse(other));
}

Flector line_point_geometric_quotient(Line self, Point other) {
    return line_point_geometric_product(self, point_inverse(other));
}

Flector line_point_at_infinity_geometric_quotient(Line self, PointAtInfinity other) {
    return line_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Line line_scalar_geometric_quotient(Line self, Scalar other) {
    return line_scalar_geometric_product(self, scalar_inverse(other));
}

Flector line_transflector_geometric_quotient(Line self, Transflector other) {
    return line_transflector_geometric_product(self, transflector_inverse(other));
}

MultiVector line_translator_geometric_quotient(Line self, Translator other) {
    return line_translator_geometric_product(self, translator_inverse(other));
}

Flector line_at_infinity_flector_geometric_quotient(LineAtInfinity self, Flector other) {
    return line_at_infinity_flector_geometric_product(self, flector_inverse(other));
}

FlectorAtInfinity line_at_infinity_flector_at_infinity_geometric_quotient(LineAtInfinity self, FlectorAtInfinity other) {
    return line_at_infinity_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

PointAtInfinity line_at_infinity_horizon_geometric_quotient(LineAtInfinity self, Horizon other) {
    return line_at_infinity_horizon_geometric_product(self, horizon_inverse(other));
}

MultiVector line_at_infinity_line_geometric_quotient(LineAtInfinity self, Line other) {
    return line_at_infinity_line_geometric_product(self, line_inverse(other));
}

MultiVectorAtInfinity line_at_infinity_line_at_infinity_geometric_quotient(LineAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Line line_at_infinity_magnitude_geometric_quotient(LineAtInfinity self, Magnitude other) {
    return line_at_infinity_magnitude_geometric_product(self, magnitude_inverse(other));
}

MultiVector line_at_infinity_motor_geometric_quotient(LineAtInfinity self, Motor other) {
    return line_at_infinity_motor_geometric_product(self, motor_inverse(other));
}

MultiVector line_at_infinity_multi_vector_geometric_quotient(LineAtInfinity self, MultiVector other) {
    return line_at_infinity_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_geometric_quotient(LineAtInfinity self, MultiVectorAtInfinity other) {
    return line_at_infinity_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Flector line_at_infinity_plane_geometric_quotient(LineAtInfinity self, Plane other) {
    return line_at_infinity_plane_geometric_product(self, plane_inverse(other));
}

Transflector line_at_infinity_point_geometric_quotient(LineAtInfinity self, Point other) {
    return line_at_infinity_point_geometric_product(self, point_inverse(other));
}

FlectorAtInfinity line_at_infinity_point_at_infinity_geometric_quotient(LineAtInfinity self, PointAtInfinity other) {
    return line_at_infinity_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

LineAtInfinity line_at_infinity_scalar_geometric_quotient(LineAtInfinity self, Scalar other) {
    return line_at_infinity_scalar_geometric_product(self, scalar_inverse(other));
}

Flector line_at_infinity_transflector_geometric_quotient(LineAtInfinity self, Transflector other) {
    return line_at_infinity_transflector_geometric_product(self, transflector_inverse(other));
}

MultiVector line_at_infinity_translator_geometric_quotient(LineAtInfinity self, Translator other) {
    return line_at_infinity_translator_geometric_product(self, translator_inverse(other));
}

Flector line_at_origin_flector_geometric_quotient(LineAtOrigin self, Flector other) {
    return line_at_origin_flector_geometric_product(self, flector_inverse(other));
}

Flector line_at_origin_flector_at_infinity_geometric_quotient(LineAtOrigin self, FlectorAtInfinity other) {
    return line_at_origin_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

PlaneAtOrigin line_at_origin_horizon_geometric_quotient(LineAtOrigin self, Horizon other) {
    return line_at_origin_horizon_geometric_product(self, horizon_inverse(other));
}

Rotor line_at_origin_line_geometric_quotient(LineAtOrigin self, Line other) {
    return line_at_origin_line_geometric_product(self, line_inverse(other));
}

Rotor line_at_origin_line_at_infinity_geometric_quotient(LineAtOrigin self, LineAtInfinity other) {
    return line_at_origin_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

LineAtOrigin line_at_origin_magnitude_geometric_quotient(LineAtOrigin self, Magnitude other) {
    return line_at_origin_magnitude_geometric_product(self, magnitude_inverse(other));
}

Rotor line_at_origin_motor_geometric_quotient(LineAtOrigin self, Motor other) {
    return line_at_origin_motor_geometric_product(self, motor_inverse(other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_geometric_quotient(LineAtOrigin self, MultiVector other) {
    return line_at_origin_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_infinity_geometric_quotient(LineAtOrigin self, MultiVectorAtInfinity other) {
    return line_at_origin_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

PlaneAtOrigin line_at_origin_plane_geometric_quotient(LineAtOrigin self, Plane other) {
    return line_at_origin_plane_geometric_product(self, plane_inverse(other));
}

Flector line_at_origin_point_geometric_quotient(LineAtOrigin self, Point other) {
    return line_at_origin_point_geometric_product(self, point_inverse(other));
}

Flector line_at_origin_point_at_infinity_geometric_quotient(LineAtOrigin self, PointAtInfinity other) {
    return line_at_origin_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

LineAtOrigin line_at_origin_scalar_geometric_quotient(LineAtOrigin self, Scalar other) {
    return line_at_origin_scalar_geometric_product(self, scalar_inverse(other));
}

Flector line_at_origin_transflector_geometric_quotient(LineAtOrigin self, Transflector other) {
    return line_at_origin_transflector_geometric_product(self, transflector_inverse(other));
}

Rotor line_at_origin_translator_geometric_quotient(LineAtOrigin self, Translator other) {
    return line_at_origin_translator_geometric_product(self, translator_inverse(other));
}

Flector magnitude_flector_geometric_quotient(Magnitude self, Flector other) {
    return magnitude_flector_geometric_product(self, flector_inverse(other));
}

Flector magnitude_flector_at_infinity_geometric_quotient(Magnitude self, FlectorAtInfinity other) {
    return magnitude_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

Flector magnitude_horizon_geometric_quotient(Magnitude self, Horizon other) {
    return magnitude_horizon_geometric_product(self, horizon_inverse(other));
}

Line magnitude_line_geometric_quotient(Magnitude self, Line other) {
    return magnitude_line_geometric_product(self, line_inverse(other));
}

Line magnitude_line_at_infinity_geometric_quotient(Magnitude self, LineAtInfinity other) {
    return magnitude_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Magnitude magnitude_magnitude_geometric_quotient(Magnitude self, Magnitude other) {
    return magnitude_magnitude_geometric_product(self, magnitude_inverse(other));
}

Motor magnitude_motor_geometric_quotient(Magnitude self, Motor other) {
    return magnitude_motor_geometric_product(self, motor_inverse(other));
}

MultiVector magnitude_multi_vector_geometric_quotient(Magnitude self, MultiVector other) {
    return magnitude_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVector magnitude_multi_vector_at_infinity_geometric_quotient(Magnitude self, MultiVectorAtInfinity other) {
    return magnitude_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Flector magnitude_plane_geometric_quotient(Magnitude self, Plane other) {
    return magnitude_plane_geometric_product(self, plane_inverse(other));
}

Flector magnitude_point_geometric_quotient(Magnitude self, Point other) {
    return magnitude_point_geometric_product(self, point_inverse(other));
}

Transflector magnitude_point_at_infinity_geometric_quotient(Magnitude self, PointAtInfinity other) {
    return magnitude_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Magnitude magnitude_scalar_geometric_quotient(Magnitude self, Scalar other) {
    return magnitude_scalar_geometric_product(self, scalar_inverse(other));
}

Flector magnitude_transflector_geometric_quotient(Magnitude self, Transflector other) {
    return magnitude_transflector_geometric_product(self, transflector_inverse(other));
}

Motor magnitude_translator_geometric_quotient(Magnitude self, Translator other) {
    return magnitude_translator_geometric_product(self, translator_inverse(other));
}

Flector motor_flector_geometric_quotient(Motor self, Flector other) {
    return motor_flector_geometric_product(self, flector_inverse(other));
}

Flector motor_flector_at_infinity_geometric_quotient(Motor self, FlectorAtInfinity other) {
    return motor_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

Flector motor_horizon_geometric_quotient(Motor self, Horizon other) {
    return motor_horizon_geometric_product(self, horizon_inverse(other));
}

MultiVector motor_line_geometric_quotient(Motor self, Line other) {
    return motor_line_geometric_product(self, line_inverse(other));
}

MultiVector motor_line_at_infinity_geometric_quotient(Motor self, LineAtInfinity other) {
    return motor_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Motor motor_magnitude_geometric_quotient(Motor self, Magnitude other) {
    return motor_magnitude_geometric_product(self, magnitude_inverse(other));
}

MultiVector motor_motor_geometric_quotient(Motor self, Motor other) {
    return motor_motor_geometric_product(self, motor_inverse(other));
}

MultiVector motor_multi_vector_geometric_quotient(Motor self, MultiVector other) {
    return motor_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVector motor_multi_vector_at_infinity_geometric_quotient(Motor self, MultiVectorAtInfinity other) {
    return motor_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Flector motor_plane_geometric_quotient(Motor self, Plane other) {
    return motor_plane_geometric_product(self, plane_inverse(other));
}

Flector motor_point_geometric_quotient(Motor self, Point other) {
    return motor_point_geometric_product(self, point_inverse(other));
}

Flector motor_point_at_infinity_geometric_quotient(Motor self, PointAtInfinity other) {
    return motor_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Motor motor_scalar_geometric_quotient(Motor self, Scalar other) {
    return motor_scalar_geometric_product(self, scalar_inverse(other));
}

Flector motor_transflector_geometric_quotient(Motor self, Transflector other) {
    return motor_transflector_geometric_product(self, transflector_inverse(other));
}

MultiVector motor_translator_geometric_quotient(Motor self, Translator other) {
    return motor_translator_geometric_product(self, translator_inverse(other));
}

MultiVector multi_vector_flector_geometric_quotient(MultiVector self, Flector other) {
    return multi_vector_flector_geometric_product(self, flector_inverse(other));
}

MultiVector multi_vector_flector_at_infinity_geometric_quotient(MultiVector self, FlectorAtInfinity other) {
    return multi_vector_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

MultiVector multi_vector_horizon_geometric_quotient(MultiVector self, Horizon other) {
    return multi_vector_horizon_geometric_product(self, horizon_inverse(other));
}

MultiVector multi_vector_line_geometric_quotient(MultiVector self, Line other) {
    return multi_vector_line_geometric_product(self, line_inverse(other));
}

MultiVector multi_vector_line_at_infinity_geometric_quotient(MultiVector self, LineAtInfinity other) {
    return multi_vector_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

MultiVector multi_vector_magnitude_geometric_quotient(MultiVector self, Magnitude other) {
    return multi_vector_magnitude_geometric_product(self, magnitude_inverse(other));
}

MultiVector multi_vector_motor_geometric_quotient(MultiVector self, Motor other) {
    return multi_vector_motor_geometric_product(self, motor_inverse(other));
}

MultiVector multi_vector_multi_vector_geometric_quotient(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVector multi_vector_multi_vector_at_infinity_geometric_quotient(MultiVector self, MultiVectorAtInfinity other) {
    return multi_vector_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

MultiVector multi_vector_plane_geometric_quotient(MultiVector self, Plane other) {
    return multi_vector_plane_geometric_product(self, plane_inverse(other));
}

MultiVector multi_vector_point_geometric_quotient(MultiVector self, Point other) {
    return multi_vector_point_geometric_product(self, point_inverse(other));
}

MultiVector multi_vector_point_at_infinity_geometric_quotient(MultiVector self, PointAtInfinity other) {
    return multi_vector_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

MultiVector multi_vector_scalar_geometric_quotient(MultiVector self, Scalar other) {
    return multi_vector_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVector multi_vector_transflector_geometric_quotient(MultiVector self, Transflector other) {
    return multi_vector_transflector_geometric_product(self, transflector_inverse(other));
}

MultiVector multi_vector_translator_geometric_quotient(MultiVector self, Translator other) {
    return multi_vector_translator_geometric_product(self, translator_inverse(other));
}

MultiVector multi_vector_at_infinity_flector_geometric_quotient(MultiVectorAtInfinity self, Flector other) {
    return multi_vector_at_infinity_flector_geometric_product(self, flector_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_geometric_quotient(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_horizon_geometric_quotient(MultiVectorAtInfinity self, Horizon other) {
    return multi_vector_at_infinity_horizon_geometric_product(self, horizon_inverse(other));
}

MultiVector multi_vector_at_infinity_line_geometric_quotient(MultiVectorAtInfinity self, Line other) {
    return multi_vector_at_infinity_line_geometric_product(self, line_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_geometric_quotient(MultiVectorAtInfinity self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

MultiVector multi_vector_at_infinity_magnitude_geometric_quotient(MultiVectorAtInfinity self, Magnitude other) {
    return multi_vector_at_infinity_magnitude_geometric_product(self, magnitude_inverse(other));
}

MultiVector multi_vector_at_infinity_motor_geometric_quotient(MultiVectorAtInfinity self, Motor other) {
    return multi_vector_at_infinity_motor_geometric_product(self, motor_inverse(other));
}

MultiVector multi_vector_at_infinity_multi_vector_geometric_quotient(MultiVectorAtInfinity self, MultiVector other) {
    return multi_vector_at_infinity_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_geometric_quotient(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

MultiVector multi_vector_at_infinity_plane_geometric_quotient(MultiVectorAtInfinity self, Plane other) {
    return multi_vector_at_infinity_plane_geometric_product(self, plane_inverse(other));
}

MultiVector multi_vector_at_infinity_point_geometric_quotient(MultiVectorAtInfinity self, Point other) {
    return multi_vector_at_infinity_point_geometric_product(self, point_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_geometric_quotient(MultiVectorAtInfinity self, PointAtInfinity other) {
    return multi_vector_at_infinity_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_scalar_geometric_quotient(MultiVectorAtInfinity self, Scalar other) {
    return multi_vector_at_infinity_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVector multi_vector_at_infinity_transflector_geometric_quotient(MultiVectorAtInfinity self, Transflector other) {
    return multi_vector_at_infinity_transflector_geometric_product(self, transflector_inverse(other));
}

MultiVector multi_vector_at_infinity_translator_geometric_quotient(MultiVectorAtInfinity self, Translator other) {
    return multi_vector_at_infinity_translator_geometric_product(self, translator_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_geometric_quotient(MultiVectorAtOrigin self, Flector other) {
    return multi_vector_at_origin_flector_geometric_product(self, flector_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_at_infinity_geometric_quotient(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multi_vector_at_origin_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_horizon_geometric_quotient(MultiVectorAtOrigin self, Horizon other) {
    return multi_vector_at_origin_horizon_geometric_product(self, horizon_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_geometric_quotient(MultiVectorAtOrigin self, Line other) {
    return multi_vector_at_origin_line_geometric_product(self, line_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_infinity_geometric_quotient(MultiVectorAtOrigin self, LineAtInfinity other) {
    return multi_vector_at_origin_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_magnitude_geometric_quotient(MultiVectorAtOrigin self, Magnitude other) {
    return multi_vector_at_origin_magnitude_geometric_product(self, magnitude_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_motor_geometric_quotient(MultiVectorAtOrigin self, Motor other) {
    return multi_vector_at_origin_motor_geometric_product(self, motor_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_geometric_quotient(MultiVectorAtOrigin self, MultiVector other) {
    return multi_vector_at_origin_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_infinity_geometric_quotient(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multi_vector_at_origin_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_plane_geometric_quotient(MultiVectorAtOrigin self, Plane other) {
    return multi_vector_at_origin_plane_geometric_product(self, plane_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_point_geometric_quotient(MultiVectorAtOrigin self, Point other) {
    return multi_vector_at_origin_point_geometric_product(self, point_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_point_at_infinity_geometric_quotient(MultiVectorAtOrigin self, PointAtInfinity other) {
    return multi_vector_at_origin_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_scalar_geometric_quotient(MultiVectorAtOrigin self, Scalar other) {
    return multi_vector_at_origin_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_transflector_geometric_quotient(MultiVectorAtOrigin self, Transflector other) {
    return multi_vector_at_origin_transflector_geometric_product(self, transflector_inverse(other));
}

MultiVectorAtOrigin multi_vector_at_origin_translator_geometric_quotient(MultiVectorAtOrigin self, Translator other) {
    return multi_vector_at_origin_translator_geometric_product(self, translator_inverse(other));
}

Rotor origin_flector_geometric_quotient(Origin self, Flector other) {
    return origin_flector_geometric_product(self, flector_inverse(other));
}

Rotor origin_flector_at_infinity_geometric_quotient(Origin self, FlectorAtInfinity other) {
    return origin_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

AntiScalar origin_horizon_geometric_quotient(Origin self, Horizon other) {
    return origin_horizon_geometric_product(self, horizon_inverse(other));
}

PlaneAtOrigin origin_line_geometric_quotient(Origin self, Line other) {
    return origin_line_geometric_product(self, line_inverse(other));
}

PlaneAtOrigin origin_line_at_infinity_geometric_quotient(Origin self, LineAtInfinity other) {
    return origin_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Origin origin_magnitude_geometric_quotient(Origin self, Magnitude other) {
    return origin_magnitude_geometric_product(self, magnitude_inverse(other));
}

PlaneAtOrigin origin_motor_geometric_quotient(Origin self, Motor other) {
    return origin_motor_geometric_product(self, motor_inverse(other));
}

MultiVectorAtOrigin origin_multi_vector_geometric_quotient(Origin self, MultiVector other) {
    return origin_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtOrigin origin_multi_vector_at_infinity_geometric_quotient(Origin self, MultiVectorAtInfinity other) {
    return origin_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

AntiScalar origin_plane_geometric_quotient(Origin self, Plane other) {
    return origin_plane_geometric_product(self, plane_inverse(other));
}

LineAtOrigin origin_point_geometric_quotient(Origin self, Point other) {
    return origin_point_geometric_product(self, point_inverse(other));
}

LineAtOrigin origin_point_at_infinity_geometric_quotient(Origin self, PointAtInfinity other) {
    return origin_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Origin origin_scalar_geometric_quotient(Origin self, Scalar other) {
    return origin_scalar_geometric_product(self, scalar_inverse(other));
}

Rotor origin_transflector_geometric_quotient(Origin self, Transflector other) {
    return origin_transflector_geometric_product(self, transflector_inverse(other));
}

PlaneAtOrigin origin_translator_geometric_quotient(Origin self, Translator other) {
    return origin_translator_geometric_product(self, translator_inverse(other));
}

MultiVector plane_flector_geometric_quotient(Plane self, Flector other) {
    return plane_flector_geometric_product(self, flector_inverse(other));
}

MultiVector plane_flector_at_infinity_geometric_quotient(Plane self, FlectorAtInfinity other) {
    return plane_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

MultiVector plane_horizon_geometric_quotient(Plane self, Horizon other) {
    return plane_horizon_geometric_product(self, horizon_inverse(other));
}

Flector plane_line_geometric_quotient(Plane self, Line other) {
    return plane_line_geometric_product(self, line_inverse(other));
}

Flector plane_line_at_infinity_geometric_quotient(Plane self, LineAtInfinity other) {
    return plane_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Flector plane_magnitude_geometric_quotient(Plane self, Magnitude other) {
    return plane_magnitude_geometric_product(self, magnitude_inverse(other));
}

Flector plane_motor_geometric_quotient(Plane self, Motor other) {
    return plane_motor_geometric_product(self, motor_inverse(other));
}

MultiVector plane_multi_vector_geometric_quotient(Plane self, MultiVector other) {
    return plane_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVector plane_multi_vector_at_infinity_geometric_quotient(Plane self, MultiVectorAtInfinity other) {
    return plane_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

MultiVector plane_plane_geometric_quotient(Plane self, Plane other) {
    return plane_plane_geometric_product(self, plane_inverse(other));
}

Motor plane_point_geometric_quotient(Plane self, Point other) {
    return plane_point_geometric_product(self, point_inverse(other));
}

Motor plane_point_at_infinity_geometric_quotient(Plane self, PointAtInfinity other) {
    return plane_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Plane plane_scalar_geometric_quotient(Plane self, Scalar other) {
    return plane_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVector plane_transflector_geometric_quotient(Plane self, Transflector other) {
    return plane_transflector_geometric_product(self, transflector_inverse(other));
}

Flector plane_translator_geometric_quotient(Plane self, Translator other) {
    return plane_translator_geometric_product(self, translator_inverse(other));
}

Rotor plane_at_origin_flector_geometric_quotient(PlaneAtOrigin self, Flector other) {
    return plane_at_origin_flector_geometric_product(self, flector_inverse(other));
}

Rotor plane_at_origin_flector_at_infinity_geometric_quotient(PlaneAtOrigin self, FlectorAtInfinity other) {
    return plane_at_origin_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

LineAtOrigin plane_at_origin_horizon_geometric_quotient(PlaneAtOrigin self, Horizon other) {
    return plane_at_origin_horizon_geometric_product(self, horizon_inverse(other));
}

Flector plane_at_origin_line_geometric_quotient(PlaneAtOrigin self, Line other) {
    return plane_at_origin_line_geometric_product(self, line_inverse(other));
}

Flector plane_at_origin_line_at_infinity_geometric_quotient(PlaneAtOrigin self, LineAtInfinity other) {
    return plane_at_origin_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

PlaneAtOrigin plane_at_origin_magnitude_geometric_quotient(PlaneAtOrigin self, Magnitude other) {
    return plane_at_origin_magnitude_geometric_product(self, magnitude_inverse(other));
}

Flector plane_at_origin_motor_geometric_quotient(PlaneAtOrigin self, Motor other) {
    return plane_at_origin_motor_geometric_product(self, motor_inverse(other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_geometric_quotient(PlaneAtOrigin self, MultiVector other) {
    return plane_at_origin_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_infinity_geometric_quotient(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return plane_at_origin_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

LineAtOrigin plane_at_origin_plane_geometric_quotient(PlaneAtOrigin self, Plane other) {
    return plane_at_origin_plane_geometric_product(self, plane_inverse(other));
}

Rotor plane_at_origin_point_geometric_quotient(PlaneAtOrigin self, Point other) {
    return plane_at_origin_point_geometric_product(self, point_inverse(other));
}

Rotor plane_at_origin_point_at_infinity_geometric_quotient(PlaneAtOrigin self, PointAtInfinity other) {
    return plane_at_origin_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

PlaneAtOrigin plane_at_origin_scalar_geometric_quotient(PlaneAtOrigin self, Scalar other) {
    return plane_at_origin_scalar_geometric_product(self, scalar_inverse(other));
}

Rotor plane_at_origin_transflector_geometric_quotient(PlaneAtOrigin self, Transflector other) {
    return plane_at_origin_transflector_geometric_product(self, transflector_inverse(other));
}

Flector plane_at_origin_translator_geometric_quotient(PlaneAtOrigin self, Translator other) {
    return plane_at_origin_translator_geometric_product(self, translator_inverse(other));
}

MultiVector point_flector_geometric_quotient(Point self, Flector other) {
    return point_flector_geometric_product(self, flector_inverse(other));
}

MultiVector point_flector_at_infinity_geometric_quotient(Point self, FlectorAtInfinity other) {
    return point_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

Translator point_horizon_geometric_quotient(Point self, Horizon other) {
    return point_horizon_geometric_product(self, horizon_inverse(other));
}

Flector point_line_geometric_quotient(Point self, Line other) {
    return point_line_geometric_product(self, line_inverse(other));
}

Transflector point_line_at_infinity_geometric_quotient(Point self, LineAtInfinity other) {
    return point_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Flector point_magnitude_geometric_quotient(Point self, Magnitude other) {
    return point_magnitude_geometric_product(self, magnitude_inverse(other));
}

Flector point_motor_geometric_quotient(Point self, Motor other) {
    return point_motor_geometric_product(self, motor_inverse(other));
}

MultiVector point_multi_vector_geometric_quotient(Point self, MultiVector other) {
    return point_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVector point_multi_vector_at_infinity_geometric_quotient(Point self, MultiVectorAtInfinity other) {
    return point_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Motor point_plane_geometric_quotient(Point self, Plane other) {
    return point_plane_geometric_product(self, plane_inverse(other));
}

MultiVector point_point_geometric_quotient(Point self, Point other) {
    return point_point_geometric_product(self, point_inverse(other));
}

MultiVector point_point_at_infinity_geometric_quotient(Point self, PointAtInfinity other) {
    return point_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Point point_scalar_geometric_quotient(Point self, Scalar other) {
    return point_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVector point_transflector_geometric_quotient(Point self, Transflector other) {
    return point_transflector_geometric_product(self, transflector_inverse(other));
}

Transflector point_translator_geometric_quotient(Point self, Translator other) {
    return point_translator_geometric_product(self, translator_inverse(other));
}

MultiVector point_at_infinity_flector_geometric_quotient(PointAtInfinity self, Flector other) {
    return point_at_infinity_flector_geometric_product(self, flector_inverse(other));
}

MultiVectorAtInfinity point_at_infinity_flector_at_infinity_geometric_quotient(PointAtInfinity self, FlectorAtInfinity other) {
    return point_at_infinity_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

LineAtInfinity point_at_infinity_horizon_geometric_quotient(PointAtInfinity self, Horizon other) {
    return point_at_infinity_horizon_geometric_product(self, horizon_inverse(other));
}

Flector point_at_infinity_line_geometric_quotient(PointAtInfinity self, Line other) {
    return point_at_infinity_line_geometric_product(self, line_inverse(other));
}

FlectorAtInfinity point_at_infinity_line_at_infinity_geometric_quotient(PointAtInfinity self, LineAtInfinity other) {
    return point_at_infinity_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Transflector point_at_infinity_magnitude_geometric_quotient(PointAtInfinity self, Magnitude other) {
    return point_at_infinity_magnitude_geometric_product(self, magnitude_inverse(other));
}

Flector point_at_infinity_motor_geometric_quotient(PointAtInfinity self, Motor other) {
    return point_at_infinity_motor_geometric_product(self, motor_inverse(other));
}

MultiVector point_at_infinity_multi_vector_geometric_quotient(PointAtInfinity self, MultiVector other) {
    return point_at_infinity_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_geometric_quotient(PointAtInfinity self, MultiVectorAtInfinity other) {
    return point_at_infinity_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Motor point_at_infinity_plane_geometric_quotient(PointAtInfinity self, Plane other) {
    return point_at_infinity_plane_geometric_product(self, plane_inverse(other));
}

MultiVector point_at_infinity_point_geometric_quotient(PointAtInfinity self, Point other) {
    return point_at_infinity_point_geometric_product(self, point_inverse(other));
}

MultiVectorAtInfinity point_at_infinity_point_at_infinity_geometric_quotient(PointAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

PointAtInfinity point_at_infinity_scalar_geometric_quotient(PointAtInfinity self, Scalar other) {
    return point_at_infinity_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVector point_at_infinity_transflector_geometric_quotient(PointAtInfinity self, Transflector other) {
    return point_at_infinity_transflector_geometric_product(self, transflector_inverse(other));
}

Transflector point_at_infinity_translator_geometric_quotient(PointAtInfinity self, Translator other) {
    return point_at_infinity_translator_geometric_product(self, translator_inverse(other));
}

Flector rotor_flector_geometric_quotient(Rotor self, Flector other) {
    return rotor_flector_geometric_product(self, flector_inverse(other));
}

Flector rotor_flector_at_infinity_geometric_quotient(Rotor self, FlectorAtInfinity other) {
    return rotor_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

Flector rotor_horizon_geometric_quotient(Rotor self, Horizon other) {
    return rotor_horizon_geometric_product(self, horizon_inverse(other));
}

Rotor rotor_line_geometric_quotient(Rotor self, Line other) {
    return rotor_line_geometric_product(self, line_inverse(other));
}

Rotor rotor_line_at_infinity_geometric_quotient(Rotor self, LineAtInfinity other) {
    return rotor_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Rotor rotor_magnitude_geometric_quotient(Rotor self, Magnitude other) {
    return rotor_magnitude_geometric_product(self, magnitude_inverse(other));
}

Rotor rotor_motor_geometric_quotient(Rotor self, Motor other) {
    return rotor_motor_geometric_product(self, motor_inverse(other));
}

MultiVectorAtOrigin rotor_multi_vector_geometric_quotient(Rotor self, MultiVector other) {
    return rotor_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtOrigin rotor_multi_vector_at_infinity_geometric_quotient(Rotor self, MultiVectorAtInfinity other) {
    return rotor_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Flector rotor_plane_geometric_quotient(Rotor self, Plane other) {
    return rotor_plane_geometric_product(self, plane_inverse(other));
}

Flector rotor_point_geometric_quotient(Rotor self, Point other) {
    return rotor_point_geometric_product(self, point_inverse(other));
}

Flector rotor_point_at_infinity_geometric_quotient(Rotor self, PointAtInfinity other) {
    return rotor_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Rotor rotor_scalar_geometric_quotient(Rotor self, Scalar other) {
    return rotor_scalar_geometric_product(self, scalar_inverse(other));
}

Flector rotor_transflector_geometric_quotient(Rotor self, Transflector other) {
    return rotor_transflector_geometric_product(self, transflector_inverse(other));
}

Rotor rotor_translator_geometric_quotient(Rotor self, Translator other) {
    return rotor_translator_geometric_product(self, translator_inverse(other));
}

Flector scalar_flector_geometric_quotient(Scalar self, Flector other) {
    return scalar_flector_geometric_product(self, flector_inverse(other));
}

FlectorAtInfinity scalar_flector_at_infinity_geometric_quotient(Scalar self, FlectorAtInfinity other) {
    return scalar_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

Horizon scalar_horizon_geometric_quotient(Scalar self, Horizon other) {
    return scalar_horizon_geometric_product(self, horizon_inverse(other));
}

Line scalar_line_geometric_quotient(Scalar self, Line other) {
    return scalar_line_geometric_product(self, line_inverse(other));
}

LineAtInfinity scalar_line_at_infinity_geometric_quotient(Scalar self, LineAtInfinity other) {
    return scalar_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Magnitude scalar_magnitude_geometric_quotient(Scalar self, Magnitude other) {
    return scalar_magnitude_geometric_product(self, magnitude_inverse(other));
}

Motor scalar_motor_geometric_quotient(Scalar self, Motor other) {
    return scalar_motor_geometric_product(self, motor_inverse(other));
}

MultiVector scalar_multi_vector_geometric_quotient(Scalar self, MultiVector other) {
    return scalar_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVectorAtInfinity scalar_multi_vector_at_infinity_geometric_quotient(Scalar self, MultiVectorAtInfinity other) {
    return scalar_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Plane scalar_plane_geometric_quotient(Scalar self, Plane other) {
    return scalar_plane_geometric_product(self, plane_inverse(other));
}

Point scalar_point_geometric_quotient(Scalar self, Point other) {
    return scalar_point_geometric_product(self, point_inverse(other));
}

PointAtInfinity scalar_point_at_infinity_geometric_quotient(Scalar self, PointAtInfinity other) {
    return scalar_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Scalar scalar_scalar_geometric_quotient(Scalar self, Scalar other) {
    return scalar_scalar_geometric_product(self, scalar_inverse(other));
}

Transflector scalar_transflector_geometric_quotient(Scalar self, Transflector other) {
    return scalar_transflector_geometric_product(self, transflector_inverse(other));
}

Translator scalar_translator_geometric_quotient(Scalar self, Translator other) {
    return scalar_translator_geometric_product(self, translator_inverse(other));
}

MultiVector transflector_flector_geometric_quotient(Transflector self, Flector other) {
    return transflector_flector_geometric_product(self, flector_inverse(other));
}

MultiVector transflector_flector_at_infinity_geometric_quotient(Transflector self, FlectorAtInfinity other) {
    return transflector_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

MultiVector transflector_horizon_geometric_quotient(Transflector self, Horizon other) {
    return transflector_horizon_geometric_product(self, horizon_inverse(other));
}

Flector transflector_line_geometric_quotient(Transflector self, Line other) {
    return transflector_line_geometric_product(self, line_inverse(other));
}

Flector transflector_line_at_infinity_geometric_quotient(Transflector self, LineAtInfinity other) {
    return transflector_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Flector transflector_magnitude_geometric_quotient(Transflector self, Magnitude other) {
    return transflector_magnitude_geometric_product(self, magnitude_inverse(other));
}

Flector transflector_motor_geometric_quotient(Transflector self, Motor other) {
    return transflector_motor_geometric_product(self, motor_inverse(other));
}

MultiVector transflector_multi_vector_geometric_quotient(Transflector self, MultiVector other) {
    return transflector_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVector transflector_multi_vector_at_infinity_geometric_quotient(Transflector self, MultiVectorAtInfinity other) {
    return transflector_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

MultiVector transflector_plane_geometric_quotient(Transflector self, Plane other) {
    return transflector_plane_geometric_product(self, plane_inverse(other));
}

MultiVector transflector_point_geometric_quotient(Transflector self, Point other) {
    return transflector_point_geometric_product(self, point_inverse(other));
}

MultiVector transflector_point_at_infinity_geometric_quotient(Transflector self, PointAtInfinity other) {
    return transflector_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Transflector transflector_scalar_geometric_quotient(Transflector self, Scalar other) {
    return transflector_scalar_geometric_product(self, scalar_inverse(other));
}

MultiVector transflector_transflector_geometric_quotient(Transflector self, Transflector other) {
    return transflector_transflector_geometric_product(self, transflector_inverse(other));
}

Flector transflector_translator_geometric_quotient(Transflector self, Translator other) {
    return transflector_translator_geometric_product(self, translator_inverse(other));
}

Flector translator_flector_geometric_quotient(Translator self, Flector other) {
    return translator_flector_geometric_product(self, flector_inverse(other));
}

Flector translator_flector_at_infinity_geometric_quotient(Translator self, FlectorAtInfinity other) {
    return translator_flector_at_infinity_geometric_product(self, flector_at_infinity_inverse(other));
}

Point translator_horizon_geometric_quotient(Translator self, Horizon other) {
    return translator_horizon_geometric_product(self, horizon_inverse(other));
}

MultiVector translator_line_geometric_quotient(Translator self, Line other) {
    return translator_line_geometric_product(self, line_inverse(other));
}

MultiVector translator_line_at_infinity_geometric_quotient(Translator self, LineAtInfinity other) {
    return translator_line_at_infinity_geometric_product(self, line_at_infinity_inverse(other));
}

Motor translator_magnitude_geometric_quotient(Translator self, Magnitude other) {
    return translator_magnitude_geometric_product(self, magnitude_inverse(other));
}

MultiVector translator_motor_geometric_quotient(Translator self, Motor other) {
    return translator_motor_geometric_product(self, motor_inverse(other));
}

MultiVector translator_multi_vector_geometric_quotient(Translator self, MultiVector other) {
    return translator_multi_vector_geometric_product(self, multi_vector_inverse(other));
}

MultiVector translator_multi_vector_at_infinity_geometric_quotient(Translator self, MultiVectorAtInfinity other) {
    return translator_multi_vector_at_infinity_geometric_product(self, multi_vector_at_infinity_inverse(other));
}

Flector translator_plane_geometric_quotient(Translator self, Plane other) {
    return translator_plane_geometric_product(self, plane_inverse(other));
}

Transflector translator_point_geometric_quotient(Translator self, Point other) {
    return translator_point_geometric_product(self, point_inverse(other));
}

Transflector translator_point_at_infinity_geometric_quotient(Translator self, PointAtInfinity other) {
    return translator_point_at_infinity_geometric_product(self, point_at_infinity_inverse(other));
}

Translator translator_scalar_geometric_quotient(Translator self, Scalar other) {
    return translator_scalar_geometric_product(self, scalar_inverse(other));
}

Flector translator_transflector_geometric_quotient(Translator self, Transflector other) {
    return translator_transflector_geometric_product(self, transflector_inverse(other));
}

MultiVector translator_translator_geometric_quotient(Translator self, Translator other) {
    return translator_translator_geometric_product(self, translator_inverse(other));
}

MultiVector flector_flector_bulk_contraction(Flector self, Flector other) {
    return flector_flector_anti_wedge(self, flector_dual(other));
}

MultiVector flector_flector_at_infinity_bulk_contraction(Flector self, FlectorAtInfinity other) {
    return flector_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Scalar flector_horizon_bulk_contraction(Flector self, Horizon other) {
    return flector_origin_anti_wedge(self, horizon_dual(other));
}

Point flector_line_bulk_contraction(Flector self, Line other) {
    return flector_line_at_origin_anti_wedge(self, line_dual(other));
}

Point flector_line_at_infinity_bulk_contraction(Flector self, LineAtInfinity other) {
    return flector_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

Point flector_motor_bulk_contraction(Flector self, Motor other) {
    return flector_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVector flector_multi_vector_bulk_contraction(Flector self, MultiVector other) {
    return flector_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVector flector_multi_vector_at_infinity_bulk_contraction(Flector self, MultiVectorAtInfinity other) {
    return flector_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Scalar flector_plane_bulk_contraction(Flector self, Plane other) {
    return flector_origin_anti_wedge(self, plane_dual(other));
}

MultiVector flector_point_bulk_contraction(Flector self, Point other) {
    return flector_plane_at_origin_anti_wedge(self, point_dual(other));
}

MultiVector flector_point_at_infinity_bulk_contraction(Flector self, PointAtInfinity other) {
    return flector_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

MultiVector flector_transflector_bulk_contraction(Flector self, Transflector other) {
    return flector_flector_anti_wedge(self, transflector_dual(other));
}

Point flector_translator_bulk_contraction(Flector self, Translator other) {
    return flector_line_at_origin_anti_wedge(self, translator_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_flector_bulk_contraction(FlectorAtInfinity self, Flector other) {
    return flector_at_infinity_flector_anti_wedge(self, flector_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_flector_at_infinity_bulk_contraction(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Scalar flector_at_infinity_horizon_bulk_contraction(FlectorAtInfinity self, Horizon other) {
    return flector_at_infinity_origin_anti_wedge(self, horizon_dual(other));
}

PointAtInfinity flector_at_infinity_line_bulk_contraction(FlectorAtInfinity self, Line other) {
    return flector_at_infinity_line_at_origin_anti_wedge(self, line_dual(other));
}

PointAtInfinity flector_at_infinity_line_at_infinity_bulk_contraction(FlectorAtInfinity self, LineAtInfinity other) {
    return flector_at_infinity_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

PointAtInfinity flector_at_infinity_motor_bulk_contraction(FlectorAtInfinity self, Motor other) {
    return flector_at_infinity_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_bulk_contraction(FlectorAtInfinity self, MultiVector other) {
    return flector_at_infinity_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_bulk_contraction(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return flector_at_infinity_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Scalar flector_at_infinity_plane_bulk_contraction(FlectorAtInfinity self, Plane other) {
    return flector_at_infinity_origin_anti_wedge(self, plane_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_point_bulk_contraction(FlectorAtInfinity self, Point other) {
    return flector_at_infinity_plane_at_origin_anti_wedge(self, point_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_point_at_infinity_bulk_contraction(FlectorAtInfinity self, PointAtInfinity other) {
    return flector_at_infinity_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_transflector_bulk_contraction(FlectorAtInfinity self, Transflector other) {
    return flector_at_infinity_flector_anti_wedge(self, transflector_dual(other));
}

PointAtInfinity flector_at_infinity_translator_bulk_contraction(FlectorAtInfinity self, Translator other) {
    return flector_at_infinity_line_at_origin_anti_wedge(self, translator_dual(other));
}

MultiVectorAtInfinity horizon_flector_bulk_contraction(Horizon self, Flector other) {
    return horizon_flector_anti_wedge(self, flector_dual(other));
}

MultiVectorAtInfinity horizon_flector_at_infinity_bulk_contraction(Horizon self, FlectorAtInfinity other) {
    return horizon_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Scalar horizon_horizon_bulk_contraction(Horizon self, Horizon other) {
    return horizon_origin_anti_wedge(self, horizon_dual(other));
}

PointAtInfinity horizon_line_bulk_contraction(Horizon self, Line other) {
    return horizon_line_at_origin_anti_wedge(self, line_dual(other));
}

PointAtInfinity horizon_line_at_infinity_bulk_contraction(Horizon self, LineAtInfinity other) {
    return horizon_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

PointAtInfinity horizon_motor_bulk_contraction(Horizon self, Motor other) {
    return horizon_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVectorAtInfinity horizon_multi_vector_bulk_contraction(Horizon self, MultiVector other) {
    return horizon_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVectorAtInfinity horizon_multi_vector_at_infinity_bulk_contraction(Horizon self, MultiVectorAtInfinity other) {
    return horizon_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Scalar horizon_plane_bulk_contraction(Horizon self, Plane other) {
    return horizon_origin_anti_wedge(self, plane_dual(other));
}

LineAtInfinity horizon_point_bulk_contraction(Horizon self, Point other) {
    return horizon_plane_at_origin_anti_wedge(self, point_dual(other));
}

LineAtInfinity horizon_point_at_infinity_bulk_contraction(Horizon self, PointAtInfinity other) {
    return horizon_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

MultiVectorAtInfinity horizon_transflector_bulk_contraction(Horizon self, Transflector other) {
    return horizon_flector_anti_wedge(self, transflector_dual(other));
}

PointAtInfinity horizon_translator_bulk_contraction(Horizon self, Translator other) {
    return horizon_line_at_origin_anti_wedge(self, translator_dual(other));
}

Point line_flector_bulk_contraction(Line self, Flector other) {
    return line_flector_anti_wedge(self, flector_dual(other));
}

Point line_flector_at_infinity_bulk_contraction(Line self, FlectorAtInfinity other) {
    return line_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Scalar line_line_bulk_contraction(Line self, Line other) {
    return line_line_at_origin_anti_wedge(self, line_dual(other));
}

Scalar line_line_at_infinity_bulk_contraction(Line self, LineAtInfinity other) {
    return line_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

Scalar line_motor_bulk_contraction(Line self, Motor other) {
    return line_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVector line_multi_vector_bulk_contraction(Line self, MultiVector other) {
    return line_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVector line_multi_vector_at_infinity_bulk_contraction(Line self, MultiVectorAtInfinity other) {
    return line_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Point line_point_bulk_contraction(Line self, Point other) {
    return line_plane_at_origin_anti_wedge(self, point_dual(other));
}

Point line_point_at_infinity_bulk_contraction(Line self, PointAtInfinity other) {
    return line_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

Point line_transflector_bulk_contraction(Line self, Transflector other) {
    return line_flector_anti_wedge(self, transflector_dual(other));
}

Scalar line_translator_bulk_contraction(Line self, Translator other) {
    return line_line_at_origin_anti_wedge(self, translator_dual(other));
}

PointAtInfinity line_at_infinity_flector_bulk_contraction(LineAtInfinity self, Flector other) {
    return line_at_infinity_flector_anti_wedge(self, flector_dual(other));
}

PointAtInfinity line_at_infinity_flector_at_infinity_bulk_contraction(LineAtInfinity self, FlectorAtInfinity other) {
    return line_at_infinity_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Scalar line_at_infinity_line_bulk_contraction(LineAtInfinity self, Line other) {
    return line_at_infinity_line_at_origin_anti_wedge(self, line_dual(other));
}

Scalar line_at_infinity_line_at_infinity_bulk_contraction(LineAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

Scalar line_at_infinity_motor_bulk_contraction(LineAtInfinity self, Motor other) {
    return line_at_infinity_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_bulk_contraction(LineAtInfinity self, MultiVector other) {
    return line_at_infinity_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_bulk_contraction(LineAtInfinity self, MultiVectorAtInfinity other) {
    return line_at_infinity_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

PointAtInfinity line_at_infinity_point_bulk_contraction(LineAtInfinity self, Point other) {
    return line_at_infinity_plane_at_origin_anti_wedge(self, point_dual(other));
}

PointAtInfinity line_at_infinity_point_at_infinity_bulk_contraction(LineAtInfinity self, PointAtInfinity other) {
    return line_at_infinity_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

PointAtInfinity line_at_infinity_transflector_bulk_contraction(LineAtInfinity self, Transflector other) {
    return line_at_infinity_flector_anti_wedge(self, transflector_dual(other));
}

Scalar line_at_infinity_translator_bulk_contraction(LineAtInfinity self, Translator other) {
    return line_at_infinity_line_at_origin_anti_wedge(self, translator_dual(other));
}

Point line_at_origin_flector_bulk_contraction(LineAtOrigin self, Flector other) {
    return line_at_origin_flector_anti_wedge(self, flector_dual(other));
}

Point line_at_origin_flector_at_infinity_bulk_contraction(LineAtOrigin self, FlectorAtInfinity other) {
    return line_at_origin_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_bulk_contraction(LineAtOrigin self, MultiVector other) {
    return line_at_origin_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_infinity_bulk_contraction(LineAtOrigin self, MultiVectorAtInfinity other) {
    return line_at_origin_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Origin line_at_origin_point_bulk_contraction(LineAtOrigin self, Point other) {
    return line_at_origin_plane_at_origin_anti_wedge(self, point_dual(other));
}

Origin line_at_origin_point_at_infinity_bulk_contraction(LineAtOrigin self, PointAtInfinity other) {
    return line_at_origin_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

Point line_at_origin_transflector_bulk_contraction(LineAtOrigin self, Transflector other) {
    return line_at_origin_flector_anti_wedge(self, transflector_dual(other));
}

Flector motor_flector_bulk_contraction(Motor self, Flector other) {
    return motor_flector_anti_wedge(self, flector_dual(other));
}

Flector motor_flector_at_infinity_bulk_contraction(Motor self, FlectorAtInfinity other) {
    return motor_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Origin motor_horizon_bulk_contraction(Motor self, Horizon other) {
    return motor_origin_anti_wedge(self, horizon_dual(other));
}

MultiVector motor_line_bulk_contraction(Motor self, Line other) {
    return motor_line_at_origin_anti_wedge(self, line_dual(other));
}

MultiVector motor_line_at_infinity_bulk_contraction(Motor self, LineAtInfinity other) {
    return motor_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

MultiVector motor_motor_bulk_contraction(Motor self, Motor other) {
    return motor_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVector motor_multi_vector_bulk_contraction(Motor self, MultiVector other) {
    return motor_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVector motor_multi_vector_at_infinity_bulk_contraction(Motor self, MultiVectorAtInfinity other) {
    return motor_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Origin motor_plane_bulk_contraction(Motor self, Plane other) {
    return motor_origin_anti_wedge(self, plane_dual(other));
}

Flector motor_point_bulk_contraction(Motor self, Point other) {
    return motor_plane_at_origin_anti_wedge(self, point_dual(other));
}

Flector motor_point_at_infinity_bulk_contraction(Motor self, PointAtInfinity other) {
    return motor_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

Flector motor_transflector_bulk_contraction(Motor self, Transflector other) {
    return motor_flector_anti_wedge(self, transflector_dual(other));
}

MultiVector motor_translator_bulk_contraction(Motor self, Translator other) {
    return motor_line_at_origin_anti_wedge(self, translator_dual(other));
}

MultiVector multi_vector_flector_bulk_contraction(MultiVector self, Flector other) {
    return multi_vector_flector_anti_wedge(self, flector_dual(other));
}

MultiVector multi_vector_flector_at_infinity_bulk_contraction(MultiVector self, FlectorAtInfinity other) {
    return multi_vector_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

MultiVector multi_vector_horizon_bulk_contraction(MultiVector self, Horizon other) {
    return multi_vector_origin_anti_wedge(self, horizon_dual(other));
}

MultiVector multi_vector_line_bulk_contraction(MultiVector self, Line other) {
    return multi_vector_line_at_origin_anti_wedge(self, line_dual(other));
}

MultiVector multi_vector_line_at_infinity_bulk_contraction(MultiVector self, LineAtInfinity other) {
    return multi_vector_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

MultiVector multi_vector_motor_bulk_contraction(MultiVector self, Motor other) {
    return multi_vector_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVector multi_vector_multi_vector_bulk_contraction(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVector multi_vector_multi_vector_at_infinity_bulk_contraction(MultiVector self, MultiVectorAtInfinity other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

MultiVector multi_vector_plane_bulk_contraction(MultiVector self, Plane other) {
    return multi_vector_origin_anti_wedge(self, plane_dual(other));
}

MultiVector multi_vector_point_bulk_contraction(MultiVector self, Point other) {
    return multi_vector_plane_at_origin_anti_wedge(self, point_dual(other));
}

MultiVector multi_vector_point_at_infinity_bulk_contraction(MultiVector self, PointAtInfinity other) {
    return multi_vector_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

MultiVector multi_vector_transflector_bulk_contraction(MultiVector self, Transflector other) {
    return multi_vector_flector_anti_wedge(self, transflector_dual(other));
}

MultiVector multi_vector_translator_bulk_contraction(MultiVector self, Translator other) {
    return multi_vector_line_at_origin_anti_wedge(self, translator_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_bulk_contraction(MultiVectorAtInfinity self, Flector other) {
    return multi_vector_at_infinity_flector_anti_wedge(self, flector_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_bulk_contraction(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Scalar multi_vector_at_infinity_horizon_bulk_contraction(MultiVectorAtInfinity self, Horizon other) {
    return multi_vector_at_infinity_origin_anti_wedge(self, horizon_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_bulk_contraction(MultiVectorAtInfinity self, Line other) {
    return multi_vector_at_infinity_line_at_origin_anti_wedge(self, line_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_bulk_contraction(MultiVectorAtInfinity self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_motor_bulk_contraction(MultiVectorAtInfinity self, Motor other) {
    return multi_vector_at_infinity_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_bulk_contraction(MultiVectorAtInfinity self, MultiVector other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_bulk_contraction(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Scalar multi_vector_at_infinity_plane_bulk_contraction(MultiVectorAtInfinity self, Plane other) {
    return multi_vector_at_infinity_origin_anti_wedge(self, plane_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_bulk_contraction(MultiVectorAtInfinity self, Point other) {
    return multi_vector_at_infinity_plane_at_origin_anti_wedge(self, point_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_bulk_contraction(MultiVectorAtInfinity self, PointAtInfinity other) {
    return multi_vector_at_infinity_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_transflector_bulk_contraction(MultiVectorAtInfinity self, Transflector other) {
    return multi_vector_at_infinity_flector_anti_wedge(self, transflector_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_translator_bulk_contraction(MultiVectorAtInfinity self, Translator other) {
    return multi_vector_at_infinity_line_at_origin_anti_wedge(self, translator_dual(other));
}

MultiVector multi_vector_at_origin_flector_bulk_contraction(MultiVectorAtOrigin self, Flector other) {
    return multi_vector_at_origin_flector_anti_wedge(self, flector_dual(other));
}

MultiVector multi_vector_at_origin_flector_at_infinity_bulk_contraction(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multi_vector_at_origin_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Origin multi_vector_at_origin_horizon_bulk_contraction(MultiVectorAtOrigin self, Horizon other) {
    return multi_vector_at_origin_origin_anti_wedge(self, horizon_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_bulk_contraction(MultiVectorAtOrigin self, Line other) {
    return multi_vector_at_origin_line_at_origin_anti_wedge(self, line_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_infinity_bulk_contraction(MultiVectorAtOrigin self, LineAtInfinity other) {
    return multi_vector_at_origin_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_motor_bulk_contraction(MultiVectorAtOrigin self, Motor other) {
    return multi_vector_at_origin_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_bulk_contraction(MultiVectorAtOrigin self, MultiVector other) {
    return multi_vector_at_origin_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_infinity_bulk_contraction(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multi_vector_at_origin_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Origin multi_vector_at_origin_plane_bulk_contraction(MultiVectorAtOrigin self, Plane other) {
    return multi_vector_at_origin_origin_anti_wedge(self, plane_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_point_bulk_contraction(MultiVectorAtOrigin self, Point other) {
    return multi_vector_at_origin_plane_at_origin_anti_wedge(self, point_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_point_at_infinity_bulk_contraction(MultiVectorAtOrigin self, PointAtInfinity other) {
    return multi_vector_at_origin_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

MultiVector multi_vector_at_origin_transflector_bulk_contraction(MultiVectorAtOrigin self, Transflector other) {
    return multi_vector_at_origin_flector_anti_wedge(self, transflector_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_translator_bulk_contraction(MultiVectorAtOrigin self, Translator other) {
    return multi_vector_at_origin_line_at_origin_anti_wedge(self, translator_dual(other));
}

Scalar origin_flector_bulk_contraction(Origin self, Flector other) {
    return origin_flector_anti_wedge(self, flector_dual(other));
}

Scalar origin_flector_at_infinity_bulk_contraction(Origin self, FlectorAtInfinity other) {
    return origin_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Origin origin_multi_vector_bulk_contraction(Origin self, MultiVector other) {
    return origin_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

Origin origin_multi_vector_at_infinity_bulk_contraction(Origin self, MultiVectorAtInfinity other) {
    return origin_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Scalar origin_transflector_bulk_contraction(Origin self, Transflector other) {
    return origin_flector_anti_wedge(self, transflector_dual(other));
}

MultiVector plane_flector_bulk_contraction(Plane self, Flector other) {
    return plane_flector_anti_wedge(self, flector_dual(other));
}

MultiVector plane_flector_at_infinity_bulk_contraction(Plane self, FlectorAtInfinity other) {
    return plane_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Scalar plane_horizon_bulk_contraction(Plane self, Horizon other) {
    return plane_origin_anti_wedge(self, horizon_dual(other));
}

Point plane_line_bulk_contraction(Plane self, Line other) {
    return plane_line_at_origin_anti_wedge(self, line_dual(other));
}

Point plane_line_at_infinity_bulk_contraction(Plane self, LineAtInfinity other) {
    return plane_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

Point plane_motor_bulk_contraction(Plane self, Motor other) {
    return plane_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVector plane_multi_vector_bulk_contraction(Plane self, MultiVector other) {
    return plane_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVector plane_multi_vector_at_infinity_bulk_contraction(Plane self, MultiVectorAtInfinity other) {
    return plane_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Scalar plane_plane_bulk_contraction(Plane self, Plane other) {
    return plane_origin_anti_wedge(self, plane_dual(other));
}

Line plane_point_bulk_contraction(Plane self, Point other) {
    return plane_plane_at_origin_anti_wedge(self, point_dual(other));
}

Line plane_point_at_infinity_bulk_contraction(Plane self, PointAtInfinity other) {
    return plane_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

MultiVector plane_transflector_bulk_contraction(Plane self, Transflector other) {
    return plane_flector_anti_wedge(self, transflector_dual(other));
}

Point plane_translator_bulk_contraction(Plane self, Translator other) {
    return plane_line_at_origin_anti_wedge(self, translator_dual(other));
}

MultiVector plane_at_origin_flector_bulk_contraction(PlaneAtOrigin self, Flector other) {
    return plane_at_origin_flector_anti_wedge(self, flector_dual(other));
}

MultiVector plane_at_origin_flector_at_infinity_bulk_contraction(PlaneAtOrigin self, FlectorAtInfinity other) {
    return plane_at_origin_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Origin plane_at_origin_line_bulk_contraction(PlaneAtOrigin self, Line other) {
    return plane_at_origin_line_at_origin_anti_wedge(self, line_dual(other));
}

Origin plane_at_origin_line_at_infinity_bulk_contraction(PlaneAtOrigin self, LineAtInfinity other) {
    return plane_at_origin_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

Origin plane_at_origin_motor_bulk_contraction(PlaneAtOrigin self, Motor other) {
    return plane_at_origin_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_bulk_contraction(PlaneAtOrigin self, MultiVector other) {
    return plane_at_origin_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_infinity_bulk_contraction(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return plane_at_origin_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

LineAtOrigin plane_at_origin_point_bulk_contraction(PlaneAtOrigin self, Point other) {
    return plane_at_origin_plane_at_origin_anti_wedge(self, point_dual(other));
}

LineAtOrigin plane_at_origin_point_at_infinity_bulk_contraction(PlaneAtOrigin self, PointAtInfinity other) {
    return plane_at_origin_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

MultiVector plane_at_origin_transflector_bulk_contraction(PlaneAtOrigin self, Transflector other) {
    return plane_at_origin_flector_anti_wedge(self, transflector_dual(other));
}

Origin plane_at_origin_translator_bulk_contraction(PlaneAtOrigin self, Translator other) {
    return plane_at_origin_line_at_origin_anti_wedge(self, translator_dual(other));
}

Scalar point_flector_bulk_contraction(Point self, Flector other) {
    return point_flector_anti_wedge(self, flector_dual(other));
}

Scalar point_flector_at_infinity_bulk_contraction(Point self, FlectorAtInfinity other) {
    return point_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

MultiVector point_multi_vector_bulk_contraction(Point self, MultiVector other) {
    return point_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVector point_multi_vector_at_infinity_bulk_contraction(Point self, MultiVectorAtInfinity other) {
    return point_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Scalar point_point_bulk_contraction(Point self, Point other) {
    return point_plane_at_origin_anti_wedge(self, point_dual(other));
}

Scalar point_point_at_infinity_bulk_contraction(Point self, PointAtInfinity other) {
    return point_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

Scalar point_transflector_bulk_contraction(Point self, Transflector other) {
    return point_flector_anti_wedge(self, transflector_dual(other));
}

Scalar point_at_infinity_flector_bulk_contraction(PointAtInfinity self, Flector other) {
    return point_at_infinity_flector_anti_wedge(self, flector_dual(other));
}

Scalar point_at_infinity_flector_at_infinity_bulk_contraction(PointAtInfinity self, FlectorAtInfinity other) {
    return point_at_infinity_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_bulk_contraction(PointAtInfinity self, MultiVector other) {
    return point_at_infinity_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_bulk_contraction(PointAtInfinity self, MultiVectorAtInfinity other) {
    return point_at_infinity_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Scalar point_at_infinity_point_bulk_contraction(PointAtInfinity self, Point other) {
    return point_at_infinity_plane_at_origin_anti_wedge(self, point_dual(other));
}

Scalar point_at_infinity_point_at_infinity_bulk_contraction(PointAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

Scalar point_at_infinity_transflector_bulk_contraction(PointAtInfinity self, Transflector other) {
    return point_at_infinity_flector_anti_wedge(self, transflector_dual(other));
}

Flector rotor_flector_bulk_contraction(Rotor self, Flector other) {
    return rotor_flector_anti_wedge(self, flector_dual(other));
}

Flector rotor_flector_at_infinity_bulk_contraction(Rotor self, FlectorAtInfinity other) {
    return rotor_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Origin rotor_horizon_bulk_contraction(Rotor self, Horizon other) {
    return rotor_origin_anti_wedge(self, horizon_dual(other));
}

LineAtOrigin rotor_line_bulk_contraction(Rotor self, Line other) {
    return rotor_line_at_origin_anti_wedge(self, line_dual(other));
}

LineAtOrigin rotor_line_at_infinity_bulk_contraction(Rotor self, LineAtInfinity other) {
    return rotor_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

LineAtOrigin rotor_motor_bulk_contraction(Rotor self, Motor other) {
    return rotor_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin rotor_multi_vector_bulk_contraction(Rotor self, MultiVector other) {
    return rotor_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin rotor_multi_vector_at_infinity_bulk_contraction(Rotor self, MultiVectorAtInfinity other) {
    return rotor_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Origin rotor_plane_bulk_contraction(Rotor self, Plane other) {
    return rotor_origin_anti_wedge(self, plane_dual(other));
}

Flector rotor_point_bulk_contraction(Rotor self, Point other) {
    return rotor_plane_at_origin_anti_wedge(self, point_dual(other));
}

Flector rotor_point_at_infinity_bulk_contraction(Rotor self, PointAtInfinity other) {
    return rotor_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

Flector rotor_transflector_bulk_contraction(Rotor self, Transflector other) {
    return rotor_flector_anti_wedge(self, transflector_dual(other));
}

LineAtOrigin rotor_translator_bulk_contraction(Rotor self, Translator other) {
    return rotor_line_at_origin_anti_wedge(self, translator_dual(other));
}

MultiVector transflector_flector_bulk_contraction(Transflector self, Flector other) {
    return transflector_flector_anti_wedge(self, flector_dual(other));
}

MultiVector transflector_flector_at_infinity_bulk_contraction(Transflector self, FlectorAtInfinity other) {
    return transflector_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Scalar transflector_horizon_bulk_contraction(Transflector self, Horizon other) {
    return transflector_origin_anti_wedge(self, horizon_dual(other));
}

Point transflector_line_bulk_contraction(Transflector self, Line other) {
    return transflector_line_at_origin_anti_wedge(self, line_dual(other));
}

Point transflector_line_at_infinity_bulk_contraction(Transflector self, LineAtInfinity other) {
    return transflector_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

Point transflector_motor_bulk_contraction(Transflector self, Motor other) {
    return transflector_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVector transflector_multi_vector_bulk_contraction(Transflector self, MultiVector other) {
    return transflector_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVector transflector_multi_vector_at_infinity_bulk_contraction(Transflector self, MultiVectorAtInfinity other) {
    return transflector_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Scalar transflector_plane_bulk_contraction(Transflector self, Plane other) {
    return transflector_origin_anti_wedge(self, plane_dual(other));
}

MultiVector transflector_point_bulk_contraction(Transflector self, Point other) {
    return transflector_plane_at_origin_anti_wedge(self, point_dual(other));
}

MultiVector transflector_point_at_infinity_bulk_contraction(Transflector self, PointAtInfinity other) {
    return transflector_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

MultiVector transflector_transflector_bulk_contraction(Transflector self, Transflector other) {
    return transflector_flector_anti_wedge(self, transflector_dual(other));
}

Point transflector_translator_bulk_contraction(Transflector self, Translator other) {
    return transflector_line_at_origin_anti_wedge(self, translator_dual(other));
}

Flector translator_flector_bulk_contraction(Translator self, Flector other) {
    return translator_flector_anti_wedge(self, flector_dual(other));
}

Flector translator_flector_at_infinity_bulk_contraction(Translator self, FlectorAtInfinity other) {
    return translator_flector_anti_wedge(self, flector_at_infinity_dual(other));
}

Origin translator_horizon_bulk_contraction(Translator self, Horizon other) {
    return translator_origin_anti_wedge(self, horizon_dual(other));
}

MultiVector translator_line_bulk_contraction(Translator self, Line other) {
    return translator_line_at_origin_anti_wedge(self, line_dual(other));
}

MultiVector translator_line_at_infinity_bulk_contraction(Translator self, LineAtInfinity other) {
    return translator_line_at_origin_anti_wedge(self, line_at_infinity_dual(other));
}

MultiVector translator_motor_bulk_contraction(Translator self, Motor other) {
    return translator_line_at_origin_anti_wedge(self, motor_dual(other));
}

MultiVector translator_multi_vector_bulk_contraction(Translator self, MultiVector other) {
    return translator_multi_vector_at_origin_anti_wedge(self, multi_vector_dual(other));
}

MultiVector translator_multi_vector_at_infinity_bulk_contraction(Translator self, MultiVectorAtInfinity other) {
    return translator_multi_vector_at_origin_anti_wedge(self, multi_vector_at_infinity_dual(other));
}

Origin translator_plane_bulk_contraction(Translator self, Plane other) {
    return translator_origin_anti_wedge(self, plane_dual(other));
}

Transflector translator_point_bulk_contraction(Translator self, Point other) {
    return translator_plane_at_origin_anti_wedge(self, point_dual(other));
}

Transflector translator_point_at_infinity_bulk_contraction(Translator self, PointAtInfinity other) {
    return translator_plane_at_origin_anti_wedge(self, point_at_infinity_dual(other));
}

Flector translator_transflector_bulk_contraction(Translator self, Transflector other) {
    return translator_flector_anti_wedge(self, transflector_dual(other));
}

MultiVector translator_translator_bulk_contraction(Translator self, Translator other) {
    return translator_line_at_origin_anti_wedge(self, translator_dual(other));
}

MultiVectorAtInfinity flector_flector_weight_contraction(Flector self, Flector other) {
    return flector_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

PointAtInfinity flector_line_weight_contraction(Flector self, Line other) {
    return flector_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

PointAtInfinity flector_line_at_origin_weight_contraction(Flector self, LineAtOrigin other) {
    return flector_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity flector_motor_weight_contraction(Flector self, Motor other) {
    return flector_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity flector_multi_vector_weight_contraction(Flector self, MultiVector other) {
    return flector_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity flector_multi_vector_at_origin_weight_contraction(Flector self, MultiVectorAtOrigin other) {
    return flector_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

MultiVectorAtInfinity flector_origin_weight_contraction(Flector self, Origin other) {
    return flector_horizon_anti_wedge(self, origin_anti_dual(other));
}

Scalar flector_plane_weight_contraction(Flector self, Plane other) {
    return flector_point_at_infinity_anti_wedge(self, plane_anti_dual(other));
}

Scalar flector_plane_at_origin_weight_contraction(Flector self, PlaneAtOrigin other) {
    return flector_point_at_infinity_anti_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVectorAtInfinity flector_point_weight_contraction(Flector self, Point other) {
    return flector_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity flector_rotor_weight_contraction(Flector self, Rotor other) {
    return flector_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

Scalar flector_transflector_weight_contraction(Flector self, Transflector other) {
    return flector_point_at_infinity_anti_wedge(self, transflector_anti_dual(other));
}

PointAtInfinity line_flector_weight_contraction(Line self, Flector other) {
    return line_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

Scalar line_line_weight_contraction(Line self, Line other) {
    return line_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

Scalar line_line_at_origin_weight_contraction(Line self, LineAtOrigin other) {
    return line_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity line_motor_weight_contraction(Line self, Motor other) {
    return line_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity line_multi_vector_weight_contraction(Line self, MultiVector other) {
    return line_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity line_multi_vector_at_origin_weight_contraction(Line self, MultiVectorAtOrigin other) {
    return line_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

PointAtInfinity line_origin_weight_contraction(Line self, Origin other) {
    return line_horizon_anti_wedge(self, origin_anti_dual(other));
}

PointAtInfinity line_point_weight_contraction(Line self, Point other) {
    return line_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity line_rotor_weight_contraction(Line self, Rotor other) {
    return line_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

PointAtInfinity line_at_origin_flector_weight_contraction(LineAtOrigin self, Flector other) {
    return line_at_origin_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

Scalar line_at_origin_line_weight_contraction(LineAtOrigin self, Line other) {
    return line_at_origin_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

Scalar line_at_origin_line_at_origin_weight_contraction(LineAtOrigin self, LineAtOrigin other) {
    return line_at_origin_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity line_at_origin_motor_weight_contraction(LineAtOrigin self, Motor other) {
    return line_at_origin_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity line_at_origin_multi_vector_weight_contraction(LineAtOrigin self, MultiVector other) {
    return line_at_origin_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity line_at_origin_multi_vector_at_origin_weight_contraction(LineAtOrigin self, MultiVectorAtOrigin other) {
    return line_at_origin_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

PointAtInfinity line_at_origin_origin_weight_contraction(LineAtOrigin self, Origin other) {
    return line_at_origin_horizon_anti_wedge(self, origin_anti_dual(other));
}

PointAtInfinity line_at_origin_point_weight_contraction(LineAtOrigin self, Point other) {
    return line_at_origin_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity line_at_origin_rotor_weight_contraction(LineAtOrigin self, Rotor other) {
    return line_at_origin_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

FlectorAtInfinity motor_flector_weight_contraction(Motor self, Flector other) {
    return motor_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

MultiVectorAtInfinity motor_line_weight_contraction(Motor self, Line other) {
    return motor_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

MultiVectorAtInfinity motor_line_at_origin_weight_contraction(Motor self, LineAtOrigin other) {
    return motor_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity motor_motor_weight_contraction(Motor self, Motor other) {
    return motor_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity motor_multi_vector_weight_contraction(Motor self, MultiVector other) {
    return motor_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity motor_multi_vector_at_origin_weight_contraction(Motor self, MultiVectorAtOrigin other) {
    return motor_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

FlectorAtInfinity motor_origin_weight_contraction(Motor self, Origin other) {
    return motor_horizon_anti_wedge(self, origin_anti_dual(other));
}

PointAtInfinity motor_plane_weight_contraction(Motor self, Plane other) {
    return motor_point_at_infinity_anti_wedge(self, plane_anti_dual(other));
}

PointAtInfinity motor_plane_at_origin_weight_contraction(Motor self, PlaneAtOrigin other) {
    return motor_point_at_infinity_anti_wedge(self, plane_at_origin_anti_dual(other));
}

FlectorAtInfinity motor_point_weight_contraction(Motor self, Point other) {
    return motor_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity motor_rotor_weight_contraction(Motor self, Rotor other) {
    return motor_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

PointAtInfinity motor_transflector_weight_contraction(Motor self, Transflector other) {
    return motor_point_at_infinity_anti_wedge(self, transflector_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_flector_weight_contraction(MultiVector self, Flector other) {
    return multi_vector_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_line_weight_contraction(MultiVector self, Line other) {
    return multi_vector_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_line_at_origin_weight_contraction(MultiVector self, LineAtOrigin other) {
    return multi_vector_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_motor_weight_contraction(MultiVector self, Motor other) {
    return multi_vector_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_multi_vector_weight_contraction(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_multi_vector_at_origin_weight_contraction(MultiVector self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_origin_weight_contraction(MultiVector self, Origin other) {
    return multi_vector_horizon_anti_wedge(self, origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_plane_weight_contraction(MultiVector self, Plane other) {
    return multi_vector_point_at_infinity_anti_wedge(self, plane_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_plane_at_origin_weight_contraction(MultiVector self, PlaneAtOrigin other) {
    return multi_vector_point_at_infinity_anti_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_point_weight_contraction(MultiVector self, Point other) {
    return multi_vector_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_rotor_weight_contraction(MultiVector self, Rotor other) {
    return multi_vector_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_transflector_weight_contraction(MultiVector self, Transflector other) {
    return multi_vector_point_at_infinity_anti_wedge(self, transflector_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_flector_weight_contraction(MultiVectorAtOrigin self, Flector other) {
    return multi_vector_at_origin_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_line_weight_contraction(MultiVectorAtOrigin self, Line other) {
    return multi_vector_at_origin_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_line_at_origin_weight_contraction(MultiVectorAtOrigin self, LineAtOrigin other) {
    return multi_vector_at_origin_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_motor_weight_contraction(MultiVectorAtOrigin self, Motor other) {
    return multi_vector_at_origin_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_multi_vector_weight_contraction(MultiVectorAtOrigin self, MultiVector other) {
    return multi_vector_at_origin_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_multi_vector_at_origin_weight_contraction(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_origin_weight_contraction(MultiVectorAtOrigin self, Origin other) {
    return multi_vector_at_origin_horizon_anti_wedge(self, origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_plane_weight_contraction(MultiVectorAtOrigin self, Plane other) {
    return multi_vector_at_origin_point_at_infinity_anti_wedge(self, plane_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_plane_at_origin_weight_contraction(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return multi_vector_at_origin_point_at_infinity_anti_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_point_weight_contraction(MultiVectorAtOrigin self, Point other) {
    return multi_vector_at_origin_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_rotor_weight_contraction(MultiVectorAtOrigin self, Rotor other) {
    return multi_vector_at_origin_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_origin_transflector_weight_contraction(MultiVectorAtOrigin self, Transflector other) {
    return multi_vector_at_origin_point_at_infinity_anti_wedge(self, transflector_anti_dual(other));
}

Scalar origin_flector_weight_contraction(Origin self, Flector other) {
    return origin_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

Scalar origin_motor_weight_contraction(Origin self, Motor other) {
    return origin_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

Scalar origin_multi_vector_weight_contraction(Origin self, MultiVector other) {
    return origin_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

Scalar origin_multi_vector_at_origin_weight_contraction(Origin self, MultiVectorAtOrigin other) {
    return origin_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Scalar origin_origin_weight_contraction(Origin self, Origin other) {
    return origin_horizon_anti_wedge(self, origin_anti_dual(other));
}

Scalar origin_point_weight_contraction(Origin self, Point other) {
    return origin_horizon_anti_wedge(self, point_anti_dual(other));
}

Scalar origin_rotor_weight_contraction(Origin self, Rotor other) {
    return origin_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

MultiVectorAtInfinity plane_flector_weight_contraction(Plane self, Flector other) {
    return plane_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

PointAtInfinity plane_line_weight_contraction(Plane self, Line other) {
    return plane_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

PointAtInfinity plane_line_at_origin_weight_contraction(Plane self, LineAtOrigin other) {
    return plane_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity plane_motor_weight_contraction(Plane self, Motor other) {
    return plane_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity plane_multi_vector_weight_contraction(Plane self, MultiVector other) {
    return plane_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity plane_multi_vector_at_origin_weight_contraction(Plane self, MultiVectorAtOrigin other) {
    return plane_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

LineAtInfinity plane_origin_weight_contraction(Plane self, Origin other) {
    return plane_horizon_anti_wedge(self, origin_anti_dual(other));
}

Scalar plane_plane_weight_contraction(Plane self, Plane other) {
    return plane_point_at_infinity_anti_wedge(self, plane_anti_dual(other));
}

Scalar plane_plane_at_origin_weight_contraction(Plane self, PlaneAtOrigin other) {
    return plane_point_at_infinity_anti_wedge(self, plane_at_origin_anti_dual(other));
}

LineAtInfinity plane_point_weight_contraction(Plane self, Point other) {
    return plane_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity plane_rotor_weight_contraction(Plane self, Rotor other) {
    return plane_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

Scalar plane_transflector_weight_contraction(Plane self, Transflector other) {
    return plane_point_at_infinity_anti_wedge(self, transflector_anti_dual(other));
}

MultiVectorAtInfinity plane_at_origin_flector_weight_contraction(PlaneAtOrigin self, Flector other) {
    return plane_at_origin_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

PointAtInfinity plane_at_origin_line_weight_contraction(PlaneAtOrigin self, Line other) {
    return plane_at_origin_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

PointAtInfinity plane_at_origin_line_at_origin_weight_contraction(PlaneAtOrigin self, LineAtOrigin other) {
    return plane_at_origin_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity plane_at_origin_motor_weight_contraction(PlaneAtOrigin self, Motor other) {
    return plane_at_origin_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity plane_at_origin_multi_vector_weight_contraction(PlaneAtOrigin self, MultiVector other) {
    return plane_at_origin_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity plane_at_origin_multi_vector_at_origin_weight_contraction(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return plane_at_origin_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

LineAtInfinity plane_at_origin_origin_weight_contraction(PlaneAtOrigin self, Origin other) {
    return plane_at_origin_horizon_anti_wedge(self, origin_anti_dual(other));
}

Scalar plane_at_origin_plane_weight_contraction(PlaneAtOrigin self, Plane other) {
    return plane_at_origin_point_at_infinity_anti_wedge(self, plane_anti_dual(other));
}

Scalar plane_at_origin_plane_at_origin_weight_contraction(PlaneAtOrigin self, PlaneAtOrigin other) {
    return plane_at_origin_point_at_infinity_anti_wedge(self, plane_at_origin_anti_dual(other));
}

LineAtInfinity plane_at_origin_point_weight_contraction(PlaneAtOrigin self, Point other) {
    return plane_at_origin_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity plane_at_origin_rotor_weight_contraction(PlaneAtOrigin self, Rotor other) {
    return plane_at_origin_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

Scalar plane_at_origin_transflector_weight_contraction(PlaneAtOrigin self, Transflector other) {
    return plane_at_origin_point_at_infinity_anti_wedge(self, transflector_anti_dual(other));
}

Scalar point_flector_weight_contraction(Point self, Flector other) {
    return point_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

Scalar point_motor_weight_contraction(Point self, Motor other) {
    return point_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

Scalar point_multi_vector_weight_contraction(Point self, MultiVector other) {
    return point_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

Scalar point_multi_vector_at_origin_weight_contraction(Point self, MultiVectorAtOrigin other) {
    return point_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Scalar point_origin_weight_contraction(Point self, Origin other) {
    return point_horizon_anti_wedge(self, origin_anti_dual(other));
}

Scalar point_point_weight_contraction(Point self, Point other) {
    return point_horizon_anti_wedge(self, point_anti_dual(other));
}

Scalar point_rotor_weight_contraction(Point self, Rotor other) {
    return point_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

FlectorAtInfinity rotor_flector_weight_contraction(Rotor self, Flector other) {
    return rotor_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

MultiVectorAtInfinity rotor_line_weight_contraction(Rotor self, Line other) {
    return rotor_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

MultiVectorAtInfinity rotor_line_at_origin_weight_contraction(Rotor self, LineAtOrigin other) {
    return rotor_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity rotor_motor_weight_contraction(Rotor self, Motor other) {
    return rotor_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity rotor_multi_vector_weight_contraction(Rotor self, MultiVector other) {
    return rotor_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity rotor_multi_vector_at_origin_weight_contraction(Rotor self, MultiVectorAtOrigin other) {
    return rotor_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

FlectorAtInfinity rotor_origin_weight_contraction(Rotor self, Origin other) {
    return rotor_horizon_anti_wedge(self, origin_anti_dual(other));
}

PointAtInfinity rotor_plane_weight_contraction(Rotor self, Plane other) {
    return rotor_point_at_infinity_anti_wedge(self, plane_anti_dual(other));
}

PointAtInfinity rotor_plane_at_origin_weight_contraction(Rotor self, PlaneAtOrigin other) {
    return rotor_point_at_infinity_anti_wedge(self, plane_at_origin_anti_dual(other));
}

FlectorAtInfinity rotor_point_weight_contraction(Rotor self, Point other) {
    return rotor_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity rotor_rotor_weight_contraction(Rotor self, Rotor other) {
    return rotor_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

PointAtInfinity rotor_transflector_weight_contraction(Rotor self, Transflector other) {
    return rotor_point_at_infinity_anti_wedge(self, transflector_anti_dual(other));
}

MultiVectorAtInfinity transflector_flector_weight_contraction(Transflector self, Flector other) {
    return transflector_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

PointAtInfinity transflector_line_weight_contraction(Transflector self, Line other) {
    return transflector_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

PointAtInfinity transflector_line_at_origin_weight_contraction(Transflector self, LineAtOrigin other) {
    return transflector_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity transflector_motor_weight_contraction(Transflector self, Motor other) {
    return transflector_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity transflector_multi_vector_weight_contraction(Transflector self, MultiVector other) {
    return transflector_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity transflector_multi_vector_at_origin_weight_contraction(Transflector self, MultiVectorAtOrigin other) {
    return transflector_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

LineAtInfinity transflector_origin_weight_contraction(Transflector self, Origin other) {
    return transflector_horizon_anti_wedge(self, origin_anti_dual(other));
}

Scalar transflector_plane_weight_contraction(Transflector self, Plane other) {
    return transflector_point_at_infinity_anti_wedge(self, plane_anti_dual(other));
}

Scalar transflector_plane_at_origin_weight_contraction(Transflector self, PlaneAtOrigin other) {
    return transflector_point_at_infinity_anti_wedge(self, plane_at_origin_anti_dual(other));
}

LineAtInfinity transflector_point_weight_contraction(Transflector self, Point other) {
    return transflector_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity transflector_rotor_weight_contraction(Transflector self, Rotor other) {
    return transflector_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

Scalar transflector_transflector_weight_contraction(Transflector self, Transflector other) {
    return transflector_point_at_infinity_anti_wedge(self, transflector_anti_dual(other));
}

FlectorAtInfinity translator_flector_weight_contraction(Translator self, Flector other) {
    return translator_flector_at_infinity_anti_wedge(self, flector_anti_dual(other));
}

LineAtInfinity translator_line_weight_contraction(Translator self, Line other) {
    return translator_line_at_infinity_anti_wedge(self, line_anti_dual(other));
}

LineAtInfinity translator_line_at_origin_weight_contraction(Translator self, LineAtOrigin other) {
    return translator_line_at_infinity_anti_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity translator_motor_weight_contraction(Translator self, Motor other) {
    return translator_multi_vector_at_infinity_anti_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity translator_multi_vector_weight_contraction(Translator self, MultiVector other) {
    return translator_multi_vector_at_infinity_anti_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity translator_multi_vector_at_origin_weight_contraction(Translator self, MultiVectorAtOrigin other) {
    return translator_multi_vector_at_infinity_anti_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Horizon translator_origin_weight_contraction(Translator self, Origin other) {
    return translator_horizon_anti_wedge(self, origin_anti_dual(other));
}

PointAtInfinity translator_plane_weight_contraction(Translator self, Plane other) {
    return translator_point_at_infinity_anti_wedge(self, plane_anti_dual(other));
}

PointAtInfinity translator_plane_at_origin_weight_contraction(Translator self, PlaneAtOrigin other) {
    return translator_point_at_infinity_anti_wedge(self, plane_at_origin_anti_dual(other));
}

Horizon translator_point_weight_contraction(Translator self, Point other) {
    return translator_horizon_anti_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity translator_rotor_weight_contraction(Translator self, Rotor other) {
    return translator_multi_vector_at_infinity_anti_wedge(self, rotor_anti_dual(other));
}

PointAtInfinity translator_transflector_weight_contraction(Translator self, Transflector other) {
    return translator_point_at_infinity_anti_wedge(self, transflector_anti_dual(other));
}

Motor flector_flector_bulk_expansion(Flector self, Flector other) {
    return flector_flector_wedge(self, flector_dual(other));
}

Motor flector_flector_at_infinity_bulk_expansion(Flector self, FlectorAtInfinity other) {
    return flector_flector_wedge(self, flector_at_infinity_dual(other));
}

Rotor flector_horizon_bulk_expansion(Flector self, Horizon other) {
    return flector_origin_wedge(self, horizon_dual(other));
}

PlaneAtOrigin flector_line_bulk_expansion(Flector self, Line other) {
    return flector_line_at_origin_wedge(self, line_dual(other));
}

PlaneAtOrigin flector_line_at_infinity_bulk_expansion(Flector self, LineAtInfinity other) {
    return flector_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

PlaneAtOrigin flector_motor_bulk_expansion(Flector self, Motor other) {
    return flector_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin flector_multi_vector_bulk_expansion(Flector self, MultiVector other) {
    return flector_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin flector_multi_vector_at_infinity_bulk_expansion(Flector self, MultiVectorAtInfinity other) {
    return flector_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

Rotor flector_plane_bulk_expansion(Flector self, Plane other) {
    return flector_origin_wedge(self, plane_dual(other));
}

AntiScalar flector_point_bulk_expansion(Flector self, Point other) {
    return flector_plane_at_origin_wedge(self, point_dual(other));
}

AntiScalar flector_point_at_infinity_bulk_expansion(Flector self, PointAtInfinity other) {
    return flector_plane_at_origin_wedge(self, point_at_infinity_dual(other));
}

Motor flector_transflector_bulk_expansion(Flector self, Transflector other) {
    return flector_flector_wedge(self, transflector_dual(other));
}

PlaneAtOrigin flector_translator_bulk_expansion(Flector self, Translator other) {
    return flector_line_at_origin_wedge(self, translator_dual(other));
}

Motor flector_at_infinity_flector_bulk_expansion(FlectorAtInfinity self, Flector other) {
    return flector_at_infinity_flector_wedge(self, flector_dual(other));
}

Motor flector_at_infinity_flector_at_infinity_bulk_expansion(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_flector_wedge(self, flector_at_infinity_dual(other));
}

Rotor flector_at_infinity_horizon_bulk_expansion(FlectorAtInfinity self, Horizon other) {
    return flector_at_infinity_origin_wedge(self, horizon_dual(other));
}

PlaneAtOrigin flector_at_infinity_line_bulk_expansion(FlectorAtInfinity self, Line other) {
    return flector_at_infinity_line_at_origin_wedge(self, line_dual(other));
}

PlaneAtOrigin flector_at_infinity_line_at_infinity_bulk_expansion(FlectorAtInfinity self, LineAtInfinity other) {
    return flector_at_infinity_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

PlaneAtOrigin flector_at_infinity_motor_bulk_expansion(FlectorAtInfinity self, Motor other) {
    return flector_at_infinity_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin flector_at_infinity_multi_vector_bulk_expansion(FlectorAtInfinity self, MultiVector other) {
    return flector_at_infinity_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin flector_at_infinity_multi_vector_at_infinity_bulk_expansion(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return flector_at_infinity_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

Rotor flector_at_infinity_plane_bulk_expansion(FlectorAtInfinity self, Plane other) {
    return flector_at_infinity_origin_wedge(self, plane_dual(other));
}

AntiScalar flector_at_infinity_point_bulk_expansion(FlectorAtInfinity self, Point other) {
    return flector_at_infinity_plane_at_origin_wedge(self, point_dual(other));
}

AntiScalar flector_at_infinity_point_at_infinity_bulk_expansion(FlectorAtInfinity self, PointAtInfinity other) {
    return flector_at_infinity_plane_at_origin_wedge(self, point_at_infinity_dual(other));
}

Motor flector_at_infinity_transflector_bulk_expansion(FlectorAtInfinity self, Transflector other) {
    return flector_at_infinity_flector_wedge(self, transflector_dual(other));
}

PlaneAtOrigin flector_at_infinity_translator_bulk_expansion(FlectorAtInfinity self, Translator other) {
    return flector_at_infinity_line_at_origin_wedge(self, translator_dual(other));
}

AntiScalar horizon_flector_bulk_expansion(Horizon self, Flector other) {
    return horizon_flector_wedge(self, flector_dual(other));
}

AntiScalar horizon_flector_at_infinity_bulk_expansion(Horizon self, FlectorAtInfinity other) {
    return horizon_flector_wedge(self, flector_at_infinity_dual(other));
}

AntiScalar horizon_horizon_bulk_expansion(Horizon self, Horizon other) {
    return horizon_origin_wedge(self, horizon_dual(other));
}

AntiScalar horizon_multi_vector_bulk_expansion(Horizon self, MultiVector other) {
    return horizon_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

AntiScalar horizon_multi_vector_at_infinity_bulk_expansion(Horizon self, MultiVectorAtInfinity other) {
    return horizon_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

AntiScalar horizon_plane_bulk_expansion(Horizon self, Plane other) {
    return horizon_origin_wedge(self, plane_dual(other));
}

AntiScalar horizon_transflector_bulk_expansion(Horizon self, Transflector other) {
    return horizon_flector_wedge(self, transflector_dual(other));
}

Plane line_flector_bulk_expansion(Line self, Flector other) {
    return line_flector_wedge(self, flector_dual(other));
}

Plane line_flector_at_infinity_bulk_expansion(Line self, FlectorAtInfinity other) {
    return line_flector_wedge(self, flector_at_infinity_dual(other));
}

PlaneAtOrigin line_horizon_bulk_expansion(Line self, Horizon other) {
    return line_origin_wedge(self, horizon_dual(other));
}

AntiScalar line_line_bulk_expansion(Line self, Line other) {
    return line_line_at_origin_wedge(self, line_dual(other));
}

AntiScalar line_line_at_infinity_bulk_expansion(Line self, LineAtInfinity other) {
    return line_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

AntiScalar line_motor_bulk_expansion(Line self, Motor other) {
    return line_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin line_multi_vector_bulk_expansion(Line self, MultiVector other) {
    return line_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin line_multi_vector_at_infinity_bulk_expansion(Line self, MultiVectorAtInfinity other) {
    return line_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

PlaneAtOrigin line_plane_bulk_expansion(Line self, Plane other) {
    return line_origin_wedge(self, plane_dual(other));
}

Plane line_transflector_bulk_expansion(Line self, Transflector other) {
    return line_flector_wedge(self, transflector_dual(other));
}

AntiScalar line_translator_bulk_expansion(Line self, Translator other) {
    return line_line_at_origin_wedge(self, translator_dual(other));
}

Plane line_at_infinity_flector_bulk_expansion(LineAtInfinity self, Flector other) {
    return line_at_infinity_flector_wedge(self, flector_dual(other));
}

Plane line_at_infinity_flector_at_infinity_bulk_expansion(LineAtInfinity self, FlectorAtInfinity other) {
    return line_at_infinity_flector_wedge(self, flector_at_infinity_dual(other));
}

PlaneAtOrigin line_at_infinity_horizon_bulk_expansion(LineAtInfinity self, Horizon other) {
    return line_at_infinity_origin_wedge(self, horizon_dual(other));
}

AntiScalar line_at_infinity_line_bulk_expansion(LineAtInfinity self, Line other) {
    return line_at_infinity_line_at_origin_wedge(self, line_dual(other));
}

AntiScalar line_at_infinity_line_at_infinity_bulk_expansion(LineAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

AntiScalar line_at_infinity_motor_bulk_expansion(LineAtInfinity self, Motor other) {
    return line_at_infinity_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin line_at_infinity_multi_vector_bulk_expansion(LineAtInfinity self, MultiVector other) {
    return line_at_infinity_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin line_at_infinity_multi_vector_at_infinity_bulk_expansion(LineAtInfinity self, MultiVectorAtInfinity other) {
    return line_at_infinity_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

PlaneAtOrigin line_at_infinity_plane_bulk_expansion(LineAtInfinity self, Plane other) {
    return line_at_infinity_origin_wedge(self, plane_dual(other));
}

Plane line_at_infinity_transflector_bulk_expansion(LineAtInfinity self, Transflector other) {
    return line_at_infinity_flector_wedge(self, transflector_dual(other));
}

AntiScalar line_at_infinity_translator_bulk_expansion(LineAtInfinity self, Translator other) {
    return line_at_infinity_line_at_origin_wedge(self, translator_dual(other));
}

PlaneAtOrigin line_at_origin_flector_bulk_expansion(LineAtOrigin self, Flector other) {
    return line_at_origin_flector_wedge(self, flector_dual(other));
}

PlaneAtOrigin line_at_origin_flector_at_infinity_bulk_expansion(LineAtOrigin self, FlectorAtInfinity other) {
    return line_at_origin_flector_wedge(self, flector_at_infinity_dual(other));
}

PlaneAtOrigin line_at_origin_transflector_bulk_expansion(LineAtOrigin self, Transflector other) {
    return line_at_origin_flector_wedge(self, transflector_dual(other));
}

Plane motor_flector_bulk_expansion(Motor self, Flector other) {
    return motor_flector_wedge(self, flector_dual(other));
}

Plane motor_flector_at_infinity_bulk_expansion(Motor self, FlectorAtInfinity other) {
    return motor_flector_wedge(self, flector_at_infinity_dual(other));
}

PlaneAtOrigin motor_horizon_bulk_expansion(Motor self, Horizon other) {
    return motor_origin_wedge(self, horizon_dual(other));
}

AntiScalar motor_line_bulk_expansion(Motor self, Line other) {
    return motor_line_at_origin_wedge(self, line_dual(other));
}

AntiScalar motor_line_at_infinity_bulk_expansion(Motor self, LineAtInfinity other) {
    return motor_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

AntiScalar motor_motor_bulk_expansion(Motor self, Motor other) {
    return motor_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin motor_multi_vector_bulk_expansion(Motor self, MultiVector other) {
    return motor_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin motor_multi_vector_at_infinity_bulk_expansion(Motor self, MultiVectorAtInfinity other) {
    return motor_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

PlaneAtOrigin motor_plane_bulk_expansion(Motor self, Plane other) {
    return motor_origin_wedge(self, plane_dual(other));
}

Plane motor_transflector_bulk_expansion(Motor self, Transflector other) {
    return motor_flector_wedge(self, transflector_dual(other));
}

AntiScalar motor_translator_bulk_expansion(Motor self, Translator other) {
    return motor_line_at_origin_wedge(self, translator_dual(other));
}

MultiVector multi_vector_flector_bulk_expansion(MultiVector self, Flector other) {
    return multi_vector_flector_wedge(self, flector_dual(other));
}

MultiVector multi_vector_flector_at_infinity_bulk_expansion(MultiVector self, FlectorAtInfinity other) {
    return multi_vector_flector_wedge(self, flector_at_infinity_dual(other));
}

MultiVectorAtOrigin multi_vector_horizon_bulk_expansion(MultiVector self, Horizon other) {
    return multi_vector_origin_wedge(self, horizon_dual(other));
}

MultiVectorAtOrigin multi_vector_line_bulk_expansion(MultiVector self, Line other) {
    return multi_vector_line_at_origin_wedge(self, line_dual(other));
}

MultiVectorAtOrigin multi_vector_line_at_infinity_bulk_expansion(MultiVector self, LineAtInfinity other) {
    return multi_vector_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

MultiVectorAtOrigin multi_vector_motor_bulk_expansion(MultiVector self, Motor other) {
    return multi_vector_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin multi_vector_multi_vector_bulk_expansion(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin multi_vector_multi_vector_at_infinity_bulk_expansion(MultiVector self, MultiVectorAtInfinity other) {
    return multi_vector_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

MultiVectorAtOrigin multi_vector_plane_bulk_expansion(MultiVector self, Plane other) {
    return multi_vector_origin_wedge(self, plane_dual(other));
}

MultiVectorAtOrigin multi_vector_point_bulk_expansion(MultiVector self, Point other) {
    return multi_vector_plane_at_origin_wedge(self, point_dual(other));
}

MultiVectorAtOrigin multi_vector_point_at_infinity_bulk_expansion(MultiVector self, PointAtInfinity other) {
    return multi_vector_plane_at_origin_wedge(self, point_at_infinity_dual(other));
}

MultiVector multi_vector_transflector_bulk_expansion(MultiVector self, Transflector other) {
    return multi_vector_flector_wedge(self, transflector_dual(other));
}

MultiVectorAtOrigin multi_vector_translator_bulk_expansion(MultiVector self, Translator other) {
    return multi_vector_line_at_origin_wedge(self, translator_dual(other));
}

MultiVector multi_vector_at_infinity_flector_bulk_expansion(MultiVectorAtInfinity self, Flector other) {
    return multi_vector_at_infinity_flector_wedge(self, flector_dual(other));
}

MultiVector multi_vector_at_infinity_flector_at_infinity_bulk_expansion(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return multi_vector_at_infinity_flector_wedge(self, flector_at_infinity_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_horizon_bulk_expansion(MultiVectorAtInfinity self, Horizon other) {
    return multi_vector_at_infinity_origin_wedge(self, horizon_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_line_bulk_expansion(MultiVectorAtInfinity self, Line other) {
    return multi_vector_at_infinity_line_at_origin_wedge(self, line_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_line_at_infinity_bulk_expansion(MultiVectorAtInfinity self, LineAtInfinity other) {
    return multi_vector_at_infinity_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_motor_bulk_expansion(MultiVectorAtInfinity self, Motor other) {
    return multi_vector_at_infinity_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_multi_vector_bulk_expansion(MultiVectorAtInfinity self, MultiVector other) {
    return multi_vector_at_infinity_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_multi_vector_at_infinity_bulk_expansion(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_plane_bulk_expansion(MultiVectorAtInfinity self, Plane other) {
    return multi_vector_at_infinity_origin_wedge(self, plane_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_point_bulk_expansion(MultiVectorAtInfinity self, Point other) {
    return multi_vector_at_infinity_plane_at_origin_wedge(self, point_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_point_at_infinity_bulk_expansion(MultiVectorAtInfinity self, PointAtInfinity other) {
    return multi_vector_at_infinity_plane_at_origin_wedge(self, point_at_infinity_dual(other));
}

MultiVector multi_vector_at_infinity_transflector_bulk_expansion(MultiVectorAtInfinity self, Transflector other) {
    return multi_vector_at_infinity_flector_wedge(self, transflector_dual(other));
}

MultiVectorAtOrigin multi_vector_at_infinity_translator_bulk_expansion(MultiVectorAtInfinity self, Translator other) {
    return multi_vector_at_infinity_line_at_origin_wedge(self, translator_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_bulk_expansion(MultiVectorAtOrigin self, Flector other) {
    return multi_vector_at_origin_flector_wedge(self, flector_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_at_infinity_bulk_expansion(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multi_vector_at_origin_flector_wedge(self, flector_at_infinity_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_transflector_bulk_expansion(MultiVectorAtOrigin self, Transflector other) {
    return multi_vector_at_origin_flector_wedge(self, transflector_dual(other));
}

Rotor origin_flector_bulk_expansion(Origin self, Flector other) {
    return origin_flector_wedge(self, flector_dual(other));
}

Rotor origin_flector_at_infinity_bulk_expansion(Origin self, FlectorAtInfinity other) {
    return origin_flector_wedge(self, flector_at_infinity_dual(other));
}

Rotor origin_transflector_bulk_expansion(Origin self, Transflector other) {
    return origin_flector_wedge(self, transflector_dual(other));
}

AntiScalar plane_flector_bulk_expansion(Plane self, Flector other) {
    return plane_flector_wedge(self, flector_dual(other));
}

AntiScalar plane_flector_at_infinity_bulk_expansion(Plane self, FlectorAtInfinity other) {
    return plane_flector_wedge(self, flector_at_infinity_dual(other));
}

AntiScalar plane_horizon_bulk_expansion(Plane self, Horizon other) {
    return plane_origin_wedge(self, horizon_dual(other));
}

AntiScalar plane_multi_vector_bulk_expansion(Plane self, MultiVector other) {
    return plane_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

AntiScalar plane_multi_vector_at_infinity_bulk_expansion(Plane self, MultiVectorAtInfinity other) {
    return plane_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

AntiScalar plane_plane_bulk_expansion(Plane self, Plane other) {
    return plane_origin_wedge(self, plane_dual(other));
}

AntiScalar plane_transflector_bulk_expansion(Plane self, Transflector other) {
    return plane_flector_wedge(self, transflector_dual(other));
}

AntiScalar plane_at_origin_flector_bulk_expansion(PlaneAtOrigin self, Flector other) {
    return plane_at_origin_flector_wedge(self, flector_dual(other));
}

AntiScalar plane_at_origin_flector_at_infinity_bulk_expansion(PlaneAtOrigin self, FlectorAtInfinity other) {
    return plane_at_origin_flector_wedge(self, flector_at_infinity_dual(other));
}

AntiScalar plane_at_origin_transflector_bulk_expansion(PlaneAtOrigin self, Transflector other) {
    return plane_at_origin_flector_wedge(self, transflector_dual(other));
}

Motor point_flector_bulk_expansion(Point self, Flector other) {
    return point_flector_wedge(self, flector_dual(other));
}

Motor point_flector_at_infinity_bulk_expansion(Point self, FlectorAtInfinity other) {
    return point_flector_wedge(self, flector_at_infinity_dual(other));
}

LineAtOrigin point_horizon_bulk_expansion(Point self, Horizon other) {
    return point_origin_wedge(self, horizon_dual(other));
}

PlaneAtOrigin point_line_bulk_expansion(Point self, Line other) {
    return point_line_at_origin_wedge(self, line_dual(other));
}

PlaneAtOrigin point_line_at_infinity_bulk_expansion(Point self, LineAtInfinity other) {
    return point_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

PlaneAtOrigin point_motor_bulk_expansion(Point self, Motor other) {
    return point_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin point_multi_vector_bulk_expansion(Point self, MultiVector other) {
    return point_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin point_multi_vector_at_infinity_bulk_expansion(Point self, MultiVectorAtInfinity other) {
    return point_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

LineAtOrigin point_plane_bulk_expansion(Point self, Plane other) {
    return point_origin_wedge(self, plane_dual(other));
}

AntiScalar point_point_bulk_expansion(Point self, Point other) {
    return point_plane_at_origin_wedge(self, point_dual(other));
}

AntiScalar point_point_at_infinity_bulk_expansion(Point self, PointAtInfinity other) {
    return point_plane_at_origin_wedge(self, point_at_infinity_dual(other));
}

Motor point_transflector_bulk_expansion(Point self, Transflector other) {
    return point_flector_wedge(self, transflector_dual(other));
}

PlaneAtOrigin point_translator_bulk_expansion(Point self, Translator other) {
    return point_line_at_origin_wedge(self, translator_dual(other));
}

Motor point_at_infinity_flector_bulk_expansion(PointAtInfinity self, Flector other) {
    return point_at_infinity_flector_wedge(self, flector_dual(other));
}

Motor point_at_infinity_flector_at_infinity_bulk_expansion(PointAtInfinity self, FlectorAtInfinity other) {
    return point_at_infinity_flector_wedge(self, flector_at_infinity_dual(other));
}

LineAtOrigin point_at_infinity_horizon_bulk_expansion(PointAtInfinity self, Horizon other) {
    return point_at_infinity_origin_wedge(self, horizon_dual(other));
}

PlaneAtOrigin point_at_infinity_line_bulk_expansion(PointAtInfinity self, Line other) {
    return point_at_infinity_line_at_origin_wedge(self, line_dual(other));
}

PlaneAtOrigin point_at_infinity_line_at_infinity_bulk_expansion(PointAtInfinity self, LineAtInfinity other) {
    return point_at_infinity_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

PlaneAtOrigin point_at_infinity_motor_bulk_expansion(PointAtInfinity self, Motor other) {
    return point_at_infinity_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin point_at_infinity_multi_vector_bulk_expansion(PointAtInfinity self, MultiVector other) {
    return point_at_infinity_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin point_at_infinity_multi_vector_at_infinity_bulk_expansion(PointAtInfinity self, MultiVectorAtInfinity other) {
    return point_at_infinity_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

LineAtOrigin point_at_infinity_plane_bulk_expansion(PointAtInfinity self, Plane other) {
    return point_at_infinity_origin_wedge(self, plane_dual(other));
}

AntiScalar point_at_infinity_point_bulk_expansion(PointAtInfinity self, Point other) {
    return point_at_infinity_plane_at_origin_wedge(self, point_dual(other));
}

AntiScalar point_at_infinity_point_at_infinity_bulk_expansion(PointAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_plane_at_origin_wedge(self, point_at_infinity_dual(other));
}

Motor point_at_infinity_transflector_bulk_expansion(PointAtInfinity self, Transflector other) {
    return point_at_infinity_flector_wedge(self, transflector_dual(other));
}

PlaneAtOrigin point_at_infinity_translator_bulk_expansion(PointAtInfinity self, Translator other) {
    return point_at_infinity_line_at_origin_wedge(self, translator_dual(other));
}

PlaneAtOrigin rotor_flector_bulk_expansion(Rotor self, Flector other) {
    return rotor_flector_wedge(self, flector_dual(other));
}

PlaneAtOrigin rotor_flector_at_infinity_bulk_expansion(Rotor self, FlectorAtInfinity other) {
    return rotor_flector_wedge(self, flector_at_infinity_dual(other));
}

PlaneAtOrigin rotor_transflector_bulk_expansion(Rotor self, Transflector other) {
    return rotor_flector_wedge(self, transflector_dual(other));
}

Motor transflector_flector_bulk_expansion(Transflector self, Flector other) {
    return transflector_flector_wedge(self, flector_dual(other));
}

Motor transflector_flector_at_infinity_bulk_expansion(Transflector self, FlectorAtInfinity other) {
    return transflector_flector_wedge(self, flector_at_infinity_dual(other));
}

Rotor transflector_horizon_bulk_expansion(Transflector self, Horizon other) {
    return transflector_origin_wedge(self, horizon_dual(other));
}

PlaneAtOrigin transflector_line_bulk_expansion(Transflector self, Line other) {
    return transflector_line_at_origin_wedge(self, line_dual(other));
}

PlaneAtOrigin transflector_line_at_infinity_bulk_expansion(Transflector self, LineAtInfinity other) {
    return transflector_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

PlaneAtOrigin transflector_motor_bulk_expansion(Transflector self, Motor other) {
    return transflector_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin transflector_multi_vector_bulk_expansion(Transflector self, MultiVector other) {
    return transflector_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin transflector_multi_vector_at_infinity_bulk_expansion(Transflector self, MultiVectorAtInfinity other) {
    return transflector_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

Rotor transflector_plane_bulk_expansion(Transflector self, Plane other) {
    return transflector_origin_wedge(self, plane_dual(other));
}

AntiScalar transflector_point_bulk_expansion(Transflector self, Point other) {
    return transflector_plane_at_origin_wedge(self, point_dual(other));
}

AntiScalar transflector_point_at_infinity_bulk_expansion(Transflector self, PointAtInfinity other) {
    return transflector_plane_at_origin_wedge(self, point_at_infinity_dual(other));
}

Motor transflector_transflector_bulk_expansion(Transflector self, Transflector other) {
    return transflector_flector_wedge(self, transflector_dual(other));
}

PlaneAtOrigin transflector_translator_bulk_expansion(Transflector self, Translator other) {
    return transflector_line_at_origin_wedge(self, translator_dual(other));
}

Plane translator_flector_bulk_expansion(Translator self, Flector other) {
    return translator_flector_wedge(self, flector_dual(other));
}

Plane translator_flector_at_infinity_bulk_expansion(Translator self, FlectorAtInfinity other) {
    return translator_flector_wedge(self, flector_at_infinity_dual(other));
}

PlaneAtOrigin translator_horizon_bulk_expansion(Translator self, Horizon other) {
    return translator_origin_wedge(self, horizon_dual(other));
}

AntiScalar translator_line_bulk_expansion(Translator self, Line other) {
    return translator_line_at_origin_wedge(self, line_dual(other));
}

AntiScalar translator_line_at_infinity_bulk_expansion(Translator self, LineAtInfinity other) {
    return translator_line_at_origin_wedge(self, line_at_infinity_dual(other));
}

AntiScalar translator_motor_bulk_expansion(Translator self, Motor other) {
    return translator_line_at_origin_wedge(self, motor_dual(other));
}

MultiVectorAtOrigin translator_multi_vector_bulk_expansion(Translator self, MultiVector other) {
    return translator_multi_vector_at_origin_wedge(self, multi_vector_dual(other));
}

MultiVectorAtOrigin translator_multi_vector_at_infinity_bulk_expansion(Translator self, MultiVectorAtInfinity other) {
    return translator_multi_vector_at_origin_wedge(self, multi_vector_at_infinity_dual(other));
}

PlaneAtOrigin translator_plane_bulk_expansion(Translator self, Plane other) {
    return translator_origin_wedge(self, plane_dual(other));
}

Plane translator_transflector_bulk_expansion(Translator self, Transflector other) {
    return translator_flector_wedge(self, transflector_dual(other));
}

AntiScalar translator_translator_bulk_expansion(Translator self, Translator other) {
    return translator_line_at_origin_wedge(self, translator_dual(other));
}

Motor flector_flector_weight_expansion(Flector self, Flector other) {
    return flector_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

Plane flector_line_weight_expansion(Flector self, Line other) {
    return flector_line_at_infinity_wedge(self, line_anti_dual(other));
}

Plane flector_line_at_origin_weight_expansion(Flector self, LineAtOrigin other) {
    return flector_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVector flector_motor_weight_expansion(Flector self, Motor other) {
    return flector_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVector flector_multi_vector_weight_expansion(Flector self, MultiVector other) {
    return flector_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVector flector_multi_vector_at_origin_weight_expansion(Flector self, MultiVectorAtOrigin other) {
    return flector_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

AntiScalar flector_origin_weight_expansion(Flector self, Origin other) {
    return flector_horizon_wedge(self, origin_anti_dual(other));
}

Motor flector_plane_weight_expansion(Flector self, Plane other) {
    return flector_point_at_infinity_wedge(self, plane_anti_dual(other));
}

Motor flector_plane_at_origin_weight_expansion(Flector self, PlaneAtOrigin other) {
    return flector_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

AntiScalar flector_point_weight_expansion(Flector self, Point other) {
    return flector_horizon_wedge(self, point_anti_dual(other));
}

MultiVector flector_rotor_weight_expansion(Flector self, Rotor other) {
    return flector_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

Motor flector_transflector_weight_expansion(Flector self, Transflector other) {
    return flector_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

LineAtInfinity flector_at_infinity_flector_weight_expansion(FlectorAtInfinity self, Flector other) {
    return flector_at_infinity_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

Horizon flector_at_infinity_line_weight_expansion(FlectorAtInfinity self, Line other) {
    return flector_at_infinity_line_at_infinity_wedge(self, line_anti_dual(other));
}

Horizon flector_at_infinity_line_at_origin_weight_expansion(FlectorAtInfinity self, LineAtOrigin other) {
    return flector_at_infinity_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_motor_weight_expansion(FlectorAtInfinity self, Motor other) {
    return flector_at_infinity_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_weight_expansion(FlectorAtInfinity self, MultiVector other) {
    return flector_at_infinity_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_origin_weight_expansion(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return flector_at_infinity_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

LineAtInfinity flector_at_infinity_plane_weight_expansion(FlectorAtInfinity self, Plane other) {
    return flector_at_infinity_point_at_infinity_wedge(self, plane_anti_dual(other));
}

LineAtInfinity flector_at_infinity_plane_at_origin_weight_expansion(FlectorAtInfinity self, PlaneAtOrigin other) {
    return flector_at_infinity_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVectorAtInfinity flector_at_infinity_rotor_weight_expansion(FlectorAtInfinity self, Rotor other) {
    return flector_at_infinity_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

LineAtInfinity flector_at_infinity_transflector_weight_expansion(FlectorAtInfinity self, Transflector other) {
    return flector_at_infinity_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

Horizon horizon_motor_weight_expansion(Horizon self, Motor other) {
    return horizon_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

Horizon horizon_multi_vector_weight_expansion(Horizon self, MultiVector other) {
    return horizon_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

Horizon horizon_multi_vector_at_origin_weight_expansion(Horizon self, MultiVectorAtOrigin other) {
    return horizon_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Horizon horizon_rotor_weight_expansion(Horizon self, Rotor other) {
    return horizon_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

Plane line_flector_weight_expansion(Line self, Flector other) {
    return line_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

AntiScalar line_line_weight_expansion(Line self, Line other) {
    return line_line_at_infinity_wedge(self, line_anti_dual(other));
}

AntiScalar line_line_at_origin_weight_expansion(Line self, LineAtOrigin other) {
    return line_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVector line_motor_weight_expansion(Line self, Motor other) {
    return line_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVector line_multi_vector_weight_expansion(Line self, MultiVector other) {
    return line_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVector line_multi_vector_at_origin_weight_expansion(Line self, MultiVectorAtOrigin other) {
    return line_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Plane line_plane_weight_expansion(Line self, Plane other) {
    return line_point_at_infinity_wedge(self, plane_anti_dual(other));
}

Plane line_plane_at_origin_weight_expansion(Line self, PlaneAtOrigin other) {
    return line_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVector line_rotor_weight_expansion(Line self, Rotor other) {
    return line_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

Plane line_transflector_weight_expansion(Line self, Transflector other) {
    return line_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

Horizon line_at_infinity_flector_weight_expansion(LineAtInfinity self, Flector other) {
    return line_at_infinity_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

MultiVectorAtInfinity line_at_infinity_motor_weight_expansion(LineAtInfinity self, Motor other) {
    return line_at_infinity_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_weight_expansion(LineAtInfinity self, MultiVector other) {
    return line_at_infinity_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_origin_weight_expansion(LineAtInfinity self, MultiVectorAtOrigin other) {
    return line_at_infinity_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Horizon line_at_infinity_plane_weight_expansion(LineAtInfinity self, Plane other) {
    return line_at_infinity_point_at_infinity_wedge(self, plane_anti_dual(other));
}

Horizon line_at_infinity_plane_at_origin_weight_expansion(LineAtInfinity self, PlaneAtOrigin other) {
    return line_at_infinity_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVectorAtInfinity line_at_infinity_rotor_weight_expansion(LineAtInfinity self, Rotor other) {
    return line_at_infinity_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

Horizon line_at_infinity_transflector_weight_expansion(LineAtInfinity self, Transflector other) {
    return line_at_infinity_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

PlaneAtOrigin line_at_origin_flector_weight_expansion(LineAtOrigin self, Flector other) {
    return line_at_origin_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

AntiScalar line_at_origin_line_weight_expansion(LineAtOrigin self, Line other) {
    return line_at_origin_line_at_infinity_wedge(self, line_anti_dual(other));
}

AntiScalar line_at_origin_line_at_origin_weight_expansion(LineAtOrigin self, LineAtOrigin other) {
    return line_at_origin_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtOrigin line_at_origin_motor_weight_expansion(LineAtOrigin self, Motor other) {
    return line_at_origin_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_weight_expansion(LineAtOrigin self, MultiVector other) {
    return line_at_origin_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_weight_expansion(LineAtOrigin self, MultiVectorAtOrigin other) {
    return line_at_origin_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

PlaneAtOrigin line_at_origin_plane_weight_expansion(LineAtOrigin self, Plane other) {
    return line_at_origin_point_at_infinity_wedge(self, plane_anti_dual(other));
}

PlaneAtOrigin line_at_origin_plane_at_origin_weight_expansion(LineAtOrigin self, PlaneAtOrigin other) {
    return line_at_origin_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVectorAtOrigin line_at_origin_rotor_weight_expansion(LineAtOrigin self, Rotor other) {
    return line_at_origin_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

PlaneAtOrigin line_at_origin_transflector_weight_expansion(LineAtOrigin self, Transflector other) {
    return line_at_origin_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

Plane motor_flector_weight_expansion(Motor self, Flector other) {
    return motor_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

AntiScalar motor_line_weight_expansion(Motor self, Line other) {
    return motor_line_at_infinity_wedge(self, line_anti_dual(other));
}

AntiScalar motor_line_at_origin_weight_expansion(Motor self, LineAtOrigin other) {
    return motor_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVector motor_motor_weight_expansion(Motor self, Motor other) {
    return motor_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVector motor_multi_vector_weight_expansion(Motor self, MultiVector other) {
    return motor_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVector motor_multi_vector_at_origin_weight_expansion(Motor self, MultiVectorAtOrigin other) {
    return motor_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Plane motor_plane_weight_expansion(Motor self, Plane other) {
    return motor_point_at_infinity_wedge(self, plane_anti_dual(other));
}

Plane motor_plane_at_origin_weight_expansion(Motor self, PlaneAtOrigin other) {
    return motor_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVector motor_rotor_weight_expansion(Motor self, Rotor other) {
    return motor_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

Plane motor_transflector_weight_expansion(Motor self, Transflector other) {
    return motor_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

MultiVector multi_vector_flector_weight_expansion(MultiVector self, Flector other) {
    return multi_vector_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

MultiVector multi_vector_line_weight_expansion(MultiVector self, Line other) {
    return multi_vector_line_at_infinity_wedge(self, line_anti_dual(other));
}

MultiVector multi_vector_line_at_origin_weight_expansion(MultiVector self, LineAtOrigin other) {
    return multi_vector_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVector multi_vector_motor_weight_expansion(MultiVector self, Motor other) {
    return multi_vector_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVector multi_vector_multi_vector_weight_expansion(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVector multi_vector_multi_vector_at_origin_weight_expansion(MultiVector self, MultiVectorAtOrigin other) {
    return multi_vector_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

MultiVector multi_vector_origin_weight_expansion(MultiVector self, Origin other) {
    return multi_vector_horizon_wedge(self, origin_anti_dual(other));
}

MultiVector multi_vector_plane_weight_expansion(MultiVector self, Plane other) {
    return multi_vector_point_at_infinity_wedge(self, plane_anti_dual(other));
}

MultiVector multi_vector_plane_at_origin_weight_expansion(MultiVector self, PlaneAtOrigin other) {
    return multi_vector_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVector multi_vector_point_weight_expansion(MultiVector self, Point other) {
    return multi_vector_horizon_wedge(self, point_anti_dual(other));
}

MultiVector multi_vector_rotor_weight_expansion(MultiVector self, Rotor other) {
    return multi_vector_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

MultiVector multi_vector_transflector_weight_expansion(MultiVector self, Transflector other) {
    return multi_vector_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_weight_expansion(MultiVectorAtInfinity self, Flector other) {
    return multi_vector_at_infinity_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_weight_expansion(MultiVectorAtInfinity self, Line other) {
    return multi_vector_at_infinity_line_at_infinity_wedge(self, line_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_origin_weight_expansion(MultiVectorAtInfinity self, LineAtOrigin other) {
    return multi_vector_at_infinity_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_motor_weight_expansion(MultiVectorAtInfinity self, Motor other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_weight_expansion(MultiVectorAtInfinity self, MultiVector other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_origin_weight_expansion(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Horizon multi_vector_at_infinity_origin_weight_expansion(MultiVectorAtInfinity self, Origin other) {
    return multi_vector_at_infinity_horizon_wedge(self, origin_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_weight_expansion(MultiVectorAtInfinity self, Plane other) {
    return multi_vector_at_infinity_point_at_infinity_wedge(self, plane_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_at_origin_weight_expansion(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return multi_vector_at_infinity_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

Horizon multi_vector_at_infinity_point_weight_expansion(MultiVectorAtInfinity self, Point other) {
    return multi_vector_at_infinity_horizon_wedge(self, point_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_rotor_weight_expansion(MultiVectorAtInfinity self, Rotor other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

MultiVectorAtInfinity multi_vector_at_infinity_transflector_weight_expansion(MultiVectorAtInfinity self, Transflector other) {
    return multi_vector_at_infinity_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_flector_weight_expansion(MultiVectorAtOrigin self, Flector other) {
    return multi_vector_at_origin_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_weight_expansion(MultiVectorAtOrigin self, Line other) {
    return multi_vector_at_origin_line_at_infinity_wedge(self, line_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_origin_weight_expansion(MultiVectorAtOrigin self, LineAtOrigin other) {
    return multi_vector_at_origin_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_motor_weight_expansion(MultiVectorAtOrigin self, Motor other) {
    return multi_vector_at_origin_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_weight_expansion(MultiVectorAtOrigin self, MultiVector other) {
    return multi_vector_at_origin_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_weight_expansion(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

AntiScalar multi_vector_at_origin_origin_weight_expansion(MultiVectorAtOrigin self, Origin other) {
    return multi_vector_at_origin_horizon_wedge(self, origin_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_plane_weight_expansion(MultiVectorAtOrigin self, Plane other) {
    return multi_vector_at_origin_point_at_infinity_wedge(self, plane_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_plane_at_origin_weight_expansion(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return multi_vector_at_origin_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

AntiScalar multi_vector_at_origin_point_weight_expansion(MultiVectorAtOrigin self, Point other) {
    return multi_vector_at_origin_horizon_wedge(self, point_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_rotor_weight_expansion(MultiVectorAtOrigin self, Rotor other) {
    return multi_vector_at_origin_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

MultiVectorAtOrigin multi_vector_at_origin_transflector_weight_expansion(MultiVectorAtOrigin self, Transflector other) {
    return multi_vector_at_origin_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

Rotor origin_flector_weight_expansion(Origin self, Flector other) {
    return origin_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

PlaneAtOrigin origin_line_weight_expansion(Origin self, Line other) {
    return origin_line_at_infinity_wedge(self, line_anti_dual(other));
}

PlaneAtOrigin origin_line_at_origin_weight_expansion(Origin self, LineAtOrigin other) {
    return origin_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtOrigin origin_motor_weight_expansion(Origin self, Motor other) {
    return origin_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVectorAtOrigin origin_multi_vector_weight_expansion(Origin self, MultiVector other) {
    return origin_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtOrigin origin_multi_vector_at_origin_weight_expansion(Origin self, MultiVectorAtOrigin other) {
    return origin_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

AntiScalar origin_origin_weight_expansion(Origin self, Origin other) {
    return origin_horizon_wedge(self, origin_anti_dual(other));
}

LineAtOrigin origin_plane_weight_expansion(Origin self, Plane other) {
    return origin_point_at_infinity_wedge(self, plane_anti_dual(other));
}

LineAtOrigin origin_plane_at_origin_weight_expansion(Origin self, PlaneAtOrigin other) {
    return origin_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

AntiScalar origin_point_weight_expansion(Origin self, Point other) {
    return origin_horizon_wedge(self, point_anti_dual(other));
}

MultiVectorAtOrigin origin_rotor_weight_expansion(Origin self, Rotor other) {
    return origin_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

LineAtOrigin origin_transflector_weight_expansion(Origin self, Transflector other) {
    return origin_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

AntiScalar plane_flector_weight_expansion(Plane self, Flector other) {
    return plane_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

MultiVector plane_motor_weight_expansion(Plane self, Motor other) {
    return plane_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVector plane_multi_vector_weight_expansion(Plane self, MultiVector other) {
    return plane_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVector plane_multi_vector_at_origin_weight_expansion(Plane self, MultiVectorAtOrigin other) {
    return plane_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

AntiScalar plane_plane_weight_expansion(Plane self, Plane other) {
    return plane_point_at_infinity_wedge(self, plane_anti_dual(other));
}

AntiScalar plane_plane_at_origin_weight_expansion(Plane self, PlaneAtOrigin other) {
    return plane_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVector plane_rotor_weight_expansion(Plane self, Rotor other) {
    return plane_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

AntiScalar plane_transflector_weight_expansion(Plane self, Transflector other) {
    return plane_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

AntiScalar plane_at_origin_flector_weight_expansion(PlaneAtOrigin self, Flector other) {
    return plane_at_origin_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

MultiVectorAtOrigin plane_at_origin_motor_weight_expansion(PlaneAtOrigin self, Motor other) {
    return plane_at_origin_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_weight_expansion(PlaneAtOrigin self, MultiVector other) {
    return plane_at_origin_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_weight_expansion(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return plane_at_origin_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

AntiScalar plane_at_origin_plane_weight_expansion(PlaneAtOrigin self, Plane other) {
    return plane_at_origin_point_at_infinity_wedge(self, plane_anti_dual(other));
}

AntiScalar plane_at_origin_plane_at_origin_weight_expansion(PlaneAtOrigin self, PlaneAtOrigin other) {
    return plane_at_origin_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVectorAtOrigin plane_at_origin_rotor_weight_expansion(PlaneAtOrigin self, Rotor other) {
    return plane_at_origin_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

AntiScalar plane_at_origin_transflector_weight_expansion(PlaneAtOrigin self, Transflector other) {
    return plane_at_origin_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

Motor point_flector_weight_expansion(Point self, Flector other) {
    return point_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

Plane point_line_weight_expansion(Point self, Line other) {
    return point_line_at_infinity_wedge(self, line_anti_dual(other));
}

Plane point_line_at_origin_weight_expansion(Point self, LineAtOrigin other) {
    return point_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVector point_motor_weight_expansion(Point self, Motor other) {
    return point_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVector point_multi_vector_weight_expansion(Point self, MultiVector other) {
    return point_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVector point_multi_vector_at_origin_weight_expansion(Point self, MultiVectorAtOrigin other) {
    return point_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

AntiScalar point_origin_weight_expansion(Point self, Origin other) {
    return point_horizon_wedge(self, origin_anti_dual(other));
}

Line point_plane_weight_expansion(Point self, Plane other) {
    return point_point_at_infinity_wedge(self, plane_anti_dual(other));
}

Line point_plane_at_origin_weight_expansion(Point self, PlaneAtOrigin other) {
    return point_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

AntiScalar point_point_weight_expansion(Point self, Point other) {
    return point_horizon_wedge(self, point_anti_dual(other));
}

MultiVector point_rotor_weight_expansion(Point self, Rotor other) {
    return point_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

Line point_transflector_weight_expansion(Point self, Transflector other) {
    return point_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

LineAtInfinity point_at_infinity_flector_weight_expansion(PointAtInfinity self, Flector other) {
    return point_at_infinity_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

Horizon point_at_infinity_line_weight_expansion(PointAtInfinity self, Line other) {
    return point_at_infinity_line_at_infinity_wedge(self, line_anti_dual(other));
}

Horizon point_at_infinity_line_at_origin_weight_expansion(PointAtInfinity self, LineAtOrigin other) {
    return point_at_infinity_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtInfinity point_at_infinity_motor_weight_expansion(PointAtInfinity self, Motor other) {
    return point_at_infinity_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_weight_expansion(PointAtInfinity self, MultiVector other) {
    return point_at_infinity_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_origin_weight_expansion(PointAtInfinity self, MultiVectorAtOrigin other) {
    return point_at_infinity_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

LineAtInfinity point_at_infinity_plane_weight_expansion(PointAtInfinity self, Plane other) {
    return point_at_infinity_point_at_infinity_wedge(self, plane_anti_dual(other));
}

LineAtInfinity point_at_infinity_plane_at_origin_weight_expansion(PointAtInfinity self, PlaneAtOrigin other) {
    return point_at_infinity_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVectorAtInfinity point_at_infinity_rotor_weight_expansion(PointAtInfinity self, Rotor other) {
    return point_at_infinity_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

LineAtInfinity point_at_infinity_transflector_weight_expansion(PointAtInfinity self, Transflector other) {
    return point_at_infinity_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

PlaneAtOrigin rotor_flector_weight_expansion(Rotor self, Flector other) {
    return rotor_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

AntiScalar rotor_line_weight_expansion(Rotor self, Line other) {
    return rotor_line_at_infinity_wedge(self, line_anti_dual(other));
}

AntiScalar rotor_line_at_origin_weight_expansion(Rotor self, LineAtOrigin other) {
    return rotor_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVectorAtOrigin rotor_motor_weight_expansion(Rotor self, Motor other) {
    return rotor_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVectorAtOrigin rotor_multi_vector_weight_expansion(Rotor self, MultiVector other) {
    return rotor_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_weight_expansion(Rotor self, MultiVectorAtOrigin other) {
    return rotor_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

PlaneAtOrigin rotor_plane_weight_expansion(Rotor self, Plane other) {
    return rotor_point_at_infinity_wedge(self, plane_anti_dual(other));
}

PlaneAtOrigin rotor_plane_at_origin_weight_expansion(Rotor self, PlaneAtOrigin other) {
    return rotor_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVectorAtOrigin rotor_rotor_weight_expansion(Rotor self, Rotor other) {
    return rotor_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

PlaneAtOrigin rotor_transflector_weight_expansion(Rotor self, Transflector other) {
    return rotor_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

Translator transflector_flector_weight_expansion(Transflector self, Flector other) {
    return transflector_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

Horizon transflector_line_weight_expansion(Transflector self, Line other) {
    return transflector_line_at_infinity_wedge(self, line_anti_dual(other));
}

Horizon transflector_line_at_origin_weight_expansion(Transflector self, LineAtOrigin other) {
    return transflector_line_at_infinity_wedge(self, line_at_origin_anti_dual(other));
}

MultiVector transflector_motor_weight_expansion(Transflector self, Motor other) {
    return transflector_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVector transflector_multi_vector_weight_expansion(Transflector self, MultiVector other) {
    return transflector_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVector transflector_multi_vector_at_origin_weight_expansion(Transflector self, MultiVectorAtOrigin other) {
    return transflector_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Translator transflector_plane_weight_expansion(Transflector self, Plane other) {
    return transflector_point_at_infinity_wedge(self, plane_anti_dual(other));
}

Translator transflector_plane_at_origin_weight_expansion(Transflector self, PlaneAtOrigin other) {
    return transflector_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVector transflector_rotor_weight_expansion(Transflector self, Rotor other) {
    return transflector_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

Translator transflector_transflector_weight_expansion(Transflector self, Transflector other) {
    return transflector_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

Horizon translator_flector_weight_expansion(Translator self, Flector other) {
    return translator_flector_at_infinity_wedge(self, flector_anti_dual(other));
}

MultiVector translator_motor_weight_expansion(Translator self, Motor other) {
    return translator_multi_vector_at_infinity_wedge(self, motor_anti_dual(other));
}

MultiVector translator_multi_vector_weight_expansion(Translator self, MultiVector other) {
    return translator_multi_vector_at_infinity_wedge(self, multi_vector_anti_dual(other));
}

MultiVector translator_multi_vector_at_origin_weight_expansion(Translator self, MultiVectorAtOrigin other) {
    return translator_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_anti_dual(other));
}

Horizon translator_plane_weight_expansion(Translator self, Plane other) {
    return translator_point_at_infinity_wedge(self, plane_anti_dual(other));
}

Horizon translator_plane_at_origin_weight_expansion(Translator self, PlaneAtOrigin other) {
    return translator_point_at_infinity_wedge(self, plane_at_origin_anti_dual(other));
}

MultiVector translator_rotor_weight_expansion(Translator self, Rotor other) {
    return translator_multi_vector_at_infinity_wedge(self, rotor_anti_dual(other));
}

Horizon translator_transflector_weight_expansion(Translator self, Transflector other) {
    return translator_point_at_infinity_wedge(self, transflector_anti_dual(other));
}

MultiVector flector_flector_anti_project_via_horizon_onto(Flector self, Flector other) {
    return flector_multi_vector_wedge(other, flector_flector_bulk_contraction(self, other));
}

MultiVector flector_flector_at_infinity_anti_project_via_horizon_onto(Flector self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_wedge(other, flector_flector_at_infinity_bulk_contraction(self, other));
}

Horizon flector_horizon_anti_project_via_horizon_onto(Flector self, Horizon other) {
    return horizon_scalar_wedge(other, flector_horizon_bulk_contraction(self, other));
}

Plane flector_line_anti_project_via_horizon_onto(Flector self, Line other) {
    return line_point_wedge(other, flector_line_bulk_contraction(self, other));
}

Plane flector_line_at_infinity_anti_project_via_horizon_onto(Flector self, LineAtInfinity other) {
    return line_at_infinity_point_wedge(other, flector_line_at_infinity_bulk_contraction(self, other));
}

Plane flector_motor_anti_project_via_horizon_onto(Flector self, Motor other) {
    return motor_point_wedge(other, flector_motor_bulk_contraction(self, other));
}

MultiVector flector_multi_vector_anti_project_via_horizon_onto(Flector self, MultiVector other) {
    return multi_vector_multi_vector_wedge(other, flector_multi_vector_bulk_contraction(self, other));
}

MultiVector flector_multi_vector_at_infinity_anti_project_via_horizon_onto(Flector self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_wedge(other, flector_multi_vector_at_infinity_bulk_contraction(self, other));
}

Plane flector_plane_anti_project_via_horizon_onto(Flector self, Plane other) {
    return plane_scalar_wedge(other, flector_plane_bulk_contraction(self, other));
}

MultiVector flector_point_anti_project_via_horizon_onto(Flector self, Point other) {
    return point_multi_vector_wedge(other, flector_point_bulk_contraction(self, other));
}

MultiVector flector_point_at_infinity_anti_project_via_horizon_onto(Flector self, PointAtInfinity other) {
    return point_at_infinity_multi_vector_wedge(other, flector_point_at_infinity_bulk_contraction(self, other));
}

MultiVector flector_transflector_anti_project_via_horizon_onto(Flector self, Transflector other) {
    return transflector_multi_vector_wedge(other, flector_transflector_bulk_contraction(self, other));
}

Plane flector_translator_anti_project_via_horizon_onto(Flector self, Translator other) {
    return translator_point_wedge(other, flector_translator_bulk_contraction(self, other));
}

MultiVector flector_at_infinity_flector_anti_project_via_horizon_onto(FlectorAtInfinity self, Flector other) {
    return flector_multi_vector_at_infinity_wedge(other, flector_at_infinity_flector_bulk_contraction(self, other));
}

MultiVectorAtInfinity flector_at_infinity_flector_at_infinity_anti_project_via_horizon_onto(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_at_infinity_wedge(other, flector_at_infinity_flector_at_infinity_bulk_contraction(self, other));
}

Horizon flector_at_infinity_horizon_anti_project_via_horizon_onto(FlectorAtInfinity self, Horizon other) {
    return horizon_scalar_wedge(other, flector_at_infinity_horizon_bulk_contraction(self, other));
}

Plane flector_at_infinity_line_anti_project_via_horizon_onto(FlectorAtInfinity self, Line other) {
    return line_point_at_infinity_wedge(other, flector_at_infinity_line_bulk_contraction(self, other));
}

Horizon flector_at_infinity_line_at_infinity_anti_project_via_horizon_onto(FlectorAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_point_at_infinity_wedge(other, flector_at_infinity_line_at_infinity_bulk_contraction(self, other));
}

Plane flector_at_infinity_motor_anti_project_via_horizon_onto(FlectorAtInfinity self, Motor other) {
    return motor_point_at_infinity_wedge(other, flector_at_infinity_motor_bulk_contraction(self, other));
}

MultiVector flector_at_infinity_multi_vector_anti_project_via_horizon_onto(FlectorAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_wedge(other, flector_at_infinity_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_anti_project_via_horizon_onto(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_wedge(other, flector_at_infinity_multi_vector_at_infinity_bulk_contraction(self, other));
}

Plane flector_at_infinity_plane_anti_project_via_horizon_onto(FlectorAtInfinity self, Plane other) {
    return plane_scalar_wedge(other, flector_at_infinity_plane_bulk_contraction(self, other));
}

MultiVector flector_at_infinity_point_anti_project_via_horizon_onto(FlectorAtInfinity self, Point other) {
    return point_multi_vector_at_infinity_wedge(other, flector_at_infinity_point_bulk_contraction(self, other));
}

MultiVectorAtInfinity flector_at_infinity_point_at_infinity_anti_project_via_horizon_onto(FlectorAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_multi_vector_at_infinity_wedge(other, flector_at_infinity_point_at_infinity_bulk_contraction(self, other));
}

MultiVector flector_at_infinity_transflector_anti_project_via_horizon_onto(FlectorAtInfinity self, Transflector other) {
    return transflector_multi_vector_at_infinity_wedge(other, flector_at_infinity_transflector_bulk_contraction(self, other));
}

Horizon flector_at_infinity_translator_anti_project_via_horizon_onto(FlectorAtInfinity self, Translator other) {
    return translator_point_at_infinity_wedge(other, flector_at_infinity_translator_bulk_contraction(self, other));
}

MultiVector horizon_flector_anti_project_via_horizon_onto(Horizon self, Flector other) {
    return flector_multi_vector_at_infinity_wedge(other, horizon_flector_bulk_contraction(self, other));
}

MultiVectorAtInfinity horizon_flector_at_infinity_anti_project_via_horizon_onto(Horizon self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_at_infinity_wedge(other, horizon_flector_at_infinity_bulk_contraction(self, other));
}

Horizon horizon_horizon_anti_project_via_horizon_onto(Horizon self, Horizon other) {
    return horizon_scalar_wedge(other, horizon_horizon_bulk_contraction(self, other));
}

Plane horizon_line_anti_project_via_horizon_onto(Horizon self, Line other) {
    return line_point_at_infinity_wedge(other, horizon_line_bulk_contraction(self, other));
}

Horizon horizon_line_at_infinity_anti_project_via_horizon_onto(Horizon self, LineAtInfinity other) {
    return line_at_infinity_point_at_infinity_wedge(other, horizon_line_at_infinity_bulk_contraction(self, other));
}

Plane horizon_motor_anti_project_via_horizon_onto(Horizon self, Motor other) {
    return motor_point_at_infinity_wedge(other, horizon_motor_bulk_contraction(self, other));
}

MultiVector horizon_multi_vector_anti_project_via_horizon_onto(Horizon self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_wedge(other, horizon_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtInfinity horizon_multi_vector_at_infinity_anti_project_via_horizon_onto(Horizon self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_wedge(other, horizon_multi_vector_at_infinity_bulk_contraction(self, other));
}

Plane horizon_plane_anti_project_via_horizon_onto(Horizon self, Plane other) {
    return plane_scalar_wedge(other, horizon_plane_bulk_contraction(self, other));
}

Plane horizon_point_anti_project_via_horizon_onto(Horizon self, Point other) {
    return point_line_at_infinity_wedge(other, horizon_point_bulk_contraction(self, other));
}

Horizon horizon_point_at_infinity_anti_project_via_horizon_onto(Horizon self, PointAtInfinity other) {
    return point_at_infinity_line_at_infinity_wedge(other, horizon_point_at_infinity_bulk_contraction(self, other));
}

MultiVector horizon_transflector_anti_project_via_horizon_onto(Horizon self, Transflector other) {
    return transflector_multi_vector_at_infinity_wedge(other, horizon_transflector_bulk_contraction(self, other));
}

Horizon horizon_translator_anti_project_via_horizon_onto(Horizon self, Translator other) {
    return translator_point_at_infinity_wedge(other, horizon_translator_bulk_contraction(self, other));
}

Motor line_flector_anti_project_via_horizon_onto(Line self, Flector other) {
    return flector_point_wedge(other, line_flector_bulk_contraction(self, other));
}

Motor line_flector_at_infinity_anti_project_via_horizon_onto(Line self, FlectorAtInfinity other) {
    return flector_at_infinity_point_wedge(other, line_flector_at_infinity_bulk_contraction(self, other));
}

Line line_line_anti_project_via_horizon_onto(Line self, Line other) {
    return line_scalar_wedge(other, line_line_bulk_contraction(self, other));
}

LineAtInfinity line_line_at_infinity_anti_project_via_horizon_onto(Line self, LineAtInfinity other) {
    return line_at_infinity_scalar_wedge(other, line_line_at_infinity_bulk_contraction(self, other));
}

Motor line_motor_anti_project_via_horizon_onto(Line self, Motor other) {
    return motor_scalar_wedge(other, line_motor_bulk_contraction(self, other));
}

MultiVector line_multi_vector_anti_project_via_horizon_onto(Line self, MultiVector other) {
    return multi_vector_multi_vector_wedge(other, line_multi_vector_bulk_contraction(self, other));
}

MultiVector line_multi_vector_at_infinity_anti_project_via_horizon_onto(Line self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_wedge(other, line_multi_vector_at_infinity_bulk_contraction(self, other));
}

Line line_point_anti_project_via_horizon_onto(Line self, Point other) {
    return point_point_wedge(other, line_point_bulk_contraction(self, other));
}

Line line_point_at_infinity_anti_project_via_horizon_onto(Line self, PointAtInfinity other) {
    return point_at_infinity_point_wedge(other, line_point_at_infinity_bulk_contraction(self, other));
}

Motor line_transflector_anti_project_via_horizon_onto(Line self, Transflector other) {
    return transflector_point_wedge(other, line_transflector_bulk_contraction(self, other));
}

Translator line_translator_anti_project_via_horizon_onto(Line self, Translator other) {
    return translator_scalar_wedge(other, line_translator_bulk_contraction(self, other));
}

Motor line_at_infinity_flector_anti_project_via_horizon_onto(LineAtInfinity self, Flector other) {
    return flector_point_at_infinity_wedge(other, line_at_infinity_flector_bulk_contraction(self, other));
}

LineAtInfinity line_at_infinity_flector_at_infinity_anti_project_via_horizon_onto(LineAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_point_at_infinity_wedge(other, line_at_infinity_flector_at_infinity_bulk_contraction(self, other));
}

Line line_at_infinity_line_anti_project_via_horizon_onto(LineAtInfinity self, Line other) {
    return line_scalar_wedge(other, line_at_infinity_line_bulk_contraction(self, other));
}

LineAtInfinity line_at_infinity_line_at_infinity_anti_project_via_horizon_onto(LineAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_scalar_wedge(other, line_at_infinity_line_at_infinity_bulk_contraction(self, other));
}

Motor line_at_infinity_motor_anti_project_via_horizon_onto(LineAtInfinity self, Motor other) {
    return motor_scalar_wedge(other, line_at_infinity_motor_bulk_contraction(self, other));
}

MultiVector line_at_infinity_multi_vector_anti_project_via_horizon_onto(LineAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_wedge(other, line_at_infinity_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_anti_project_via_horizon_onto(LineAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_wedge(other, line_at_infinity_multi_vector_at_infinity_bulk_contraction(self, other));
}

Line line_at_infinity_point_anti_project_via_horizon_onto(LineAtInfinity self, Point other) {
    return point_point_at_infinity_wedge(other, line_at_infinity_point_bulk_contraction(self, other));
}

LineAtInfinity line_at_infinity_point_at_infinity_anti_project_via_horizon_onto(LineAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_point_at_infinity_wedge(other, line_at_infinity_point_at_infinity_bulk_contraction(self, other));
}

Translator line_at_infinity_transflector_anti_project_via_horizon_onto(LineAtInfinity self, Transflector other) {
    return transflector_point_at_infinity_wedge(other, line_at_infinity_transflector_bulk_contraction(self, other));
}

Translator line_at_infinity_translator_anti_project_via_horizon_onto(LineAtInfinity self, Translator other) {
    return translator_scalar_wedge(other, line_at_infinity_translator_bulk_contraction(self, other));
}

Motor line_at_origin_flector_anti_project_via_horizon_onto(LineAtOrigin self, Flector other) {
    return flector_point_wedge(other, line_at_origin_flector_bulk_contraction(self, other));
}

Motor line_at_origin_flector_at_infinity_anti_project_via_horizon_onto(LineAtOrigin self, FlectorAtInfinity other) {
    return flector_at_infinity_point_wedge(other, line_at_origin_flector_at_infinity_bulk_contraction(self, other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_anti_project_via_horizon_onto(LineAtOrigin self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_wedge(other, line_at_origin_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_infinity_anti_project_via_horizon_onto(LineAtOrigin self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_wedge(other, line_at_origin_multi_vector_at_infinity_bulk_contraction(self, other));
}

LineAtOrigin line_at_origin_point_anti_project_via_horizon_onto(LineAtOrigin self, Point other) {
    return point_origin_wedge(other, line_at_origin_point_bulk_contraction(self, other));
}

LineAtOrigin line_at_origin_point_at_infinity_anti_project_via_horizon_onto(LineAtOrigin self, PointAtInfinity other) {
    return point_at_infinity_origin_wedge(other, line_at_origin_point_at_infinity_bulk_contraction(self, other));
}

Motor line_at_origin_transflector_anti_project_via_horizon_onto(LineAtOrigin self, Transflector other) {
    return transflector_point_wedge(other, line_at_origin_transflector_bulk_contraction(self, other));
}

Motor motor_flector_anti_project_via_horizon_onto(Motor self, Flector other) {
    return flector_flector_wedge(other, motor_flector_bulk_contraction(self, other));
}

Motor motor_flector_at_infinity_anti_project_via_horizon_onto(Motor self, FlectorAtInfinity other) {
    return flector_at_infinity_flector_wedge(other, motor_flector_at_infinity_bulk_contraction(self, other));
}

AntiScalar motor_horizon_anti_project_via_horizon_onto(Motor self, Horizon other) {
    return horizon_origin_wedge(other, motor_horizon_bulk_contraction(self, other));
}

MultiVector motor_line_anti_project_via_horizon_onto(Motor self, Line other) {
    return line_multi_vector_wedge(other, motor_line_bulk_contraction(self, other));
}

MultiVector motor_line_at_infinity_anti_project_via_horizon_onto(Motor self, LineAtInfinity other) {
    return line_at_infinity_multi_vector_wedge(other, motor_line_at_infinity_bulk_contraction(self, other));
}

MultiVector motor_motor_anti_project_via_horizon_onto(Motor self, Motor other) {
    return motor_multi_vector_wedge(other, motor_motor_bulk_contraction(self, other));
}

MultiVector motor_multi_vector_anti_project_via_horizon_onto(Motor self, MultiVector other) {
    return multi_vector_multi_vector_wedge(other, motor_multi_vector_bulk_contraction(self, other));
}

MultiVector motor_multi_vector_at_infinity_anti_project_via_horizon_onto(Motor self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_wedge(other, motor_multi_vector_at_infinity_bulk_contraction(self, other));
}

AntiScalar motor_plane_anti_project_via_horizon_onto(Motor self, Plane other) {
    return plane_origin_wedge(other, motor_plane_bulk_contraction(self, other));
}

Motor motor_point_anti_project_via_horizon_onto(Motor self, Point other) {
    return point_flector_wedge(other, motor_point_bulk_contraction(self, other));
}

Motor motor_point_at_infinity_anti_project_via_horizon_onto(Motor self, PointAtInfinity other) {
    return point_at_infinity_flector_wedge(other, motor_point_at_infinity_bulk_contraction(self, other));
}

Motor motor_transflector_anti_project_via_horizon_onto(Motor self, Transflector other) {
    return transflector_flector_wedge(other, motor_transflector_bulk_contraction(self, other));
}

MultiVector motor_translator_anti_project_via_horizon_onto(Motor self, Translator other) {
    return translator_multi_vector_wedge(other, motor_translator_bulk_contraction(self, other));
}

MultiVector multi_vector_flector_anti_project_via_horizon_onto(MultiVector self, Flector other) {
    return flector_multi_vector_wedge(other, multi_vector_flector_bulk_contraction(self, other));
}

MultiVector multi_vector_flector_at_infinity_anti_project_via_horizon_onto(MultiVector self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_wedge(other, multi_vector_flector_at_infinity_bulk_contraction(self, other));
}

MultiVector multi_vector_horizon_anti_project_via_horizon_onto(MultiVector self, Horizon other) {
    return horizon_multi_vector_wedge(other, multi_vector_horizon_bulk_contraction(self, other));
}

MultiVector multi_vector_line_anti_project_via_horizon_onto(MultiVector self, Line other) {
    return line_multi_vector_wedge(other, multi_vector_line_bulk_contraction(self, other));
}

MultiVector multi_vector_line_at_infinity_anti_project_via_horizon_onto(MultiVector self, LineAtInfinity other) {
    return line_at_infinity_multi_vector_wedge(other, multi_vector_line_at_infinity_bulk_contraction(self, other));
}

MultiVector multi_vector_motor_anti_project_via_horizon_onto(MultiVector self, Motor other) {
    return motor_multi_vector_wedge(other, multi_vector_motor_bulk_contraction(self, other));
}

MultiVector multi_vector_multi_vector_anti_project_via_horizon_onto(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_wedge(other, multi_vector_multi_vector_bulk_contraction(self, other));
}

MultiVector multi_vector_multi_vector_at_infinity_anti_project_via_horizon_onto(MultiVector self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_wedge(other, multi_vector_multi_vector_at_infinity_bulk_contraction(self, other));
}

MultiVector multi_vector_plane_anti_project_via_horizon_onto(MultiVector self, Plane other) {
    return plane_multi_vector_wedge(other, multi_vector_plane_bulk_contraction(self, other));
}

MultiVector multi_vector_point_anti_project_via_horizon_onto(MultiVector self, Point other) {
    return point_multi_vector_wedge(other, multi_vector_point_bulk_contraction(self, other));
}

MultiVector multi_vector_point_at_infinity_anti_project_via_horizon_onto(MultiVector self, PointAtInfinity other) {
    return point_at_infinity_multi_vector_wedge(other, multi_vector_point_at_infinity_bulk_contraction(self, other));
}

MultiVector multi_vector_transflector_anti_project_via_horizon_onto(MultiVector self, Transflector other) {
    return transflector_multi_vector_wedge(other, multi_vector_transflector_bulk_contraction(self, other));
}

MultiVector multi_vector_translator_anti_project_via_horizon_onto(MultiVector self, Translator other) {
    return translator_multi_vector_wedge(other, multi_vector_translator_bulk_contraction(self, other));
}

MultiVector multi_vector_at_infinity_flector_anti_project_via_horizon_onto(MultiVectorAtInfinity self, Flector other) {
    return flector_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_flector_bulk_contraction(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_anti_project_via_horizon_onto(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_flector_at_infinity_bulk_contraction(self, other));
}

Horizon multi_vector_at_infinity_horizon_anti_project_via_horizon_onto(MultiVectorAtInfinity self, Horizon other) {
    return horizon_scalar_wedge(other, multi_vector_at_infinity_horizon_bulk_contraction(self, other));
}

MultiVector multi_vector_at_infinity_line_anti_project_via_horizon_onto(MultiVectorAtInfinity self, Line other) {
    return line_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_line_bulk_contraction(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_anti_project_via_horizon_onto(MultiVectorAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_line_at_infinity_bulk_contraction(self, other));
}

MultiVector multi_vector_at_infinity_motor_anti_project_via_horizon_onto(MultiVectorAtInfinity self, Motor other) {
    return motor_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_motor_bulk_contraction(self, other));
}

MultiVector multi_vector_at_infinity_multi_vector_anti_project_via_horizon_onto(MultiVectorAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_anti_project_via_horizon_onto(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_multi_vector_at_infinity_bulk_contraction(self, other));
}

Plane multi_vector_at_infinity_plane_anti_project_via_horizon_onto(MultiVectorAtInfinity self, Plane other) {
    return plane_scalar_wedge(other, multi_vector_at_infinity_plane_bulk_contraction(self, other));
}

MultiVector multi_vector_at_infinity_point_anti_project_via_horizon_onto(MultiVectorAtInfinity self, Point other) {
    return point_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_point_bulk_contraction(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_anti_project_via_horizon_onto(MultiVectorAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_point_at_infinity_bulk_contraction(self, other));
}

MultiVector multi_vector_at_infinity_transflector_anti_project_via_horizon_onto(MultiVectorAtInfinity self, Transflector other) {
    return transflector_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_transflector_bulk_contraction(self, other));
}

MultiVector multi_vector_at_infinity_translator_anti_project_via_horizon_onto(MultiVectorAtInfinity self, Translator other) {
    return translator_multi_vector_at_infinity_wedge(other, multi_vector_at_infinity_translator_bulk_contraction(self, other));
}

MultiVector multi_vector_at_origin_flector_anti_project_via_horizon_onto(MultiVectorAtOrigin self, Flector other) {
    return flector_multi_vector_wedge(other, multi_vector_at_origin_flector_bulk_contraction(self, other));
}

MultiVector multi_vector_at_origin_flector_at_infinity_anti_project_via_horizon_onto(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_wedge(other, multi_vector_at_origin_flector_at_infinity_bulk_contraction(self, other));
}

AntiScalar multi_vector_at_origin_horizon_anti_project_via_horizon_onto(MultiVectorAtOrigin self, Horizon other) {
    return horizon_origin_wedge(other, multi_vector_at_origin_horizon_bulk_contraction(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_anti_project_via_horizon_onto(MultiVectorAtOrigin self, Line other) {
    return line_multi_vector_at_origin_wedge(other, multi_vector_at_origin_line_bulk_contraction(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_infinity_anti_project_via_horizon_onto(MultiVectorAtOrigin self, LineAtInfinity other) {
    return line_at_infinity_multi_vector_at_origin_wedge(other, multi_vector_at_origin_line_at_infinity_bulk_contraction(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_motor_anti_project_via_horizon_onto(MultiVectorAtOrigin self, Motor other) {
    return motor_multi_vector_at_origin_wedge(other, multi_vector_at_origin_motor_bulk_contraction(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_anti_project_via_horizon_onto(MultiVectorAtOrigin self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_wedge(other, multi_vector_at_origin_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_infinity_anti_project_via_horizon_onto(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_wedge(other, multi_vector_at_origin_multi_vector_at_infinity_bulk_contraction(self, other));
}

AntiScalar multi_vector_at_origin_plane_anti_project_via_horizon_onto(MultiVectorAtOrigin self, Plane other) {
    return plane_origin_wedge(other, multi_vector_at_origin_plane_bulk_contraction(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_point_anti_project_via_horizon_onto(MultiVectorAtOrigin self, Point other) {
    return point_multi_vector_at_origin_wedge(other, multi_vector_at_origin_point_bulk_contraction(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_point_at_infinity_anti_project_via_horizon_onto(MultiVectorAtOrigin self, PointAtInfinity other) {
    return point_at_infinity_multi_vector_at_origin_wedge(other, multi_vector_at_origin_point_at_infinity_bulk_contraction(self, other));
}

MultiVector multi_vector_at_origin_transflector_anti_project_via_horizon_onto(MultiVectorAtOrigin self, Transflector other) {
    return transflector_multi_vector_wedge(other, multi_vector_at_origin_transflector_bulk_contraction(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_translator_anti_project_via_horizon_onto(MultiVectorAtOrigin self, Translator other) {
    return translator_multi_vector_at_origin_wedge(other, multi_vector_at_origin_translator_bulk_contraction(self, other));
}

Flector origin_flector_anti_project_via_horizon_onto(Origin self, Flector other) {
    return flector_scalar_wedge(other, origin_flector_bulk_contraction(self, other));
}

FlectorAtInfinity origin_flector_at_infinity_anti_project_via_horizon_onto(Origin self, FlectorAtInfinity other) {
    return flector_at_infinity_scalar_wedge(other, origin_flector_at_infinity_bulk_contraction(self, other));
}

MultiVectorAtOrigin origin_multi_vector_anti_project_via_horizon_onto(Origin self, MultiVector other) {
    return multi_vector_origin_wedge(other, origin_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtOrigin origin_multi_vector_at_infinity_anti_project_via_horizon_onto(Origin self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_origin_wedge(other, origin_multi_vector_at_infinity_bulk_contraction(self, other));
}

Transflector origin_transflector_anti_project_via_horizon_onto(Origin self, Transflector other) {
    return transflector_scalar_wedge(other, origin_transflector_bulk_contraction(self, other));
}

MultiVector plane_flector_anti_project_via_horizon_onto(Plane self, Flector other) {
    return flector_multi_vector_wedge(other, plane_flector_bulk_contraction(self, other));
}

MultiVector plane_flector_at_infinity_anti_project_via_horizon_onto(Plane self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_wedge(other, plane_flector_at_infinity_bulk_contraction(self, other));
}

Horizon plane_horizon_anti_project_via_horizon_onto(Plane self, Horizon other) {
    return horizon_scalar_wedge(other, plane_horizon_bulk_contraction(self, other));
}

Plane plane_line_anti_project_via_horizon_onto(Plane self, Line other) {
    return line_point_wedge(other, plane_line_bulk_contraction(self, other));
}

Plane plane_line_at_infinity_anti_project_via_horizon_onto(Plane self, LineAtInfinity other) {
    return line_at_infinity_point_wedge(other, plane_line_at_infinity_bulk_contraction(self, other));
}

Plane plane_motor_anti_project_via_horizon_onto(Plane self, Motor other) {
    return motor_point_wedge(other, plane_motor_bulk_contraction(self, other));
}

MultiVector plane_multi_vector_anti_project_via_horizon_onto(Plane self, MultiVector other) {
    return multi_vector_multi_vector_wedge(other, plane_multi_vector_bulk_contraction(self, other));
}

MultiVector plane_multi_vector_at_infinity_anti_project_via_horizon_onto(Plane self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_wedge(other, plane_multi_vector_at_infinity_bulk_contraction(self, other));
}

Plane plane_plane_anti_project_via_horizon_onto(Plane self, Plane other) {
    return plane_scalar_wedge(other, plane_plane_bulk_contraction(self, other));
}

Plane plane_point_anti_project_via_horizon_onto(Plane self, Point other) {
    return point_line_wedge(other, plane_point_bulk_contraction(self, other));
}

Plane plane_point_at_infinity_anti_project_via_horizon_onto(Plane self, PointAtInfinity other) {
    return point_at_infinity_line_wedge(other, plane_point_at_infinity_bulk_contraction(self, other));
}

MultiVector plane_transflector_anti_project_via_horizon_onto(Plane self, Transflector other) {
    return transflector_multi_vector_wedge(other, plane_transflector_bulk_contraction(self, other));
}

Plane plane_translator_anti_project_via_horizon_onto(Plane self, Translator other) {
    return translator_point_wedge(other, plane_translator_bulk_contraction(self, other));
}

MultiVector plane_at_origin_flector_anti_project_via_horizon_onto(PlaneAtOrigin self, Flector other) {
    return flector_multi_vector_wedge(other, plane_at_origin_flector_bulk_contraction(self, other));
}

MultiVector plane_at_origin_flector_at_infinity_anti_project_via_horizon_onto(PlaneAtOrigin self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_wedge(other, plane_at_origin_flector_at_infinity_bulk_contraction(self, other));
}

PlaneAtOrigin plane_at_origin_line_anti_project_via_horizon_onto(PlaneAtOrigin self, Line other) {
    return line_origin_wedge(other, plane_at_origin_line_bulk_contraction(self, other));
}

PlaneAtOrigin plane_at_origin_line_at_infinity_anti_project_via_horizon_onto(PlaneAtOrigin self, LineAtInfinity other) {
    return line_at_infinity_origin_wedge(other, plane_at_origin_line_at_infinity_bulk_contraction(self, other));
}

PlaneAtOrigin plane_at_origin_motor_anti_project_via_horizon_onto(PlaneAtOrigin self, Motor other) {
    return motor_origin_wedge(other, plane_at_origin_motor_bulk_contraction(self, other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_anti_project_via_horizon_onto(PlaneAtOrigin self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_wedge(other, plane_at_origin_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_infinity_anti_project_via_horizon_onto(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_wedge(other, plane_at_origin_multi_vector_at_infinity_bulk_contraction(self, other));
}

PlaneAtOrigin plane_at_origin_point_anti_project_via_horizon_onto(PlaneAtOrigin self, Point other) {
    return point_line_at_origin_wedge(other, plane_at_origin_point_bulk_contraction(self, other));
}

PlaneAtOrigin plane_at_origin_point_at_infinity_anti_project_via_horizon_onto(PlaneAtOrigin self, PointAtInfinity other) {
    return point_at_infinity_line_at_origin_wedge(other, plane_at_origin_point_at_infinity_bulk_contraction(self, other));
}

MultiVector plane_at_origin_transflector_anti_project_via_horizon_onto(PlaneAtOrigin self, Transflector other) {
    return transflector_multi_vector_wedge(other, plane_at_origin_transflector_bulk_contraction(self, other));
}

PlaneAtOrigin plane_at_origin_translator_anti_project_via_horizon_onto(PlaneAtOrigin self, Translator other) {
    return translator_origin_wedge(other, plane_at_origin_translator_bulk_contraction(self, other));
}

Flector point_flector_anti_project_via_horizon_onto(Point self, Flector other) {
    return flector_scalar_wedge(other, point_flector_bulk_contraction(self, other));
}

FlectorAtInfinity point_flector_at_infinity_anti_project_via_horizon_onto(Point self, FlectorAtInfinity other) {
    return flector_at_infinity_scalar_wedge(other, point_flector_at_infinity_bulk_contraction(self, other));
}

MultiVector point_multi_vector_anti_project_via_horizon_onto(Point self, MultiVector other) {
    return multi_vector_multi_vector_wedge(other, point_multi_vector_bulk_contraction(self, other));
}

MultiVector point_multi_vector_at_infinity_anti_project_via_horizon_onto(Point self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_wedge(other, point_multi_vector_at_infinity_bulk_contraction(self, other));
}

Point point_point_anti_project_via_horizon_onto(Point self, Point other) {
    return point_scalar_wedge(other, point_point_bulk_contraction(self, other));
}

PointAtInfinity point_point_at_infinity_anti_project_via_horizon_onto(Point self, PointAtInfinity other) {
    return point_at_infinity_scalar_wedge(other, point_point_at_infinity_bulk_contraction(self, other));
}

Transflector point_transflector_anti_project_via_horizon_onto(Point self, Transflector other) {
    return transflector_scalar_wedge(other, point_transflector_bulk_contraction(self, other));
}

Flector point_at_infinity_flector_anti_project_via_horizon_onto(PointAtInfinity self, Flector other) {
    return flector_scalar_wedge(other, point_at_infinity_flector_bulk_contraction(self, other));
}

FlectorAtInfinity point_at_infinity_flector_at_infinity_anti_project_via_horizon_onto(PointAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_scalar_wedge(other, point_at_infinity_flector_at_infinity_bulk_contraction(self, other));
}

MultiVector point_at_infinity_multi_vector_anti_project_via_horizon_onto(PointAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_wedge(other, point_at_infinity_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_anti_project_via_horizon_onto(PointAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_infinity_wedge(other, point_at_infinity_multi_vector_at_infinity_bulk_contraction(self, other));
}

Point point_at_infinity_point_anti_project_via_horizon_onto(PointAtInfinity self, Point other) {
    return point_scalar_wedge(other, point_at_infinity_point_bulk_contraction(self, other));
}

PointAtInfinity point_at_infinity_point_at_infinity_anti_project_via_horizon_onto(PointAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_scalar_wedge(other, point_at_infinity_point_at_infinity_bulk_contraction(self, other));
}

Transflector point_at_infinity_transflector_anti_project_via_horizon_onto(PointAtInfinity self, Transflector other) {
    return transflector_scalar_wedge(other, point_at_infinity_transflector_bulk_contraction(self, other));
}

Motor rotor_flector_anti_project_via_horizon_onto(Rotor self, Flector other) {
    return flector_flector_wedge(other, rotor_flector_bulk_contraction(self, other));
}

Motor rotor_flector_at_infinity_anti_project_via_horizon_onto(Rotor self, FlectorAtInfinity other) {
    return flector_at_infinity_flector_wedge(other, rotor_flector_at_infinity_bulk_contraction(self, other));
}

AntiScalar rotor_horizon_anti_project_via_horizon_onto(Rotor self, Horizon other) {
    return horizon_origin_wedge(other, rotor_horizon_bulk_contraction(self, other));
}

AntiScalar rotor_line_anti_project_via_horizon_onto(Rotor self, Line other) {
    return line_line_at_origin_wedge(other, rotor_line_bulk_contraction(self, other));
}

AntiScalar rotor_line_at_infinity_anti_project_via_horizon_onto(Rotor self, LineAtInfinity other) {
    return line_at_infinity_line_at_origin_wedge(other, rotor_line_at_infinity_bulk_contraction(self, other));
}

AntiScalar rotor_motor_anti_project_via_horizon_onto(Rotor self, Motor other) {
    return motor_line_at_origin_wedge(other, rotor_motor_bulk_contraction(self, other));
}

MultiVectorAtOrigin rotor_multi_vector_anti_project_via_horizon_onto(Rotor self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_wedge(other, rotor_multi_vector_bulk_contraction(self, other));
}

MultiVectorAtOrigin rotor_multi_vector_at_infinity_anti_project_via_horizon_onto(Rotor self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_wedge(other, rotor_multi_vector_at_infinity_bulk_contraction(self, other));
}

AntiScalar rotor_plane_anti_project_via_horizon_onto(Rotor self, Plane other) {
    return plane_origin_wedge(other, rotor_plane_bulk_contraction(self, other));
}

Motor rotor_point_anti_project_via_horizon_onto(Rotor self, Point other) {
    return point_flector_wedge(other, rotor_point_bulk_contraction(self, other));
}

Motor rotor_point_at_infinity_anti_project_via_horizon_onto(Rotor self, PointAtInfinity other) {
    return point_at_infinity_flector_wedge(other, rotor_point_at_infinity_bulk_contraction(self, other));
}

Motor rotor_transflector_anti_project_via_horizon_onto(Rotor self, Transflector other) {
    return transflector_flector_wedge(other, rotor_transflector_bulk_contraction(self, other));
}

AntiScalar rotor_translator_anti_project_via_horizon_onto(Rotor self, Translator other) {
    return translator_line_at_origin_wedge(other, rotor_translator_bulk_contraction(self, other));
}

MultiVector transflector_flector_anti_project_via_horizon_onto(Transflector self, Flector other) {
    return flector_multi_vector_wedge(other, transflector_flector_bulk_contraction(self, other));
}

MultiVector transflector_flector_at_infinity_anti_project_via_horizon_onto(Transflector self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_wedge(other, transflector_flector_at_infinity_bulk_contraction(self, other));
}

Horizon transflector_horizon_anti_project_via_horizon_onto(Transflector self, Horizon other) {
    return horizon_scalar_wedge(other, transflector_horizon_bulk_contraction(self, other));
}

Plane transflector_line_anti_project_via_horizon_onto(Transflector self, Line other) {
    return line_point_wedge(other, transflector_line_bulk_contraction(self, other));
}

Plane transflector_line_at_infinity_anti_project_via_horizon_onto(Transflector self, LineAtInfinity other) {
    return line_at_infinity_point_wedge(other, transflector_line_at_infinity_bulk_contraction(self, other));
}

Plane transflector_motor_anti_project_via_horizon_onto(Transflector self, Motor other) {
    return motor_point_wedge(other, transflector_motor_bulk_contraction(self, other));
}

MultiVector transflector_multi_vector_anti_project_via_horizon_onto(Transflector self, MultiVector other) {
    return multi_vector_multi_vector_wedge(other, transflector_multi_vector_bulk_contraction(self, other));
}

MultiVector transflector_multi_vector_at_infinity_anti_project_via_horizon_onto(Transflector self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_wedge(other, transflector_multi_vector_at_infinity_bulk_contraction(self, other));
}

Plane transflector_plane_anti_project_via_horizon_onto(Transflector self, Plane other) {
    return plane_scalar_wedge(other, transflector_plane_bulk_contraction(self, other));
}

MultiVector transflector_point_anti_project_via_horizon_onto(Transflector self, Point other) {
    return point_multi_vector_wedge(other, transflector_point_bulk_contraction(self, other));
}

MultiVector transflector_point_at_infinity_anti_project_via_horizon_onto(Transflector self, PointAtInfinity other) {
    return point_at_infinity_multi_vector_wedge(other, transflector_point_at_infinity_bulk_contraction(self, other));
}

MultiVector transflector_transflector_anti_project_via_horizon_onto(Transflector self, Transflector other) {
    return transflector_multi_vector_wedge(other, transflector_transflector_bulk_contraction(self, other));
}

Plane transflector_translator_anti_project_via_horizon_onto(Transflector self, Translator other) {
    return translator_point_wedge(other, transflector_translator_bulk_contraction(self, other));
}

Motor translator_flector_anti_project_via_horizon_onto(Translator self, Flector other) {
    return flector_flector_wedge(other, translator_flector_bulk_contraction(self, other));
}

Motor translator_flector_at_infinity_anti_project_via_horizon_onto(Translator self, FlectorAtInfinity other) {
    return flector_at_infinity_flector_wedge(other, translator_flector_at_infinity_bulk_contraction(self, other));
}

AntiScalar translator_horizon_anti_project_via_horizon_onto(Translator self, Horizon other) {
    return horizon_origin_wedge(other, translator_horizon_bulk_contraction(self, other));
}

MultiVector translator_line_anti_project_via_horizon_onto(Translator self, Line other) {
    return line_multi_vector_wedge(other, translator_line_bulk_contraction(self, other));
}

MultiVector translator_line_at_infinity_anti_project_via_horizon_onto(Translator self, LineAtInfinity other) {
    return line_at_infinity_multi_vector_wedge(other, translator_line_at_infinity_bulk_contraction(self, other));
}

MultiVector translator_motor_anti_project_via_horizon_onto(Translator self, Motor other) {
    return motor_multi_vector_wedge(other, translator_motor_bulk_contraction(self, other));
}

MultiVector translator_multi_vector_anti_project_via_horizon_onto(Translator self, MultiVector other) {
    return multi_vector_multi_vector_wedge(other, translator_multi_vector_bulk_contraction(self, other));
}

MultiVector translator_multi_vector_at_infinity_anti_project_via_horizon_onto(Translator self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_wedge(other, translator_multi_vector_at_infinity_bulk_contraction(self, other));
}

AntiScalar translator_plane_anti_project_via_horizon_onto(Translator self, Plane other) {
    return plane_origin_wedge(other, translator_plane_bulk_contraction(self, other));
}

Motor translator_point_anti_project_via_horizon_onto(Translator self, Point other) {
    return point_transflector_wedge(other, translator_point_bulk_contraction(self, other));
}

Translator translator_point_at_infinity_anti_project_via_horizon_onto(Translator self, PointAtInfinity other) {
    return point_at_infinity_transflector_wedge(other, translator_point_at_infinity_bulk_contraction(self, other));
}

Motor translator_transflector_anti_project_via_horizon_onto(Translator self, Transflector other) {
    return transflector_flector_wedge(other, translator_transflector_bulk_contraction(self, other));
}

MultiVector translator_translator_anti_project_via_horizon_onto(Translator self, Translator other) {
    return translator_multi_vector_wedge(other, translator_translator_bulk_contraction(self, other));
}

Flector flector_flector_project_orthogonally_onto(Flector self, Flector other) {
    return flector_motor_anti_wedge(other, flector_flector_weight_expansion(self, other));
}

Point flector_line_project_orthogonally_onto(Flector self, Line other) {
    return line_plane_anti_wedge(other, flector_line_weight_expansion(self, other));
}

Point flector_line_at_origin_project_orthogonally_onto(Flector self, LineAtOrigin other) {
    return line_at_origin_plane_anti_wedge(other, flector_line_at_origin_weight_expansion(self, other));
}

MultiVector flector_motor_project_orthogonally_onto(Flector self, Motor other) {
    return motor_multi_vector_anti_wedge(other, flector_motor_weight_expansion(self, other));
}

MultiVector flector_multi_vector_project_orthogonally_onto(Flector self, MultiVector other) {
    return multi_vector_multi_vector_anti_wedge(other, flector_multi_vector_weight_expansion(self, other));
}

MultiVector flector_multi_vector_at_origin_project_orthogonally_onto(Flector self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_anti_wedge(other, flector_multi_vector_at_origin_weight_expansion(self, other));
}

Origin flector_origin_project_orthogonally_onto(Flector self, Origin other) {
    return origin_anti_scalar_anti_wedge(other, flector_origin_weight_expansion(self, other));
}

Flector flector_plane_project_orthogonally_onto(Flector self, Plane other) {
    return plane_motor_anti_wedge(other, flector_plane_weight_expansion(self, other));
}

Flector flector_plane_at_origin_project_orthogonally_onto(Flector self, PlaneAtOrigin other) {
    return plane_at_origin_motor_anti_wedge(other, flector_plane_at_origin_weight_expansion(self, other));
}

Point flector_point_project_orthogonally_onto(Flector self, Point other) {
    return point_anti_scalar_anti_wedge(other, flector_point_weight_expansion(self, other));
}

MultiVector flector_rotor_project_orthogonally_onto(Flector self, Rotor other) {
    return rotor_multi_vector_anti_wedge(other, flector_rotor_weight_expansion(self, other));
}

Flector flector_transflector_project_orthogonally_onto(Flector self, Transflector other) {
    return transflector_motor_anti_wedge(other, flector_transflector_weight_expansion(self, other));
}

PointAtInfinity flector_at_infinity_flector_project_orthogonally_onto(FlectorAtInfinity self, Flector other) {
    return flector_line_at_infinity_anti_wedge(other, flector_at_infinity_flector_weight_expansion(self, other));
}

PointAtInfinity flector_at_infinity_line_project_orthogonally_onto(FlectorAtInfinity self, Line other) {
    return line_horizon_anti_wedge(other, flector_at_infinity_line_weight_expansion(self, other));
}

PointAtInfinity flector_at_infinity_line_at_origin_project_orthogonally_onto(FlectorAtInfinity self, LineAtOrigin other) {
    return line_at_origin_horizon_anti_wedge(other, flector_at_infinity_line_at_origin_weight_expansion(self, other));
}

MultiVectorAtInfinity flector_at_infinity_motor_project_orthogonally_onto(FlectorAtInfinity self, Motor other) {
    return motor_multi_vector_at_infinity_anti_wedge(other, flector_at_infinity_motor_weight_expansion(self, other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_project_orthogonally_onto(FlectorAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_anti_wedge(other, flector_at_infinity_multi_vector_weight_expansion(self, other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_origin_project_orthogonally_onto(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_infinity_anti_wedge(other, flector_at_infinity_multi_vector_at_origin_weight_expansion(self, other));
}

PointAtInfinity flector_at_infinity_plane_project_orthogonally_onto(FlectorAtInfinity self, Plane other) {
    return plane_line_at_infinity_anti_wedge(other, flector_at_infinity_plane_weight_expansion(self, other));
}

PointAtInfinity flector_at_infinity_plane_at_origin_project_orthogonally_onto(FlectorAtInfinity self, PlaneAtOrigin other) {
    return plane_at_origin_line_at_infinity_anti_wedge(other, flector_at_infinity_plane_at_origin_weight_expansion(self, other));
}

MultiVectorAtInfinity flector_at_infinity_rotor_project_orthogonally_onto(FlectorAtInfinity self, Rotor other) {
    return rotor_multi_vector_at_infinity_anti_wedge(other, flector_at_infinity_rotor_weight_expansion(self, other));
}

PointAtInfinity flector_at_infinity_transflector_project_orthogonally_onto(FlectorAtInfinity self, Transflector other) {
    return transflector_line_at_infinity_anti_wedge(other, flector_at_infinity_transflector_weight_expansion(self, other));
}

FlectorAtInfinity horizon_motor_project_orthogonally_onto(Horizon self, Motor other) {
    return motor_horizon_anti_wedge(other, horizon_motor_weight_expansion(self, other));
}

MultiVectorAtInfinity horizon_multi_vector_project_orthogonally_onto(Horizon self, MultiVector other) {
    return multi_vector_horizon_anti_wedge(other, horizon_multi_vector_weight_expansion(self, other));
}

MultiVectorAtInfinity horizon_multi_vector_at_origin_project_orthogonally_onto(Horizon self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_horizon_anti_wedge(other, horizon_multi_vector_at_origin_weight_expansion(self, other));
}

FlectorAtInfinity horizon_rotor_project_orthogonally_onto(Horizon self, Rotor other) {
    return rotor_horizon_anti_wedge(other, horizon_rotor_weight_expansion(self, other));
}

MultiVector line_flector_project_orthogonally_onto(Line self, Flector other) {
    return flector_plane_anti_wedge(other, line_flector_weight_expansion(self, other));
}

Line line_line_project_orthogonally_onto(Line self, Line other) {
    return line_anti_scalar_anti_wedge(other, line_line_weight_expansion(self, other));
}

LineAtOrigin line_line_at_origin_project_orthogonally_onto(Line self, LineAtOrigin other) {
    return line_at_origin_anti_scalar_anti_wedge(other, line_line_at_origin_weight_expansion(self, other));
}

MultiVector line_motor_project_orthogonally_onto(Line self, Motor other) {
    return motor_multi_vector_anti_wedge(other, line_motor_weight_expansion(self, other));
}

MultiVector line_multi_vector_project_orthogonally_onto(Line self, MultiVector other) {
    return multi_vector_multi_vector_anti_wedge(other, line_multi_vector_weight_expansion(self, other));
}

MultiVector line_multi_vector_at_origin_project_orthogonally_onto(Line self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_anti_wedge(other, line_multi_vector_at_origin_weight_expansion(self, other));
}

Line line_plane_project_orthogonally_onto(Line self, Plane other) {
    return plane_plane_anti_wedge(other, line_plane_weight_expansion(self, other));
}

Line line_plane_at_origin_project_orthogonally_onto(Line self, PlaneAtOrigin other) {
    return plane_at_origin_plane_anti_wedge(other, line_plane_at_origin_weight_expansion(self, other));
}

MultiVector line_rotor_project_orthogonally_onto(Line self, Rotor other) {
    return rotor_multi_vector_anti_wedge(other, line_rotor_weight_expansion(self, other));
}

MultiVector line_transflector_project_orthogonally_onto(Line self, Transflector other) {
    return transflector_plane_anti_wedge(other, line_transflector_weight_expansion(self, other));
}

MultiVectorAtInfinity line_at_infinity_flector_project_orthogonally_onto(LineAtInfinity self, Flector other) {
    return flector_horizon_anti_wedge(other, line_at_infinity_flector_weight_expansion(self, other));
}

MultiVectorAtInfinity line_at_infinity_motor_project_orthogonally_onto(LineAtInfinity self, Motor other) {
    return motor_multi_vector_at_infinity_anti_wedge(other, line_at_infinity_motor_weight_expansion(self, other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_project_orthogonally_onto(LineAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_anti_wedge(other, line_at_infinity_multi_vector_weight_expansion(self, other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_origin_project_orthogonally_onto(LineAtInfinity self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_infinity_anti_wedge(other, line_at_infinity_multi_vector_at_origin_weight_expansion(self, other));
}

LineAtInfinity line_at_infinity_plane_project_orthogonally_onto(LineAtInfinity self, Plane other) {
    return plane_horizon_anti_wedge(other, line_at_infinity_plane_weight_expansion(self, other));
}

LineAtInfinity line_at_infinity_plane_at_origin_project_orthogonally_onto(LineAtInfinity self, PlaneAtOrigin other) {
    return plane_at_origin_horizon_anti_wedge(other, line_at_infinity_plane_at_origin_weight_expansion(self, other));
}

MultiVectorAtInfinity line_at_infinity_rotor_project_orthogonally_onto(LineAtInfinity self, Rotor other) {
    return rotor_multi_vector_at_infinity_anti_wedge(other, line_at_infinity_rotor_weight_expansion(self, other));
}

LineAtInfinity line_at_infinity_transflector_project_orthogonally_onto(LineAtInfinity self, Transflector other) {
    return transflector_horizon_anti_wedge(other, line_at_infinity_transflector_weight_expansion(self, other));
}

MultiVector line_at_origin_flector_project_orthogonally_onto(LineAtOrigin self, Flector other) {
    return flector_plane_at_origin_anti_wedge(other, line_at_origin_flector_weight_expansion(self, other));
}

Line line_at_origin_line_project_orthogonally_onto(LineAtOrigin self, Line other) {
    return line_anti_scalar_anti_wedge(other, line_at_origin_line_weight_expansion(self, other));
}

LineAtOrigin line_at_origin_line_at_origin_project_orthogonally_onto(LineAtOrigin self, LineAtOrigin other) {
    return line_at_origin_anti_scalar_anti_wedge(other, line_at_origin_line_at_origin_weight_expansion(self, other));
}

MultiVector line_at_origin_motor_project_orthogonally_onto(LineAtOrigin self, Motor other) {
    return motor_multi_vector_at_origin_anti_wedge(other, line_at_origin_motor_weight_expansion(self, other));
}

MultiVector line_at_origin_multi_vector_project_orthogonally_onto(LineAtOrigin self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, line_at_origin_multi_vector_weight_expansion(self, other));
}

MultiVectorAtOrigin line_at_origin_multi_vector_at_origin_project_orthogonally_onto(LineAtOrigin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_origin_anti_wedge(other, line_at_origin_multi_vector_at_origin_weight_expansion(self, other));
}

Line line_at_origin_plane_project_orthogonally_onto(LineAtOrigin self, Plane other) {
    return plane_plane_at_origin_anti_wedge(other, line_at_origin_plane_weight_expansion(self, other));
}

LineAtOrigin line_at_origin_plane_at_origin_project_orthogonally_onto(LineAtOrigin self, PlaneAtOrigin other) {
    return plane_at_origin_plane_at_origin_anti_wedge(other, line_at_origin_plane_at_origin_weight_expansion(self, other));
}

MultiVectorAtOrigin line_at_origin_rotor_project_orthogonally_onto(LineAtOrigin self, Rotor other) {
    return rotor_multi_vector_at_origin_anti_wedge(other, line_at_origin_rotor_weight_expansion(self, other));
}

MultiVector line_at_origin_transflector_project_orthogonally_onto(LineAtOrigin self, Transflector other) {
    return transflector_plane_at_origin_anti_wedge(other, line_at_origin_transflector_weight_expansion(self, other));
}

MultiVector motor_flector_project_orthogonally_onto(Motor self, Flector other) {
    return flector_plane_anti_wedge(other, motor_flector_weight_expansion(self, other));
}

Line motor_line_project_orthogonally_onto(Motor self, Line other) {
    return line_anti_scalar_anti_wedge(other, motor_line_weight_expansion(self, other));
}

LineAtOrigin motor_line_at_origin_project_orthogonally_onto(Motor self, LineAtOrigin other) {
    return line_at_origin_anti_scalar_anti_wedge(other, motor_line_at_origin_weight_expansion(self, other));
}

MultiVector motor_motor_project_orthogonally_onto(Motor self, Motor other) {
    return motor_multi_vector_anti_wedge(other, motor_motor_weight_expansion(self, other));
}

MultiVector motor_multi_vector_project_orthogonally_onto(Motor self, MultiVector other) {
    return multi_vector_multi_vector_anti_wedge(other, motor_multi_vector_weight_expansion(self, other));
}

MultiVector motor_multi_vector_at_origin_project_orthogonally_onto(Motor self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_anti_wedge(other, motor_multi_vector_at_origin_weight_expansion(self, other));
}

Line motor_plane_project_orthogonally_onto(Motor self, Plane other) {
    return plane_plane_anti_wedge(other, motor_plane_weight_expansion(self, other));
}

Line motor_plane_at_origin_project_orthogonally_onto(Motor self, PlaneAtOrigin other) {
    return plane_at_origin_plane_anti_wedge(other, motor_plane_at_origin_weight_expansion(self, other));
}

MultiVector motor_rotor_project_orthogonally_onto(Motor self, Rotor other) {
    return rotor_multi_vector_anti_wedge(other, motor_rotor_weight_expansion(self, other));
}

MultiVector motor_transflector_project_orthogonally_onto(Motor self, Transflector other) {
    return transflector_plane_anti_wedge(other, motor_transflector_weight_expansion(self, other));
}

MultiVector multi_vector_flector_project_orthogonally_onto(MultiVector self, Flector other) {
    return flector_multi_vector_anti_wedge(other, multi_vector_flector_weight_expansion(self, other));
}

MultiVector multi_vector_line_project_orthogonally_onto(MultiVector self, Line other) {
    return line_multi_vector_anti_wedge(other, multi_vector_line_weight_expansion(self, other));
}

MultiVector multi_vector_line_at_origin_project_orthogonally_onto(MultiVector self, LineAtOrigin other) {
    return line_at_origin_multi_vector_anti_wedge(other, multi_vector_line_at_origin_weight_expansion(self, other));
}

MultiVector multi_vector_motor_project_orthogonally_onto(MultiVector self, Motor other) {
    return motor_multi_vector_anti_wedge(other, multi_vector_motor_weight_expansion(self, other));
}

MultiVector multi_vector_multi_vector_project_orthogonally_onto(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_anti_wedge(other, multi_vector_multi_vector_weight_expansion(self, other));
}

MultiVector multi_vector_multi_vector_at_origin_project_orthogonally_onto(MultiVector self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_anti_wedge(other, multi_vector_multi_vector_at_origin_weight_expansion(self, other));
}

MultiVector multi_vector_origin_project_orthogonally_onto(MultiVector self, Origin other) {
    return origin_multi_vector_anti_wedge(other, multi_vector_origin_weight_expansion(self, other));
}

MultiVector multi_vector_plane_project_orthogonally_onto(MultiVector self, Plane other) {
    return plane_multi_vector_anti_wedge(other, multi_vector_plane_weight_expansion(self, other));
}

MultiVector multi_vector_plane_at_origin_project_orthogonally_onto(MultiVector self, PlaneAtOrigin other) {
    return plane_at_origin_multi_vector_anti_wedge(other, multi_vector_plane_at_origin_weight_expansion(self, other));
}

MultiVector multi_vector_point_project_orthogonally_onto(MultiVector self, Point other) {
    return point_multi_vector_anti_wedge(other, multi_vector_point_weight_expansion(self, other));
}

MultiVector multi_vector_rotor_project_orthogonally_onto(MultiVector self, Rotor other) {
    return rotor_multi_vector_anti_wedge(other, multi_vector_rotor_weight_expansion(self, other));
}

MultiVector multi_vector_transflector_project_orthogonally_onto(MultiVector self, Transflector other) {
    return transflector_multi_vector_anti_wedge(other, multi_vector_transflector_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_project_orthogonally_onto(MultiVectorAtInfinity self, Flector other) {
    return flector_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_flector_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_project_orthogonally_onto(MultiVectorAtInfinity self, Line other) {
    return line_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_line_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_origin_project_orthogonally_onto(MultiVectorAtInfinity self, LineAtOrigin other) {
    return line_at_origin_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_line_at_origin_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_motor_project_orthogonally_onto(MultiVectorAtInfinity self, Motor other) {
    return motor_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_motor_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_project_orthogonally_onto(MultiVectorAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_multi_vector_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_origin_project_orthogonally_onto(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_multi_vector_at_origin_weight_expansion(self, other));
}

Scalar multi_vector_at_infinity_origin_project_orthogonally_onto(MultiVectorAtInfinity self, Origin other) {
    return origin_horizon_anti_wedge(other, multi_vector_at_infinity_origin_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_project_orthogonally_onto(MultiVectorAtInfinity self, Plane other) {
    return plane_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_plane_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_plane_at_origin_project_orthogonally_onto(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return plane_at_origin_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_plane_at_origin_weight_expansion(self, other));
}

Scalar multi_vector_at_infinity_point_project_orthogonally_onto(MultiVectorAtInfinity self, Point other) {
    return point_horizon_anti_wedge(other, multi_vector_at_infinity_point_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_rotor_project_orthogonally_onto(MultiVectorAtInfinity self, Rotor other) {
    return rotor_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_rotor_weight_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_transflector_project_orthogonally_onto(MultiVectorAtInfinity self, Transflector other) {
    return transflector_multi_vector_at_infinity_anti_wedge(other, multi_vector_at_infinity_transflector_weight_expansion(self, other));
}

MultiVector multi_vector_at_origin_flector_project_orthogonally_onto(MultiVectorAtOrigin self, Flector other) {
    return flector_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_flector_weight_expansion(self, other));
}

MultiVector multi_vector_at_origin_line_project_orthogonally_onto(MultiVectorAtOrigin self, Line other) {
    return line_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_line_weight_expansion(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_line_at_origin_project_orthogonally_onto(MultiVectorAtOrigin self, LineAtOrigin other) {
    return line_at_origin_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_line_at_origin_weight_expansion(self, other));
}

MultiVector multi_vector_at_origin_motor_project_orthogonally_onto(MultiVectorAtOrigin self, Motor other) {
    return motor_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_motor_weight_expansion(self, other));
}

MultiVector multi_vector_at_origin_multi_vector_project_orthogonally_onto(MultiVectorAtOrigin self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_multi_vector_weight_expansion(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_multi_vector_at_origin_project_orthogonally_onto(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_multi_vector_at_origin_weight_expansion(self, other));
}

Origin multi_vector_at_origin_origin_project_orthogonally_onto(MultiVectorAtOrigin self, Origin other) {
    return origin_anti_scalar_anti_wedge(other, multi_vector_at_origin_origin_weight_expansion(self, other));
}

MultiVector multi_vector_at_origin_plane_project_orthogonally_onto(MultiVectorAtOrigin self, Plane other) {
    return plane_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_plane_weight_expansion(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_plane_at_origin_project_orthogonally_onto(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return plane_at_origin_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_plane_at_origin_weight_expansion(self, other));
}

Point multi_vector_at_origin_point_project_orthogonally_onto(MultiVectorAtOrigin self, Point other) {
    return point_anti_scalar_anti_wedge(other, multi_vector_at_origin_point_weight_expansion(self, other));
}

MultiVectorAtOrigin multi_vector_at_origin_rotor_project_orthogonally_onto(MultiVectorAtOrigin self, Rotor other) {
    return rotor_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_rotor_weight_expansion(self, other));
}

MultiVector multi_vector_at_origin_transflector_project_orthogonally_onto(MultiVectorAtOrigin self, Transflector other) {
    return transflector_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_transflector_weight_expansion(self, other));
}

Flector origin_flector_project_orthogonally_onto(Origin self, Flector other) {
    return flector_rotor_anti_wedge(other, origin_flector_weight_expansion(self, other));
}

Point origin_line_project_orthogonally_onto(Origin self, Line other) {
    return line_plane_at_origin_anti_wedge(other, origin_line_weight_expansion(self, other));
}

Origin origin_line_at_origin_project_orthogonally_onto(Origin self, LineAtOrigin other) {
    return line_at_origin_plane_at_origin_anti_wedge(other, origin_line_at_origin_weight_expansion(self, other));
}

MultiVector origin_motor_project_orthogonally_onto(Origin self, Motor other) {
    return motor_multi_vector_at_origin_anti_wedge(other, origin_motor_weight_expansion(self, other));
}

MultiVector origin_multi_vector_project_orthogonally_onto(Origin self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, origin_multi_vector_weight_expansion(self, other));
}

MultiVectorAtOrigin origin_multi_vector_at_origin_project_orthogonally_onto(Origin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_origin_anti_wedge(other, origin_multi_vector_at_origin_weight_expansion(self, other));
}

Origin origin_origin_project_orthogonally_onto(Origin self, Origin other) {
    return origin_anti_scalar_anti_wedge(other, origin_origin_weight_expansion(self, other));
}

Point origin_plane_project_orthogonally_onto(Origin self, Plane other) {
    return plane_line_at_origin_anti_wedge(other, origin_plane_weight_expansion(self, other));
}

Origin origin_plane_at_origin_project_orthogonally_onto(Origin self, PlaneAtOrigin other) {
    return plane_at_origin_line_at_origin_anti_wedge(other, origin_plane_at_origin_weight_expansion(self, other));
}

Point origin_point_project_orthogonally_onto(Origin self, Point other) {
    return point_anti_scalar_anti_wedge(other, origin_point_weight_expansion(self, other));
}

MultiVectorAtOrigin origin_rotor_project_orthogonally_onto(Origin self, Rotor other) {
    return rotor_multi_vector_at_origin_anti_wedge(other, origin_rotor_weight_expansion(self, other));
}

Point origin_transflector_project_orthogonally_onto(Origin self, Transflector other) {
    return transflector_line_at_origin_anti_wedge(other, origin_transflector_weight_expansion(self, other));
}

Flector plane_flector_project_orthogonally_onto(Plane self, Flector other) {
    return flector_anti_scalar_anti_wedge(other, plane_flector_weight_expansion(self, other));
}

MultiVector plane_motor_project_orthogonally_onto(Plane self, Motor other) {
    return motor_multi_vector_anti_wedge(other, plane_motor_weight_expansion(self, other));
}

MultiVector plane_multi_vector_project_orthogonally_onto(Plane self, MultiVector other) {
    return multi_vector_multi_vector_anti_wedge(other, plane_multi_vector_weight_expansion(self, other));
}

MultiVector plane_multi_vector_at_origin_project_orthogonally_onto(Plane self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_anti_wedge(other, plane_multi_vector_at_origin_weight_expansion(self, other));
}

Plane plane_plane_project_orthogonally_onto(Plane self, Plane other) {
    return plane_anti_scalar_anti_wedge(other, plane_plane_weight_expansion(self, other));
}

PlaneAtOrigin plane_plane_at_origin_project_orthogonally_onto(Plane self, PlaneAtOrigin other) {
    return plane_at_origin_anti_scalar_anti_wedge(other, plane_plane_at_origin_weight_expansion(self, other));
}

MultiVector plane_rotor_project_orthogonally_onto(Plane self, Rotor other) {
    return rotor_multi_vector_anti_wedge(other, plane_rotor_weight_expansion(self, other));
}

Transflector plane_transflector_project_orthogonally_onto(Plane self, Transflector other) {
    return transflector_anti_scalar_anti_wedge(other, plane_transflector_weight_expansion(self, other));
}

Flector plane_at_origin_flector_project_orthogonally_onto(PlaneAtOrigin self, Flector other) {
    return flector_anti_scalar_anti_wedge(other, plane_at_origin_flector_weight_expansion(self, other));
}

MultiVector plane_at_origin_motor_project_orthogonally_onto(PlaneAtOrigin self, Motor other) {
    return motor_multi_vector_at_origin_anti_wedge(other, plane_at_origin_motor_weight_expansion(self, other));
}

MultiVector plane_at_origin_multi_vector_project_orthogonally_onto(PlaneAtOrigin self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, plane_at_origin_multi_vector_weight_expansion(self, other));
}

MultiVectorAtOrigin plane_at_origin_multi_vector_at_origin_project_orthogonally_onto(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_origin_anti_wedge(other, plane_at_origin_multi_vector_at_origin_weight_expansion(self, other));
}

Plane plane_at_origin_plane_project_orthogonally_onto(PlaneAtOrigin self, Plane other) {
    return plane_anti_scalar_anti_wedge(other, plane_at_origin_plane_weight_expansion(self, other));
}

PlaneAtOrigin plane_at_origin_plane_at_origin_project_orthogonally_onto(PlaneAtOrigin self, PlaneAtOrigin other) {
    return plane_at_origin_anti_scalar_anti_wedge(other, plane_at_origin_plane_at_origin_weight_expansion(self, other));
}

MultiVectorAtOrigin plane_at_origin_rotor_project_orthogonally_onto(PlaneAtOrigin self, Rotor other) {
    return rotor_multi_vector_at_origin_anti_wedge(other, plane_at_origin_rotor_weight_expansion(self, other));
}

Transflector plane_at_origin_transflector_project_orthogonally_onto(PlaneAtOrigin self, Transflector other) {
    return transflector_anti_scalar_anti_wedge(other, plane_at_origin_transflector_weight_expansion(self, other));
}

Flector point_flector_project_orthogonally_onto(Point self, Flector other) {
    return flector_motor_anti_wedge(other, point_flector_weight_expansion(self, other));
}

Point point_line_project_orthogonally_onto(Point self, Line other) {
    return line_plane_anti_wedge(other, point_line_weight_expansion(self, other));
}

Point point_line_at_origin_project_orthogonally_onto(Point self, LineAtOrigin other) {
    return line_at_origin_plane_anti_wedge(other, point_line_at_origin_weight_expansion(self, other));
}

MultiVector point_motor_project_orthogonally_onto(Point self, Motor other) {
    return motor_multi_vector_anti_wedge(other, point_motor_weight_expansion(self, other));
}

MultiVector point_multi_vector_project_orthogonally_onto(Point self, MultiVector other) {
    return multi_vector_multi_vector_anti_wedge(other, point_multi_vector_weight_expansion(self, other));
}

MultiVector point_multi_vector_at_origin_project_orthogonally_onto(Point self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_anti_wedge(other, point_multi_vector_at_origin_weight_expansion(self, other));
}

Origin point_origin_project_orthogonally_onto(Point self, Origin other) {
    return origin_anti_scalar_anti_wedge(other, point_origin_weight_expansion(self, other));
}

Point point_plane_project_orthogonally_onto(Point self, Plane other) {
    return plane_line_anti_wedge(other, point_plane_weight_expansion(self, other));
}

Point point_plane_at_origin_project_orthogonally_onto(Point self, PlaneAtOrigin other) {
    return plane_at_origin_line_anti_wedge(other, point_plane_at_origin_weight_expansion(self, other));
}

Point point_point_project_orthogonally_onto(Point self, Point other) {
    return point_anti_scalar_anti_wedge(other, point_point_weight_expansion(self, other));
}

MultiVector point_rotor_project_orthogonally_onto(Point self, Rotor other) {
    return rotor_multi_vector_anti_wedge(other, point_rotor_weight_expansion(self, other));
}

Point point_transflector_project_orthogonally_onto(Point self, Transflector other) {
    return transflector_line_anti_wedge(other, point_transflector_weight_expansion(self, other));
}

PointAtInfinity point_at_infinity_flector_project_orthogonally_onto(PointAtInfinity self, Flector other) {
    return flector_line_at_infinity_anti_wedge(other, point_at_infinity_flector_weight_expansion(self, other));
}

PointAtInfinity point_at_infinity_line_project_orthogonally_onto(PointAtInfinity self, Line other) {
    return line_horizon_anti_wedge(other, point_at_infinity_line_weight_expansion(self, other));
}

PointAtInfinity point_at_infinity_line_at_origin_project_orthogonally_onto(PointAtInfinity self, LineAtOrigin other) {
    return line_at_origin_horizon_anti_wedge(other, point_at_infinity_line_at_origin_weight_expansion(self, other));
}

MultiVectorAtInfinity point_at_infinity_motor_project_orthogonally_onto(PointAtInfinity self, Motor other) {
    return motor_multi_vector_at_infinity_anti_wedge(other, point_at_infinity_motor_weight_expansion(self, other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_project_orthogonally_onto(PointAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_infinity_anti_wedge(other, point_at_infinity_multi_vector_weight_expansion(self, other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_origin_project_orthogonally_onto(PointAtInfinity self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_infinity_anti_wedge(other, point_at_infinity_multi_vector_at_origin_weight_expansion(self, other));
}

PointAtInfinity point_at_infinity_plane_project_orthogonally_onto(PointAtInfinity self, Plane other) {
    return plane_line_at_infinity_anti_wedge(other, point_at_infinity_plane_weight_expansion(self, other));
}

PointAtInfinity point_at_infinity_plane_at_origin_project_orthogonally_onto(PointAtInfinity self, PlaneAtOrigin other) {
    return plane_at_origin_line_at_infinity_anti_wedge(other, point_at_infinity_plane_at_origin_weight_expansion(self, other));
}

MultiVectorAtInfinity point_at_infinity_rotor_project_orthogonally_onto(PointAtInfinity self, Rotor other) {
    return rotor_multi_vector_at_infinity_anti_wedge(other, point_at_infinity_rotor_weight_expansion(self, other));
}

PointAtInfinity point_at_infinity_transflector_project_orthogonally_onto(PointAtInfinity self, Transflector other) {
    return transflector_line_at_infinity_anti_wedge(other, point_at_infinity_transflector_weight_expansion(self, other));
}

MultiVector rotor_flector_project_orthogonally_onto(Rotor self, Flector other) {
    return flector_plane_at_origin_anti_wedge(other, rotor_flector_weight_expansion(self, other));
}

Line rotor_line_project_orthogonally_onto(Rotor self, Line other) {
    return line_anti_scalar_anti_wedge(other, rotor_line_weight_expansion(self, other));
}

LineAtOrigin rotor_line_at_origin_project_orthogonally_onto(Rotor self, LineAtOrigin other) {
    return line_at_origin_anti_scalar_anti_wedge(other, rotor_line_at_origin_weight_expansion(self, other));
}

MultiVector rotor_motor_project_orthogonally_onto(Rotor self, Motor other) {
    return motor_multi_vector_at_origin_anti_wedge(other, rotor_motor_weight_expansion(self, other));
}

MultiVector rotor_multi_vector_project_orthogonally_onto(Rotor self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, rotor_multi_vector_weight_expansion(self, other));
}

MultiVectorAtOrigin rotor_multi_vector_at_origin_project_orthogonally_onto(Rotor self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_at_origin_anti_wedge(other, rotor_multi_vector_at_origin_weight_expansion(self, other));
}

Line rotor_plane_project_orthogonally_onto(Rotor self, Plane other) {
    return plane_plane_at_origin_anti_wedge(other, rotor_plane_weight_expansion(self, other));
}

LineAtOrigin rotor_plane_at_origin_project_orthogonally_onto(Rotor self, PlaneAtOrigin other) {
    return plane_at_origin_plane_at_origin_anti_wedge(other, rotor_plane_at_origin_weight_expansion(self, other));
}

MultiVectorAtOrigin rotor_rotor_project_orthogonally_onto(Rotor self, Rotor other) {
    return rotor_multi_vector_at_origin_anti_wedge(other, rotor_rotor_weight_expansion(self, other));
}

MultiVector rotor_transflector_project_orthogonally_onto(Rotor self, Transflector other) {
    return transflector_plane_at_origin_anti_wedge(other, rotor_transflector_weight_expansion(self, other));
}

Flector transflector_flector_project_orthogonally_onto(Transflector self, Flector other) {
    return flector_translator_anti_wedge(other, transflector_flector_weight_expansion(self, other));
}

PointAtInfinity transflector_line_project_orthogonally_onto(Transflector self, Line other) {
    return line_horizon_anti_wedge(other, transflector_line_weight_expansion(self, other));
}

PointAtInfinity transflector_line_at_origin_project_orthogonally_onto(Transflector self, LineAtOrigin other) {
    return line_at_origin_horizon_anti_wedge(other, transflector_line_at_origin_weight_expansion(self, other));
}

MultiVector transflector_motor_project_orthogonally_onto(Transflector self, Motor other) {
    return motor_multi_vector_anti_wedge(other, transflector_motor_weight_expansion(self, other));
}

MultiVector transflector_multi_vector_project_orthogonally_onto(Transflector self, MultiVector other) {
    return multi_vector_multi_vector_anti_wedge(other, transflector_multi_vector_weight_expansion(self, other));
}

MultiVector transflector_multi_vector_at_origin_project_orthogonally_onto(Transflector self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_anti_wedge(other, transflector_multi_vector_at_origin_weight_expansion(self, other));
}

Transflector transflector_plane_project_orthogonally_onto(Transflector self, Plane other) {
    return plane_translator_anti_wedge(other, transflector_plane_weight_expansion(self, other));
}

Transflector transflector_plane_at_origin_project_orthogonally_onto(Transflector self, PlaneAtOrigin other) {
    return plane_at_origin_translator_anti_wedge(other, transflector_plane_at_origin_weight_expansion(self, other));
}

MultiVector transflector_rotor_project_orthogonally_onto(Transflector self, Rotor other) {
    return rotor_multi_vector_anti_wedge(other, transflector_rotor_weight_expansion(self, other));
}

Transflector transflector_transflector_project_orthogonally_onto(Transflector self, Transflector other) {
    return transflector_translator_anti_wedge(other, transflector_transflector_weight_expansion(self, other));
}

MultiVectorAtInfinity translator_flector_project_orthogonally_onto(Translator self, Flector other) {
    return flector_horizon_anti_wedge(other, translator_flector_weight_expansion(self, other));
}

MultiVector translator_motor_project_orthogonally_onto(Translator self, Motor other) {
    return motor_multi_vector_anti_wedge(other, translator_motor_weight_expansion(self, other));
}

MultiVector translator_multi_vector_project_orthogonally_onto(Translator self, MultiVector other) {
    return multi_vector_multi_vector_anti_wedge(other, translator_multi_vector_weight_expansion(self, other));
}

MultiVector translator_multi_vector_at_origin_project_orthogonally_onto(Translator self, MultiVectorAtOrigin other) {
    return multi_vector_at_origin_multi_vector_anti_wedge(other, translator_multi_vector_at_origin_weight_expansion(self, other));
}

LineAtInfinity translator_plane_project_orthogonally_onto(Translator self, Plane other) {
    return plane_horizon_anti_wedge(other, translator_plane_weight_expansion(self, other));
}

LineAtInfinity translator_plane_at_origin_project_orthogonally_onto(Translator self, PlaneAtOrigin other) {
    return plane_at_origin_horizon_anti_wedge(other, translator_plane_at_origin_weight_expansion(self, other));
}

MultiVector translator_rotor_project_orthogonally_onto(Translator self, Rotor other) {
    return rotor_multi_vector_anti_wedge(other, translator_rotor_weight_expansion(self, other));
}

LineAtInfinity translator_transflector_project_orthogonally_onto(Translator self, Transflector other) {
    return transflector_horizon_anti_wedge(other, translator_transflector_weight_expansion(self, other));
}

Flector flector_flector_project_via_origin_onto(Flector self, Flector other) {
    return flector_motor_anti_wedge(other, flector_flector_bulk_expansion(self, other));
}

FlectorAtInfinity flector_flector_at_infinity_project_via_origin_onto(Flector self, FlectorAtInfinity other) {
    return flector_at_infinity_motor_anti_wedge(other, flector_flector_at_infinity_bulk_expansion(self, other));
}

FlectorAtInfinity flector_horizon_project_via_origin_onto(Flector self, Horizon other) {
    return horizon_rotor_anti_wedge(other, flector_horizon_bulk_expansion(self, other));
}

Point flector_line_project_via_origin_onto(Flector self, Line other) {
    return line_plane_at_origin_anti_wedge(other, flector_line_bulk_expansion(self, other));
}

PointAtInfinity flector_line_at_infinity_project_via_origin_onto(Flector self, LineAtInfinity other) {
    return line_at_infinity_plane_at_origin_anti_wedge(other, flector_line_at_infinity_bulk_expansion(self, other));
}

Flector flector_motor_project_via_origin_onto(Flector self, Motor other) {
    return motor_plane_at_origin_anti_wedge(other, flector_motor_bulk_expansion(self, other));
}

MultiVector flector_multi_vector_project_via_origin_onto(Flector self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, flector_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity flector_multi_vector_at_infinity_project_via_origin_onto(Flector self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, flector_multi_vector_at_infinity_bulk_expansion(self, other));
}

Flector flector_plane_project_via_origin_onto(Flector self, Plane other) {
    return plane_rotor_anti_wedge(other, flector_plane_bulk_expansion(self, other));
}

Point flector_point_project_via_origin_onto(Flector self, Point other) {
    return point_anti_scalar_anti_wedge(other, flector_point_bulk_expansion(self, other));
}

PointAtInfinity flector_point_at_infinity_project_via_origin_onto(Flector self, PointAtInfinity other) {
    return point_at_infinity_anti_scalar_anti_wedge(other, flector_point_at_infinity_bulk_expansion(self, other));
}

Flector flector_transflector_project_via_origin_onto(Flector self, Transflector other) {
    return transflector_motor_anti_wedge(other, flector_transflector_bulk_expansion(self, other));
}

Transflector flector_translator_project_via_origin_onto(Flector self, Translator other) {
    return translator_plane_at_origin_anti_wedge(other, flector_translator_bulk_expansion(self, other));
}

Flector flector_at_infinity_flector_project_via_origin_onto(FlectorAtInfinity self, Flector other) {
    return flector_motor_anti_wedge(other, flector_at_infinity_flector_bulk_expansion(self, other));
}

FlectorAtInfinity flector_at_infinity_flector_at_infinity_project_via_origin_onto(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_motor_anti_wedge(other, flector_at_infinity_flector_at_infinity_bulk_expansion(self, other));
}

FlectorAtInfinity flector_at_infinity_horizon_project_via_origin_onto(FlectorAtInfinity self, Horizon other) {
    return horizon_rotor_anti_wedge(other, flector_at_infinity_horizon_bulk_expansion(self, other));
}

Point flector_at_infinity_line_project_via_origin_onto(FlectorAtInfinity self, Line other) {
    return line_plane_at_origin_anti_wedge(other, flector_at_infinity_line_bulk_expansion(self, other));
}

PointAtInfinity flector_at_infinity_line_at_infinity_project_via_origin_onto(FlectorAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_plane_at_origin_anti_wedge(other, flector_at_infinity_line_at_infinity_bulk_expansion(self, other));
}

Flector flector_at_infinity_motor_project_via_origin_onto(FlectorAtInfinity self, Motor other) {
    return motor_plane_at_origin_anti_wedge(other, flector_at_infinity_motor_bulk_expansion(self, other));
}

MultiVector flector_at_infinity_multi_vector_project_via_origin_onto(FlectorAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, flector_at_infinity_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity flector_at_infinity_multi_vector_at_infinity_project_via_origin_onto(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, flector_at_infinity_multi_vector_at_infinity_bulk_expansion(self, other));
}

Flector flector_at_infinity_plane_project_via_origin_onto(FlectorAtInfinity self, Plane other) {
    return plane_rotor_anti_wedge(other, flector_at_infinity_plane_bulk_expansion(self, other));
}

Point flector_at_infinity_point_project_via_origin_onto(FlectorAtInfinity self, Point other) {
    return point_anti_scalar_anti_wedge(other, flector_at_infinity_point_bulk_expansion(self, other));
}

PointAtInfinity flector_at_infinity_point_at_infinity_project_via_origin_onto(FlectorAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_anti_scalar_anti_wedge(other, flector_at_infinity_point_at_infinity_bulk_expansion(self, other));
}

Flector flector_at_infinity_transflector_project_via_origin_onto(FlectorAtInfinity self, Transflector other) {
    return transflector_motor_anti_wedge(other, flector_at_infinity_transflector_bulk_expansion(self, other));
}

Transflector flector_at_infinity_translator_project_via_origin_onto(FlectorAtInfinity self, Translator other) {
    return translator_plane_at_origin_anti_wedge(other, flector_at_infinity_translator_bulk_expansion(self, other));
}

Flector horizon_flector_project_via_origin_onto(Horizon self, Flector other) {
    return flector_anti_scalar_anti_wedge(other, horizon_flector_bulk_expansion(self, other));
}

FlectorAtInfinity horizon_flector_at_infinity_project_via_origin_onto(Horizon self, FlectorAtInfinity other) {
    return flector_at_infinity_anti_scalar_anti_wedge(other, horizon_flector_at_infinity_bulk_expansion(self, other));
}

Horizon horizon_horizon_project_via_origin_onto(Horizon self, Horizon other) {
    return horizon_anti_scalar_anti_wedge(other, horizon_horizon_bulk_expansion(self, other));
}

MultiVector horizon_multi_vector_project_via_origin_onto(Horizon self, MultiVector other) {
    return multi_vector_anti_scalar_anti_wedge(other, horizon_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity horizon_multi_vector_at_infinity_project_via_origin_onto(Horizon self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_anti_scalar_anti_wedge(other, horizon_multi_vector_at_infinity_bulk_expansion(self, other));
}

Plane horizon_plane_project_via_origin_onto(Horizon self, Plane other) {
    return plane_anti_scalar_anti_wedge(other, horizon_plane_bulk_expansion(self, other));
}

Transflector horizon_transflector_project_via_origin_onto(Horizon self, Transflector other) {
    return transflector_anti_scalar_anti_wedge(other, horizon_transflector_bulk_expansion(self, other));
}

MultiVector line_flector_project_via_origin_onto(Line self, Flector other) {
    return flector_plane_anti_wedge(other, line_flector_bulk_expansion(self, other));
}

MultiVectorAtInfinity line_flector_at_infinity_project_via_origin_onto(Line self, FlectorAtInfinity other) {
    return flector_at_infinity_plane_anti_wedge(other, line_flector_at_infinity_bulk_expansion(self, other));
}

LineAtInfinity line_horizon_project_via_origin_onto(Line self, Horizon other) {
    return horizon_plane_at_origin_anti_wedge(other, line_horizon_bulk_expansion(self, other));
}

Line line_line_project_via_origin_onto(Line self, Line other) {
    return line_anti_scalar_anti_wedge(other, line_line_bulk_expansion(self, other));
}

LineAtInfinity line_line_at_infinity_project_via_origin_onto(Line self, LineAtInfinity other) {
    return line_at_infinity_anti_scalar_anti_wedge(other, line_line_at_infinity_bulk_expansion(self, other));
}

Motor line_motor_project_via_origin_onto(Line self, Motor other) {
    return motor_anti_scalar_anti_wedge(other, line_motor_bulk_expansion(self, other));
}

MultiVector line_multi_vector_project_via_origin_onto(Line self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, line_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity line_multi_vector_at_infinity_project_via_origin_onto(Line self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, line_multi_vector_at_infinity_bulk_expansion(self, other));
}

Line line_plane_project_via_origin_onto(Line self, Plane other) {
    return plane_plane_at_origin_anti_wedge(other, line_plane_bulk_expansion(self, other));
}

MultiVector line_transflector_project_via_origin_onto(Line self, Transflector other) {
    return transflector_plane_anti_wedge(other, line_transflector_bulk_expansion(self, other));
}

Translator line_translator_project_via_origin_onto(Line self, Translator other) {
    return translator_anti_scalar_anti_wedge(other, line_translator_bulk_expansion(self, other));
}

MultiVector line_at_infinity_flector_project_via_origin_onto(LineAtInfinity self, Flector other) {
    return flector_plane_anti_wedge(other, line_at_infinity_flector_bulk_expansion(self, other));
}

MultiVectorAtInfinity line_at_infinity_flector_at_infinity_project_via_origin_onto(LineAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_plane_anti_wedge(other, line_at_infinity_flector_at_infinity_bulk_expansion(self, other));
}

LineAtInfinity line_at_infinity_horizon_project_via_origin_onto(LineAtInfinity self, Horizon other) {
    return horizon_plane_at_origin_anti_wedge(other, line_at_infinity_horizon_bulk_expansion(self, other));
}

Line line_at_infinity_line_project_via_origin_onto(LineAtInfinity self, Line other) {
    return line_anti_scalar_anti_wedge(other, line_at_infinity_line_bulk_expansion(self, other));
}

LineAtInfinity line_at_infinity_line_at_infinity_project_via_origin_onto(LineAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_anti_scalar_anti_wedge(other, line_at_infinity_line_at_infinity_bulk_expansion(self, other));
}

Motor line_at_infinity_motor_project_via_origin_onto(LineAtInfinity self, Motor other) {
    return motor_anti_scalar_anti_wedge(other, line_at_infinity_motor_bulk_expansion(self, other));
}

MultiVector line_at_infinity_multi_vector_project_via_origin_onto(LineAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, line_at_infinity_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity line_at_infinity_multi_vector_at_infinity_project_via_origin_onto(LineAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, line_at_infinity_multi_vector_at_infinity_bulk_expansion(self, other));
}

Line line_at_infinity_plane_project_via_origin_onto(LineAtInfinity self, Plane other) {
    return plane_plane_at_origin_anti_wedge(other, line_at_infinity_plane_bulk_expansion(self, other));
}

MultiVector line_at_infinity_transflector_project_via_origin_onto(LineAtInfinity self, Transflector other) {
    return transflector_plane_anti_wedge(other, line_at_infinity_transflector_bulk_expansion(self, other));
}

Translator line_at_infinity_translator_project_via_origin_onto(LineAtInfinity self, Translator other) {
    return translator_anti_scalar_anti_wedge(other, line_at_infinity_translator_bulk_expansion(self, other));
}

MultiVector line_at_origin_flector_project_via_origin_onto(LineAtOrigin self, Flector other) {
    return flector_plane_at_origin_anti_wedge(other, line_at_origin_flector_bulk_expansion(self, other));
}

MultiVectorAtInfinity line_at_origin_flector_at_infinity_project_via_origin_onto(LineAtOrigin self, FlectorAtInfinity other) {
    return flector_at_infinity_plane_at_origin_anti_wedge(other, line_at_origin_flector_at_infinity_bulk_expansion(self, other));
}

MultiVector line_at_origin_transflector_project_via_origin_onto(LineAtOrigin self, Transflector other) {
    return transflector_plane_at_origin_anti_wedge(other, line_at_origin_transflector_bulk_expansion(self, other));
}

MultiVector motor_flector_project_via_origin_onto(Motor self, Flector other) {
    return flector_plane_anti_wedge(other, motor_flector_bulk_expansion(self, other));
}

MultiVectorAtInfinity motor_flector_at_infinity_project_via_origin_onto(Motor self, FlectorAtInfinity other) {
    return flector_at_infinity_plane_anti_wedge(other, motor_flector_at_infinity_bulk_expansion(self, other));
}

LineAtInfinity motor_horizon_project_via_origin_onto(Motor self, Horizon other) {
    return horizon_plane_at_origin_anti_wedge(other, motor_horizon_bulk_expansion(self, other));
}

Line motor_line_project_via_origin_onto(Motor self, Line other) {
    return line_anti_scalar_anti_wedge(other, motor_line_bulk_expansion(self, other));
}

LineAtInfinity motor_line_at_infinity_project_via_origin_onto(Motor self, LineAtInfinity other) {
    return line_at_infinity_anti_scalar_anti_wedge(other, motor_line_at_infinity_bulk_expansion(self, other));
}

Motor motor_motor_project_via_origin_onto(Motor self, Motor other) {
    return motor_anti_scalar_anti_wedge(other, motor_motor_bulk_expansion(self, other));
}

MultiVector motor_multi_vector_project_via_origin_onto(Motor self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, motor_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity motor_multi_vector_at_infinity_project_via_origin_onto(Motor self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, motor_multi_vector_at_infinity_bulk_expansion(self, other));
}

Line motor_plane_project_via_origin_onto(Motor self, Plane other) {
    return plane_plane_at_origin_anti_wedge(other, motor_plane_bulk_expansion(self, other));
}

MultiVector motor_transflector_project_via_origin_onto(Motor self, Transflector other) {
    return transflector_plane_anti_wedge(other, motor_transflector_bulk_expansion(self, other));
}

Translator motor_translator_project_via_origin_onto(Motor self, Translator other) {
    return translator_anti_scalar_anti_wedge(other, motor_translator_bulk_expansion(self, other));
}

MultiVector multi_vector_flector_project_via_origin_onto(MultiVector self, Flector other) {
    return flector_multi_vector_anti_wedge(other, multi_vector_flector_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_flector_at_infinity_project_via_origin_onto(MultiVector self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_anti_wedge(other, multi_vector_flector_at_infinity_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_horizon_project_via_origin_onto(MultiVector self, Horizon other) {
    return horizon_multi_vector_at_origin_anti_wedge(other, multi_vector_horizon_bulk_expansion(self, other));
}

MultiVector multi_vector_line_project_via_origin_onto(MultiVector self, Line other) {
    return line_multi_vector_at_origin_anti_wedge(other, multi_vector_line_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_line_at_infinity_project_via_origin_onto(MultiVector self, LineAtInfinity other) {
    return line_at_infinity_multi_vector_at_origin_anti_wedge(other, multi_vector_line_at_infinity_bulk_expansion(self, other));
}

MultiVector multi_vector_motor_project_via_origin_onto(MultiVector self, Motor other) {
    return motor_multi_vector_at_origin_anti_wedge(other, multi_vector_motor_bulk_expansion(self, other));
}

MultiVector multi_vector_multi_vector_project_via_origin_onto(MultiVector self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, multi_vector_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_multi_vector_at_infinity_project_via_origin_onto(MultiVector self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, multi_vector_multi_vector_at_infinity_bulk_expansion(self, other));
}

MultiVector multi_vector_plane_project_via_origin_onto(MultiVector self, Plane other) {
    return plane_multi_vector_at_origin_anti_wedge(other, multi_vector_plane_bulk_expansion(self, other));
}

MultiVector multi_vector_point_project_via_origin_onto(MultiVector self, Point other) {
    return point_multi_vector_at_origin_anti_wedge(other, multi_vector_point_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_point_at_infinity_project_via_origin_onto(MultiVector self, PointAtInfinity other) {
    return point_at_infinity_multi_vector_at_origin_anti_wedge(other, multi_vector_point_at_infinity_bulk_expansion(self, other));
}

MultiVector multi_vector_transflector_project_via_origin_onto(MultiVector self, Transflector other) {
    return transflector_multi_vector_anti_wedge(other, multi_vector_transflector_bulk_expansion(self, other));
}

MultiVector multi_vector_translator_project_via_origin_onto(MultiVector self, Translator other) {
    return translator_multi_vector_at_origin_anti_wedge(other, multi_vector_translator_bulk_expansion(self, other));
}

MultiVector multi_vector_at_infinity_flector_project_via_origin_onto(MultiVectorAtInfinity self, Flector other) {
    return flector_multi_vector_anti_wedge(other, multi_vector_at_infinity_flector_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_flector_at_infinity_project_via_origin_onto(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_anti_wedge(other, multi_vector_at_infinity_flector_at_infinity_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_horizon_project_via_origin_onto(MultiVectorAtInfinity self, Horizon other) {
    return horizon_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_horizon_bulk_expansion(self, other));
}

MultiVector multi_vector_at_infinity_line_project_via_origin_onto(MultiVectorAtInfinity self, Line other) {
    return line_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_line_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_line_at_infinity_project_via_origin_onto(MultiVectorAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_line_at_infinity_bulk_expansion(self, other));
}

MultiVector multi_vector_at_infinity_motor_project_via_origin_onto(MultiVectorAtInfinity self, Motor other) {
    return motor_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_motor_bulk_expansion(self, other));
}

MultiVector multi_vector_at_infinity_multi_vector_project_via_origin_onto(MultiVectorAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_multi_vector_at_infinity_project_via_origin_onto(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_multi_vector_at_infinity_bulk_expansion(self, other));
}

MultiVector multi_vector_at_infinity_plane_project_via_origin_onto(MultiVectorAtInfinity self, Plane other) {
    return plane_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_plane_bulk_expansion(self, other));
}

MultiVector multi_vector_at_infinity_point_project_via_origin_onto(MultiVectorAtInfinity self, Point other) {
    return point_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_point_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_infinity_point_at_infinity_project_via_origin_onto(MultiVectorAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_point_at_infinity_bulk_expansion(self, other));
}

MultiVector multi_vector_at_infinity_transflector_project_via_origin_onto(MultiVectorAtInfinity self, Transflector other) {
    return transflector_multi_vector_anti_wedge(other, multi_vector_at_infinity_transflector_bulk_expansion(self, other));
}

MultiVector multi_vector_at_infinity_translator_project_via_origin_onto(MultiVectorAtInfinity self, Translator other) {
    return translator_multi_vector_at_origin_anti_wedge(other, multi_vector_at_infinity_translator_bulk_expansion(self, other));
}

MultiVector multi_vector_at_origin_flector_project_via_origin_onto(MultiVectorAtOrigin self, Flector other) {
    return flector_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_flector_bulk_expansion(self, other));
}

MultiVectorAtInfinity multi_vector_at_origin_flector_at_infinity_project_via_origin_onto(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return flector_at_infinity_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_flector_at_infinity_bulk_expansion(self, other));
}

MultiVector multi_vector_at_origin_transflector_project_via_origin_onto(MultiVectorAtOrigin self, Transflector other) {
    return transflector_multi_vector_at_origin_anti_wedge(other, multi_vector_at_origin_transflector_bulk_expansion(self, other));
}

Flector origin_flector_project_via_origin_onto(Origin self, Flector other) {
    return flector_rotor_anti_wedge(other, origin_flector_bulk_expansion(self, other));
}

FlectorAtInfinity origin_flector_at_infinity_project_via_origin_onto(Origin self, FlectorAtInfinity other) {
    return flector_at_infinity_rotor_anti_wedge(other, origin_flector_at_infinity_bulk_expansion(self, other));
}

Flector origin_transflector_project_via_origin_onto(Origin self, Transflector other) {
    return transflector_rotor_anti_wedge(other, origin_transflector_bulk_expansion(self, other));
}

Flector plane_flector_project_via_origin_onto(Plane self, Flector other) {
    return flector_anti_scalar_anti_wedge(other, plane_flector_bulk_expansion(self, other));
}

FlectorAtInfinity plane_flector_at_infinity_project_via_origin_onto(Plane self, FlectorAtInfinity other) {
    return flector_at_infinity_anti_scalar_anti_wedge(other, plane_flector_at_infinity_bulk_expansion(self, other));
}

Horizon plane_horizon_project_via_origin_onto(Plane self, Horizon other) {
    return horizon_anti_scalar_anti_wedge(other, plane_horizon_bulk_expansion(self, other));
}

MultiVector plane_multi_vector_project_via_origin_onto(Plane self, MultiVector other) {
    return multi_vector_anti_scalar_anti_wedge(other, plane_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity plane_multi_vector_at_infinity_project_via_origin_onto(Plane self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_anti_scalar_anti_wedge(other, plane_multi_vector_at_infinity_bulk_expansion(self, other));
}

Plane plane_plane_project_via_origin_onto(Plane self, Plane other) {
    return plane_anti_scalar_anti_wedge(other, plane_plane_bulk_expansion(self, other));
}

Transflector plane_transflector_project_via_origin_onto(Plane self, Transflector other) {
    return transflector_anti_scalar_anti_wedge(other, plane_transflector_bulk_expansion(self, other));
}

Flector plane_at_origin_flector_project_via_origin_onto(PlaneAtOrigin self, Flector other) {
    return flector_anti_scalar_anti_wedge(other, plane_at_origin_flector_bulk_expansion(self, other));
}

FlectorAtInfinity plane_at_origin_flector_at_infinity_project_via_origin_onto(PlaneAtOrigin self, FlectorAtInfinity other) {
    return flector_at_infinity_anti_scalar_anti_wedge(other, plane_at_origin_flector_at_infinity_bulk_expansion(self, other));
}

Transflector plane_at_origin_transflector_project_via_origin_onto(PlaneAtOrigin self, Transflector other) {
    return transflector_anti_scalar_anti_wedge(other, plane_at_origin_transflector_bulk_expansion(self, other));
}

Flector point_flector_project_via_origin_onto(Point self, Flector other) {
    return flector_motor_anti_wedge(other, point_flector_bulk_expansion(self, other));
}

FlectorAtInfinity point_flector_at_infinity_project_via_origin_onto(Point self, FlectorAtInfinity other) {
    return flector_at_infinity_motor_anti_wedge(other, point_flector_at_infinity_bulk_expansion(self, other));
}

PointAtInfinity point_horizon_project_via_origin_onto(Point self, Horizon other) {
    return horizon_line_at_origin_anti_wedge(other, point_horizon_bulk_expansion(self, other));
}

Point point_line_project_via_origin_onto(Point self, Line other) {
    return line_plane_at_origin_anti_wedge(other, point_line_bulk_expansion(self, other));
}

PointAtInfinity point_line_at_infinity_project_via_origin_onto(Point self, LineAtInfinity other) {
    return line_at_infinity_plane_at_origin_anti_wedge(other, point_line_at_infinity_bulk_expansion(self, other));
}

Flector point_motor_project_via_origin_onto(Point self, Motor other) {
    return motor_plane_at_origin_anti_wedge(other, point_motor_bulk_expansion(self, other));
}

MultiVector point_multi_vector_project_via_origin_onto(Point self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, point_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity point_multi_vector_at_infinity_project_via_origin_onto(Point self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, point_multi_vector_at_infinity_bulk_expansion(self, other));
}

Point point_plane_project_via_origin_onto(Point self, Plane other) {
    return plane_line_at_origin_anti_wedge(other, point_plane_bulk_expansion(self, other));
}

Point point_point_project_via_origin_onto(Point self, Point other) {
    return point_anti_scalar_anti_wedge(other, point_point_bulk_expansion(self, other));
}

PointAtInfinity point_point_at_infinity_project_via_origin_onto(Point self, PointAtInfinity other) {
    return point_at_infinity_anti_scalar_anti_wedge(other, point_point_at_infinity_bulk_expansion(self, other));
}

Flector point_transflector_project_via_origin_onto(Point self, Transflector other) {
    return transflector_motor_anti_wedge(other, point_transflector_bulk_expansion(self, other));
}

Transflector point_translator_project_via_origin_onto(Point self, Translator other) {
    return translator_plane_at_origin_anti_wedge(other, point_translator_bulk_expansion(self, other));
}

Flector point_at_infinity_flector_project_via_origin_onto(PointAtInfinity self, Flector other) {
    return flector_motor_anti_wedge(other, point_at_infinity_flector_bulk_expansion(self, other));
}

FlectorAtInfinity point_at_infinity_flector_at_infinity_project_via_origin_onto(PointAtInfinity self, FlectorAtInfinity other) {
    return flector_at_infinity_motor_anti_wedge(other, point_at_infinity_flector_at_infinity_bulk_expansion(self, other));
}

PointAtInfinity point_at_infinity_horizon_project_via_origin_onto(PointAtInfinity self, Horizon other) {
    return horizon_line_at_origin_anti_wedge(other, point_at_infinity_horizon_bulk_expansion(self, other));
}

Point point_at_infinity_line_project_via_origin_onto(PointAtInfinity self, Line other) {
    return line_plane_at_origin_anti_wedge(other, point_at_infinity_line_bulk_expansion(self, other));
}

PointAtInfinity point_at_infinity_line_at_infinity_project_via_origin_onto(PointAtInfinity self, LineAtInfinity other) {
    return line_at_infinity_plane_at_origin_anti_wedge(other, point_at_infinity_line_at_infinity_bulk_expansion(self, other));
}

Flector point_at_infinity_motor_project_via_origin_onto(PointAtInfinity self, Motor other) {
    return motor_plane_at_origin_anti_wedge(other, point_at_infinity_motor_bulk_expansion(self, other));
}

MultiVector point_at_infinity_multi_vector_project_via_origin_onto(PointAtInfinity self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, point_at_infinity_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity point_at_infinity_multi_vector_at_infinity_project_via_origin_onto(PointAtInfinity self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, point_at_infinity_multi_vector_at_infinity_bulk_expansion(self, other));
}

Point point_at_infinity_plane_project_via_origin_onto(PointAtInfinity self, Plane other) {
    return plane_line_at_origin_anti_wedge(other, point_at_infinity_plane_bulk_expansion(self, other));
}

Point point_at_infinity_point_project_via_origin_onto(PointAtInfinity self, Point other) {
    return point_anti_scalar_anti_wedge(other, point_at_infinity_point_bulk_expansion(self, other));
}

PointAtInfinity point_at_infinity_point_at_infinity_project_via_origin_onto(PointAtInfinity self, PointAtInfinity other) {
    return point_at_infinity_anti_scalar_anti_wedge(other, point_at_infinity_point_at_infinity_bulk_expansion(self, other));
}

Flector point_at_infinity_transflector_project_via_origin_onto(PointAtInfinity self, Transflector other) {
    return transflector_motor_anti_wedge(other, point_at_infinity_transflector_bulk_expansion(self, other));
}

Transflector point_at_infinity_translator_project_via_origin_onto(PointAtInfinity self, Translator other) {
    return translator_plane_at_origin_anti_wedge(other, point_at_infinity_translator_bulk_expansion(self, other));
}

MultiVector rotor_flector_project_via_origin_onto(Rotor self, Flector other) {
    return flector_plane_at_origin_anti_wedge(other, rotor_flector_bulk_expansion(self, other));
}

MultiVectorAtInfinity rotor_flector_at_infinity_project_via_origin_onto(Rotor self, FlectorAtInfinity other) {
    return flector_at_infinity_plane_at_origin_anti_wedge(other, rotor_flector_at_infinity_bulk_expansion(self, other));
}

MultiVector rotor_transflector_project_via_origin_onto(Rotor self, Transflector other) {
    return transflector_plane_at_origin_anti_wedge(other, rotor_transflector_bulk_expansion(self, other));
}

Flector transflector_flector_project_via_origin_onto(Transflector self, Flector other) {
    return flector_motor_anti_wedge(other, transflector_flector_bulk_expansion(self, other));
}

FlectorAtInfinity transflector_flector_at_infinity_project_via_origin_onto(Transflector self, FlectorAtInfinity other) {
    return flector_at_infinity_motor_anti_wedge(other, transflector_flector_at_infinity_bulk_expansion(self, other));
}

FlectorAtInfinity transflector_horizon_project_via_origin_onto(Transflector self, Horizon other) {
    return horizon_rotor_anti_wedge(other, transflector_horizon_bulk_expansion(self, other));
}

Point transflector_line_project_via_origin_onto(Transflector self, Line other) {
    return line_plane_at_origin_anti_wedge(other, transflector_line_bulk_expansion(self, other));
}

PointAtInfinity transflector_line_at_infinity_project_via_origin_onto(Transflector self, LineAtInfinity other) {
    return line_at_infinity_plane_at_origin_anti_wedge(other, transflector_line_at_infinity_bulk_expansion(self, other));
}

Flector transflector_motor_project_via_origin_onto(Transflector self, Motor other) {
    return motor_plane_at_origin_anti_wedge(other, transflector_motor_bulk_expansion(self, other));
}

MultiVector transflector_multi_vector_project_via_origin_onto(Transflector self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, transflector_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity transflector_multi_vector_at_infinity_project_via_origin_onto(Transflector self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, transflector_multi_vector_at_infinity_bulk_expansion(self, other));
}

Flector transflector_plane_project_via_origin_onto(Transflector self, Plane other) {
    return plane_rotor_anti_wedge(other, transflector_plane_bulk_expansion(self, other));
}

Point transflector_point_project_via_origin_onto(Transflector self, Point other) {
    return point_anti_scalar_anti_wedge(other, transflector_point_bulk_expansion(self, other));
}

PointAtInfinity transflector_point_at_infinity_project_via_origin_onto(Transflector self, PointAtInfinity other) {
    return point_at_infinity_anti_scalar_anti_wedge(other, transflector_point_at_infinity_bulk_expansion(self, other));
}

Flector transflector_transflector_project_via_origin_onto(Transflector self, Transflector other) {
    return transflector_motor_anti_wedge(other, transflector_transflector_bulk_expansion(self, other));
}

Transflector transflector_translator_project_via_origin_onto(Transflector self, Translator other) {
    return translator_plane_at_origin_anti_wedge(other, transflector_translator_bulk_expansion(self, other));
}

MultiVector translator_flector_project_via_origin_onto(Translator self, Flector other) {
    return flector_plane_anti_wedge(other, translator_flector_bulk_expansion(self, other));
}

MultiVectorAtInfinity translator_flector_at_infinity_project_via_origin_onto(Translator self, FlectorAtInfinity other) {
    return flector_at_infinity_plane_anti_wedge(other, translator_flector_at_infinity_bulk_expansion(self, other));
}

LineAtInfinity translator_horizon_project_via_origin_onto(Translator self, Horizon other) {
    return horizon_plane_at_origin_anti_wedge(other, translator_horizon_bulk_expansion(self, other));
}

Line translator_line_project_via_origin_onto(Translator self, Line other) {
    return line_anti_scalar_anti_wedge(other, translator_line_bulk_expansion(self, other));
}

LineAtInfinity translator_line_at_infinity_project_via_origin_onto(Translator self, LineAtInfinity other) {
    return line_at_infinity_anti_scalar_anti_wedge(other, translator_line_at_infinity_bulk_expansion(self, other));
}

Motor translator_motor_project_via_origin_onto(Translator self, Motor other) {
    return motor_anti_scalar_anti_wedge(other, translator_motor_bulk_expansion(self, other));
}

MultiVector translator_multi_vector_project_via_origin_onto(Translator self, MultiVector other) {
    return multi_vector_multi_vector_at_origin_anti_wedge(other, translator_multi_vector_bulk_expansion(self, other));
}

MultiVectorAtInfinity translator_multi_vector_at_infinity_project_via_origin_onto(Translator self, MultiVectorAtInfinity other) {
    return multi_vector_at_infinity_multi_vector_at_origin_anti_wedge(other, translator_multi_vector_at_infinity_bulk_expansion(self, other));
}

Line translator_plane_project_via_origin_onto(Translator self, Plane other) {
    return plane_plane_at_origin_anti_wedge(other, translator_plane_bulk_expansion(self, other));
}

MultiVector translator_transflector_project_via_origin_onto(Translator self, Transflector other) {
    return transflector_plane_anti_wedge(other, translator_transflector_bulk_expansion(self, other));
}

Translator translator_translator_project_via_origin_onto(Translator self, Translator other) {
    return translator_anti_scalar_anti_wedge(other, translator_translator_bulk_expansion(self, other));
}

float line_line_cosine_angle(Line self, Line other) {
    return line_line_weight_contraction(line_unitize(self), line_unitize(other)).g0;
}

float line_line_at_origin_cosine_angle(Line self, LineAtOrigin other) {
    return line_line_at_origin_weight_contraction(line_unitize(self), line_at_origin_unitize(other)).g0;
}

float line_origin_cosine_angle(Line self, Origin other) {
    return point_at_infinity_bulk_norm(line_origin_weight_contraction(line_unitize(self), origin_unitize(other))).g0;
}

float line_point_cosine_angle(Line self, Point other) {
    return point_at_infinity_bulk_norm(line_point_weight_contraction(line_unitize(self), point_unitize(other))).g0;
}

float line_at_origin_line_cosine_angle(LineAtOrigin self, Line other) {
    return line_at_origin_line_weight_contraction(line_at_origin_unitize(self), line_unitize(other)).g0;
}

float line_at_origin_line_at_origin_cosine_angle(LineAtOrigin self, LineAtOrigin other) {
    return line_at_origin_line_at_origin_weight_contraction(line_at_origin_unitize(self), line_at_origin_unitize(other)).g0;
}

float line_at_origin_origin_cosine_angle(LineAtOrigin self, Origin other) {
    return point_at_infinity_bulk_norm(line_at_origin_origin_weight_contraction(line_at_origin_unitize(self), origin_unitize(other))).g0;
}

float line_at_origin_point_cosine_angle(LineAtOrigin self, Point other) {
    return point_at_infinity_bulk_norm(line_at_origin_point_weight_contraction(line_at_origin_unitize(self), point_unitize(other))).g0;
}

float origin_origin_cosine_angle(Origin self, Origin other) {
    return origin_origin_weight_contraction(origin_unitize(self), origin_unitize(other)).g0;
}

float origin_point_cosine_angle(Origin self, Point other) {
    return origin_point_weight_contraction(origin_unitize(self), point_unitize(other)).g0;
}

float plane_line_cosine_angle(Plane self, Line other) {
    return point_at_infinity_bulk_norm(plane_line_weight_contraction(plane_unitize(self), line_unitize(other))).g0;
}

float plane_line_at_origin_cosine_angle(Plane self, LineAtOrigin other) {
    return point_at_infinity_bulk_norm(plane_line_at_origin_weight_contraction(plane_unitize(self), line_at_origin_unitize(other))).g0;
}

float plane_origin_cosine_angle(Plane self, Origin other) {
    return line_at_infinity_bulk_norm(plane_origin_weight_contraction(plane_unitize(self), origin_unitize(other))).g0;
}

float plane_plane_cosine_angle(Plane self, Plane other) {
    return plane_plane_weight_contraction(plane_unitize(self), plane_unitize(other)).g0;
}

float plane_plane_at_origin_cosine_angle(Plane self, PlaneAtOrigin other) {
    return plane_plane_at_origin_weight_contraction(plane_unitize(self), plane_at_origin_unitize(other)).g0;
}

float plane_point_cosine_angle(Plane self, Point other) {
    return line_at_infinity_bulk_norm(plane_point_weight_contraction(plane_unitize(self), point_unitize(other))).g0;
}

float plane_at_origin_line_cosine_angle(PlaneAtOrigin self, Line other) {
    return point_at_infinity_bulk_norm(plane_at_origin_line_weight_contraction(plane_at_origin_unitize(self), line_unitize(other))).g0;
}

float plane_at_origin_line_at_origin_cosine_angle(PlaneAtOrigin self, LineAtOrigin other) {
    return point_at_infinity_bulk_norm(plane_at_origin_line_at_origin_weight_contraction(plane_at_origin_unitize(self), line_at_origin_unitize(other))).g0;
}

float plane_at_origin_origin_cosine_angle(PlaneAtOrigin self, Origin other) {
    return line_at_infinity_bulk_norm(plane_at_origin_origin_weight_contraction(plane_at_origin_unitize(self), origin_unitize(other))).g0;
}

float plane_at_origin_plane_cosine_angle(PlaneAtOrigin self, Plane other) {
    return plane_at_origin_plane_weight_contraction(plane_at_origin_unitize(self), plane_unitize(other)).g0;
}

float plane_at_origin_plane_at_origin_cosine_angle(PlaneAtOrigin self, PlaneAtOrigin other) {
    return plane_at_origin_plane_at_origin_weight_contraction(plane_at_origin_unitize(self), plane_at_origin_unitize(other)).g0;
}

float plane_at_origin_point_cosine_angle(PlaneAtOrigin self, Point other) {
    return line_at_infinity_bulk_norm(plane_at_origin_point_weight_contraction(plane_at_origin_unitize(self), point_unitize(other))).g0;
}

float point_origin_cosine_angle(Point self, Origin other) {
    return point_origin_weight_contraction(point_unitize(self), origin_unitize(other)).g0;
}

float point_point_cosine_angle(Point self, Point other) {
    return point_point_weight_contraction(point_unitize(self), point_unitize(other)).g0;
}

Magnitude anti_scalar_multi_vector_distance(AntiScalar self, MultiVector other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(anti_scalar_multi_vector_wedge(self, other))), anti_scalar_weight_norm(anti_scalar_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude flector_flector_distance(Flector self, Flector other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(motor_attitude(flector_flector_wedge(self, other))), multi_vector_weight_norm(flector_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude flector_line_distance(Flector self, Line other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(flector_line_wedge(self, other))), motor_weight_norm(flector_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude flector_line_at_origin_distance(Flector self, LineAtOrigin other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(flector_line_at_origin_wedge(self, other))), motor_weight_norm(flector_point_at_infinity_wedge(self, line_at_origin_attitude(other))));
}

Magnitude flector_magnitude_distance(Flector self, Magnitude other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(flector_attitude(flector_magnitude_wedge(self, other))), anti_scalar_weight_norm(flector_horizon_wedge(self, magnitude_attitude(other))));
}

Magnitude flector_motor_distance(Flector self, Motor other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(flector_motor_wedge(self, other))), motor_weight_norm(flector_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude flector_multi_vector_distance(Flector self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(flector_multi_vector_wedge(self, other))), multi_vector_weight_norm(flector_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude flector_multi_vector_at_origin_distance(Flector self, MultiVectorAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(flector_multi_vector_at_origin_wedge(self, other))), multi_vector_weight_norm(flector_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_attitude(other))));
}

Magnitude flector_origin_distance(Flector self, Origin other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(rotor_attitude(flector_origin_wedge(self, other))), flector_weight_norm(flector_scalar_wedge(self, origin_attitude(other))));
}

Magnitude flector_plane_distance(Flector self, Plane other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(flector_plane_wedge(self, other))), plane_weight_norm(flector_line_at_infinity_wedge(self, plane_attitude(other))));
}

Magnitude flector_plane_at_origin_distance(Flector self, PlaneAtOrigin other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(flector_plane_at_origin_wedge(self, other))), plane_weight_norm(flector_line_at_infinity_wedge(self, plane_at_origin_attitude(other))));
}

Magnitude flector_point_distance(Flector self, Point other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(motor_attitude(flector_point_wedge(self, other))), flector_weight_norm(flector_scalar_wedge(self, point_attitude(other))));
}

Magnitude flector_rotor_distance(Flector self, Rotor other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(flector_rotor_wedge(self, other))), motor_weight_norm(flector_flector_at_infinity_wedge(self, rotor_attitude(other))));
}

Magnitude flector_transflector_distance(Flector self, Transflector other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(motor_attitude(flector_transflector_wedge(self, other))), plane_weight_norm(flector_line_at_infinity_wedge(self, transflector_attitude(other))));
}

Magnitude flector_translator_distance(Flector self, Translator other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(flector_translator_wedge(self, other))), anti_scalar_weight_norm(flector_horizon_wedge(self, translator_attitude(other))));
}

Magnitude line_flector_distance(Line self, Flector other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(line_flector_wedge(self, other))), multi_vector_weight_norm(line_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude line_line_distance(Line self, Line other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(line_line_wedge(self, other))), plane_weight_norm(line_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude line_line_at_origin_distance(Line self, LineAtOrigin other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(line_line_at_origin_wedge(self, other))), plane_weight_norm(line_point_at_infinity_wedge(self, line_at_origin_attitude(other))));
}

Magnitude line_motor_distance(Line self, Motor other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(line_motor_wedge(self, other))), plane_weight_norm(line_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude line_multi_vector_distance(Line self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(line_multi_vector_wedge(self, other))), multi_vector_weight_norm(line_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude line_multi_vector_at_origin_distance(Line self, MultiVectorAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(line_multi_vector_at_origin_wedge(self, other))), multi_vector_weight_norm(line_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_attitude(other))));
}

Magnitude line_origin_distance(Line self, Origin other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(line_origin_wedge(self, other))), line_weight_norm(line_scalar_wedge(self, origin_attitude(other))));
}

Magnitude line_point_distance(Line self, Point other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(line_point_wedge(self, other))), line_weight_norm(line_scalar_wedge(self, point_attitude(other))));
}

Magnitude line_rotor_distance(Line self, Rotor other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(line_rotor_wedge(self, other))), plane_weight_norm(line_flector_at_infinity_wedge(self, rotor_attitude(other))));
}

Magnitude line_transflector_distance(Line self, Transflector other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(line_transflector_wedge(self, other))), anti_scalar_weight_norm(line_line_at_infinity_wedge(self, transflector_attitude(other))));
}

Magnitude line_at_origin_flector_distance(LineAtOrigin self, Flector other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(line_at_origin_flector_wedge(self, other))), multi_vector_at_origin_weight_norm(line_at_origin_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude line_at_origin_line_distance(LineAtOrigin self, Line other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(line_at_origin_line_wedge(self, other))), plane_at_origin_weight_norm(line_at_origin_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude line_at_origin_motor_distance(LineAtOrigin self, Motor other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(line_at_origin_motor_wedge(self, other))), plane_at_origin_weight_norm(line_at_origin_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude line_at_origin_multi_vector_distance(LineAtOrigin self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(line_at_origin_multi_vector_wedge(self, other))), multi_vector_at_origin_weight_norm(line_at_origin_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude line_at_origin_point_distance(LineAtOrigin self, Point other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(line_at_origin_point_wedge(self, other))), line_at_origin_weight_norm(line_at_origin_scalar_wedge(self, point_attitude(other))));
}

Magnitude line_at_origin_transflector_distance(LineAtOrigin self, Transflector other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(line_at_origin_transflector_wedge(self, other))), anti_scalar_weight_norm(line_at_origin_line_at_infinity_wedge(self, transflector_attitude(other))));
}

Magnitude magnitude_flector_distance(Magnitude self, Flector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(flector_attitude(magnitude_flector_wedge(self, other))), multi_vector_weight_norm(magnitude_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude magnitude_multi_vector_distance(Magnitude self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(magnitude_multi_vector_wedge(self, other))), multi_vector_weight_norm(magnitude_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude magnitude_multi_vector_at_origin_distance(Magnitude self, MultiVectorAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(magnitude_multi_vector_at_origin_wedge(self, other))), multi_vector_weight_norm(magnitude_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_attitude(other))));
}

Magnitude magnitude_origin_distance(Magnitude self, Origin other) {
    return scalar_anti_scalar_add(scalar_bulk_norm(origin_attitude(magnitude_origin_wedge(self, other))), magnitude_weight_norm(magnitude_scalar_wedge(self, origin_attitude(other))));
}

Magnitude magnitude_point_distance(Magnitude self, Point other) {
    return scalar_anti_scalar_add(scalar_bulk_norm(point_attitude(magnitude_point_wedge(self, other))), magnitude_weight_norm(magnitude_scalar_wedge(self, point_attitude(other))));
}

Magnitude motor_flector_distance(Motor self, Flector other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(motor_flector_wedge(self, other))), multi_vector_weight_norm(motor_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude motor_line_distance(Motor self, Line other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(motor_line_wedge(self, other))), plane_weight_norm(motor_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude motor_line_at_origin_distance(Motor self, LineAtOrigin other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(motor_line_at_origin_wedge(self, other))), plane_weight_norm(motor_point_at_infinity_wedge(self, line_at_origin_attitude(other))));
}

Magnitude motor_motor_distance(Motor self, Motor other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(motor_motor_wedge(self, other))), plane_weight_norm(motor_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude motor_multi_vector_distance(Motor self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(motor_multi_vector_wedge(self, other))), multi_vector_weight_norm(motor_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude motor_multi_vector_at_origin_distance(Motor self, MultiVectorAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(motor_multi_vector_at_origin_wedge(self, other))), multi_vector_weight_norm(motor_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_attitude(other))));
}

Magnitude motor_origin_distance(Motor self, Origin other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(motor_origin_wedge(self, other))), motor_weight_norm(motor_scalar_wedge(self, origin_attitude(other))));
}

Magnitude motor_point_distance(Motor self, Point other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(motor_point_wedge(self, other))), motor_weight_norm(motor_scalar_wedge(self, point_attitude(other))));
}

Magnitude motor_rotor_distance(Motor self, Rotor other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(motor_rotor_wedge(self, other))), plane_weight_norm(motor_flector_at_infinity_wedge(self, rotor_attitude(other))));
}

Magnitude motor_transflector_distance(Motor self, Transflector other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(motor_transflector_wedge(self, other))), anti_scalar_weight_norm(motor_line_at_infinity_wedge(self, transflector_attitude(other))));
}

Magnitude multi_vector_anti_scalar_distance(MultiVector self, AntiScalar other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(multi_vector_anti_scalar_wedge(self, other))), multi_vector_weight_norm(multi_vector_horizon_wedge(self, anti_scalar_attitude(other))));
}

Magnitude multi_vector_flector_distance(MultiVector self, Flector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(multi_vector_flector_wedge(self, other))), multi_vector_weight_norm(multi_vector_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude multi_vector_line_distance(MultiVector self, Line other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(multi_vector_line_wedge(self, other))), multi_vector_weight_norm(multi_vector_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude multi_vector_line_at_origin_distance(MultiVector self, LineAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_line_at_origin_wedge(self, other))), multi_vector_weight_norm(multi_vector_point_at_infinity_wedge(self, line_at_origin_attitude(other))));
}

Magnitude multi_vector_magnitude_distance(MultiVector self, Magnitude other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(multi_vector_magnitude_wedge(self, other))), multi_vector_weight_norm(multi_vector_horizon_wedge(self, magnitude_attitude(other))));
}

Magnitude multi_vector_motor_distance(MultiVector self, Motor other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(multi_vector_motor_wedge(self, other))), multi_vector_weight_norm(multi_vector_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude multi_vector_multi_vector_distance(MultiVector self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(multi_vector_multi_vector_wedge(self, other))), multi_vector_weight_norm(multi_vector_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude multi_vector_multi_vector_at_origin_distance(MultiVector self, MultiVectorAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_multi_vector_at_origin_wedge(self, other))), multi_vector_weight_norm(multi_vector_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_attitude(other))));
}

Magnitude multi_vector_origin_distance(MultiVector self, Origin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_origin_wedge(self, other))), multi_vector_weight_norm(multi_vector_scalar_wedge(self, origin_attitude(other))));
}

Magnitude multi_vector_plane_distance(MultiVector self, Plane other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(multi_vector_plane_wedge(self, other))), multi_vector_weight_norm(multi_vector_line_at_infinity_wedge(self, plane_attitude(other))));
}

Magnitude multi_vector_plane_at_origin_distance(MultiVector self, PlaneAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_plane_at_origin_wedge(self, other))), multi_vector_weight_norm(multi_vector_line_at_infinity_wedge(self, plane_at_origin_attitude(other))));
}

Magnitude multi_vector_point_distance(MultiVector self, Point other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(multi_vector_point_wedge(self, other))), multi_vector_weight_norm(multi_vector_scalar_wedge(self, point_attitude(other))));
}

Magnitude multi_vector_rotor_distance(MultiVector self, Rotor other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_rotor_wedge(self, other))), multi_vector_weight_norm(multi_vector_flector_at_infinity_wedge(self, rotor_attitude(other))));
}

Magnitude multi_vector_transflector_distance(MultiVector self, Transflector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(multi_vector_transflector_wedge(self, other))), multi_vector_weight_norm(multi_vector_line_at_infinity_wedge(self, transflector_attitude(other))));
}

Magnitude multi_vector_translator_distance(MultiVector self, Translator other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(multi_vector_translator_wedge(self, other))), multi_vector_weight_norm(multi_vector_horizon_wedge(self, translator_attitude(other))));
}

Magnitude multi_vector_at_origin_flector_distance(MultiVectorAtOrigin self, Flector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_at_origin_flector_wedge(self, other))), multi_vector_at_origin_weight_norm(multi_vector_at_origin_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude multi_vector_at_origin_line_distance(MultiVectorAtOrigin self, Line other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_at_origin_line_wedge(self, other))), multi_vector_at_origin_weight_norm(multi_vector_at_origin_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude multi_vector_at_origin_magnitude_distance(MultiVectorAtOrigin self, Magnitude other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_at_origin_magnitude_wedge(self, other))), anti_scalar_weight_norm(multi_vector_at_origin_horizon_wedge(self, magnitude_attitude(other))));
}

Magnitude multi_vector_at_origin_motor_distance(MultiVectorAtOrigin self, Motor other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_at_origin_motor_wedge(self, other))), multi_vector_at_origin_weight_norm(multi_vector_at_origin_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude multi_vector_at_origin_multi_vector_distance(MultiVectorAtOrigin self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_at_origin_multi_vector_wedge(self, other))), multi_vector_at_origin_weight_norm(multi_vector_at_origin_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude multi_vector_at_origin_plane_distance(MultiVectorAtOrigin self, Plane other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(multi_vector_at_origin_plane_wedge(self, other))), multi_vector_at_origin_weight_norm(multi_vector_at_origin_line_at_infinity_wedge(self, plane_attitude(other))));
}

Magnitude multi_vector_at_origin_point_distance(MultiVectorAtOrigin self, Point other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_at_origin_point_wedge(self, other))), multi_vector_at_origin_weight_norm(multi_vector_at_origin_scalar_wedge(self, point_attitude(other))));
}

Magnitude multi_vector_at_origin_transflector_distance(MultiVectorAtOrigin self, Transflector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_at_origin_transflector_wedge(self, other))), multi_vector_at_origin_weight_norm(multi_vector_at_origin_line_at_infinity_wedge(self, transflector_attitude(other))));
}

Magnitude multi_vector_at_origin_translator_distance(MultiVectorAtOrigin self, Translator other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(multi_vector_at_origin_translator_wedge(self, other))), anti_scalar_weight_norm(multi_vector_at_origin_horizon_wedge(self, translator_attitude(other))));
}

Magnitude origin_flector_distance(Origin self, Flector other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(rotor_attitude(origin_flector_wedge(self, other))), multi_vector_at_origin_weight_norm(origin_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude origin_line_distance(Origin self, Line other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(origin_line_wedge(self, other))), line_at_origin_weight_norm(origin_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude origin_magnitude_distance(Origin self, Magnitude other) {
    return scalar_anti_scalar_add(scalar_bulk_norm(origin_attitude(origin_magnitude_wedge(self, other))), anti_scalar_weight_norm(origin_horizon_wedge(self, magnitude_attitude(other))));
}

Magnitude origin_motor_distance(Origin self, Motor other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(origin_motor_wedge(self, other))), rotor_weight_norm(origin_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude origin_multi_vector_distance(Origin self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(origin_multi_vector_wedge(self, other))), multi_vector_at_origin_weight_norm(origin_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude origin_plane_distance(Origin self, Plane other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(origin_plane_wedge(self, other))), plane_at_origin_weight_norm(origin_line_at_infinity_wedge(self, plane_attitude(other))));
}

Magnitude origin_point_distance(Origin self, Point other) {
    return scalar_anti_scalar_add(point_at_infinity_bulk_norm(line_at_origin_attitude(origin_point_wedge(self, other))), origin_weight_norm(origin_scalar_wedge(self, point_attitude(other))));
}

Magnitude origin_transflector_distance(Origin self, Transflector other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(rotor_attitude(origin_transflector_wedge(self, other))), plane_at_origin_weight_norm(origin_line_at_infinity_wedge(self, transflector_attitude(other))));
}

Magnitude origin_translator_distance(Origin self, Translator other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(origin_translator_wedge(self, other))), anti_scalar_weight_norm(origin_horizon_wedge(self, translator_attitude(other))));
}

Magnitude plane_flector_distance(Plane self, Flector other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(plane_flector_wedge(self, other))), multi_vector_weight_norm(plane_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude plane_multi_vector_distance(Plane self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(plane_multi_vector_wedge(self, other))), multi_vector_weight_norm(plane_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude plane_multi_vector_at_origin_distance(Plane self, MultiVectorAtOrigin other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(plane_multi_vector_at_origin_wedge(self, other))), multi_vector_weight_norm(plane_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_attitude(other))));
}

Magnitude plane_origin_distance(Plane self, Origin other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(plane_origin_wedge(self, other))), plane_weight_norm(plane_scalar_wedge(self, origin_attitude(other))));
}

Magnitude plane_point_distance(Plane self, Point other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(plane_point_wedge(self, other))), plane_weight_norm(plane_scalar_wedge(self, point_attitude(other))));
}

Magnitude plane_at_origin_flector_distance(PlaneAtOrigin self, Flector other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(plane_at_origin_flector_wedge(self, other))), multi_vector_at_origin_weight_norm(plane_at_origin_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude plane_at_origin_multi_vector_distance(PlaneAtOrigin self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(plane_at_origin_multi_vector_wedge(self, other))), multi_vector_at_origin_weight_norm(plane_at_origin_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude plane_at_origin_point_distance(PlaneAtOrigin self, Point other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(plane_at_origin_point_wedge(self, other))), plane_at_origin_weight_norm(plane_at_origin_scalar_wedge(self, point_attitude(other))));
}

Magnitude point_flector_distance(Point self, Flector other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(motor_attitude(point_flector_wedge(self, other))), multi_vector_weight_norm(point_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude point_line_distance(Point self, Line other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(point_line_wedge(self, other))), line_weight_norm(point_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude point_line_at_origin_distance(Point self, LineAtOrigin other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(point_line_at_origin_wedge(self, other))), line_weight_norm(point_point_at_infinity_wedge(self, line_at_origin_attitude(other))));
}

Magnitude point_magnitude_distance(Point self, Magnitude other) {
    return scalar_anti_scalar_add(scalar_bulk_norm(point_attitude(point_magnitude_wedge(self, other))), anti_scalar_weight_norm(point_horizon_wedge(self, magnitude_attitude(other))));
}

Magnitude point_motor_distance(Point self, Motor other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(point_motor_wedge(self, other))), motor_weight_norm(point_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude point_multi_vector_distance(Point self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(point_multi_vector_wedge(self, other))), multi_vector_weight_norm(point_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude point_multi_vector_at_origin_distance(Point self, MultiVectorAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(point_multi_vector_at_origin_wedge(self, other))), multi_vector_weight_norm(point_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_attitude(other))));
}

Magnitude point_origin_distance(Point self, Origin other) {
    return scalar_anti_scalar_add(point_at_infinity_bulk_norm(line_at_origin_attitude(point_origin_wedge(self, other))), point_weight_norm(point_scalar_wedge(self, origin_attitude(other))));
}

Magnitude point_plane_distance(Point self, Plane other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(point_plane_wedge(self, other))), plane_weight_norm(point_line_at_infinity_wedge(self, plane_attitude(other))));
}

Magnitude point_plane_at_origin_distance(Point self, PlaneAtOrigin other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(point_plane_at_origin_wedge(self, other))), plane_weight_norm(point_line_at_infinity_wedge(self, plane_at_origin_attitude(other))));
}

Magnitude point_point_distance(Point self, Point other) {
    return scalar_anti_scalar_add(point_at_infinity_bulk_norm(line_attitude(point_point_wedge(self, other))), point_weight_norm(point_scalar_wedge(self, point_attitude(other))));
}

Magnitude point_rotor_distance(Point self, Rotor other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(point_rotor_wedge(self, other))), motor_weight_norm(point_flector_at_infinity_wedge(self, rotor_attitude(other))));
}

Magnitude point_transflector_distance(Point self, Transflector other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(motor_attitude(point_transflector_wedge(self, other))), plane_weight_norm(point_line_at_infinity_wedge(self, transflector_attitude(other))));
}

Magnitude point_translator_distance(Point self, Translator other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(point_translator_wedge(self, other))), anti_scalar_weight_norm(point_horizon_wedge(self, translator_attitude(other))));
}

Magnitude rotor_flector_distance(Rotor self, Flector other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(rotor_flector_wedge(self, other))), multi_vector_at_origin_weight_norm(rotor_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude rotor_line_distance(Rotor self, Line other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(rotor_line_wedge(self, other))), plane_at_origin_weight_norm(rotor_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude rotor_motor_distance(Rotor self, Motor other) {
    return scalar_anti_scalar_add(horizon_bulk_norm(anti_scalar_attitude(rotor_motor_wedge(self, other))), plane_at_origin_weight_norm(rotor_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude rotor_multi_vector_distance(Rotor self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(rotor_multi_vector_wedge(self, other))), multi_vector_at_origin_weight_norm(rotor_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude rotor_point_distance(Rotor self, Point other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(rotor_point_wedge(self, other))), rotor_weight_norm(rotor_scalar_wedge(self, point_attitude(other))));
}

Magnitude rotor_transflector_distance(Rotor self, Transflector other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(rotor_transflector_wedge(self, other))), anti_scalar_weight_norm(rotor_line_at_infinity_wedge(self, transflector_attitude(other))));
}

Magnitude transflector_flector_distance(Transflector self, Flector other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(motor_attitude(transflector_flector_wedge(self, other))), multi_vector_weight_norm(transflector_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude transflector_line_distance(Transflector self, Line other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(transflector_line_wedge(self, other))), translator_weight_norm(transflector_point_at_infinity_wedge(self, line_attitude(other))));
}

Magnitude transflector_line_at_origin_distance(Transflector self, LineAtOrigin other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(transflector_line_at_origin_wedge(self, other))), translator_weight_norm(transflector_point_at_infinity_wedge(self, line_at_origin_attitude(other))));
}

Magnitude transflector_motor_distance(Transflector self, Motor other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(transflector_motor_wedge(self, other))), translator_weight_norm(transflector_flector_at_infinity_wedge(self, motor_attitude(other))));
}

Magnitude transflector_multi_vector_distance(Transflector self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(transflector_multi_vector_wedge(self, other))), multi_vector_weight_norm(transflector_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude transflector_multi_vector_at_origin_distance(Transflector self, MultiVectorAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(transflector_multi_vector_at_origin_wedge(self, other))), multi_vector_weight_norm(transflector_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_attitude(other))));
}

Magnitude transflector_origin_distance(Transflector self, Origin other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(rotor_attitude(transflector_origin_wedge(self, other))), transflector_weight_norm(transflector_scalar_wedge(self, origin_attitude(other))));
}

Magnitude transflector_point_distance(Transflector self, Point other) {
    return scalar_anti_scalar_add(flector_at_infinity_bulk_norm(motor_attitude(transflector_point_wedge(self, other))), transflector_weight_norm(transflector_scalar_wedge(self, point_attitude(other))));
}

Magnitude transflector_rotor_distance(Transflector self, Rotor other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(transflector_rotor_wedge(self, other))), translator_weight_norm(transflector_flector_at_infinity_wedge(self, rotor_attitude(other))));
}

Magnitude translator_flector_distance(Translator self, Flector other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(translator_flector_wedge(self, other))), multi_vector_weight_norm(translator_multi_vector_at_infinity_wedge(self, flector_attitude(other))));
}

Magnitude translator_multi_vector_distance(Translator self, MultiVector other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_attitude(translator_multi_vector_wedge(self, other))), multi_vector_weight_norm(translator_multi_vector_at_infinity_wedge(self, multi_vector_attitude(other))));
}

Magnitude translator_multi_vector_at_origin_distance(Translator self, MultiVectorAtOrigin other) {
    return scalar_anti_scalar_add(multi_vector_at_infinity_bulk_norm(multi_vector_at_origin_attitude(translator_multi_vector_at_origin_wedge(self, other))), multi_vector_weight_norm(translator_multi_vector_at_infinity_wedge(self, multi_vector_at_origin_attitude(other))));
}

Magnitude translator_origin_distance(Translator self, Origin other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_at_origin_attitude(translator_origin_wedge(self, other))), translator_weight_norm(translator_scalar_wedge(self, origin_attitude(other))));
}

Magnitude translator_point_distance(Translator self, Point other) {
    return scalar_anti_scalar_add(line_at_infinity_bulk_norm(plane_attitude(translator_point_wedge(self, other))), translator_weight_norm(translator_scalar_wedge(self, point_attitude(other))));
}

float line_line_sine_angle(Line self, Line other) {
    float cos = line_line_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float line_line_at_origin_sine_angle(Line self, LineAtOrigin other) {
    float cos = line_line_at_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float line_origin_sine_angle(Line self, Origin other) {
    float cos = line_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float line_point_sine_angle(Line self, Point other) {
    float cos = line_point_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float line_at_origin_line_sine_angle(LineAtOrigin self, Line other) {
    float cos = line_at_origin_line_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float line_at_origin_line_at_origin_sine_angle(LineAtOrigin self, LineAtOrigin other) {
    float cos = line_at_origin_line_at_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float line_at_origin_origin_sine_angle(LineAtOrigin self, Origin other) {
    float cos = line_at_origin_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float line_at_origin_point_sine_angle(LineAtOrigin self, Point other) {
    float cos = line_at_origin_point_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float origin_origin_sine_angle(Origin self, Origin other) {
    float cos = origin_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float origin_point_sine_angle(Origin self, Point other) {
    float cos = origin_point_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_line_sine_angle(Plane self, Line other) {
    float cos = plane_line_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_line_at_origin_sine_angle(Plane self, LineAtOrigin other) {
    float cos = plane_line_at_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_origin_sine_angle(Plane self, Origin other) {
    float cos = plane_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_plane_sine_angle(Plane self, Plane other) {
    float cos = plane_plane_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_plane_at_origin_sine_angle(Plane self, PlaneAtOrigin other) {
    float cos = plane_plane_at_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_point_sine_angle(Plane self, Point other) {
    float cos = plane_point_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_at_origin_line_sine_angle(PlaneAtOrigin self, Line other) {
    float cos = plane_at_origin_line_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_at_origin_line_at_origin_sine_angle(PlaneAtOrigin self, LineAtOrigin other) {
    float cos = plane_at_origin_line_at_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_at_origin_origin_sine_angle(PlaneAtOrigin self, Origin other) {
    float cos = plane_at_origin_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_at_origin_plane_sine_angle(PlaneAtOrigin self, Plane other) {
    float cos = plane_at_origin_plane_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_at_origin_plane_at_origin_sine_angle(PlaneAtOrigin self, PlaneAtOrigin other) {
    float cos = plane_at_origin_plane_at_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float plane_at_origin_point_sine_angle(PlaneAtOrigin self, Point other) {
    float cos = plane_at_origin_point_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float point_origin_sine_angle(Point self, Origin other) {
    float cos = point_origin_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

float point_point_sine_angle(Point self, Point other) {
    float cos = point_point_cosine_angle(self, other);
    float cos_squared = cos * cos;
    float sub = 1.0 - cos_squared;
    return sqrt(sub);
}

