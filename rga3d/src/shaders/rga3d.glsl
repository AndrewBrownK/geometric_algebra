#define_import_path rga3d

void main() {}

//
// AUTO-GENERATED - DO NOT MODIFY
//
// To contribute to this file, see the adjacent codegen package.
// https://github.com/AndrewBrownK/projective_ga/
//

struct Scalar {
    // 1
    float g0_;
};

struct AntiScalar {
    // e1234
    float g0_;
};

struct DualNum {
    // 1, e1234
    vec2 g0_;
};

struct Point {
    // e1, e2, e3, e4
    vec4 g0_;
};

struct Origin {
    // e4
    float g0_;
};

struct PointAtInfinity {
    // e1, e2, e3
    vec3 g0_;
};

struct Line {
    // -e14, -e24, -e34
    vec3 g0_;
    // e23, -e13, e12
    vec3 g1_;
};

struct LineAtOrigin {
    // -e14, -e24, -e34
    vec3 g0_;
};

struct LineAtInfinity {
    // e23, -e13, e12
    vec3 g0_;
};

struct Plane {
    // e234, -e134, e124, -e123
    vec4 g0_;
};

struct PlaneAtOrigin {
    // e234, -e134, e124
    vec3 g0_;
};

struct Horizon {
    // -e123
    float g0_;
};

struct Motor {
    // -e14, -e24, -e34, e1234
    vec4 g0_;
    // e23, -e13, e12
    vec3 g1_;
};

struct Rotor {
    // -e14, -e24, -e34, e1234
    vec4 g0_;
};

struct Translator {
    // e23, -e13, e12, e1234
    vec4 g0_;
};

struct Flector {
    // e1, e2, e3, e4
    vec4 g0_;
    // e234, -e134, e124, -e123
    vec4 g1_;
};

struct Transflector {
    // e1, e2, e3
    vec3 g0_;
    // e234, -e134, e124, -e123
    vec4 g1_;
};

struct FlectorAtInfinity {
    // e1, e2, e3, -e123
    vec4 g0_;
};

struct MultiVector {
    // 1, e1234
    vec2 g0_;
    // e1, e2, e3, e4
    vec4 g1_;
    // -e14, -e24, -e34
    vec3 g2_;
    // e23, -e13, e12
    vec3 g3_;
    // e234, -e134, e124, -e123
    vec4 g4_;
};

struct MultiVectorAtOrigin {
    // e4, e1234
    vec2 g0_;
    // -e14, -e24, -e34
    vec3 g1_;
    // e234, -e134, e124
    vec3 g2_;
};

struct MultiVectorAtInfinity {
    // 1, -e123
    vec2 g0_;
    // e1, e2, e3
    vec3 g1_;
    // e23, -e13, e12
    vec3 g2_;
};

AntiScalar antiScalar_one() {
    return AntiScalar(0.0);
}

DualNum dualNum_one() {
    return DualNum(vec2(1.0, 0.0));
}

Flector flector_one() {
    return Flector(vec4(0.0), vec4(0.0));
}

FlectorAtInfinity flectorAtInfinity_one() {
    return FlectorAtInfinity(vec4(0.0));
}

Horizon horizon_one() {
    return Horizon(0.0);
}

Line line_one() {
    return Line(vec3(0.0), vec3(0.0));
}

LineAtInfinity lineAtInfinity_one() {
    return LineAtInfinity(vec3(0.0));
}

LineAtOrigin lineAtOrigin_one() {
    return LineAtOrigin(vec3(0.0));
}

Motor motor_one() {
    return Motor(vec4(0.0), vec3(0.0));
}

MultiVector multiVector_one() {
    return MultiVector(vec2(1.0, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_one() {
    return MultiVectorAtInfinity(vec2(1.0, 0.0), vec3(0.0), vec3(0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_one() {
    return MultiVectorAtOrigin(vec2(0.0), vec3(0.0), vec3(0.0));
}

Origin origin_one() {
    return Origin(0.0);
}

Plane plane_one() {
    return Plane(vec4(0.0));
}

PlaneAtOrigin planeAtOrigin_one() {
    return PlaneAtOrigin(vec3(0.0));
}

Point point_one() {
    return Point(vec4(0.0));
}

PointAtInfinity pointAtInfinity_one() {
    return PointAtInfinity(vec3(0.0));
}

Rotor rotor_one() {
    return Rotor(vec4(0.0));
}

Scalar scalar_one() {
    return Scalar(1.0);
}

Transflector transflector_one() {
    return Transflector(vec3(0.0), vec4(0.0));
}

Translator translator_one() {
    return Translator(vec4(0.0));
}

AntiScalar antiScalar_unit() {
    return AntiScalar(1.0);
}

DualNum dualNum_unit() {
    return DualNum(vec2(1.0));
}

Flector flector_unit() {
    return Flector(vec4(1.0), vec4(1.0));
}

FlectorAtInfinity flectorAtInfinity_unit() {
    return FlectorAtInfinity(vec4(1.0));
}

Horizon horizon_unit() {
    return Horizon(1.0);
}

Line line_unit() {
    return Line(vec3(1.0), vec3(1.0));
}

LineAtInfinity lineAtInfinity_unit() {
    return LineAtInfinity(vec3(1.0));
}

LineAtOrigin lineAtOrigin_unit() {
    return LineAtOrigin(vec3(1.0));
}

Motor motor_unit() {
    return Motor(vec4(1.0), vec3(1.0));
}

MultiVector multiVector_unit() {
    return MultiVector(vec2(1.0), vec4(1.0), vec3(1.0), vec3(1.0), vec4(1.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_unit() {
    return MultiVectorAtInfinity(vec2(1.0), vec3(1.0), vec3(1.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_unit() {
    return MultiVectorAtOrigin(vec2(1.0), vec3(1.0), vec3(1.0));
}

Origin origin_unit() {
    return Origin(1.0);
}

Plane plane_unit() {
    return Plane(vec4(1.0));
}

PlaneAtOrigin planeAtOrigin_unit() {
    return PlaneAtOrigin(vec3(1.0));
}

Point point_unit() {
    return Point(vec4(1.0));
}

PointAtInfinity pointAtInfinity_unit() {
    return PointAtInfinity(vec3(1.0));
}

Rotor rotor_unit() {
    return Rotor(vec4(1.0));
}

Scalar scalar_unit() {
    return Scalar(1.0);
}

Transflector transflector_unit() {
    return Transflector(vec3(1.0), vec4(1.0));
}

Translator translator_unit() {
    return Translator(vec4(1.0));
}

AntiScalar antiScalar_zero() {
    return AntiScalar(0.0);
}

DualNum dualNum_zero() {
    return DualNum(vec2(0.0));
}

Flector flector_zero() {
    return Flector(vec4(0.0), vec4(0.0));
}

FlectorAtInfinity flectorAtInfinity_zero() {
    return FlectorAtInfinity(vec4(0.0));
}

Horizon horizon_zero() {
    return Horizon(0.0);
}

Line line_zero() {
    return Line(vec3(0.0), vec3(0.0));
}

LineAtInfinity lineAtInfinity_zero() {
    return LineAtInfinity(vec3(0.0));
}

LineAtOrigin lineAtOrigin_zero() {
    return LineAtOrigin(vec3(0.0));
}

Motor motor_zero() {
    return Motor(vec4(0.0), vec3(0.0));
}

MultiVector multiVector_zero() {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_zero() {
    return MultiVectorAtInfinity(vec2(0.0), vec3(0.0), vec3(0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_zero() {
    return MultiVectorAtOrigin(vec2(0.0), vec3(0.0), vec3(0.0));
}

Origin origin_zero() {
    return Origin(0.0);
}

Plane plane_zero() {
    return Plane(vec4(0.0));
}

PlaneAtOrigin planeAtOrigin_zero() {
    return PlaneAtOrigin(vec3(0.0));
}

Point point_zero() {
    return Point(vec4(0.0));
}

PointAtInfinity pointAtInfinity_zero() {
    return PointAtInfinity(vec3(0.0));
}

Rotor rotor_zero() {
    return Rotor(vec4(0.0));
}

Scalar scalar_zero() {
    return Scalar(0.0);
}

Transflector transflector_zero() {
    return Transflector(vec3(0.0), vec4(0.0));
}

Translator translator_zero() {
    return Translator(vec4(0.0));
}

AntiScalar antiScalar_neg(AntiScalar self) {
    return AntiScalar(-self.g0_);
}

DualNum dualNum_neg(DualNum self) {
    return DualNum(self.g0_ * vec2(-1.0));
}

Flector flector_neg(Flector self) {
    return Flector(self.g0_ * vec4(-1.0), self.g1_ * vec4(-1.0));
}

FlectorAtInfinity flectorAtInfinity_neg(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0_ * vec4(-1.0));
}

Horizon horizon_neg(Horizon self) {
    return Horizon(-self.g0_);
}

Line line_neg(Line self) {
    return Line(self.g0_ * vec3(-1.0), self.g1_ * vec3(-1.0));
}

LineAtInfinity lineAtInfinity_neg(LineAtInfinity self) {
    return LineAtInfinity(self.g0_ * vec3(-1.0));
}

LineAtOrigin lineAtOrigin_neg(LineAtOrigin self) {
    return LineAtOrigin(self.g0_ * vec3(-1.0));
}

Motor motor_neg(Motor self) {
    return Motor(self.g0_ * vec4(-1.0), self.g1_ * vec3(-1.0));
}

MultiVector multiVector_neg(MultiVector self) {
    return MultiVector(self.g0_ * vec2(-1.0), self.g1_ * vec4(-1.0), self.g2_ * vec3(-1.0), self.g3_ * vec3(-1.0), self.g4_ * vec4(-1.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_neg(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0_ * vec2(-1.0), self.g1_ * vec3(-1.0), self.g2_ * vec3(-1.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_neg(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0_ * vec2(-1.0), self.g1_ * vec3(-1.0), self.g2_ * vec3(-1.0));
}

Origin origin_neg(Origin self) {
    return Origin(-self.g0_);
}

Plane plane_neg(Plane self) {
    return Plane(self.g0_ * vec4(-1.0));
}

PlaneAtOrigin planeAtOrigin_neg(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0_ * vec3(-1.0));
}

Point point_neg(Point self) {
    return Point(self.g0_ * vec4(-1.0));
}

PointAtInfinity pointAtInfinity_neg(PointAtInfinity self) {
    return PointAtInfinity(self.g0_ * vec3(-1.0));
}

Rotor rotor_neg(Rotor self) {
    return Rotor(self.g0_ * vec4(-1.0));
}

Scalar scalar_neg(Scalar self) {
    return Scalar(-self.g0_);
}

Transflector transflector_neg(Transflector self) {
    return Transflector(self.g0_ * vec3(-1.0), self.g1_ * vec4(-1.0));
}

Translator translator_neg(Translator self) {
    return Translator(self.g0_ * vec4(-1.0));
}

AntiScalar antiScalar_add_antiScalar(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0_ + other.g0_);
}

DualNum antiScalar_add_dualNum(AntiScalar self, DualNum other) {
    return DualNum(vec2(0.0, self.g0_) + other.g0_);
}

MultiVector antiScalar_add_flector(AntiScalar self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_), other.g0_, vec3(0.0), vec3(0.0), other.g1_);
}

MultiVector antiScalar_add_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector antiScalar_add_horizon(AntiScalar self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0_));
}

Motor antiScalar_add_line(AntiScalar self, Line other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), other.g1_);
}

Translator antiScalar_add_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return Translator(vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Rotor antiScalar_add_lineAtOrigin(AntiScalar self, LineAtOrigin other) {
    return Rotor(vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Motor antiScalar_add_motor(AntiScalar self, Motor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_) + other.g0_, other.g1_);
}

MultiVector antiScalar_add_multiVector(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_) + other.g0_, other.g1_, other.g2_, other.g3_, other.g4_);
}

MultiVector antiScalar_add_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_) + vec2(other.g0_.x, 0.0), vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), other.g2_, vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin antiScalar_add_multiVectorAtOrigin(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_) + other.g0_, other.g1_, other.g2_);
}

MultiVectorAtOrigin antiScalar_add_origin(AntiScalar self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_) + vec2(other.g0_, 0.0), vec3(0.0), vec3(0.0));
}

MultiVector antiScalar_add_plane(AntiScalar self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(0.0), vec3(0.0), vec3(0.0), other.g0_);
}

MultiVectorAtOrigin antiScalar_add_planeAtOrigin(AntiScalar self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_), vec3(0.0), other.g0_);
}

MultiVector antiScalar_add_point(AntiScalar self, Point other) {
    return MultiVector(vec2(0.0, self.g0_), other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector antiScalar_add_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Rotor antiScalar_add_rotor(AntiScalar self, Rotor other) {
    return Rotor(vec4(0.0, 0.0, 0.0, self.g0_) + other.g0_);
}

DualNum antiScalar_add_scalar(AntiScalar self, Scalar other) {
    return DualNum(vec2(0.0, self.g0_) + vec2(other.g0_, 0.0));
}

MultiVector antiScalar_add_transflector(AntiScalar self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), other.g1_);
}

Translator antiScalar_add_translator(AntiScalar self, Translator other) {
    return Translator(vec4(0.0, 0.0, 0.0, self.g0_) + other.g0_);
}

DualNum dualNum_add_antiScalar(DualNum self, AntiScalar other) {
    return DualNum(self.g0_ + vec2(0.0, other.g0_));
}

DualNum dualNum_add_dualNum(DualNum self, DualNum other) {
    return DualNum(self.g0_ + other.g0_);
}

MultiVector dualNum_add_flector(DualNum self, Flector other) {
    return MultiVector(self.g0_, other.g0_, vec3(0.0), vec3(0.0), other.g1_);
}

MultiVector dualNum_add_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return MultiVector(self.g0_, vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector dualNum_add_horizon(DualNum self, Horizon other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector dualNum_add_line(DualNum self, Line other) {
    return MultiVector(self.g0_, vec4(0.0), other.g0_, other.g1_, vec4(0.0));
}

MultiVector dualNum_add_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0), other.g0_, vec4(0.0));
}

MultiVector dualNum_add_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return MultiVector(self.g0_, vec4(0.0), other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector dualNum_add_motor(DualNum self, Motor other) {
    return MultiVector(self.g0_ + vec2(0.0, other.g0_.w), vec4(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, vec4(0.0));
}

MultiVector dualNum_add_multiVector(DualNum self, MultiVector other) {
    return MultiVector(self.g0_ + other.g0_, other.g1_, other.g2_, other.g3_, other.g4_);
}

MultiVector dualNum_add_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ + vec2(other.g0_.x, 0.0), vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), other.g2_, vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector dualNum_add_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ + vec2(0.0, other.g0_.y), vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(0.0), vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector dualNum_add_origin(DualNum self, Origin other) {
    return MultiVector(self.g0_, vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector dualNum_add_plane(DualNum self, Plane other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0), vec3(0.0), other.g0_);
}

MultiVector dualNum_add_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0), vec3(0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector dualNum_add_point(DualNum self, Point other) {
    return MultiVector(self.g0_, other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector dualNum_add_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return MultiVector(self.g0_, vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector dualNum_add_rotor(DualNum self, Rotor other) {
    return MultiVector(self.g0_ + vec2(0.0, other.g0_.w), vec4(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

DualNum dualNum_add_scalar(DualNum self, Scalar other) {
    return DualNum(self.g0_ + vec2(other.g0_, 0.0));
}

MultiVector dualNum_add_transflector(DualNum self, Transflector other) {
    return MultiVector(self.g0_, vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), other.g1_);
}

MultiVector dualNum_add_translator(DualNum self, Translator other) {
    return MultiVector(self.g0_ + vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_add_antiScalar(Flector self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0_), self.g0_, vec3(0.0), vec3(0.0), self.g1_);
}

MultiVector flector_add_dualNum(Flector self, DualNum other) {
    return MultiVector(other.g0_, self.g0_, vec3(0.0), vec3(0.0), self.g1_);
}

Flector flector_add_flector(Flector self, Flector other) {
    return Flector(self.g0_ + other.g0_, self.g1_ + other.g1_);
}

Flector flector_add_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return Flector(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ + vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Flector flector_add_horizon(Flector self, Horizon other) {
    return Flector(self.g0_, self.g1_ + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector flector_add_line(Flector self, Line other) {
    return MultiVector(vec2(0.0), self.g0_, other.g0_, other.g1_, self.g1_);
}

MultiVector flector_add_lineAtInfinity(Flector self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), self.g0_, vec3(0.0), other.g0_, self.g1_);
}

MultiVector flector_add_lineAtOrigin(Flector self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), self.g0_, other.g0_, vec3(0.0), self.g1_);
}

MultiVector flector_add_motor(Flector self, Motor other) {
    return MultiVector(vec2(0.0, other.g0_.w), self.g0_, vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, self.g1_);
}

MultiVector flector_add_multiVector(Flector self, MultiVector other) {
    return MultiVector(other.g0_, self.g0_ + other.g1_, other.g2_, other.g3_, self.g1_ + other.g4_);
}

MultiVector flector_add_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0_.x, 0.0), self.g0_ + vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), other.g2_, self.g1_ + vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector flector_add_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0_.y), self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(0.0), self.g1_ + vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector flector_add_origin(Flector self, Origin other) {
    return Flector(self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_), self.g1_);
}

Flector flector_add_plane(Flector self, Plane other) {
    return Flector(self.g0_, self.g1_ + other.g0_);
}

Flector flector_add_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return Flector(self.g0_, self.g1_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flector_add_point(Flector self, Point other) {
    return Flector(self.g0_ + other.g0_, self.g1_);
}

Flector flector_add_pointAtInfinity(Flector self, PointAtInfinity other) {
    return Flector(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_);
}

MultiVector flector_add_rotor(Flector self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0_.w), self.g0_, vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), self.g1_);
}

MultiVector flector_add_scalar(Flector self, Scalar other) {
    return MultiVector(vec2(other.g0_, 0.0), self.g0_, vec3(0.0), vec3(0.0), self.g1_);
}

Flector flector_add_transflector(Flector self, Transflector other) {
    return Flector(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ + other.g1_);
}

MultiVector flector_add_translator(Flector self, Translator other) {
    return MultiVector(vec2(0.0, other.g0_.w), self.g0_, vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g1_);
}

MultiVector flectorAtInfinity_add_antiScalar(FlectorAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVector flectorAtInfinity_add_dualNum(FlectorAtInfinity self, DualNum other) {
    return MultiVector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

Flector flectorAtInfinity_add_flector(FlectorAtInfinity self, Flector other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.w) + other.g1_);
}

FlectorAtInfinity flectorAtInfinity_add_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0_ + other.g0_);
}

FlectorAtInfinity flectorAtInfinity_add_horizon(FlectorAtInfinity self, Horizon other) {
    return FlectorAtInfinity(self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector flectorAtInfinity_add_line(FlectorAtInfinity self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), other.g0_, other.g1_, vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVectorAtInfinity flectorAtInfinity_add_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_.w), vec3(self.g0_.x, self.g0_.y, self.g0_.z), other.g0_);
}

MultiVector flectorAtInfinity_add_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), other.g0_, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVector flectorAtInfinity_add_motor(FlectorAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVector flectorAtInfinity_add_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g1_, other.g2_, other.g3_, vec4(0.0, 0.0, 0.0, self.g0_.w) + other.g4_);
}

MultiVectorAtInfinity flectorAtInfinity_add_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_.w) + other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g1_, other.g2_);
}

MultiVector flectorAtInfinity_add_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0_.y), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w) + vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector flectorAtInfinity_add_origin(FlectorAtInfinity self, Origin other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

Transflector flectorAtInfinity_add_plane(FlectorAtInfinity self, Plane other) {
    return Transflector(vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_.w) + other.g0_);
}

Transflector flectorAtInfinity_add_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_.w) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flectorAtInfinity_add_point(FlectorAtInfinity self, Point other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.w));
}

FlectorAtInfinity flectorAtInfinity_add_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return FlectorAtInfinity(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector flectorAtInfinity_add_rotor(FlectorAtInfinity self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVectorAtInfinity flectorAtInfinity_add_scalar(FlectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_.w) + vec2(other.g0_, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0));
}

Transflector flectorAtInfinity_add_transflector(FlectorAtInfinity self, Transflector other) {
    return Transflector(vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.w) + other.g1_);
}

MultiVector flectorAtInfinity_add_translator(FlectorAtInfinity self, Translator other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVector horizon_add_antiScalar(Horizon self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0_), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVector horizon_add_dualNum(Horizon self, DualNum other) {
    return MultiVector(other.g0_, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_));
}

Flector horizon_add_flector(Horizon self, Flector other) {
    return Flector(other.g0_, vec4(0.0, 0.0, 0.0, self.g0_) + other.g1_);
}

FlectorAtInfinity horizon_add_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(0.0, 0.0, 0.0, self.g0_) + other.g0_);
}

Horizon horizon_add_horizon(Horizon self, Horizon other) {
    return Horizon(self.g0_ + other.g0_);
}

MultiVector horizon_add_line(Horizon self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0_, other.g1_, vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVectorAtInfinity horizon_add_lineAtInfinity(Horizon self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_), vec3(0.0), other.g0_);
}

MultiVector horizon_add_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0_, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVector horizon_add_motor(Horizon self, Motor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVector horizon_add_multiVector(Horizon self, MultiVector other) {
    return MultiVector(other.g0_, other.g1_, other.g2_, other.g3_, vec4(0.0, 0.0, 0.0, self.g0_) + other.g4_);
}

MultiVectorAtInfinity horizon_add_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_) + other.g0_, other.g1_, other.g2_);
}

MultiVector horizon_add_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0_.y), vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector horizon_add_origin(Horizon self, Origin other) {
    return Flector(vec4(0.0, 0.0, 0.0, other.g0_), vec4(0.0, 0.0, 0.0, self.g0_));
}

Plane horizon_add_plane(Horizon self, Plane other) {
    return Plane(vec4(0.0, 0.0, 0.0, self.g0_) + other.g0_);
}

Plane horizon_add_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return Plane(vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector horizon_add_point(Horizon self, Point other) {
    return Flector(other.g0_, vec4(0.0, 0.0, 0.0, self.g0_));
}

FlectorAtInfinity horizon_add_pointAtInfinity(Horizon self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector horizon_add_rotor(Horizon self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVectorAtInfinity horizon_add_scalar(Horizon self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_) + vec2(other.g0_, 0.0), vec3(0.0), vec3(0.0));
}

Transflector horizon_add_transflector(Horizon self, Transflector other) {
    return Transflector(other.g0_, vec4(0.0, 0.0, 0.0, self.g0_) + other.g1_);
}

MultiVector horizon_add_translator(Horizon self, Translator other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_));
}

Motor line_add_antiScalar(Line self, AntiScalar other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_), self.g1_);
}

MultiVector line_add_dualNum(Line self, DualNum other) {
    return MultiVector(other.g0_, vec4(0.0), self.g0_, self.g1_, vec4(0.0));
}

MultiVector line_add_flector(Line self, Flector other) {
    return MultiVector(vec2(0.0), other.g0_, self.g0_, self.g1_, other.g1_);
}

MultiVector line_add_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, self.g1_, vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector line_add_horizon(Line self, Horizon other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, self.g1_, vec4(0.0, 0.0, 0.0, other.g0_));
}

Line line_add_line(Line self, Line other) {
    return Line(self.g0_ + other.g0_, self.g1_ + other.g1_);
}

Line line_add_lineAtInfinity(Line self, LineAtInfinity other) {
    return Line(self.g0_, self.g1_ + other.g0_);
}

Line line_add_lineAtOrigin(Line self, LineAtOrigin other) {
    return Line(self.g0_ + other.g0_, self.g1_);
}

Motor line_add_motor(Line self, Motor other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_, self.g1_ + other.g1_);
}

MultiVector line_add_multiVector(Line self, MultiVector other) {
    return MultiVector(other.g0_, other.g1_, self.g0_ + other.g2_, self.g1_ + other.g3_, other.g4_);
}

MultiVector line_add_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0_.x, 0.0), vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), self.g0_, self.g1_ + other.g2_, vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector line_add_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0_.y), vec4(0.0, 0.0, 0.0, other.g0_.x), self.g0_ + other.g1_, self.g1_, vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector line_add_origin(Line self, Origin other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, other.g0_), self.g0_, self.g1_, vec4(0.0));
}

MultiVector line_add_plane(Line self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, self.g1_, other.g0_);
}

MultiVector line_add_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, self.g1_, vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector line_add_point(Line self, Point other) {
    return MultiVector(vec2(0.0), other.g0_, self.g0_, self.g1_, vec4(0.0));
}

MultiVector line_add_pointAtInfinity(Line self, PointAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, self.g1_, vec4(0.0));
}

Motor line_add_rotor(Line self, Rotor other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_, self.g1_);
}

MultiVector line_add_scalar(Line self, Scalar other) {
    return MultiVector(vec2(other.g0_, 0.0), vec4(0.0), self.g0_, self.g1_, vec4(0.0));
}

MultiVector line_add_transflector(Line self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, self.g1_, other.g1_);
}

Motor line_add_translator(Line self, Translator other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.w), self.g1_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Translator lineAtInfinity_add_antiScalar(LineAtInfinity self, AntiScalar other) {
    return Translator(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector lineAtInfinity_add_dualNum(LineAtInfinity self, DualNum other) {
    return MultiVector(other.g0_, vec4(0.0), vec3(0.0), self.g0_, vec4(0.0));
}

MultiVector lineAtInfinity_add_flector(LineAtInfinity self, Flector other) {
    return MultiVector(vec2(0.0), other.g0_, vec3(0.0), self.g0_, other.g1_);
}

MultiVectorAtInfinity lineAtInfinity_add_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, other.g0_.w), vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g0_);
}

MultiVectorAtInfinity lineAtInfinity_add_horizon(LineAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(vec2(0.0, other.g0_), vec3(0.0), self.g0_);
}

Line lineAtInfinity_add_line(LineAtInfinity self, Line other) {
    return Line(other.g0_, self.g0_ + other.g1_);
}

LineAtInfinity lineAtInfinity_add_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return LineAtInfinity(self.g0_ + other.g0_);
}

Line lineAtInfinity_add_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return Line(other.g0_, self.g0_);
}

Motor lineAtInfinity_add_motor(LineAtInfinity self, Motor other) {
    return Motor(other.g0_, self.g0_ + other.g1_);
}

MultiVector lineAtInfinity_add_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVector(other.g0_, other.g1_, other.g2_, self.g0_ + other.g3_, other.g4_);
}

MultiVectorAtInfinity lineAtInfinity_add_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(other.g0_, other.g1_, self.g0_ + other.g2_);
}

MultiVector lineAtInfinity_add_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0_.y), vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, self.g0_, vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector lineAtInfinity_add_origin(LineAtInfinity self, Origin other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), self.g0_, vec4(0.0));
}

MultiVector lineAtInfinity_add_plane(LineAtInfinity self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), self.g0_, other.g0_);
}

MultiVector lineAtInfinity_add_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), self.g0_, vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector lineAtInfinity_add_point(LineAtInfinity self, Point other) {
    return MultiVector(vec2(0.0), other.g0_, vec3(0.0), self.g0_, vec4(0.0));
}

MultiVectorAtInfinity lineAtInfinity_add_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0), other.g0_, self.g0_);
}

Motor lineAtInfinity_add_rotor(LineAtInfinity self, Rotor other) {
    return Motor(other.g0_, self.g0_);
}

MultiVectorAtInfinity lineAtInfinity_add_scalar(LineAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(other.g0_, 0.0), vec3(0.0), self.g0_);
}

MultiVector lineAtInfinity_add_transflector(LineAtInfinity self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), self.g0_, other.g1_);
}

Translator lineAtInfinity_add_translator(LineAtInfinity self, Translator other) {
    return Translator(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_);
}

Rotor lineAtOrigin_add_antiScalar(LineAtOrigin self, AntiScalar other) {
    return Rotor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector lineAtOrigin_add_dualNum(LineAtOrigin self, DualNum other) {
    return MultiVector(other.g0_, vec4(0.0), self.g0_, vec3(0.0), vec4(0.0));
}

MultiVector lineAtOrigin_add_flector(LineAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0), other.g0_, self.g0_, vec3(0.0), other.g1_);
}

MultiVector lineAtOrigin_add_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector lineAtOrigin_add_horizon(LineAtOrigin self, Horizon other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0_));
}

Line lineAtOrigin_add_line(LineAtOrigin self, Line other) {
    return Line(self.g0_ + other.g0_, other.g1_);
}

Line lineAtOrigin_add_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return Line(self.g0_, other.g0_);
}

LineAtOrigin lineAtOrigin_add_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return LineAtOrigin(self.g0_ + other.g0_);
}

Motor lineAtOrigin_add_motor(LineAtOrigin self, Motor other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_, other.g1_);
}

MultiVector lineAtOrigin_add_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVector(other.g0_, other.g1_, self.g0_ + other.g2_, other.g3_, other.g4_);
}

MultiVector lineAtOrigin_add_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0_.x, 0.0), vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), self.g0_, other.g2_, vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin lineAtOrigin_add_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(other.g0_, self.g0_ + other.g1_, other.g2_);
}

MultiVectorAtOrigin lineAtOrigin_add_origin(LineAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(vec2(other.g0_, 0.0), self.g0_, vec3(0.0));
}

MultiVector lineAtOrigin_add_plane(LineAtOrigin self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, vec3(0.0), other.g0_);
}

MultiVectorAtOrigin lineAtOrigin_add_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0), self.g0_, other.g0_);
}

MultiVector lineAtOrigin_add_point(LineAtOrigin self, Point other) {
    return MultiVector(vec2(0.0), other.g0_, self.g0_, vec3(0.0), vec4(0.0));
}

MultiVector lineAtOrigin_add_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, vec3(0.0), vec4(0.0));
}

Rotor lineAtOrigin_add_rotor(LineAtOrigin self, Rotor other) {
    return Rotor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_);
}

MultiVector lineAtOrigin_add_scalar(LineAtOrigin self, Scalar other) {
    return MultiVector(vec2(other.g0_, 0.0), vec4(0.0), self.g0_, vec3(0.0), vec4(0.0));
}

MultiVector lineAtOrigin_add_transflector(LineAtOrigin self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, vec3(0.0), other.g1_);
}

Motor lineAtOrigin_add_translator(LineAtOrigin self, Translator other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.w), vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Motor motor_add_antiScalar(Motor self, AntiScalar other) {
    return Motor(self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_), self.g1_);
}

MultiVector motor_add_dualNum(Motor self, DualNum other) {
    return MultiVector(vec2(0.0, self.g0_.w) + other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

MultiVector motor_add_flector(Motor self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_.w), other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, other.g1_);
}

MultiVector motor_add_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector motor_add_horizon(Motor self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0, 0.0, 0.0, other.g0_));
}

Motor motor_add_line(Motor self, Line other) {
    return Motor(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ + other.g1_);
}

Motor motor_add_lineAtInfinity(Motor self, LineAtInfinity other) {
    return Motor(self.g0_, self.g1_ + other.g0_);
}

Motor motor_add_lineAtOrigin(Motor self, LineAtOrigin other) {
    return Motor(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_);
}

Motor motor_add_motor(Motor self, Motor other) {
    return Motor(self.g0_ + other.g0_, self.g1_ + other.g1_);
}

MultiVector motor_add_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_.w) + other.g0_, other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g2_, self.g1_ + other.g3_, other.g4_);
}

MultiVector motor_add_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w) + vec2(other.g0_.x, 0.0), vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_ + other.g2_, vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector motor_add_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0_.w) + vec2(0.0, other.g0_.y), vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g1_, self.g1_, vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector motor_add_origin(Motor self, Origin other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0, 0.0, 0.0, other.g0_), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

MultiVector motor_add_plane(Motor self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, other.g0_);
}

MultiVector motor_add_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector motor_add_point(Motor self, Point other) {
    return MultiVector(vec2(0.0, self.g0_.w), other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

MultiVector motor_add_pointAtInfinity(Motor self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

Motor motor_add_rotor(Motor self, Rotor other) {
    return Motor(self.g0_ + other.g0_, self.g1_);
}

MultiVector motor_add_scalar(Motor self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0_.w) + vec2(other.g0_, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

MultiVector motor_add_transflector(Motor self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, other.g1_);
}

Motor motor_add_translator(Motor self, Translator other) {
    return Motor(self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_.w), self.g1_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVector multiVector_add_antiScalar(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0_ + vec2(0.0, other.g0_), self.g1_, self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_add_dualNum(MultiVector self, DualNum other) {
    return MultiVector(self.g0_ + other.g0_, self.g1_, self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_add_flector(MultiVector self, Flector other) {
    return MultiVector(self.g0_, self.g1_ + other.g0_, self.g2_, self.g3_, self.g4_ + other.g1_);
}

MultiVector multiVector_add_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(self.g0_, self.g1_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g2_, self.g3_, self.g4_ + vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector multiVector_add_horizon(MultiVector self, Horizon other) {
    return MultiVector(self.g0_, self.g1_, self.g2_, self.g3_, self.g4_ + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector multiVector_add_line(MultiVector self, Line other) {
    return MultiVector(self.g0_, self.g1_, self.g2_ + other.g0_, self.g3_ + other.g1_, self.g4_);
}

MultiVector multiVector_add_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVector(self.g0_, self.g1_, self.g2_, self.g3_ + other.g0_, self.g4_);
}

MultiVector multiVector_add_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVector(self.g0_, self.g1_, self.g2_ + other.g0_, self.g3_, self.g4_);
}

MultiVector multiVector_add_motor(MultiVector self, Motor other) {
    return MultiVector(self.g0_ + vec2(0.0, other.g0_.w), self.g1_, self.g2_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g3_ + other.g1_, self.g4_);
}

MultiVector multiVector_add_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(self.g0_ + other.g0_, self.g1_ + other.g1_, self.g2_ + other.g2_, self.g3_ + other.g3_, self.g4_ + other.g4_);
}

MultiVector multiVector_add_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ + vec2(other.g0_.x, 0.0), self.g1_ + vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), self.g2_, self.g3_ + other.g2_, self.g4_ + vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector multiVector_add_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ + vec2(0.0, other.g0_.y), self.g1_ + vec4(0.0, 0.0, 0.0, other.g0_.x), self.g2_ + other.g1_, self.g3_, self.g4_ + vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector multiVector_add_origin(MultiVector self, Origin other) {
    return MultiVector(self.g0_, self.g1_ + vec4(0.0, 0.0, 0.0, other.g0_), self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_add_plane(MultiVector self, Plane other) {
    return MultiVector(self.g0_, self.g1_, self.g2_, self.g3_, self.g4_ + other.g0_);
}

MultiVector multiVector_add_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(self.g0_, self.g1_, self.g2_, self.g3_, self.g4_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVector_add_point(MultiVector self, Point other) {
    return MultiVector(self.g0_, self.g1_ + other.g0_, self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_add_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVector(self.g0_, self.g1_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_add_rotor(MultiVector self, Rotor other) {
    return MultiVector(self.g0_ + vec2(0.0, other.g0_.w), self.g1_, self.g2_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g3_, self.g4_);
}

MultiVector multiVector_add_scalar(MultiVector self, Scalar other) {
    return MultiVector(self.g0_ + vec2(other.g0_, 0.0), self.g1_, self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_add_transflector(MultiVector self, Transflector other) {
    return MultiVector(self.g0_, self.g1_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g2_, self.g3_, self.g4_ + other.g1_);
}

MultiVector multiVector_add_translator(MultiVector self, Translator other) {
    return MultiVector(self.g0_ + vec2(0.0, other.g0_.w), self.g1_, self.g2_, self.g3_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g4_);
}

MultiVector multiVectorAtInfinity_add_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(self.g0_.x, 0.0) + vec2(0.0, other.g0_), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_add_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVector(vec2(self.g0_.x, 0.0) + other.g0_, vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_add_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) + other.g0_, vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) + other.g1_);
}

MultiVectorAtInfinity multiVectorAtInfinity_add_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ + vec2(0.0, other.g0_.w), self.g1_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g2_);
}

MultiVectorAtInfinity multiVectorAtInfinity_add_horizon(MultiVectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(self.g0_ + vec2(0.0, other.g0_), self.g1_, self.g2_);
}

MultiVector multiVectorAtInfinity_add_line(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), other.g0_, self.g2_ + other.g1_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_add_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_, self.g1_, self.g2_ + other.g0_);
}

MultiVector multiVectorAtInfinity_add_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), other.g0_, self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_add_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0_.x, 0.0) + vec2(0.0, other.g0_.w), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g2_ + other.g1_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_add_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x, 0.0) + other.g0_, vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) + other.g1_, other.g2_, self.g2_ + other.g3_, vec4(0.0, 0.0, 0.0, self.g0_.y) + other.g4_);
}

MultiVectorAtInfinity multiVectorAtInfinity_add_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ + other.g0_, self.g1_ + other.g1_, self.g2_ + other.g2_);
}

MultiVector multiVectorAtInfinity_add_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x, 0.0) + vec2(0.0, other.g0_.y), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) + vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector multiVectorAtInfinity_add_origin(MultiVectorAtInfinity self, Origin other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_add_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) + other.g0_);
}

MultiVector multiVectorAtInfinity_add_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVectorAtInfinity_add_point(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) + other.g0_, vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_add_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_, self.g1_ + other.g0_, self.g2_);
}

MultiVector multiVectorAtInfinity_add_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVector(vec2(self.g0_.x, 0.0) + vec2(0.0, other.g0_.w), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_add_scalar(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0_ + vec2(other.g0_, 0.0), self.g1_, self.g2_);
}

MultiVector multiVectorAtInfinity_add_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) + other.g1_);
}

MultiVector multiVectorAtInfinity_add_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0_.x, 0.0) + vec2(0.0, other.g0_.w), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_add_antiScalar(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0_ + vec2(0.0, other.g0_), self.g1_, self.g2_);
}

MultiVector multiVectorAtOrigin_add_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVector(vec2(0.0, self.g0_.y) + other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_add_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) + other.g0_, self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) + other.g1_);
}

MultiVector multiVectorAtOrigin_add_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector multiVectorAtOrigin_add_horizon(MultiVectorAtOrigin self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector multiVectorAtOrigin_add_line(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_ + other.g0_, other.g1_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_add_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, other.g0_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_add_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(self.g0_, self.g1_ + other.g0_, self.g2_);
}

MultiVector multiVectorAtOrigin_add_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0, self.g0_.y) + vec2(0.0, other.g0_.w), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_add_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_.y) + other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.x) + other.g1_, self.g1_ + other.g2_, other.g3_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) + other.g4_);
}

MultiVector multiVectorAtOrigin_add_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.y) + vec2(other.g0_.x, 0.0), vec4(0.0, 0.0, 0.0, self.g0_.x) + vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), self.g1_, other.g2_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_add_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(self.g0_ + other.g0_, self.g1_ + other.g1_, self.g2_ + other.g2_);
}

MultiVectorAtOrigin multiVectorAtOrigin_add_origin(MultiVectorAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(self.g0_ + vec2(other.g0_, 0.0), self.g1_, self.g2_);
}

MultiVector multiVectorAtOrigin_add_plane(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) + other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_add_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(self.g0_, self.g1_, self.g2_ + other.g0_);
}

MultiVector multiVectorAtOrigin_add_point(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) + other.g0_, self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_add_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_add_rotor(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0_ + vec2(0.0, other.g0_.w), self.g1_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g2_);
}

MultiVector multiVectorAtOrigin_add_scalar(MultiVectorAtOrigin self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0_.y) + vec2(other.g0_, 0.0), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_add_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) + other.g1_);
}

MultiVector multiVectorAtOrigin_add_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(0.0, self.g0_.y) + vec2(0.0, other.g0_.w), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVectorAtOrigin origin_add_antiScalar(Origin self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(self.g0_, 0.0) + vec2(0.0, other.g0_), vec3(0.0), vec3(0.0));
}

MultiVector origin_add_dualNum(Origin self, DualNum other) {
    return MultiVector(other.g0_, vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector origin_add_flector(Origin self, Flector other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_) + other.g0_, other.g1_);
}

Flector origin_add_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Flector origin_add_horizon(Origin self, Horizon other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_), vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector origin_add_line(Origin self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, self.g0_), other.g0_, other.g1_, vec4(0.0));
}

MultiVector origin_add_lineAtInfinity(Origin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0), other.g0_, vec4(0.0));
}

MultiVectorAtOrigin origin_add_lineAtOrigin(Origin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_, 0.0), other.g0_, vec3(0.0));
}

MultiVector origin_add_motor(Origin self, Motor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0, 0.0, 0.0, self.g0_), vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, vec4(0.0));
}

MultiVector origin_add_multiVector(Origin self, MultiVector other) {
    return MultiVector(other.g0_, vec4(0.0, 0.0, 0.0, self.g0_) + other.g1_, other.g2_, other.g3_, other.g4_);
}

MultiVector origin_add_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0_.x, 0.0), vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), other.g2_, vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin origin_add_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_, 0.0) + other.g0_, other.g1_, other.g2_);
}

Origin origin_add_origin(Origin self, Origin other) {
    return Origin(self.g0_ + other.g0_);
}

Flector origin_add_plane(Origin self, Plane other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_), other.g0_);
}

Flector origin_add_planeAtOrigin(Origin self, PlaneAtOrigin other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point origin_add_point(Origin self, Point other) {
    return Point(vec4(0.0, 0.0, 0.0, self.g0_) + other.g0_);
}

Point origin_add_pointAtInfinity(Origin self, PointAtInfinity other) {
    return Point(vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVectorAtOrigin origin_add_rotor(Origin self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0_, 0.0) + vec2(0.0, other.g0_.w), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0));
}

MultiVector origin_add_scalar(Origin self, Scalar other) {
    return MultiVector(vec2(other.g0_, 0.0), vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector origin_add_transflector(Origin self, Transflector other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), other.g1_);
}

MultiVector origin_add_translator(Origin self, Translator other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector plane_add_antiScalar(Plane self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0_), vec4(0.0), vec3(0.0), vec3(0.0), self.g0_);
}

MultiVector plane_add_dualNum(Plane self, DualNum other) {
    return MultiVector(other.g0_, vec4(0.0), vec3(0.0), vec3(0.0), self.g0_);
}

Flector plane_add_flector(Plane self, Flector other) {
    return Flector(other.g0_, self.g0_ + other.g1_);
}

Transflector plane_add_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return Transflector(vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Plane plane_add_horizon(Plane self, Horizon other) {
    return Plane(self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector plane_add_line(Plane self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0_, other.g1_, self.g0_);
}

MultiVector plane_add_lineAtInfinity(Plane self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), other.g0_, self.g0_);
}

MultiVector plane_add_lineAtOrigin(Plane self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0_, vec3(0.0), self.g0_);
}

MultiVector plane_add_motor(Plane self, Motor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, self.g0_);
}

MultiVector plane_add_multiVector(Plane self, MultiVector other) {
    return MultiVector(other.g0_, other.g1_, other.g2_, other.g3_, self.g0_ + other.g4_);
}

MultiVector plane_add_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0_.x, 0.0), vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), other.g2_, self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector plane_add_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0_.y), vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(0.0), self.g0_ + vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector plane_add_origin(Plane self, Origin other) {
    return Flector(vec4(0.0, 0.0, 0.0, other.g0_), self.g0_);
}

Plane plane_add_plane(Plane self, Plane other) {
    return Plane(self.g0_ + other.g0_);
}

Plane plane_add_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return Plane(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector plane_add_point(Plane self, Point other) {
    return Flector(other.g0_, self.g0_);
}

Transflector plane_add_pointAtInfinity(Plane self, PointAtInfinity other) {
    return Transflector(other.g0_, self.g0_);
}

MultiVector plane_add_rotor(Plane self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), self.g0_);
}

MultiVector plane_add_scalar(Plane self, Scalar other) {
    return MultiVector(vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), self.g0_);
}

Transflector plane_add_transflector(Plane self, Transflector other) {
    return Transflector(other.g0_, self.g0_ + other.g1_);
}

MultiVector plane_add_translator(Plane self, Translator other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g0_);
}

MultiVectorAtOrigin planeAtOrigin_add_antiScalar(PlaneAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(0.0, other.g0_), vec3(0.0), self.g0_);
}

MultiVector planeAtOrigin_add_dualNum(PlaneAtOrigin self, DualNum other) {
    return MultiVector(other.g0_, vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Flector planeAtOrigin_add_flector(PlaneAtOrigin self, Flector other) {
    return Flector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g1_);
}

Transflector planeAtOrigin_add_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return Transflector(vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Plane planeAtOrigin_add_horizon(PlaneAtOrigin self, Horizon other) {
    return Plane(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector planeAtOrigin_add_line(PlaneAtOrigin self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), other.g0_, other.g1_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVector planeAtOrigin_add_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVectorAtOrigin planeAtOrigin_add_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0), other.g0_, self.g0_);
}

MultiVector planeAtOrigin_add_motor(PlaneAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVector planeAtOrigin_add_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(other.g0_, other.g1_, other.g2_, other.g3_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g4_);
}

MultiVector planeAtOrigin_add_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0_.x, 0.0), vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), other.g2_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin planeAtOrigin_add_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(other.g0_, other.g1_, self.g0_ + other.g2_);
}

Flector planeAtOrigin_add_origin(PlaneAtOrigin self, Origin other) {
    return Flector(vec4(0.0, 0.0, 0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Plane planeAtOrigin_add_plane(PlaneAtOrigin self, Plane other) {
    return Plane(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_);
}

PlaneAtOrigin planeAtOrigin_add_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return PlaneAtOrigin(self.g0_ + other.g0_);
}

Flector planeAtOrigin_add_point(PlaneAtOrigin self, Point other) {
    return Flector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Transflector planeAtOrigin_add_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return Transflector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVectorAtOrigin planeAtOrigin_add_rotor(PlaneAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(vec2(0.0, other.g0_.w), vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g0_);
}

MultiVector planeAtOrigin_add_scalar(PlaneAtOrigin self, Scalar other) {
    return MultiVector(vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Transflector planeAtOrigin_add_transflector(PlaneAtOrigin self, Transflector other) {
    return Transflector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g1_);
}

MultiVector planeAtOrigin_add_translator(PlaneAtOrigin self, Translator other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVector point_add_antiScalar(Point self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0_), self.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector point_add_dualNum(Point self, DualNum other) {
    return MultiVector(other.g0_, self.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_add_flector(Point self, Flector other) {
    return Flector(self.g0_ + other.g0_, other.g1_);
}

Flector point_add_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return Flector(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Flector point_add_horizon(Point self, Horizon other) {
    return Flector(self.g0_, vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector point_add_line(Point self, Line other) {
    return MultiVector(vec2(0.0), self.g0_, other.g0_, other.g1_, vec4(0.0));
}

MultiVector point_add_lineAtInfinity(Point self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), self.g0_, vec3(0.0), other.g0_, vec4(0.0));
}

MultiVector point_add_lineAtOrigin(Point self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), self.g0_, other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector point_add_motor(Point self, Motor other) {
    return MultiVector(vec2(0.0, other.g0_.w), self.g0_, vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, vec4(0.0));
}

MultiVector point_add_multiVector(Point self, MultiVector other) {
    return MultiVector(other.g0_, self.g0_ + other.g1_, other.g2_, other.g3_, other.g4_);
}

MultiVector point_add_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0_.x, 0.0), self.g0_ + vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), other.g2_, vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector point_add_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0_.y), self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(0.0), vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Point point_add_origin(Point self, Origin other) {
    return Point(self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_));
}

Flector point_add_plane(Point self, Plane other) {
    return Flector(self.g0_, other.g0_);
}

Flector point_add_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return Flector(self.g0_, vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point point_add_point(Point self, Point other) {
    return Point(self.g0_ + other.g0_);
}

Point point_add_pointAtInfinity(Point self, PointAtInfinity other) {
    return Point(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector point_add_rotor(Point self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0_.w), self.g0_, vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVector point_add_scalar(Point self, Scalar other) {
    return MultiVector(vec2(other.g0_, 0.0), self.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_add_transflector(Point self, Transflector other) {
    return Flector(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), other.g1_);
}

MultiVector point_add_translator(Point self, Translator other) {
    return MultiVector(vec2(0.0, other.g0_.w), self.g0_, vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector pointAtInfinity_add_antiScalar(PointAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector pointAtInfinity_add_dualNum(PointAtInfinity self, DualNum other) {
    return MultiVector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector pointAtInfinity_add_flector(PointAtInfinity self, Flector other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_, other.g1_);
}

FlectorAtInfinity pointAtInfinity_add_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_);
}

FlectorAtInfinity pointAtInfinity_add_horizon(PointAtInfinity self, Horizon other) {
    return FlectorAtInfinity(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector pointAtInfinity_add_line(PointAtInfinity self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), other.g0_, other.g1_, vec4(0.0));
}

MultiVectorAtInfinity pointAtInfinity_add_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0), self.g0_, other.g0_);
}

MultiVector pointAtInfinity_add_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector pointAtInfinity_add_motor(PointAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, vec4(0.0));
}

MultiVector pointAtInfinity_add_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g1_, other.g2_, other.g3_, other.g4_);
}

MultiVectorAtInfinity pointAtInfinity_add_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(other.g0_, self.g0_ + other.g1_, other.g2_);
}

MultiVector pointAtInfinity_add_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0_.y), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(0.0), vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Point pointAtInfinity_add_origin(PointAtInfinity self, Origin other) {
    return Point(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_));
}

Transflector pointAtInfinity_add_plane(PointAtInfinity self, Plane other) {
    return Transflector(self.g0_, other.g0_);
}

Transflector pointAtInfinity_add_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return Transflector(self.g0_, vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point pointAtInfinity_add_point(PointAtInfinity self, Point other) {
    return Point(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_);
}

PointAtInfinity pointAtInfinity_add_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return PointAtInfinity(self.g0_ + other.g0_);
}

MultiVector pointAtInfinity_add_rotor(PointAtInfinity self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity pointAtInfinity_add_scalar(PointAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(other.g0_, 0.0), self.g0_, vec3(0.0));
}

Transflector pointAtInfinity_add_transflector(PointAtInfinity self, Transflector other) {
    return Transflector(self.g0_ + other.g0_, other.g1_);
}

MultiVector pointAtInfinity_add_translator(PointAtInfinity self, Translator other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Rotor rotor_add_antiScalar(Rotor self, AntiScalar other) {
    return Rotor(self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector rotor_add_dualNum(Rotor self, DualNum other) {
    return MultiVector(vec2(0.0, self.g0_.w) + other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_add_flector(Rotor self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_.w), other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), other.g1_);
}

MultiVector rotor_add_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector rotor_add_horizon(Rotor self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0, 0.0, 0.0, other.g0_));
}

Motor rotor_add_line(Rotor self, Line other) {
    return Motor(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), other.g1_);
}

Motor rotor_add_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return Motor(self.g0_, other.g0_);
}

Rotor rotor_add_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return Rotor(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Motor rotor_add_motor(Rotor self, Motor other) {
    return Motor(self.g0_ + other.g0_, other.g1_);
}

MultiVector rotor_add_multiVector(Rotor self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_.w) + other.g0_, other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g2_, other.g3_, other.g4_);
}

MultiVector rotor_add_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w) + vec2(other.g0_.x, 0.0), vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), other.g2_, vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin rotor_add_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_.w) + other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g1_, other.g2_);
}

MultiVectorAtOrigin rotor_add_origin(Rotor self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_.w) + vec2(other.g0_, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0));
}

MultiVector rotor_add_plane(Rotor self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), other.g0_);
}

MultiVectorAtOrigin rotor_add_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_.w), vec3(self.g0_.x, self.g0_.y, self.g0_.z), other.g0_);
}

MultiVector rotor_add_point(Rotor self, Point other) {
    return MultiVector(vec2(0.0, self.g0_.w), other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_add_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

Rotor rotor_add_rotor(Rotor self, Rotor other) {
    return Rotor(self.g0_ + other.g0_);
}

MultiVector rotor_add_scalar(Rotor self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0_.w) + vec2(other.g0_, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_add_transflector(Rotor self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), other.g1_);
}

Motor rotor_add_translator(Rotor self, Translator other) {
    return Motor(self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_.w), vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

DualNum scalar_add_antiScalar(Scalar self, AntiScalar other) {
    return DualNum(vec2(self.g0_, 0.0) + vec2(0.0, other.g0_));
}

DualNum scalar_add_dualNum(Scalar self, DualNum other) {
    return DualNum(vec2(self.g0_, 0.0) + other.g0_);
}

MultiVector scalar_add_flector(Scalar self, Flector other) {
    return MultiVector(vec2(self.g0_, 0.0), other.g0_, vec3(0.0), vec3(0.0), other.g1_);
}

MultiVectorAtInfinity scalar_add_flectorAtInfinity(Scalar self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0) + vec2(0.0, other.g0_.w), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0));
}

MultiVectorAtInfinity scalar_add_horizon(Scalar self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0) + vec2(0.0, other.g0_), vec3(0.0), vec3(0.0));
}

MultiVector scalar_add_line(Scalar self, Line other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0), other.g0_, other.g1_, vec4(0.0));
}

MultiVectorAtInfinity scalar_add_lineAtInfinity(Scalar self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0), vec3(0.0), other.g0_);
}

MultiVector scalar_add_lineAtOrigin(Scalar self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0), other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector scalar_add_motor(Scalar self, Motor other) {
    return MultiVector(vec2(self.g0_, 0.0) + vec2(0.0, other.g0_.w), vec4(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, vec4(0.0));
}

MultiVector scalar_add_multiVector(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_, 0.0) + other.g0_, other.g1_, other.g2_, other.g3_, other.g4_);
}

MultiVectorAtInfinity scalar_add_multiVectorAtInfinity(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0) + other.g0_, other.g1_, other.g2_);
}

MultiVector scalar_add_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_, 0.0) + vec2(0.0, other.g0_.y), vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(0.0), vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector scalar_add_origin(Scalar self, Origin other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector scalar_add_plane(Scalar self, Plane other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), other.g0_);
}

MultiVector scalar_add_planeAtOrigin(Scalar self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector scalar_add_point(Scalar self, Point other) {
    return MultiVector(vec2(self.g0_, 0.0), other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity scalar_add_pointAtInfinity(Scalar self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0), other.g0_, vec3(0.0));
}

MultiVector scalar_add_rotor(Scalar self, Rotor other) {
    return MultiVector(vec2(self.g0_, 0.0) + vec2(0.0, other.g0_.w), vec4(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

Scalar scalar_add_scalar(Scalar self, Scalar other) {
    return Scalar(self.g0_ + other.g0_);
}

MultiVector scalar_add_transflector(Scalar self, Transflector other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), other.g1_);
}

MultiVector scalar_add_translator(Scalar self, Translator other) {
    return MultiVector(vec2(self.g0_, 0.0) + vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_add_antiScalar(Transflector self, AntiScalar other) {
    return MultiVector(vec2(0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), self.g1_);
}

MultiVector transflector_add_dualNum(Transflector self, DualNum other) {
    return MultiVector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), self.g1_);
}

Flector transflector_add_flector(Transflector self, Flector other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_, self.g1_ + other.g1_);
}

Transflector transflector_add_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return Transflector(self.g0_ + vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g1_ + vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Transflector transflector_add_horizon(Transflector self, Horizon other) {
    return Transflector(self.g0_, self.g1_ + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector transflector_add_line(Transflector self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), other.g0_, other.g1_, self.g1_);
}

MultiVector transflector_add_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), other.g0_, self.g1_);
}

MultiVector transflector_add_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), other.g0_, vec3(0.0), self.g1_);
}

MultiVector transflector_add_motor(Transflector self, Motor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), other.g1_, self.g1_);
}

MultiVector transflector_add_multiVector(Transflector self, MultiVector other) {
    return MultiVector(other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g1_, other.g2_, other.g3_, self.g1_ + other.g4_);
}

MultiVector transflector_add_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(other.g0_.x, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), other.g2_, self.g1_ + vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector transflector_add_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, other.g0_.y), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(0.0), self.g1_ + vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector transflector_add_origin(Transflector self, Origin other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + vec4(0.0, 0.0, 0.0, other.g0_), self.g1_);
}

Transflector transflector_add_plane(Transflector self, Plane other) {
    return Transflector(self.g0_, self.g1_ + other.g0_);
}

Transflector transflector_add_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return Transflector(self.g0_, self.g1_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector transflector_add_point(Transflector self, Point other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) + other.g0_, self.g1_);
}

Transflector transflector_add_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return Transflector(self.g0_ + other.g0_, self.g1_);
}

MultiVector transflector_add_rotor(Transflector self, Rotor other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), self.g1_);
}

MultiVector transflector_add_scalar(Transflector self, Scalar other) {
    return MultiVector(vec2(other.g0_, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), self.g1_);
}

Transflector transflector_add_transflector(Transflector self, Transflector other) {
    return Transflector(self.g0_ + other.g0_, self.g1_ + other.g1_);
}

MultiVector transflector_add_translator(Transflector self, Translator other) {
    return MultiVector(vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g1_);
}

Translator translator_add_antiScalar(Translator self, AntiScalar other) {
    return Translator(self.g0_ + vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector translator_add_dualNum(Translator self, DualNum other) {
    return MultiVector(vec2(0.0, self.g0_.w) + other.g0_, vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector translator_add_flector(Translator self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_.w), other.g0_, vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), other.g1_);
}

MultiVector translator_add_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector translator_add_horizon(Translator self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0, 0.0, 0.0, other.g0_));
}

Motor translator_add_line(Translator self, Line other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_.w) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g1_);
}

Translator translator_add_lineAtInfinity(Translator self, LineAtInfinity other) {
    return Translator(self.g0_ + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Motor translator_add_lineAtOrigin(Translator self, LineAtOrigin other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_.w) + vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

Motor translator_add_motor(Translator self, Motor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_.w) + other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g1_);
}

MultiVector translator_add_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_.w) + other.g0_, other.g1_, other.g2_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g3_, other.g4_);
}

MultiVector translator_add_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w) + vec2(other.g0_.x, 0.0), vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) + other.g2_, vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector translator_add_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0_.w) + vec2(0.0, other.g0_.y), vec4(0.0, 0.0, 0.0, other.g0_.x), other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector translator_add_origin(Translator self, Origin other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector translator_add_plane(Translator self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), other.g0_);
}

MultiVector translator_add_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector translator_add_point(Translator self, Point other) {
    return MultiVector(vec2(0.0, self.g0_.w), other.g0_, vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector translator_add_pointAtInfinity(Translator self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

Motor translator_add_rotor(Translator self, Rotor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_.w) + other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

MultiVector translator_add_scalar(Translator self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0_.w) + vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector translator_add_transflector(Translator self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), other.g1_);
}

Translator translator_add_translator(Translator self, Translator other) {
    return Translator(self.g0_ + other.g0_);
}

AntiScalar antiScalar_div_antiScalar(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0_ / other.g0_);
}

DualNum dualNum_div_dualNum(DualNum self, DualNum other) {
    return DualNum(self.g0_ / other.g0_);
}

Flector flector_div_flector(Flector self, Flector other) {
    return Flector(self.g0_ / other.g0_, self.g1_ / other.g1_);
}

FlectorAtInfinity flectorAtInfinity_div_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0_ / other.g0_);
}

Horizon horizon_div_horizon(Horizon self, Horizon other) {
    return Horizon(self.g0_ / other.g0_);
}

Line line_div_line(Line self, Line other) {
    return Line(self.g0_ / other.g0_, self.g1_ / other.g1_);
}

LineAtInfinity lineAtInfinity_div_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return LineAtInfinity(self.g0_ / other.g0_);
}

LineAtOrigin lineAtOrigin_div_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return LineAtOrigin(self.g0_ / other.g0_);
}

Motor motor_div_motor(Motor self, Motor other) {
    return Motor(self.g0_ / other.g0_, self.g1_ / other.g1_);
}

MultiVector multiVector_div_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(self.g0_ / other.g0_, self.g1_ / other.g1_, self.g2_ / other.g2_, self.g3_ / other.g3_, self.g4_ / other.g4_);
}

MultiVectorAtInfinity multiVectorAtInfinity_div_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ / other.g0_, self.g1_ / other.g1_, self.g2_ / other.g2_);
}

MultiVectorAtOrigin multiVectorAtOrigin_div_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(self.g0_ / other.g0_, self.g1_ / other.g1_, self.g2_ / other.g2_);
}

Origin origin_div_origin(Origin self, Origin other) {
    return Origin(self.g0_ / other.g0_);
}

Plane plane_div_plane(Plane self, Plane other) {
    return Plane(self.g0_ / other.g0_);
}

PlaneAtOrigin planeAtOrigin_div_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return PlaneAtOrigin(self.g0_ / other.g0_);
}

Point point_div_point(Point self, Point other) {
    return Point(self.g0_ / other.g0_);
}

PointAtInfinity pointAtInfinity_div_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return PointAtInfinity(self.g0_ / other.g0_);
}

Rotor rotor_div_rotor(Rotor self, Rotor other) {
    return Rotor(self.g0_ / other.g0_);
}

Scalar scalar_div_scalar(Scalar self, Scalar other) {
    return Scalar(self.g0_ / other.g0_);
}

Transflector transflector_div_transflector(Transflector self, Transflector other) {
    return Transflector(self.g0_ / other.g0_, self.g1_ / other.g1_);
}

Translator translator_div_translator(Translator self, Translator other) {
    return Translator(self.g0_ / other.g0_);
}

AntiScalar dualNum_into_antiScalar(DualNum self) {
    return AntiScalar(self.g0_.y);
}

Scalar dualNum_into_scalar(DualNum self) {
    return Scalar(self.g0_.x);
}

FlectorAtInfinity flector_into_flectorAtInfinity(Flector self) {
    return FlectorAtInfinity(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g1_.w));
}

Horizon flector_into_horizon(Flector self) {
    return Horizon(self.g1_.w);
}

Origin flector_into_origin(Flector self) {
    return Origin(self.g0_.w);
}

Plane flector_into_plane(Flector self) {
    return Plane(self.g1_);
}

PlaneAtOrigin flector_into_planeAtOrigin(Flector self) {
    return PlaneAtOrigin(vec3(self.g1_.x, self.g1_.y, self.g1_.z));
}

Point flector_into_point(Flector self) {
    return Point(self.g0_);
}

PointAtInfinity flector_into_pointAtInfinity(Flector self) {
    return PointAtInfinity(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

Transflector flector_into_transflector(Flector self) {
    return Transflector(vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_);
}

Horizon flectorAtInfinity_into_horizon(FlectorAtInfinity self) {
    return Horizon(self.g0_.w);
}

PointAtInfinity flectorAtInfinity_into_pointAtInfinity(FlectorAtInfinity self) {
    return PointAtInfinity(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

LineAtInfinity line_into_lineAtInfinity(Line self) {
    return LineAtInfinity(self.g1_);
}

LineAtOrigin line_into_lineAtOrigin(Line self) {
    return LineAtOrigin(self.g0_);
}

AntiScalar motor_into_antiScalar(Motor self) {
    return AntiScalar(self.g0_.w);
}

Line motor_into_line(Motor self) {
    return Line(vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_);
}

LineAtInfinity motor_into_lineAtInfinity(Motor self) {
    return LineAtInfinity(self.g1_);
}

LineAtOrigin motor_into_lineAtOrigin(Motor self) {
    return LineAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

Rotor motor_into_rotor(Motor self) {
    return Rotor(self.g0_);
}

Translator motor_into_translator(Motor self) {
    return Translator(vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g0_.w));
}

AntiScalar multiVector_into_antiScalar(MultiVector self) {
    return AntiScalar(self.g0_.y);
}

DualNum multiVector_into_dualNum(MultiVector self) {
    return DualNum(self.g0_);
}

Flector multiVector_into_flector(MultiVector self) {
    return Flector(self.g1_, self.g4_);
}

FlectorAtInfinity multiVector_into_flectorAtInfinity(MultiVector self) {
    return FlectorAtInfinity(vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g4_.w));
}

Horizon multiVector_into_horizon(MultiVector self) {
    return Horizon(self.g4_.w);
}

Line multiVector_into_line(MultiVector self) {
    return Line(self.g2_, self.g3_);
}

LineAtInfinity multiVector_into_lineAtInfinity(MultiVector self) {
    return LineAtInfinity(self.g3_);
}

LineAtOrigin multiVector_into_lineAtOrigin(MultiVector self) {
    return LineAtOrigin(self.g2_);
}

Motor multiVector_into_motor(MultiVector self) {
    return Motor(vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g0_.y), self.g3_);
}

MultiVectorAtInfinity multiVector_into_multiVectorAtInfinity(MultiVector self) {
    return MultiVectorAtInfinity(vec2(self.g0_.x, self.g4_.w), vec3(self.g1_.x, self.g1_.y, self.g1_.z), self.g3_);
}

MultiVectorAtOrigin multiVector_into_multiVectorAtOrigin(MultiVector self) {
    return MultiVectorAtOrigin(vec2(self.g1_.w, self.g0_.y), self.g2_, vec3(self.g4_.x, self.g4_.y, self.g4_.z));
}

Origin multiVector_into_origin(MultiVector self) {
    return Origin(self.g1_.w);
}

Plane multiVector_into_plane(MultiVector self) {
    return Plane(self.g4_);
}

PlaneAtOrigin multiVector_into_planeAtOrigin(MultiVector self) {
    return PlaneAtOrigin(vec3(self.g4_.x, self.g4_.y, self.g4_.z));
}

Point multiVector_into_point(MultiVector self) {
    return Point(self.g1_);
}

PointAtInfinity multiVector_into_pointAtInfinity(MultiVector self) {
    return PointAtInfinity(vec3(self.g1_.x, self.g1_.y, self.g1_.z));
}

Rotor multiVector_into_rotor(MultiVector self) {
    return Rotor(vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g0_.y));
}

Scalar multiVector_into_scalar(MultiVector self) {
    return Scalar(self.g0_.x);
}

Transflector multiVector_into_transflector(MultiVector self) {
    return Transflector(vec3(self.g1_.x, self.g1_.y, self.g1_.z), self.g4_);
}

Translator multiVector_into_translator(MultiVector self) {
    return Translator(vec4(self.g3_.x, self.g3_.y, self.g3_.z, self.g0_.y));
}

FlectorAtInfinity multiVectorAtInfinity_into_flectorAtInfinity(MultiVectorAtInfinity self) {
    return FlectorAtInfinity(vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g0_.y));
}

Horizon multiVectorAtInfinity_into_horizon(MultiVectorAtInfinity self) {
    return Horizon(self.g0_.y);
}

LineAtInfinity multiVectorAtInfinity_into_lineAtInfinity(MultiVectorAtInfinity self) {
    return LineAtInfinity(self.g2_);
}

PointAtInfinity multiVectorAtInfinity_into_pointAtInfinity(MultiVectorAtInfinity self) {
    return PointAtInfinity(self.g1_);
}

Scalar multiVectorAtInfinity_into_scalar(MultiVectorAtInfinity self) {
    return Scalar(self.g0_.x);
}

AntiScalar multiVectorAtOrigin_into_antiScalar(MultiVectorAtOrigin self) {
    return AntiScalar(self.g0_.y);
}

LineAtOrigin multiVectorAtOrigin_into_lineAtOrigin(MultiVectorAtOrigin self) {
    return LineAtOrigin(self.g1_);
}

Origin multiVectorAtOrigin_into_origin(MultiVectorAtOrigin self) {
    return Origin(self.g0_.x);
}

PlaneAtOrigin multiVectorAtOrigin_into_planeAtOrigin(MultiVectorAtOrigin self) {
    return PlaneAtOrigin(self.g2_);
}

Rotor multiVectorAtOrigin_into_rotor(MultiVectorAtOrigin self) {
    return Rotor(vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g0_.y));
}

Horizon plane_into_horizon(Plane self) {
    return Horizon(self.g0_.w);
}

PlaneAtOrigin plane_into_planeAtOrigin(Plane self) {
    return PlaneAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

Origin point_into_origin(Point self) {
    return Origin(self.g0_.w);
}

PointAtInfinity point_into_pointAtInfinity(Point self) {
    return PointAtInfinity(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

AntiScalar rotor_into_antiScalar(Rotor self) {
    return AntiScalar(self.g0_.w);
}

LineAtOrigin rotor_into_lineAtOrigin(Rotor self) {
    return LineAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

FlectorAtInfinity transflector_into_flectorAtInfinity(Transflector self) {
    return FlectorAtInfinity(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g1_.w));
}

Horizon transflector_into_horizon(Transflector self) {
    return Horizon(self.g1_.w);
}

Plane transflector_into_plane(Transflector self) {
    return Plane(self.g1_);
}

PlaneAtOrigin transflector_into_planeAtOrigin(Transflector self) {
    return PlaneAtOrigin(vec3(self.g1_.x, self.g1_.y, self.g1_.z));
}

PointAtInfinity transflector_into_pointAtInfinity(Transflector self) {
    return PointAtInfinity(self.g0_);
}

AntiScalar translator_into_antiScalar(Translator self) {
    return AntiScalar(self.g0_.w);
}

LineAtInfinity translator_into_lineAtInfinity(Translator self) {
    return LineAtInfinity(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

AntiScalar antiScalar_mul_antiScalar(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

DualNum dualNum_mul_dualNum(DualNum self, DualNum other) {
    return DualNum(self.g0_ * other.g0_);
}

Flector flector_mul_flector(Flector self, Flector other) {
    return Flector(self.g0_ * other.g0_, self.g1_ * other.g1_);
}

FlectorAtInfinity flectorAtInfinity_mul_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0_ * other.g0_);
}

Horizon horizon_mul_horizon(Horizon self, Horizon other) {
    return Horizon(self.g0_ * other.g0_);
}

Line line_mul_line(Line self, Line other) {
    return Line(self.g0_ * other.g0_, self.g1_ * other.g1_);
}

LineAtInfinity lineAtInfinity_mul_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return LineAtInfinity(self.g0_ * other.g0_);
}

LineAtOrigin lineAtOrigin_mul_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return LineAtOrigin(self.g0_ * other.g0_);
}

Motor motor_mul_motor(Motor self, Motor other) {
    return Motor(self.g0_ * other.g0_, self.g1_ * other.g1_);
}

MultiVector multiVector_mul_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(self.g0_ * other.g0_, self.g1_ * other.g1_, self.g2_ * other.g2_, self.g3_ * other.g3_, self.g4_ * other.g4_);
}

MultiVectorAtInfinity multiVectorAtInfinity_mul_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ * other.g0_, self.g1_ * other.g1_, self.g2_ * other.g2_);
}

MultiVectorAtOrigin multiVectorAtOrigin_mul_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(self.g0_ * other.g0_, self.g1_ * other.g1_, self.g2_ * other.g2_);
}

Origin origin_mul_origin(Origin self, Origin other) {
    return Origin(self.g0_ * other.g0_);
}

Plane plane_mul_plane(Plane self, Plane other) {
    return Plane(self.g0_ * other.g0_);
}

PlaneAtOrigin planeAtOrigin_mul_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return PlaneAtOrigin(self.g0_ * other.g0_);
}

Point point_mul_point(Point self, Point other) {
    return Point(self.g0_ * other.g0_);
}

PointAtInfinity pointAtInfinity_mul_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return PointAtInfinity(self.g0_ * other.g0_);
}

Rotor rotor_mul_rotor(Rotor self, Rotor other) {
    return Rotor(self.g0_ * other.g0_);
}

Scalar scalar_mul_scalar(Scalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Transflector transflector_mul_transflector(Transflector self, Transflector other) {
    return Transflector(self.g0_ * other.g0_, self.g1_ * other.g1_);
}

Translator translator_mul_translator(Translator self, Translator other) {
    return Translator(self.g0_ * other.g0_);
}

AntiScalar antiScalar_sub_antiScalar(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0_ - other.g0_);
}

DualNum antiScalar_sub_dualNum(AntiScalar self, DualNum other) {
    return DualNum(vec2(0.0, self.g0_) - other.g0_);
}

MultiVector antiScalar_sub_flector(AntiScalar self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(0.0) - other.g0_, vec3(0.0), vec3(0.0), vec4(0.0) - other.g1_);
}

MultiVector antiScalar_sub_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector antiScalar_sub_horizon(AntiScalar self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

Motor antiScalar_sub_line(AntiScalar self, Line other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0) - other.g1_);
}

Translator antiScalar_sub_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return Translator(vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Rotor antiScalar_sub_lineAtOrigin(AntiScalar self, LineAtOrigin other) {
    return Rotor(vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Motor antiScalar_sub_motor(AntiScalar self, Motor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_) - other.g0_, vec3(0.0) - other.g1_);
}

MultiVector antiScalar_sub_multiVector(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_) - other.g0_, vec4(0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, vec4(0.0) - other.g4_);
}

MultiVector antiScalar_sub_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_) - vec2(other.g0_.x, 0.0), vec4(0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(0.0) - other.g2_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin antiScalar_sub_multiVectorAtOrigin(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_) - other.g0_, vec3(0.0) - other.g1_, vec3(0.0) - other.g2_);
}

MultiVectorAtOrigin antiScalar_sub_origin(AntiScalar self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_) - vec2(other.g0_, 0.0), vec3(0.0), vec3(0.0));
}

MultiVector antiScalar_sub_plane(AntiScalar self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g0_);
}

MultiVectorAtOrigin antiScalar_sub_planeAtOrigin(AntiScalar self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_), vec3(0.0), vec3(0.0) - other.g0_);
}

MultiVector antiScalar_sub_point(AntiScalar self, Point other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(0.0) - other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector antiScalar_sub_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Rotor antiScalar_sub_rotor(AntiScalar self, Rotor other) {
    return Rotor(vec4(0.0, 0.0, 0.0, self.g0_) - other.g0_);
}

DualNum antiScalar_sub_scalar(AntiScalar self, Scalar other) {
    return DualNum(vec2(0.0, self.g0_) - vec2(other.g0_, 0.0));
}

MultiVector antiScalar_sub_transflector(AntiScalar self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g1_);
}

Translator antiScalar_sub_translator(AntiScalar self, Translator other) {
    return Translator(vec4(0.0, 0.0, 0.0, self.g0_) - other.g0_);
}

DualNum dualNum_sub_antiScalar(DualNum self, AntiScalar other) {
    return DualNum(self.g0_ - vec2(0.0, other.g0_));
}

DualNum dualNum_sub_dualNum(DualNum self, DualNum other) {
    return DualNum(self.g0_ - other.g0_);
}

MultiVector dualNum_sub_flector(DualNum self, Flector other) {
    return MultiVector(self.g0_, vec4(0.0) - other.g0_, vec3(0.0), vec3(0.0), vec4(0.0) - other.g1_);
}

MultiVector dualNum_sub_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return MultiVector(self.g0_, vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector dualNum_sub_horizon(DualNum self, Horizon other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector dualNum_sub_line(DualNum self, Line other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVector dualNum_sub_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0), vec3(0.0) - other.g0_, vec4(0.0));
}

MultiVector dualNum_sub_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0) - other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector dualNum_sub_motor(DualNum self, Motor other) {
    return MultiVector(self.g0_ - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVector dualNum_sub_multiVector(DualNum self, MultiVector other) {
    return MultiVector(self.g0_ - other.g0_, vec4(0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, vec4(0.0) - other.g4_);
}

MultiVector dualNum_sub_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ - vec2(other.g0_.x, 0.0), vec4(0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(0.0) - other.g2_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector dualNum_sub_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ - vec2(0.0, other.g0_.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(0.0), vec4(0.0) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector dualNum_sub_origin(DualNum self, Origin other) {
    return MultiVector(self.g0_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector dualNum_sub_plane(DualNum self, Plane other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g0_);
}

MultiVector dualNum_sub_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return MultiVector(self.g0_, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector dualNum_sub_point(DualNum self, Point other) {
    return MultiVector(self.g0_, vec4(0.0) - other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector dualNum_sub_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return MultiVector(self.g0_, vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector dualNum_sub_rotor(DualNum self, Rotor other) {
    return MultiVector(self.g0_ - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

DualNum dualNum_sub_scalar(DualNum self, Scalar other) {
    return DualNum(self.g0_ - vec2(other.g0_, 0.0));
}

MultiVector dualNum_sub_transflector(DualNum self, Transflector other) {
    return MultiVector(self.g0_, vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g1_);
}

MultiVector dualNum_sub_translator(DualNum self, Translator other) {
    return MultiVector(self.g0_ - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_sub_antiScalar(Flector self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_), self.g0_, vec3(0.0), vec3(0.0), self.g1_);
}

MultiVector flector_sub_dualNum(Flector self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, self.g0_, vec3(0.0), vec3(0.0), self.g1_);
}

Flector flector_sub_flector(Flector self, Flector other) {
    return Flector(self.g0_ - other.g0_, self.g1_ - other.g1_);
}

Flector flector_sub_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return Flector(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Flector flector_sub_horizon(Flector self, Horizon other) {
    return Flector(self.g0_, self.g1_ - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector flector_sub_line(Flector self, Line other) {
    return MultiVector(vec2(0.0), self.g0_, vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, self.g1_);
}

MultiVector flector_sub_lineAtInfinity(Flector self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), self.g0_, vec3(0.0), vec3(0.0) - other.g0_, self.g1_);
}

MultiVector flector_sub_lineAtOrigin(Flector self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), self.g0_, vec3(0.0) - other.g0_, vec3(0.0), self.g1_);
}

MultiVector flector_sub_motor(Flector self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), self.g0_, vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, self.g1_);
}

MultiVector flector_sub_multiVector(Flector self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, self.g0_ - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, self.g1_ - other.g4_);
}

MultiVector flector_sub_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_.x, 0.0), self.g0_ - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(0.0) - other.g2_, self.g1_ - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector flector_sub_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.y), self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(0.0), self.g1_ - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector flector_sub_origin(Flector self, Origin other) {
    return Flector(self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_), self.g1_);
}

Flector flector_sub_plane(Flector self, Plane other) {
    return Flector(self.g0_, self.g1_ - other.g0_);
}

Flector flector_sub_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return Flector(self.g0_, self.g1_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flector_sub_point(Flector self, Point other) {
    return Flector(self.g0_ - other.g0_, self.g1_);
}

Flector flector_sub_pointAtInfinity(Flector self, PointAtInfinity other) {
    return Flector(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_);
}

MultiVector flector_sub_rotor(Flector self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), self.g0_, vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), self.g1_);
}

MultiVector flector_sub_scalar(Flector self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_, 0.0), self.g0_, vec3(0.0), vec3(0.0), self.g1_);
}

Flector flector_sub_transflector(Flector self, Transflector other) {
    return Flector(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ - other.g1_);
}

MultiVector flector_sub_translator(Flector self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), self.g0_, vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g1_);
}

MultiVector flectorAtInfinity_sub_antiScalar(FlectorAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVector flectorAtInfinity_sub_dualNum(FlectorAtInfinity self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

Flector flectorAtInfinity_sub_flector(FlectorAtInfinity self, Flector other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.w) - other.g1_);
}

FlectorAtInfinity flectorAtInfinity_sub_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0_ - other.g0_);
}

FlectorAtInfinity flectorAtInfinity_sub_horizon(FlectorAtInfinity self, Horizon other) {
    return FlectorAtInfinity(self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector flectorAtInfinity_sub_line(FlectorAtInfinity self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVectorAtInfinity flectorAtInfinity_sub_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_.w), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0) - other.g0_);
}

MultiVector flectorAtInfinity_sub_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - other.g0_, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVector flectorAtInfinity_sub_motor(FlectorAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVector flectorAtInfinity_sub_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, vec4(0.0, 0.0, 0.0, self.g0_.w) - other.g4_);
}

MultiVectorAtInfinity flectorAtInfinity_sub_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_.w) - other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g1_, vec3(0.0) - other.g2_);
}

MultiVector flectorAtInfinity_sub_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.y), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector flectorAtInfinity_sub_origin(FlectorAtInfinity self, Origin other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

Transflector flectorAtInfinity_sub_plane(FlectorAtInfinity self, Plane other) {
    return Transflector(vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_.w) - other.g0_);
}

Transflector flectorAtInfinity_sub_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_.w) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flectorAtInfinity_sub_point(FlectorAtInfinity self, Point other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.w));
}

FlectorAtInfinity flectorAtInfinity_sub_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return FlectorAtInfinity(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector flectorAtInfinity_sub_rotor(FlectorAtInfinity self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVectorAtInfinity flectorAtInfinity_sub_scalar(FlectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_.w) - vec2(other.g0_, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0));
}

Transflector flectorAtInfinity_sub_transflector(FlectorAtInfinity self, Transflector other) {
    return Transflector(vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.w) - other.g1_);
}

MultiVector flectorAtInfinity_sub_translator(FlectorAtInfinity self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_.w));
}

MultiVector horizon_sub_antiScalar(Horizon self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVector horizon_sub_dualNum(Horizon self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_));
}

Flector horizon_sub_flector(Horizon self, Flector other) {
    return Flector(vec4(0.0) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_) - other.g1_);
}

FlectorAtInfinity horizon_sub_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(0.0, 0.0, 0.0, self.g0_) - other.g0_);
}

Horizon horizon_sub_horizon(Horizon self, Horizon other) {
    return Horizon(self.g0_ - other.g0_);
}

MultiVector horizon_sub_line(Horizon self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVectorAtInfinity horizon_sub_lineAtInfinity(Horizon self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_), vec3(0.0), vec3(0.0) - other.g0_);
}

MultiVector horizon_sub_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0_, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVector horizon_sub_motor(Horizon self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVector horizon_sub_multiVector(Horizon self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, vec4(0.0, 0.0, 0.0, self.g0_) - other.g4_);
}

MultiVectorAtInfinity horizon_sub_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_) - other.g0_, vec3(0.0) - other.g1_, vec3(0.0) - other.g2_);
}

MultiVector horizon_sub_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector horizon_sub_origin(Horizon self, Origin other) {
    return Flector(vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_), vec4(0.0, 0.0, 0.0, self.g0_));
}

Plane horizon_sub_plane(Horizon self, Plane other) {
    return Plane(vec4(0.0, 0.0, 0.0, self.g0_) - other.g0_);
}

Plane horizon_sub_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return Plane(vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector horizon_sub_point(Horizon self, Point other) {
    return Flector(vec4(0.0) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_));
}

FlectorAtInfinity horizon_sub_pointAtInfinity(Horizon self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector horizon_sub_rotor(Horizon self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0, 0.0, 0.0, self.g0_));
}

MultiVectorAtInfinity horizon_sub_scalar(Horizon self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_) - vec2(other.g0_, 0.0), vec3(0.0), vec3(0.0));
}

Transflector horizon_sub_transflector(Horizon self, Transflector other) {
    return Transflector(vec3(0.0) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_) - other.g1_);
}

MultiVector horizon_sub_translator(Horizon self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_));
}

Motor line_sub_antiScalar(Line self, AntiScalar other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_), self.g1_);
}

MultiVector line_sub_dualNum(Line self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0), self.g0_, self.g1_, vec4(0.0));
}

MultiVector line_sub_flector(Line self, Flector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0_, self.g0_, self.g1_, vec4(0.0) - other.g1_);
}

MultiVector line_sub_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, self.g1_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector line_sub_horizon(Line self, Horizon other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, self.g1_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

Line line_sub_line(Line self, Line other) {
    return Line(self.g0_ - other.g0_, self.g1_ - other.g1_);
}

Line line_sub_lineAtInfinity(Line self, LineAtInfinity other) {
    return Line(self.g0_, self.g1_ - other.g0_);
}

Line line_sub_lineAtOrigin(Line self, LineAtOrigin other) {
    return Line(self.g0_ - other.g0_, self.g1_);
}

Motor line_sub_motor(Line self, Motor other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_, self.g1_ - other.g1_);
}

MultiVector line_sub_multiVector(Line self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0) - other.g1_, self.g0_ - other.g2_, self.g1_ - other.g3_, vec4(0.0) - other.g4_);
}

MultiVector line_sub_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_.x, 0.0), vec4(0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), self.g0_, self.g1_ - other.g2_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector line_sub_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), self.g0_ - other.g1_, self.g1_, vec4(0.0) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector line_sub_origin(Line self, Origin other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_), self.g0_, self.g1_, vec4(0.0));
}

MultiVector line_sub_plane(Line self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, self.g1_, vec4(0.0) - other.g0_);
}

MultiVector line_sub_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, self.g1_, vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector line_sub_point(Line self, Point other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0_, self.g0_, self.g1_, vec4(0.0));
}

MultiVector line_sub_pointAtInfinity(Line self, PointAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, self.g1_, vec4(0.0));
}

Motor line_sub_rotor(Line self, Rotor other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_, self.g1_);
}

MultiVector line_sub_scalar(Line self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_, 0.0), vec4(0.0), self.g0_, self.g1_, vec4(0.0));
}

MultiVector line_sub_transflector(Line self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, self.g1_, vec4(0.0) - other.g1_);
}

Motor line_sub_translator(Line self, Translator other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w), self.g1_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Translator lineAtInfinity_sub_antiScalar(LineAtInfinity self, AntiScalar other) {
    return Translator(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector lineAtInfinity_sub_dualNum(LineAtInfinity self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0), vec3(0.0), self.g0_, vec4(0.0));
}

MultiVector lineAtInfinity_sub_flector(LineAtInfinity self, Flector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0_, vec3(0.0), self.g0_, vec4(0.0) - other.g1_);
}

MultiVectorAtInfinity lineAtInfinity_sub_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(0.0, other.g0_.w), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g0_);
}

MultiVectorAtInfinity lineAtInfinity_sub_horizon(LineAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(0.0, other.g0_), vec3(0.0), self.g0_);
}

Line lineAtInfinity_sub_line(LineAtInfinity self, Line other) {
    return Line(vec3(0.0) - other.g0_, self.g0_ - other.g1_);
}

LineAtInfinity lineAtInfinity_sub_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return LineAtInfinity(self.g0_ - other.g0_);
}

Line lineAtInfinity_sub_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return Line(vec3(0.0) - other.g0_, self.g0_);
}

Motor lineAtInfinity_sub_motor(LineAtInfinity self, Motor other) {
    return Motor(vec4(0.0) - other.g0_, self.g0_ - other.g1_);
}

MultiVector lineAtInfinity_sub_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0) - other.g1_, vec3(0.0) - other.g2_, self.g0_ - other.g3_, vec4(0.0) - other.g4_);
}

MultiVectorAtInfinity lineAtInfinity_sub_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - other.g0_, vec3(0.0) - other.g1_, self.g0_ - other.g2_);
}

MultiVector lineAtInfinity_sub_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, self.g0_, vec4(0.0) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector lineAtInfinity_sub_origin(LineAtInfinity self, Origin other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), self.g0_, vec4(0.0));
}

MultiVector lineAtInfinity_sub_plane(LineAtInfinity self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), self.g0_, vec4(0.0) - other.g0_);
}

MultiVector lineAtInfinity_sub_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), self.g0_, vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector lineAtInfinity_sub_point(LineAtInfinity self, Point other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0_, vec3(0.0), self.g0_, vec4(0.0));
}

MultiVectorAtInfinity lineAtInfinity_sub_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0), vec3(0.0) - other.g0_, self.g0_);
}

Motor lineAtInfinity_sub_rotor(LineAtInfinity self, Rotor other) {
    return Motor(vec4(0.0) - other.g0_, self.g0_);
}

MultiVectorAtInfinity lineAtInfinity_sub_scalar(LineAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(other.g0_, 0.0), vec3(0.0), self.g0_);
}

MultiVector lineAtInfinity_sub_transflector(LineAtInfinity self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), self.g0_, vec4(0.0) - other.g1_);
}

Translator lineAtInfinity_sub_translator(LineAtInfinity self, Translator other) {
    return Translator(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_);
}

Rotor lineAtOrigin_sub_antiScalar(LineAtOrigin self, AntiScalar other) {
    return Rotor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector lineAtOrigin_sub_dualNum(LineAtOrigin self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0), self.g0_, vec3(0.0), vec4(0.0));
}

MultiVector lineAtOrigin_sub_flector(LineAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0_, self.g0_, vec3(0.0), vec4(0.0) - other.g1_);
}

MultiVector lineAtOrigin_sub_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector lineAtOrigin_sub_horizon(LineAtOrigin self, Horizon other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

Line lineAtOrigin_sub_line(LineAtOrigin self, Line other) {
    return Line(self.g0_ - other.g0_, vec3(0.0) - other.g1_);
}

Line lineAtOrigin_sub_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return Line(self.g0_, vec3(0.0) - other.g0_);
}

LineAtOrigin lineAtOrigin_sub_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return LineAtOrigin(self.g0_ - other.g0_);
}

Motor lineAtOrigin_sub_motor(LineAtOrigin self, Motor other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_, vec3(0.0) - other.g1_);
}

MultiVector lineAtOrigin_sub_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0) - other.g1_, self.g0_ - other.g2_, vec3(0.0) - other.g3_, vec4(0.0) - other.g4_);
}

MultiVector lineAtOrigin_sub_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_.x, 0.0), vec4(0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), self.g0_, vec3(0.0) - other.g2_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin lineAtOrigin_sub_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - other.g0_, self.g0_ - other.g1_, vec3(0.0) - other.g2_);
}

MultiVectorAtOrigin lineAtOrigin_sub_origin(LineAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(other.g0_, 0.0), self.g0_, vec3(0.0));
}

MultiVector lineAtOrigin_sub_plane(LineAtOrigin self, Plane other) {
    return MultiVector(vec2(0.0), vec4(0.0), self.g0_, vec3(0.0), vec4(0.0) - other.g0_);
}

MultiVectorAtOrigin lineAtOrigin_sub_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0), self.g0_, vec3(0.0) - other.g0_);
}

MultiVector lineAtOrigin_sub_point(LineAtOrigin self, Point other) {
    return MultiVector(vec2(0.0), vec4(0.0) - other.g0_, self.g0_, vec3(0.0), vec4(0.0));
}

MultiVector lineAtOrigin_sub_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, vec3(0.0), vec4(0.0));
}

Rotor lineAtOrigin_sub_rotor(LineAtOrigin self, Rotor other) {
    return Rotor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_);
}

MultiVector lineAtOrigin_sub_scalar(LineAtOrigin self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_, 0.0), vec4(0.0), self.g0_, vec3(0.0), vec4(0.0));
}

MultiVector lineAtOrigin_sub_transflector(LineAtOrigin self, Transflector other) {
    return MultiVector(vec2(0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_, vec3(0.0), vec4(0.0) - other.g1_);
}

Motor lineAtOrigin_sub_translator(LineAtOrigin self, Translator other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Motor motor_sub_antiScalar(Motor self, AntiScalar other) {
    return Motor(self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_), self.g1_);
}

MultiVector motor_sub_dualNum(Motor self, DualNum other) {
    return MultiVector(vec2(0.0, self.g0_.w) - other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

MultiVector motor_sub_flector(Motor self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0) - other.g1_);
}

MultiVector motor_sub_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector motor_sub_horizon(Motor self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

Motor motor_sub_line(Motor self, Line other) {
    return Motor(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ - other.g1_);
}

Motor motor_sub_lineAtInfinity(Motor self, LineAtInfinity other) {
    return Motor(self.g0_, self.g1_ - other.g0_);
}

Motor motor_sub_lineAtOrigin(Motor self, LineAtOrigin other) {
    return Motor(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_);
}

Motor motor_sub_motor(Motor self, Motor other) {
    return Motor(self.g0_ - other.g0_, self.g1_ - other.g1_);
}

MultiVector motor_sub_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_.w) - other.g0_, vec4(0.0) - other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g2_, self.g1_ - other.g3_, vec4(0.0) - other.g4_);
}

MultiVector motor_sub_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w) - vec2(other.g0_.x, 0.0), vec4(0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_ - other.g2_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector motor_sub_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0_.w) - vec2(0.0, other.g0_.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g1_, self.g1_, vec4(0.0) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector motor_sub_origin(Motor self, Origin other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

MultiVector motor_sub_plane(Motor self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0) - other.g0_);
}

MultiVector motor_sub_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector motor_sub_point(Motor self, Point other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

MultiVector motor_sub_pointAtInfinity(Motor self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

Motor motor_sub_rotor(Motor self, Rotor other) {
    return Motor(self.g0_ - other.g0_, self.g1_);
}

MultiVector motor_sub_scalar(Motor self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0_.w) - vec2(other.g0_, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0));
}

MultiVector motor_sub_transflector(Motor self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), self.g1_, vec4(0.0) - other.g1_);
}

Motor motor_sub_translator(Motor self, Translator other) {
    return Motor(self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_.w), self.g1_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVector multiVector_sub_antiScalar(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0_ - vec2(0.0, other.g0_), self.g1_, self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_sub_dualNum(MultiVector self, DualNum other) {
    return MultiVector(self.g0_ - other.g0_, self.g1_, self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_sub_flector(MultiVector self, Flector other) {
    return MultiVector(self.g0_, self.g1_ - other.g0_, self.g2_, self.g3_, self.g4_ - other.g1_);
}

MultiVector multiVector_sub_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(self.g0_, self.g1_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g2_, self.g3_, self.g4_ - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector multiVector_sub_horizon(MultiVector self, Horizon other) {
    return MultiVector(self.g0_, self.g1_, self.g2_, self.g3_, self.g4_ - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector multiVector_sub_line(MultiVector self, Line other) {
    return MultiVector(self.g0_, self.g1_, self.g2_ - other.g0_, self.g3_ - other.g1_, self.g4_);
}

MultiVector multiVector_sub_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVector(self.g0_, self.g1_, self.g2_, self.g3_ - other.g0_, self.g4_);
}

MultiVector multiVector_sub_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVector(self.g0_, self.g1_, self.g2_ - other.g0_, self.g3_, self.g4_);
}

MultiVector multiVector_sub_motor(MultiVector self, Motor other) {
    return MultiVector(self.g0_ - vec2(0.0, other.g0_.w), self.g1_, self.g2_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g3_ - other.g1_, self.g4_);
}

MultiVector multiVector_sub_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(self.g0_ - other.g0_, self.g1_ - other.g1_, self.g2_ - other.g2_, self.g3_ - other.g3_, self.g4_ - other.g4_);
}

MultiVector multiVector_sub_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ - vec2(other.g0_.x, 0.0), self.g1_ - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), self.g2_, self.g3_ - other.g2_, self.g4_ - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector multiVector_sub_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ - vec2(0.0, other.g0_.y), self.g1_ - vec4(0.0, 0.0, 0.0, other.g0_.x), self.g2_ - other.g1_, self.g3_, self.g4_ - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector multiVector_sub_origin(MultiVector self, Origin other) {
    return MultiVector(self.g0_, self.g1_ - vec4(0.0, 0.0, 0.0, other.g0_), self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_sub_plane(MultiVector self, Plane other) {
    return MultiVector(self.g0_, self.g1_, self.g2_, self.g3_, self.g4_ - other.g0_);
}

MultiVector multiVector_sub_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(self.g0_, self.g1_, self.g2_, self.g3_, self.g4_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVector_sub_point(MultiVector self, Point other) {
    return MultiVector(self.g0_, self.g1_ - other.g0_, self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_sub_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVector(self.g0_, self.g1_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_sub_rotor(MultiVector self, Rotor other) {
    return MultiVector(self.g0_ - vec2(0.0, other.g0_.w), self.g1_, self.g2_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g3_, self.g4_);
}

MultiVector multiVector_sub_scalar(MultiVector self, Scalar other) {
    return MultiVector(self.g0_ - vec2(other.g0_, 0.0), self.g1_, self.g2_, self.g3_, self.g4_);
}

MultiVector multiVector_sub_transflector(MultiVector self, Transflector other) {
    return MultiVector(self.g0_, self.g1_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g2_, self.g3_, self.g4_ - other.g1_);
}

MultiVector multiVector_sub_translator(MultiVector self, Translator other) {
    return MultiVector(self.g0_ - vec2(0.0, other.g0_.w), self.g1_, self.g2_, self.g3_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g4_);
}

MultiVector multiVectorAtInfinity_sub_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(self.g0_.x, 0.0) - vec2(0.0, other.g0_), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_sub_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVector(vec2(self.g0_.x, 0.0) - other.g0_, vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_sub_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) - other.g0_, vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) - other.g1_);
}

MultiVectorAtInfinity multiVectorAtInfinity_sub_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ - vec2(0.0, other.g0_.w), self.g1_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g2_);
}

MultiVectorAtInfinity multiVectorAtInfinity_sub_horizon(MultiVectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(self.g0_ - vec2(0.0, other.g0_), self.g1_, self.g2_);
}

MultiVector multiVectorAtInfinity_sub_line(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0) - other.g0_, self.g2_ - other.g1_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_sub_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_, self.g1_, self.g2_ - other.g0_);
}

MultiVector multiVectorAtInfinity_sub_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0) - other.g0_, self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_sub_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0_.x, 0.0) - vec2(0.0, other.g0_.w), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g2_ - other.g1_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_sub_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x, 0.0) - other.g0_, vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) - other.g1_, vec3(0.0) - other.g2_, self.g2_ - other.g3_, vec4(0.0, 0.0, 0.0, self.g0_.y) - other.g4_);
}

MultiVectorAtInfinity multiVectorAtInfinity_sub_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ - other.g0_, self.g1_ - other.g1_, self.g2_ - other.g2_);
}

MultiVector multiVectorAtInfinity_sub_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x, 0.0) - vec2(0.0, other.g0_.y), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector multiVectorAtInfinity_sub_origin(MultiVectorAtInfinity self, Origin other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVector multiVectorAtInfinity_sub_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) - other.g0_);
}

MultiVector multiVectorAtInfinity_sub_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVectorAtInfinity_sub_point(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) - other.g0_, vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_sub_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_, self.g1_ - other.g0_, self.g2_);
}

MultiVector multiVectorAtInfinity_sub_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVector(vec2(self.g0_.x, 0.0) - vec2(0.0, other.g0_.w), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_sub_scalar(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0_ - vec2(other.g0_, 0.0), self.g1_, self.g2_);
}

MultiVector multiVectorAtInfinity_sub_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0_.x, 0.0), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), self.g2_, vec4(0.0, 0.0, 0.0, self.g0_.y) - other.g1_);
}

MultiVector multiVectorAtInfinity_sub_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0_.x, 0.0) - vec2(0.0, other.g0_.w), vec4(self.g1_.x, self.g1_.y, self.g1_.z, 0.0), vec3(0.0), self.g2_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0, 0.0, 0.0, self.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_sub_antiScalar(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0_ - vec2(0.0, other.g0_), self.g1_, self.g2_);
}

MultiVector multiVectorAtOrigin_sub_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVector(vec2(0.0, self.g0_.y) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_sub_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) - other.g0_, self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) - other.g1_);
}

MultiVector multiVectorAtOrigin_sub_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector multiVectorAtOrigin_sub_horizon(MultiVectorAtOrigin self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector multiVectorAtOrigin_sub_line(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_ - other.g0_, vec3(0.0) - other.g1_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_sub_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0) - other.g0_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_sub_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(self.g0_, self.g1_ - other.g0_, self.g2_);
}

MultiVector multiVectorAtOrigin_sub_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0, self.g0_.y) - vec2(0.0, other.g0_.w), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_sub_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_.y) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_.x) - other.g1_, self.g1_ - other.g2_, vec3(0.0) - other.g3_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) - other.g4_);
}

MultiVector multiVectorAtOrigin_sub_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.y) - vec2(other.g0_.x, 0.0), vec4(0.0, 0.0, 0.0, self.g0_.x) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), self.g1_, vec3(0.0) - other.g2_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_sub_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(self.g0_ - other.g0_, self.g1_ - other.g1_, self.g2_ - other.g2_);
}

MultiVectorAtOrigin multiVectorAtOrigin_sub_origin(MultiVectorAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(self.g0_ - vec2(other.g0_, 0.0), self.g1_, self.g2_);
}

MultiVector multiVectorAtOrigin_sub_plane(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) - other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_sub_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(self.g0_, self.g1_, self.g2_ - other.g0_);
}

MultiVector multiVectorAtOrigin_sub_point(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) - other.g0_, self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_sub_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_sub_rotor(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0_ - vec2(0.0, other.g0_.w), self.g1_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g2_);
}

MultiVector multiVectorAtOrigin_sub_scalar(MultiVectorAtOrigin self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0_.y) - vec2(other.g0_, 0.0), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVector multiVectorAtOrigin_sub_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_.y), vec4(0.0, 0.0, 0.0, self.g0_.x) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_, vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0) - other.g1_);
}

MultiVector multiVectorAtOrigin_sub_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(0.0, self.g0_.y) - vec2(0.0, other.g0_.w), vec4(0.0, 0.0, 0.0, self.g0_.x), self.g1_, vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g2_.x, self.g2_.y, self.g2_.z, 0.0));
}

MultiVectorAtOrigin origin_sub_antiScalar(Origin self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(self.g0_, 0.0) - vec2(0.0, other.g0_), vec3(0.0), vec3(0.0));
}

MultiVector origin_sub_dualNum(Origin self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector origin_sub_flector(Origin self, Flector other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_) - other.g0_, vec4(0.0) - other.g1_);
}

Flector origin_sub_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Flector origin_sub_horizon(Origin self, Horizon other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector origin_sub_line(Origin self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVector origin_sub_lineAtInfinity(Origin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0), vec3(0.0) - other.g0_, vec4(0.0));
}

MultiVectorAtOrigin origin_sub_lineAtOrigin(Origin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_, 0.0), vec3(0.0) - other.g0_, vec3(0.0));
}

MultiVector origin_sub_motor(Origin self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVector origin_sub_multiVector(Origin self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0, 0.0, 0.0, self.g0_) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, vec4(0.0) - other.g4_);
}

MultiVector origin_sub_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_.x, 0.0), vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(0.0) - other.g2_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin origin_sub_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_, 0.0) - other.g0_, vec3(0.0) - other.g1_, vec3(0.0) - other.g2_);
}

Origin origin_sub_origin(Origin self, Origin other) {
    return Origin(self.g0_ - other.g0_);
}

Flector origin_sub_plane(Origin self, Plane other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_), vec4(0.0) - other.g0_);
}

Flector origin_sub_planeAtOrigin(Origin self, PlaneAtOrigin other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point origin_sub_point(Origin self, Point other) {
    return Point(vec4(0.0, 0.0, 0.0, self.g0_) - other.g0_);
}

Point origin_sub_pointAtInfinity(Origin self, PointAtInfinity other) {
    return Point(vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVectorAtOrigin origin_sub_rotor(Origin self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0_, 0.0) - vec2(0.0, other.g0_.w), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0));
}

MultiVector origin_sub_scalar(Origin self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_, 0.0), vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector origin_sub_transflector(Origin self, Transflector other) {
    return Flector(vec4(0.0, 0.0, 0.0, self.g0_) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(0.0) - other.g1_);
}

MultiVector origin_sub_translator(Origin self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0, 0.0, 0.0, self.g0_), vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector plane_sub_antiScalar(Plane self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_), vec4(0.0), vec3(0.0), vec3(0.0), self.g0_);
}

MultiVector plane_sub_dualNum(Plane self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0), vec3(0.0), vec3(0.0), self.g0_);
}

Flector plane_sub_flector(Plane self, Flector other) {
    return Flector(vec4(0.0) - other.g0_, self.g0_ - other.g1_);
}

Transflector plane_sub_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return Transflector(vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Plane plane_sub_horizon(Plane self, Horizon other) {
    return Plane(self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector plane_sub_line(Plane self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, self.g0_);
}

MultiVector plane_sub_lineAtInfinity(Plane self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), vec3(0.0) - other.g0_, self.g0_);
}

MultiVector plane_sub_lineAtOrigin(Plane self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0_, vec3(0.0), self.g0_);
}

MultiVector plane_sub_motor(Plane self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, self.g0_);
}

MultiVector plane_sub_multiVector(Plane self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, self.g0_ - other.g4_);
}

MultiVector plane_sub_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_.x, 0.0), vec4(0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(0.0) - other.g2_, self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector plane_sub_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(0.0), self.g0_ - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector plane_sub_origin(Plane self, Origin other) {
    return Flector(vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_), self.g0_);
}

Plane plane_sub_plane(Plane self, Plane other) {
    return Plane(self.g0_ - other.g0_);
}

Plane plane_sub_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return Plane(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector plane_sub_point(Plane self, Point other) {
    return Flector(vec4(0.0) - other.g0_, self.g0_);
}

Transflector plane_sub_pointAtInfinity(Plane self, PointAtInfinity other) {
    return Transflector(vec3(0.0) - other.g0_, self.g0_);
}

MultiVector plane_sub_rotor(Plane self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), self.g0_);
}

MultiVector plane_sub_scalar(Plane self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), self.g0_);
}

Transflector plane_sub_transflector(Plane self, Transflector other) {
    return Transflector(vec3(0.0) - other.g0_, self.g0_ - other.g1_);
}

MultiVector plane_sub_translator(Plane self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g0_);
}

MultiVectorAtOrigin planeAtOrigin_sub_antiScalar(PlaneAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(0.0, other.g0_), vec3(0.0), self.g0_);
}

MultiVector planeAtOrigin_sub_dualNum(PlaneAtOrigin self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Flector planeAtOrigin_sub_flector(PlaneAtOrigin self, Flector other) {
    return Flector(vec4(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g1_);
}

Transflector planeAtOrigin_sub_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return Transflector(vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Plane planeAtOrigin_sub_horizon(PlaneAtOrigin self, Horizon other) {
    return Plane(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector planeAtOrigin_sub_line(PlaneAtOrigin self, Line other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVector planeAtOrigin_sub_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(0.0), vec3(0.0), vec3(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVectorAtOrigin planeAtOrigin_sub_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0), vec3(0.0) - other.g0_, self.g0_);
}

MultiVector planeAtOrigin_sub_motor(PlaneAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVector planeAtOrigin_sub_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g4_);
}

MultiVector planeAtOrigin_sub_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_.x, 0.0), vec4(0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(0.0) - other.g2_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin planeAtOrigin_sub_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - other.g0_, vec3(0.0) - other.g1_, self.g0_ - other.g2_);
}

Flector planeAtOrigin_sub_origin(PlaneAtOrigin self, Origin other) {
    return Flector(vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Plane planeAtOrigin_sub_plane(PlaneAtOrigin self, Plane other) {
    return Plane(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_);
}

PlaneAtOrigin planeAtOrigin_sub_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return PlaneAtOrigin(self.g0_ - other.g0_);
}

Flector planeAtOrigin_sub_point(PlaneAtOrigin self, Point other) {
    return Flector(vec4(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Transflector planeAtOrigin_sub_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return Transflector(vec3(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVectorAtOrigin planeAtOrigin_sub_rotor(PlaneAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(0.0, other.g0_.w), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g0_);
}

MultiVector planeAtOrigin_sub_scalar(PlaneAtOrigin self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Transflector planeAtOrigin_sub_transflector(PlaneAtOrigin self, Transflector other) {
    return Transflector(vec3(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g1_);
}

MultiVector planeAtOrigin_sub_translator(PlaneAtOrigin self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVector point_sub_antiScalar(Point self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_), self.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector point_sub_dualNum(Point self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, self.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_sub_flector(Point self, Flector other) {
    return Flector(self.g0_ - other.g0_, vec4(0.0) - other.g1_);
}

Flector point_sub_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return Flector(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Flector point_sub_horizon(Point self, Horizon other) {
    return Flector(self.g0_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector point_sub_line(Point self, Line other) {
    return MultiVector(vec2(0.0), self.g0_, vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVector point_sub_lineAtInfinity(Point self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), self.g0_, vec3(0.0), vec3(0.0) - other.g0_, vec4(0.0));
}

MultiVector point_sub_lineAtOrigin(Point self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), self.g0_, vec3(0.0) - other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector point_sub_motor(Point self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), self.g0_, vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVector point_sub_multiVector(Point self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, self.g0_ - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, vec4(0.0) - other.g4_);
}

MultiVector point_sub_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_.x, 0.0), self.g0_ - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(0.0) - other.g2_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector point_sub_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.y), self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(0.0), vec4(0.0) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Point point_sub_origin(Point self, Origin other) {
    return Point(self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_));
}

Flector point_sub_plane(Point self, Plane other) {
    return Flector(self.g0_, vec4(0.0) - other.g0_);
}

Flector point_sub_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return Flector(self.g0_, vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point point_sub_point(Point self, Point other) {
    return Point(self.g0_ - other.g0_);
}

Point point_sub_pointAtInfinity(Point self, PointAtInfinity other) {
    return Point(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector point_sub_rotor(Point self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), self.g0_, vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVector point_sub_scalar(Point self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_, 0.0), self.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector point_sub_transflector(Point self, Transflector other) {
    return Flector(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(0.0) - other.g1_);
}

MultiVector point_sub_translator(Point self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), self.g0_, vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector pointAtInfinity_sub_antiScalar(PointAtInfinity self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector pointAtInfinity_sub_dualNum(PointAtInfinity self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0));
}

Flector pointAtInfinity_sub_flector(PointAtInfinity self, Flector other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_, vec4(0.0) - other.g1_);
}

FlectorAtInfinity pointAtInfinity_sub_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_);
}

FlectorAtInfinity pointAtInfinity_sub_horizon(PointAtInfinity self, Horizon other) {
    return FlectorAtInfinity(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector pointAtInfinity_sub_line(PointAtInfinity self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVectorAtInfinity pointAtInfinity_sub_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0), self.g0_, vec3(0.0) - other.g0_);
}

MultiVector pointAtInfinity_sub_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector pointAtInfinity_sub_motor(PointAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVector pointAtInfinity_sub_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, vec4(0.0) - other.g4_);
}

MultiVectorAtInfinity pointAtInfinity_sub_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - other.g0_, self.g0_ - other.g1_, vec3(0.0) - other.g2_);
}

MultiVector pointAtInfinity_sub_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.y), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(0.0), vec4(0.0) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Point pointAtInfinity_sub_origin(PointAtInfinity self, Origin other) {
    return Point(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

Transflector pointAtInfinity_sub_plane(PointAtInfinity self, Plane other) {
    return Transflector(self.g0_, vec4(0.0) - other.g0_);
}

Transflector pointAtInfinity_sub_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return Transflector(self.g0_, vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point pointAtInfinity_sub_point(PointAtInfinity self, Point other) {
    return Point(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_);
}

PointAtInfinity pointAtInfinity_sub_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return PointAtInfinity(self.g0_ - other.g0_);
}

MultiVector pointAtInfinity_sub_rotor(PointAtInfinity self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity pointAtInfinity_sub_scalar(PointAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(other.g0_, 0.0), self.g0_, vec3(0.0));
}

Transflector pointAtInfinity_sub_transflector(PointAtInfinity self, Transflector other) {
    return Transflector(self.g0_ - other.g0_, vec4(0.0) - other.g1_);
}

MultiVector pointAtInfinity_sub_translator(PointAtInfinity self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Rotor rotor_sub_antiScalar(Rotor self, AntiScalar other) {
    return Rotor(self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector rotor_sub_dualNum(Rotor self, DualNum other) {
    return MultiVector(vec2(0.0, self.g0_.w) - other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_sub_flector(Rotor self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0) - other.g1_);
}

MultiVector rotor_sub_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector rotor_sub_horizon(Rotor self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

Motor rotor_sub_line(Rotor self, Line other) {
    return Motor(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0) - other.g1_);
}

Motor rotor_sub_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return Motor(self.g0_, vec3(0.0) - other.g0_);
}

Rotor rotor_sub_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return Rotor(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Motor rotor_sub_motor(Rotor self, Motor other) {
    return Motor(self.g0_ - other.g0_, vec3(0.0) - other.g1_);
}

MultiVector rotor_sub_multiVector(Rotor self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_.w) - other.g0_, vec4(0.0) - other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g2_, vec3(0.0) - other.g3_, vec4(0.0) - other.g4_);
}

MultiVector rotor_sub_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w) - vec2(other.g0_.x, 0.0), vec4(0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0) - other.g2_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin rotor_sub_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_.w) - other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g1_, vec3(0.0) - other.g2_);
}

MultiVectorAtOrigin rotor_sub_origin(Rotor self, Origin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_.w) - vec2(other.g0_, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0));
}

MultiVector rotor_sub_plane(Rotor self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0) - other.g0_);
}

MultiVectorAtOrigin rotor_sub_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0, self.g0_.w), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0) - other.g0_);
}

MultiVector rotor_sub_point(Rotor self, Point other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_sub_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

Rotor rotor_sub_rotor(Rotor self, Rotor other) {
    return Rotor(self.g0_ - other.g0_);
}

MultiVector rotor_sub_scalar(Rotor self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0_.w) - vec2(other.g0_, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

MultiVector rotor_sub_transflector(Rotor self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0) - other.g1_);
}

Motor rotor_sub_translator(Rotor self, Translator other) {
    return Motor(self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_.w), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

DualNum scalar_sub_antiScalar(Scalar self, AntiScalar other) {
    return DualNum(vec2(self.g0_, 0.0) - vec2(0.0, other.g0_));
}

DualNum scalar_sub_dualNum(Scalar self, DualNum other) {
    return DualNum(vec2(self.g0_, 0.0) - other.g0_);
}

MultiVector scalar_sub_flector(Scalar self, Flector other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0) - other.g0_, vec3(0.0), vec3(0.0), vec4(0.0) - other.g1_);
}

MultiVectorAtInfinity scalar_sub_flectorAtInfinity(Scalar self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0) - vec2(0.0, other.g0_.w), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0));
}

MultiVectorAtInfinity scalar_sub_horizon(Scalar self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0) - vec2(0.0, other.g0_), vec3(0.0), vec3(0.0));
}

MultiVector scalar_sub_line(Scalar self, Line other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0), vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVectorAtInfinity scalar_sub_lineAtInfinity(Scalar self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0), vec3(0.0), vec3(0.0) - other.g0_);
}

MultiVector scalar_sub_lineAtOrigin(Scalar self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0), vec3(0.0) - other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector scalar_sub_motor(Scalar self, Motor other) {
    return MultiVector(vec2(self.g0_, 0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, vec4(0.0));
}

MultiVector scalar_sub_multiVector(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_, 0.0) - other.g0_, vec4(0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, vec4(0.0) - other.g4_);
}

MultiVectorAtInfinity scalar_sub_multiVectorAtInfinity(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0) - other.g0_, vec3(0.0) - other.g1_, vec3(0.0) - other.g2_);
}

MultiVector scalar_sub_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_, 0.0) - vec2(0.0, other.g0_.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(0.0), vec4(0.0) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector scalar_sub_origin(Scalar self, Origin other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector scalar_sub_plane(Scalar self, Plane other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g0_);
}

MultiVector scalar_sub_planeAtOrigin(Scalar self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector scalar_sub_point(Scalar self, Point other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0) - other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity scalar_sub_pointAtInfinity(Scalar self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_, 0.0), vec3(0.0) - other.g0_, vec3(0.0));
}

MultiVector scalar_sub_rotor(Scalar self, Rotor other) {
    return MultiVector(vec2(self.g0_, 0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

Scalar scalar_sub_scalar(Scalar self, Scalar other) {
    return Scalar(self.g0_ - other.g0_);
}

MultiVector scalar_sub_transflector(Scalar self, Transflector other) {
    return MultiVector(vec2(self.g0_, 0.0), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(0.0), vec4(0.0) - other.g1_);
}

MultiVector scalar_sub_translator(Scalar self, Translator other) {
    return MultiVector(vec2(self.g0_, 0.0) - vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_sub_antiScalar(Transflector self, AntiScalar other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), self.g1_);
}

MultiVector transflector_sub_dualNum(Transflector self, DualNum other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), self.g1_);
}

Flector transflector_sub_flector(Transflector self, Flector other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_, self.g1_ - other.g1_);
}

Transflector transflector_sub_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return Transflector(self.g0_ - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g1_ - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Transflector transflector_sub_horizon(Transflector self, Horizon other) {
    return Transflector(self.g0_, self.g1_ - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector transflector_sub_line(Transflector self, Line other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - other.g0_, vec3(0.0) - other.g1_, self.g1_);
}

MultiVector transflector_sub_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0) - other.g0_, self.g1_);
}

MultiVector transflector_sub_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return MultiVector(vec2(0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - other.g0_, vec3(0.0), self.g1_);
}

MultiVector transflector_sub_motor(Transflector self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - other.g1_, self.g1_);
}

MultiVector transflector_sub_multiVector(Transflector self, MultiVector other) {
    return MultiVector(vec2(0.0) - other.g0_, vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(0.0) - other.g3_, self.g1_ - other.g4_);
}

MultiVector transflector_sub_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_.x, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(0.0) - other.g2_, self.g1_ - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector transflector_sub_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.y), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(0.0), self.g1_ - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Flector transflector_sub_origin(Transflector self, Origin other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - vec4(0.0, 0.0, 0.0, other.g0_), self.g1_);
}

Transflector transflector_sub_plane(Transflector self, Plane other) {
    return Transflector(self.g0_, self.g1_ - other.g0_);
}

Transflector transflector_sub_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return Transflector(self.g0_, self.g1_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector transflector_sub_point(Transflector self, Point other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0) - other.g0_, self.g1_);
}

Transflector transflector_sub_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return Transflector(self.g0_ - other.g0_, self.g1_);
}

MultiVector transflector_sub_rotor(Transflector self, Rotor other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), self.g1_);
}

MultiVector transflector_sub_scalar(Transflector self, Scalar other) {
    return MultiVector(vec2(0.0) - vec2(other.g0_, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0), self.g1_);
}

Transflector transflector_sub_transflector(Transflector self, Transflector other) {
    return Transflector(self.g0_ - other.g0_, self.g1_ - other.g1_);
}

MultiVector transflector_sub_translator(Transflector self, Translator other) {
    return MultiVector(vec2(0.0) - vec2(0.0, other.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g1_);
}

Translator translator_sub_antiScalar(Translator self, AntiScalar other) {
    return Translator(self.g0_ - vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector translator_sub_dualNum(Translator self, DualNum other) {
    return MultiVector(vec2(0.0, self.g0_.w) - other.g0_, vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector translator_sub_flector(Translator self, Flector other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - other.g0_, vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0) - other.g1_);
}

MultiVector translator_sub_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector translator_sub_horizon(Translator self, Horizon other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_));
}

Motor translator_sub_line(Translator self, Line other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_.w) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g1_);
}

Translator translator_sub_lineAtInfinity(Translator self, LineAtInfinity other) {
    return Translator(self.g0_ - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Motor translator_sub_lineAtOrigin(Translator self, LineAtOrigin other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_.w) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

Motor translator_sub_motor(Translator self, Motor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_.w) - other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g1_);
}

MultiVector translator_sub_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(0.0, self.g0_.w) - other.g0_, vec4(0.0) - other.g1_, vec3(0.0) - other.g2_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g3_, vec4(0.0) - other.g4_);
}

MultiVector translator_sub_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w) - vec2(other.g0_.x, 0.0), vec4(0.0) - vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) - other.g2_, vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVector translator_sub_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0_.w) - vec2(0.0, other.g0_.y), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(0.0) - other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0) - vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

MultiVector translator_sub_origin(Translator self, Origin other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector translator_sub_plane(Translator self, Plane other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0) - other.g0_);
}

MultiVector translator_sub_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector translator_sub_point(Translator self, Point other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - other.g0_, vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector translator_sub_pointAtInfinity(Translator self, PointAtInfinity other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

Motor translator_sub_rotor(Translator self, Rotor other) {
    return Motor(vec4(0.0, 0.0, 0.0, self.g0_.w) - other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

MultiVector translator_sub_scalar(Translator self, Scalar other) {
    return MultiVector(vec2(0.0, self.g0_.w) - vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector translator_sub_transflector(Translator self, Transflector other) {
    return MultiVector(vec2(0.0, self.g0_.w), vec4(0.0) - vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0) - other.g1_);
}

Translator translator_sub_translator(Translator self, Translator other) {
    return Translator(self.g0_ - other.g0_);
}

AntiScalar antiScalar_antiWedgeDot_antiScalar(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

DualNum antiScalar_antiWedgeDot_dualNum(AntiScalar self, DualNum other) {
    return DualNum(vec2(self.g0_) * other.g0_);
}

Flector antiScalar_antiWedgeDot_flector(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

FlectorAtInfinity antiScalar_antiWedgeDot_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

Horizon antiScalar_antiWedgeDot_horizon(AntiScalar self, Horizon other) {
    return Horizon(self.g0_ * other.g0_);
}

Line antiScalar_antiWedgeDot_line(AntiScalar self, Line other) {
    return Line(vec3(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

LineAtInfinity antiScalar_antiWedgeDot_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtOrigin antiScalar_antiWedgeDot_lineAtOrigin(AntiScalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Motor antiScalar_antiWedgeDot_motor(AntiScalar self, Motor other) {
    return Motor(vec4(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

MultiVector antiScalar_antiWedgeDot_multiVector(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g3_, vec4(self.g0_) * other.g4_);
}

MultiVectorAtInfinity antiScalar_antiWedgeDot_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

MultiVectorAtOrigin antiScalar_antiWedgeDot_multiVectorAtOrigin(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Origin antiScalar_antiWedgeDot_origin(AntiScalar self, Origin other) {
    return Origin(self.g0_ * other.g0_);
}

Plane antiScalar_antiWedgeDot_plane(AntiScalar self, Plane other) {
    return Plane(vec4(self.g0_) * other.g0_);
}

PlaneAtOrigin antiScalar_antiWedgeDot_planeAtOrigin(AntiScalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Point antiScalar_antiWedgeDot_point(AntiScalar self, Point other) {
    return Point(vec4(self.g0_) * other.g0_);
}

PointAtInfinity antiScalar_antiWedgeDot_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

Rotor antiScalar_antiWedgeDot_rotor(AntiScalar self, Rotor other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

Scalar antiScalar_antiWedgeDot_scalar(AntiScalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Transflector antiScalar_antiWedgeDot_transflector(AntiScalar self, Transflector other) {
    return Transflector(vec3(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

Translator antiScalar_antiWedgeDot_translator(AntiScalar self, Translator other) {
    return Translator(vec4(self.g0_) * other.g0_);
}

DualNum dualNum_antiWedgeDot_antiScalar(DualNum self, AntiScalar other) {
    return DualNum(self.g0_ * vec2(other.g0_));
}

DualNum dualNum_antiWedgeDot_dualNum(DualNum self, DualNum other) {
    return DualNum(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_);
}

Flector dualNum_antiWedgeDot_flector(DualNum self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g0_.y) * other.g1_);
}

FlectorAtInfinity dualNum_antiWedgeDot_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.y) * other.g0_);
}

Horizon dualNum_antiWedgeDot_horizon(DualNum self, Horizon other) {
    return Horizon(self.g0_.y * other.g0_);
}

Line dualNum_antiWedgeDot_line(DualNum self, Line other) {
    return Line(vec3(self.g0_.y) * other.g0_, vec3(self.g0_.x) * other.g0_ + vec3(self.g0_.y) * other.g1_);
}

LineAtInfinity dualNum_antiWedgeDot_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.y) * other.g0_);
}

Line dualNum_antiWedgeDot_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return Line(vec3(self.g0_.y) * other.g0_, vec3(self.g0_.x) * other.g0_);
}

MultiVector dualNum_antiWedgeDot_motor(DualNum self, Motor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g0_.y) * other.g1_, vec4(0.0));
}

MultiVector dualNum_antiWedgeDot_multiVector(DualNum self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(-other.g4_.x, -other.g4_.y, -other.g4_.z, 0.0) + vec4(self.g0_.y) * other.g1_, vec3(self.g0_.y) * other.g2_, vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g3_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g0_.y) * other.g4_);
}

MultiVectorAtInfinity dualNum_antiWedgeDot_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_, vec3(self.g0_.y) * other.g2_);
}

MultiVector dualNum_antiWedgeDot_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ * vec2(other.g0_.y), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(-other.g2_.x, -other.g2_.y, -other.g2_.z, other.g0_.x), vec3(self.g0_.y) * other.g1_, vec3(self.g0_.x) * other.g1_, vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g0_.x));
}

Flector dualNum_antiWedgeDot_origin(DualNum self, Origin other) {
    return Flector(vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

Transflector dualNum_antiWedgeDot_plane(DualNum self, Plane other) {
    return Transflector(vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y) * other.g0_);
}

Transflector dualNum_antiWedgeDot_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return Transflector(vec3(0.0) - vec3(self.g0_.x) * other.g0_, vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector dualNum_antiWedgeDot_point(DualNum self, Point other) {
    return Flector(vec4(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.w));
}

PointAtInfinity dualNum_antiWedgeDot_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.y) * other.g0_);
}

MultiVector dualNum_antiWedgeDot_rotor(DualNum self, Rotor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Scalar dualNum_antiWedgeDot_scalar(DualNum self, Scalar other) {
    return Scalar(self.g0_.y * other.g0_);
}

Transflector dualNum_antiWedgeDot_transflector(DualNum self, Transflector other) {
    return Transflector(vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g0_.y) * other.g0_, vec4(self.g0_.y) * other.g1_);
}

MultiVector dualNum_antiWedgeDot_translator(DualNum self, Translator other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Flector flector_antiWedgeDot_antiScalar(Flector self, AntiScalar other) {
    return Flector(self.g0_ * vec4(other.g0_), self.g1_ * vec4(other.g0_));
}

Flector flector_antiWedgeDot_dualNum(Flector self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.y) + self.g1_.xyzx * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + self.g1_ * vec4(other.g0_.y));
}

MultiVector flector_antiWedgeDot_flector(Flector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) - vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity flector_antiWedgeDot_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtInfinity flector_antiWedgeDot_horizon(Flector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

Flector flector_antiWedgeDot_line(Flector self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity flector_antiWedgeDot_lineAtInfinity(Flector self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector flector_antiWedgeDot_lineAtOrigin(Flector self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector flector_antiWedgeDot_motor(Flector self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector flector_antiWedgeDot_multiVector(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) - vec2(self.g0_.w) * vec2(other.g4_.w, other.g1_.w) + vec2(self.g1_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g1_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, 0.0) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtInfinity flector_antiWedgeDot_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * other.g0_.yx * vec2(-1.0, 1.0) + vec2(self.g1_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.w) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(0.0) - vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVector flector_antiWedgeDot_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) - vec2(self.g0_.z, self.g0_.w) * vec2(other.g2_.z, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, other.g2_.y) + vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.x, other.g2_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g0_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(0.0) - vec3(self.g0_.w) * other.g2_ + vec3(self.g1_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g1_.w) * other.g2_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g1_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y));
}

MultiVector flector_antiWedgeDot_origin(Flector self, Origin other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, -other.g0_) + vec2(self.g1_.w) * vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_), vec4(0.0));
}

MultiVector flector_antiWedgeDot_plane(Flector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_antiWedgeDot_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

MultiVector flector_antiWedgeDot_point(Flector self, Point other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, -other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity flector_antiWedgeDot_pointAtInfinity(Flector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector flector_antiWedgeDot_rotor(Flector self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g0_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g1_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

FlectorAtInfinity flector_antiWedgeDot_scalar(Flector self, Scalar other) {
    return FlectorAtInfinity(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_) + self.g1_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

MultiVector flector_antiWedgeDot_transflector(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) - vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Flector flector_antiWedgeDot_translator(Flector self, Translator other) {
    return Flector(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

FlectorAtInfinity flectorAtInfinity_antiWedgeDot_antiScalar(FlectorAtInfinity self, AntiScalar other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

FlectorAtInfinity flectorAtInfinity_antiWedgeDot_dualNum(FlectorAtInfinity self, DualNum other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity flectorAtInfinity_antiWedgeDot_flector(FlectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

FlectorAtInfinity flectorAtInfinity_antiWedgeDot_line(FlectorAtInfinity self, Line other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

FlectorAtInfinity flectorAtInfinity_antiWedgeDot_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

FlectorAtInfinity flectorAtInfinity_antiWedgeDot_motor(FlectorAtInfinity self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_antiWedgeDot_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g4_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g4_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g4_.z, other.g2_.z) + vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) + vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z));
}

MultiVectorAtInfinity flectorAtInfinity_antiWedgeDot_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_);
}

MultiVectorAtInfinity flectorAtInfinity_antiWedgeDot_origin(FlectorAtInfinity self, Origin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(other.g0_, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

MultiVectorAtInfinity flectorAtInfinity_antiWedgeDot_plane(FlectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity flectorAtInfinity_antiWedgeDot_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_antiWedgeDot_point(FlectorAtInfinity self, Point other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w));
}

FlectorAtInfinity flectorAtInfinity_antiWedgeDot_rotor(FlectorAtInfinity self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_antiWedgeDot_transflector(FlectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

FlectorAtInfinity flectorAtInfinity_antiWedgeDot_translator(FlectorAtInfinity self, Translator other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.w));
}

Horizon horizon_antiWedgeDot_antiScalar(Horizon self, AntiScalar other) {
    return Horizon(self.g0_ * other.g0_);
}

Horizon horizon_antiWedgeDot_dualNum(Horizon self, DualNum other) {
    return Horizon(self.g0_ * other.g0_.y);
}

MultiVectorAtInfinity horizon_antiWedgeDot_flector(Horizon self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

PointAtInfinity horizon_antiWedgeDot_line(Horizon self, Line other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

PointAtInfinity horizon_antiWedgeDot_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

FlectorAtInfinity horizon_antiWedgeDot_motor(Horizon self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

MultiVectorAtInfinity horizon_antiWedgeDot_multiVector(Horizon self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g1_.w, other.g0_.y), vec3(self.g0_) * other.g2_, vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z));
}

MultiVectorAtInfinity horizon_antiWedgeDot_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Scalar horizon_antiWedgeDot_origin(Horizon self, Origin other) {
    return Scalar(self.g0_ * other.g0_);
}

LineAtInfinity horizon_antiWedgeDot_plane(Horizon self, Plane other) {
    return LineAtInfinity(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

LineAtInfinity horizon_antiWedgeDot_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

Scalar horizon_antiWedgeDot_point(Horizon self, Point other) {
    return Scalar(self.g0_ * other.g0_.w);
}

FlectorAtInfinity horizon_antiWedgeDot_rotor(Horizon self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

LineAtInfinity horizon_antiWedgeDot_transflector(Horizon self, Transflector other) {
    return LineAtInfinity(vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

Horizon horizon_antiWedgeDot_translator(Horizon self, Translator other) {
    return Horizon(self.g0_ * other.g0_.w);
}

Line line_antiWedgeDot_antiScalar(Line self, AntiScalar other) {
    return Line(self.g0_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

Line line_antiWedgeDot_dualNum(Line self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.y), self.g0_ * vec3(other.g0_.x) + self.g1_ * vec3(other.g0_.y));
}

Flector line_antiWedgeDot_flector(Line self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

FlectorAtInfinity line_antiWedgeDot_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity line_antiWedgeDot_horizon(Line self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector line_antiWedgeDot_line(Line self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity line_antiWedgeDot_lineAtInfinity(Line self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector line_antiWedgeDot_lineAtOrigin(Line self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVector line_antiWedgeDot_motor(Line self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

MultiVector line_antiWedgeDot_multiVector(Line self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g1_.x) * vec4(-other.g1_.w, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g4_.z, -other.g1_.w, -other.g4_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g4_.y, other.g4_.x, -other.g1_.w, 0.0), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g4_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g4_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g4_.z));
}

MultiVectorAtInfinity line_antiWedgeDot_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVector line_antiWedgeDot_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.x) * vec4(-other.g0_.x, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g2_.z, -other.g0_.x, -other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g2_.y, other.g2_.x, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g2_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g2_.z));
}

Transflector line_antiWedgeDot_origin(Line self, Origin other) {
    return Transflector(vec3(0.0) - self.g1_ * vec3(other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector line_antiWedgeDot_plane(Line self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

Flector line_antiWedgeDot_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

Transflector line_antiWedgeDot_point(Line self, Point other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) - self.g1_ * vec3(other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity line_antiWedgeDot_pointAtInfinity(Line self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector line_antiWedgeDot_rotor(Line self, Rotor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

LineAtInfinity line_antiWedgeDot_scalar(Line self, Scalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

Flector line_antiWedgeDot_transflector(Line self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

MultiVector line_antiWedgeDot_translator(Line self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

LineAtInfinity lineAtInfinity_antiWedgeDot_antiScalar(LineAtInfinity self, AntiScalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

LineAtInfinity lineAtInfinity_antiWedgeDot_dualNum(LineAtInfinity self, DualNum other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.y));
}

FlectorAtInfinity lineAtInfinity_antiWedgeDot_flector(LineAtInfinity self, Flector other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, other.g1_.z));
}

MultiVectorAtInfinity lineAtInfinity_antiWedgeDot_line(LineAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity lineAtInfinity_antiWedgeDot_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity lineAtInfinity_antiWedgeDot_motor(LineAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity lineAtInfinity_antiWedgeDot_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(-other.g2_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(-other.g2_.z, other.g4_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y));
}

MultiVectorAtInfinity lineAtInfinity_antiWedgeDot_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

PointAtInfinity lineAtInfinity_antiWedgeDot_origin(LineAtInfinity self, Origin other) {
    return PointAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

FlectorAtInfinity lineAtInfinity_antiWedgeDot_plane(LineAtInfinity self, Plane other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

FlectorAtInfinity lineAtInfinity_antiWedgeDot_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

PointAtInfinity lineAtInfinity_antiWedgeDot_point(LineAtInfinity self, Point other) {
    return PointAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity lineAtInfinity_antiWedgeDot_rotor(LineAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

FlectorAtInfinity lineAtInfinity_antiWedgeDot_transflector(LineAtInfinity self, Transflector other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, other.g1_.z));
}

LineAtInfinity lineAtInfinity_antiWedgeDot_translator(LineAtInfinity self, Translator other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.w));
}

LineAtOrigin lineAtOrigin_antiWedgeDot_antiScalar(LineAtOrigin self, AntiScalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

Line lineAtOrigin_antiWedgeDot_dualNum(LineAtOrigin self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.y), self.g0_ * vec3(other.g0_.x));
}

Flector lineAtOrigin_antiWedgeDot_flector(LineAtOrigin self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity lineAtOrigin_antiWedgeDot_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity lineAtOrigin_antiWedgeDot_horizon(LineAtOrigin self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector lineAtOrigin_antiWedgeDot_line(LineAtOrigin self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity lineAtOrigin_antiWedgeDot_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Rotor lineAtOrigin_antiWedgeDot_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector lineAtOrigin_antiWedgeDot_motor(LineAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector lineAtOrigin_antiWedgeDot_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity lineAtOrigin_antiWedgeDot_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin lineAtOrigin_antiWedgeDot_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin lineAtOrigin_antiWedgeDot_origin(LineAtOrigin self, Origin other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Flector lineAtOrigin_antiWedgeDot_plane(LineAtOrigin self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector lineAtOrigin_antiWedgeDot_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Transflector lineAtOrigin_antiWedgeDot_point(LineAtOrigin self, Point other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity lineAtOrigin_antiWedgeDot_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Rotor lineAtOrigin_antiWedgeDot_rotor(LineAtOrigin self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtInfinity lineAtOrigin_antiWedgeDot_scalar(LineAtOrigin self, Scalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

Flector lineAtOrigin_antiWedgeDot_transflector(LineAtOrigin self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector lineAtOrigin_antiWedgeDot_translator(LineAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Motor motor_antiWedgeDot_antiScalar(Motor self, AntiScalar other) {
    return Motor(self.g0_ * vec4(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector motor_antiWedgeDot_dualNum(Motor self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x) + self.g1_ * vec3(other.g0_.y), vec4(0.0));
}

Flector motor_antiWedgeDot_flector(Motor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * other.g1_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

FlectorAtInfinity motor_antiWedgeDot_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

FlectorAtInfinity motor_antiWedgeDot_horizon(Motor self, Horizon other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector motor_antiWedgeDot_line(Motor self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity motor_antiWedgeDot_lineAtInfinity(Motor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_);
}

MultiVector motor_antiWedgeDot_lineAtOrigin(Motor self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVector motor_antiWedgeDot_motor(Motor self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

MultiVector motor_antiWedgeDot_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g0_.w) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * other.g1_ + vec4(self.g1_.x) * vec4(-other.g1_.w, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g4_.z, -other.g1_.w, -other.g4_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g4_.y, other.g4_.x, -other.g1_.w, 0.0), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g0_.w) * other.g3_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g4_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g4_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g4_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g4_.z));
}

MultiVectorAtInfinity motor_antiWedgeDot_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_);
}

MultiVector motor_antiWedgeDot_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x) * vec4(-other.g0_.x, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g2_.z, -other.g0_.x, -other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g2_.y, other.g2_.x, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, 0.0) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g2_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g2_.z));
}

Flector motor_antiWedgeDot_origin(Motor self, Origin other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0), self.g0_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector motor_antiWedgeDot_plane(Motor self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

Flector motor_antiWedgeDot_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

Flector motor_antiWedgeDot_point(Motor self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity motor_antiWedgeDot_pointAtInfinity(Motor self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector motor_antiWedgeDot_rotor(Motor self, Rotor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

MultiVectorAtInfinity motor_antiWedgeDot_scalar(Motor self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(other.g0_, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector motor_antiWedgeDot_transflector(Motor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * other.g1_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

MultiVector motor_antiWedgeDot_translator(Motor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

MultiVector multiVector_antiWedgeDot_antiScalar(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0_ * vec2(other.g0_), self.g1_ * vec4(other.g0_), self.g2_ * vec3(other.g0_), self.g3_ * vec3(other.g0_), self.g4_ * vec4(other.g0_));
}

MultiVector multiVector_antiWedgeDot_dualNum(MultiVector self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_, self.g1_ * vec4(other.g0_.y) + self.g4_.xyzx * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), self.g2_ * vec3(other.g0_.y), self.g2_ * vec3(other.g0_.x) + self.g3_ * vec3(other.g0_.y), vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + self.g4_ * vec4(other.g0_.y));
}

MultiVector multiVector_antiWedgeDot_flector(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) - vec2(self.g1_.w) * vec2(other.g1_.w, other.g0_.w) + vec2(self.g4_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g4_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g4_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g0_.y) * other.g0_ + vec4(self.g2_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, 0.0), vec3(0.0) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g4_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g1_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g0_.y) * other.g1_ + vec4(self.g2_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

MultiVectorAtInfinity multiVector_antiWedgeDot_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtInfinity multiVector_antiWedgeDot_horizon(MultiVector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(0.0, other.g0_) + vec2(self.g1_.w) * vec2(-other.g0_, 0.0), self.g2_ * vec3(other.g0_), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_));
}

MultiVector multiVector_antiWedgeDot_line(MultiVector self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g2_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g2_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g2_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVectorAtInfinity multiVector_antiWedgeDot_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVector_antiWedgeDot_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVector multiVector_antiWedgeDot_motor(MultiVector self, Motor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) - vec2(self.g2_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g2_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g2_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g0_.y) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g3_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g4_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g4_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g4_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector multiVector_antiWedgeDot_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g4_.z, 0.0) - vec2(self.g1_.w) * vec2(other.g4_.w, other.g1_.w) - vec2(self.g2_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g2_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g2_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g3_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g4_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g4_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g4_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g4_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(-other.g4_.x, -other.g4_.y, -other.g4_.z, 0.0) + vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, 0.0) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y) + vec4(self.g2_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g3_.x) * vec4(-other.g1_.w, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g4_.z, -other.g1_.w, -other.g4_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g4_.y, other.g4_.x, -other.g1_.w, 0.0) + vec4(self.g4_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g4_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g4_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g4_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g0_.y) * other.g2_ - vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g4_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g4_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g3_ + vec3(self.g1_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g1_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g1_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g2_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g2_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g3_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g3_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g3_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g4_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g0_.y) * other.g4_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x) + vec4(self.g2_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g4_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g4_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g4_.z) + vec4(self.g4_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g4_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g4_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g4_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtInfinity multiVector_antiWedgeDot_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.w) * other.g0_.yx * vec2(-1.0, 1.0) - vec2(self.g2_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g4_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g4_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g4_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.w) * other.g2_ + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g4_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g4_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.y) * other.g2_ - vec3(self.g1_.w) * other.g1_ + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g4_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVector multiVector_antiWedgeDot_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ * vec2(other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) - vec2(self.g1_.z, self.g1_.w) * vec2(other.g2_.z, other.g0_.x) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g3_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, other.g2_.x) + vec2(self.g4_.y) * vec2(0.0, other.g2_.y) + vec2(self.g4_.w, self.g4_.z) * vec2(other.g0_.x, other.g2_.z), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(-other.g2_.x, -other.g2_.y, -other.g2_.z, other.g0_.x) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g1_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g3_.x) * vec4(-other.g0_.x, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g2_.z, -other.g0_.x, -other.g2_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g2_.y, other.g2_.x, -other.g0_.x, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g4_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.y) * other.g1_ - vec3(self.g1_.w) * other.g2_ + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g4_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g4_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g3_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g3_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g3_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g4_.w) * other.g2_, vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z) + vec4(self.g2_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g2_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g2_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g2_.z) + vec4(self.g4_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g4_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y));
}

MultiVector multiVector_antiWedgeDot_origin(MultiVector self, Origin other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, -other.g0_) + vec2(self.g4_.w) * vec2(other.g0_, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_) + vec4(self.g3_.x, self.g3_.y, self.g3_.z, self.g3_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_) + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

MultiVector multiVector_antiWedgeDot_plane(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g4_.x) * vec2(0.0, other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w) + vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

MultiVector multiVector_antiWedgeDot_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g4_.w) * other.g0_, vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

MultiVector multiVector_antiWedgeDot_point(MultiVector self, Point other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, -other.g0_.w) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x, self.g3_.y, self.g3_.z, self.g3_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVector_antiWedgeDot_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVector multiVector_antiWedgeDot_rotor(MultiVector self, Rotor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g1_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g3_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g4_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g4_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

MultiVectorAtInfinity multiVector_antiWedgeDot_scalar(MultiVector self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(other.g0_, 0.0) + vec2(self.g1_.w) * vec2(0.0, other.g0_), vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVector_antiWedgeDot_transflector(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g4_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g4_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g4_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g4_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) - vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.y) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

MultiVector multiVector_antiWedgeDot_translator(MultiVector self, Translator other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), self.g1_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g1_.w) * other.g0_ + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g2_ * vec3(other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + self.g3_ * vec3(other.g0_.w), vec4(self.g4_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g4_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g4_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.y), self.g1_ * vec3(other.g0_.y), self.g2_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, other.g1_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_line(MultiVectorAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.y, -other.g1_.w) + vec2(self.g0_.y) * vec2(other.g1_.w, other.g0_.y) - vec2(self.g1_.x) * vec2(other.g4_.x, other.g2_.x) - vec2(self.g1_.y) * vec2(other.g4_.y, other.g2_.y) - vec2(self.g1_.z) * vec2(other.g4_.z, other.g2_.z) + vec2(self.g2_.x) * vec2(-other.g2_.x, other.g4_.x) + vec2(self.g2_.y) * vec2(-other.g2_.y, other.g4_.y) + vec2(self.g2_.z) * vec2(-other.g2_.z, other.g4_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g2_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g2_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g1_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g1_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g1_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * other.g0_.yx * vec2(1.0, -1.0) + vec2(self.g0_.y) * other.g0_ - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g2_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g2_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g2_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(0.0) - vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g2_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g2_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_origin(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(other.g0_), vec3(0.0) - self.g2_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, other.g0_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, other.g0_.z), vec3(0.0) - vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_point(MultiVectorAtInfinity self, Point other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(other.g0_.w), vec3(0.0) - self.g2_ * vec3(other.g0_.w), self.g1_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, other.g1_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedgeDot_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w), self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedgeDot_antiScalar(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_antiWedgeDot_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVector(vec2(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), self.g1_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector multiVectorAtOrigin_antiWedgeDot_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.w, other.g0_.w) + vec2(self.g2_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g2_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g2_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedgeDot_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(-other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedgeDot_horizon(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(-other.g0_), self.g1_ * vec3(other.g0_), vec3(0.0) - self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_antiWedgeDot_line(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g0_.x) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedgeDot_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedgeDot_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtOrigin_antiWedgeDot_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g0_.x) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w) + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z));
}

MultiVector multiVectorAtOrigin_antiWedgeDot_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g4_.w, other.g1_.w) + vec2(self.g0_.y) * other.g0_ - vec2(self.g1_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g1_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g1_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g2_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g2_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g2_.z) * vec2(other.g1_.z, other.g4_.z), vec4(self.g0_.x) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y) + vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g2_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g2_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g2_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g2_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g2_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g0_.y) * other.g3_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g1_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g1_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w), vec4(self.g0_.x) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x) + vec4(self.g0_.y) * other.g4_ + vec4(self.g1_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g2_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g2_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g2_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedgeDot_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * other.g0_.yx * vec2(-1.0, 1.0) + vec2(self.g0_.y) * other.g0_ - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g2_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g2_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g2_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(0.0) - vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedgeDot_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_.yx * vec2(1.0, -1.0) + vec2(self.g0_.y) * other.g0_ - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g2_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g2_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g2_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(0.0) - vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g2_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g2_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedgeDot_origin(MultiVectorAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(other.g0_), vec3(0.0) - self.g2_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_antiWedgeDot_plane(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.w, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, other.g0_.z), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - self.g2_ * vec3(other.g0_.w), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedgeDot_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, other.g0_.z), vec3(0.0) - vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtOrigin_antiWedgeDot_point(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.w) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec3(0.0) - self.g2_ * vec3(other.g0_.w), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedgeDot_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedgeDot_rotor(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedgeDot_scalar(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(other.g0_), self.g2_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_antiWedgeDot_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.w, 0.0) + vec2(self.g2_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g2_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g2_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector multiVectorAtOrigin_antiWedgeDot_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g1_ * vec3(other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Origin origin_antiWedgeDot_antiScalar(Origin self, AntiScalar other) {
    return Origin(self.g0_ * other.g0_);
}

Flector origin_antiWedgeDot_dualNum(Origin self, DualNum other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.y), vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVector origin_antiWedgeDot_flector(Origin self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity origin_antiWedgeDot_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(-other.g0_.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Scalar origin_antiWedgeDot_horizon(Origin self, Horizon other) {
    return Scalar(0.0 - self.g0_ * other.g0_);
}

Transflector origin_antiWedgeDot_line(Origin self, Line other) {
    return Transflector(vec3(self.g0_) * other.g1_, vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity origin_antiWedgeDot_lineAtInfinity(Origin self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

PlaneAtOrigin origin_antiWedgeDot_lineAtOrigin(Origin self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Flector origin_antiWedgeDot_motor(Origin self, Motor other) {
    return Flector(vec4(self.g0_) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector origin_antiWedgeDot_multiVector(Origin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(0.0) - vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVectorAtInfinity origin_antiWedgeDot_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_) * other.g2_, vec3(0.0) - vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin origin_antiWedgeDot_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g1_);
}

AntiScalar origin_antiWedgeDot_origin(Origin self, Origin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_);
}

MultiVector origin_antiWedgeDot_plane(Origin self, Plane other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin origin_antiWedgeDot_planeAtOrigin(Origin self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Translator origin_antiWedgeDot_point(Origin self, Point other) {
    return Translator(vec4(0.0) - vec4(self.g0_) * other.g0_);
}

LineAtInfinity origin_antiWedgeDot_pointAtInfinity(Origin self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Flector origin_antiWedgeDot_rotor(Origin self, Rotor other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Horizon origin_antiWedgeDot_scalar(Origin self, Scalar other) {
    return Horizon(self.g0_ * other.g0_);
}

MultiVector origin_antiWedgeDot_transflector(Origin self, Transflector other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g1_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_) * other.g0_, vec4(0.0));
}

Point origin_antiWedgeDot_translator(Origin self, Translator other) {
    return Point(vec4(self.g0_) * other.g0_);
}

Plane plane_antiWedgeDot_antiScalar(Plane self, AntiScalar other) {
    return Plane(self.g0_ * vec4(other.g0_));
}

Transflector plane_antiWedgeDot_dualNum(Plane self, DualNum other) {
    return Transflector(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), self.g0_ * vec4(other.g0_.y));
}

MultiVector plane_antiWedgeDot_flector(Plane self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity plane_antiWedgeDot_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

LineAtInfinity plane_antiWedgeDot_horizon(Plane self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector plane_antiWedgeDot_line(Plane self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity plane_antiWedgeDot_lineAtInfinity(Plane self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector plane_antiWedgeDot_lineAtOrigin(Plane self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector plane_antiWedgeDot_motor(Plane self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector plane_antiWedgeDot_multiVector(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g0_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtInfinity plane_antiWedgeDot_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVector plane_antiWedgeDot_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.w, self.g0_.z) * vec2(other.g0_.x, other.g2_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.w) * other.g2_, vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g0_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y));
}

MultiVector plane_antiWedgeDot_origin(Plane self, Origin other) {
    return MultiVector(vec2(self.g0_.w) * vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_), vec3(0.0), vec4(0.0));
}

Motor plane_antiWedgeDot_plane(Plane self, Plane other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Motor plane_antiWedgeDot_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z), vec3(self.g0_.w) * other.g0_);
}

MultiVector plane_antiWedgeDot_point(Plane self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity plane_antiWedgeDot_pointAtInfinity(Plane self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector plane_antiWedgeDot_rotor(Plane self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g0_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

PointAtInfinity plane_antiWedgeDot_scalar(Plane self, Scalar other) {
    return PointAtInfinity(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

MultiVector plane_antiWedgeDot_transflector(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Transflector plane_antiWedgeDot_translator(Plane self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

PlaneAtOrigin planeAtOrigin_antiWedgeDot_antiScalar(PlaneAtOrigin self, AntiScalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Transflector planeAtOrigin_antiWedgeDot_dualNum(PlaneAtOrigin self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.x), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector planeAtOrigin_antiWedgeDot_flector(PlaneAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

MultiVectorAtInfinity planeAtOrigin_antiWedgeDot_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

LineAtInfinity planeAtOrigin_antiWedgeDot_horizon(PlaneAtOrigin self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Flector planeAtOrigin_antiWedgeDot_line(PlaneAtOrigin self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity planeAtOrigin_antiWedgeDot_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector planeAtOrigin_antiWedgeDot_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector planeAtOrigin_antiWedgeDot_motor(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z));
}

MultiVector planeAtOrigin_antiWedgeDot_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z));
}

MultiVectorAtInfinity planeAtOrigin_antiWedgeDot_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVectorAtOrigin planeAtOrigin_antiWedgeDot_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

LineAtOrigin planeAtOrigin_antiWedgeDot_origin(PlaneAtOrigin self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Motor planeAtOrigin_antiWedgeDot_plane(PlaneAtOrigin self, Plane other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z), vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

Rotor planeAtOrigin_antiWedgeDot_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

MultiVector planeAtOrigin_antiWedgeDot_point(PlaneAtOrigin self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity planeAtOrigin_antiWedgeDot_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector planeAtOrigin_antiWedgeDot_rotor(PlaneAtOrigin self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0));
}

PointAtInfinity planeAtOrigin_antiWedgeDot_scalar(PlaneAtOrigin self, Scalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector planeAtOrigin_antiWedgeDot_transflector(PlaneAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

Transflector planeAtOrigin_antiWedgeDot_translator(PlaneAtOrigin self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Point point_antiWedgeDot_antiScalar(Point self, AntiScalar other) {
    return Point(self.g0_ * vec4(other.g0_));
}

Flector point_antiWedgeDot_dualNum(Point self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.y), vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVector point_antiWedgeDot_flector(Point self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) - vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity point_antiWedgeDot_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Scalar point_antiWedgeDot_horizon(Point self, Horizon other) {
    return Scalar(0.0 - self.g0_.w * other.g0_);
}

Transflector point_antiWedgeDot_line(Point self, Line other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

PointAtInfinity point_antiWedgeDot_lineAtInfinity(Point self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

Transflector point_antiWedgeDot_lineAtOrigin(Point self, LineAtOrigin other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector point_antiWedgeDot_motor(Point self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

MultiVector point_antiWedgeDot_multiVector(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) - vec2(self.g0_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, 0.0) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVectorAtInfinity point_antiWedgeDot_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_.w) * other.g2_, vec3(0.0) - vec3(self.g0_.w) * other.g1_);
}

MultiVector point_antiWedgeDot_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) - vec2(self.g0_.z, self.g0_.w) * vec2(other.g2_.z, other.g0_.x), vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g0_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y), vec3(0.0) - vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z));
}

Translator point_antiWedgeDot_origin(Point self, Origin other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

MultiVector point_antiWedgeDot_plane(Point self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVector point_antiWedgeDot_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Translator point_antiWedgeDot_point(Point self, Point other) {
    return Translator(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) - vec4(self.g0_.w) * other.g0_);
}

LineAtInfinity point_antiWedgeDot_pointAtInfinity(Point self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_.w) * other.g0_);
}

Flector point_antiWedgeDot_rotor(Point self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g0_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

Horizon point_antiWedgeDot_scalar(Point self, Scalar other) {
    return Horizon(self.g0_.w * other.g0_);
}

MultiVector point_antiWedgeDot_transflector(Point self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) - vec3(self.g0_.w) * other.g0_, vec4(0.0));
}

Point point_antiWedgeDot_translator(Point self, Translator other) {
    return Point(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity pointAtInfinity_antiWedgeDot_antiScalar(PointAtInfinity self, AntiScalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

PointAtInfinity pointAtInfinity_antiWedgeDot_dualNum(PointAtInfinity self, DualNum other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity pointAtInfinity_antiWedgeDot_flector(PointAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w));
}

FlectorAtInfinity pointAtInfinity_antiWedgeDot_line(PointAtInfinity self, Line other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

FlectorAtInfinity pointAtInfinity_antiWedgeDot_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

FlectorAtInfinity pointAtInfinity_antiWedgeDot_motor(PointAtInfinity self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity pointAtInfinity_antiWedgeDot_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g4_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g4_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g4_.z, other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w));
}

MultiVectorAtInfinity pointAtInfinity_antiWedgeDot_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

LineAtInfinity pointAtInfinity_antiWedgeDot_origin(PointAtInfinity self, Origin other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVectorAtInfinity pointAtInfinity_antiWedgeDot_plane(PointAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity pointAtInfinity_antiWedgeDot_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

LineAtInfinity pointAtInfinity_antiWedgeDot_point(PointAtInfinity self, Point other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.w));
}

FlectorAtInfinity pointAtInfinity_antiWedgeDot_rotor(PointAtInfinity self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity pointAtInfinity_antiWedgeDot_transflector(PointAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

PointAtInfinity pointAtInfinity_antiWedgeDot_translator(PointAtInfinity self, Translator other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

Rotor rotor_antiWedgeDot_antiScalar(Rotor self, AntiScalar other) {
    return Rotor(self.g0_ * vec4(other.g0_));
}

MultiVector rotor_antiWedgeDot_dualNum(Rotor self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec4(0.0));
}

Flector rotor_antiWedgeDot_flector(Rotor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity rotor_antiWedgeDot_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

FlectorAtInfinity rotor_antiWedgeDot_horizon(Rotor self, Horizon other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector rotor_antiWedgeDot_line(Rotor self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity rotor_antiWedgeDot_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_);
}

Rotor rotor_antiWedgeDot_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector rotor_antiWedgeDot_motor(Rotor self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVector rotor_antiWedgeDot_multiVector(Rotor self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g0_.w) * other.g3_, vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity rotor_antiWedgeDot_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_);
}

MultiVectorAtOrigin rotor_antiWedgeDot_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_);
}

Flector rotor_antiWedgeDot_origin(Rotor self, Origin other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_), self.g0_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector rotor_antiWedgeDot_plane(Rotor self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_);
}

Flector rotor_antiWedgeDot_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector rotor_antiWedgeDot_point(Rotor self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity rotor_antiWedgeDot_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Rotor rotor_antiWedgeDot_rotor(Rotor self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity rotor_antiWedgeDot_scalar(Rotor self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(other.g0_, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector rotor_antiWedgeDot_transflector(Rotor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * other.g1_);
}

MultiVector rotor_antiWedgeDot_translator(Rotor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Scalar scalar_antiWedgeDot_antiScalar(Scalar self, AntiScalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Scalar scalar_antiWedgeDot_dualNum(Scalar self, DualNum other) {
    return Scalar(self.g0_ * other.g0_.y);
}

FlectorAtInfinity scalar_antiWedgeDot_flector(Scalar self, Flector other) {
    return FlectorAtInfinity(vec4(0.0) - vec4(self.g0_) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w));
}

LineAtInfinity scalar_antiWedgeDot_line(Scalar self, Line other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtInfinity scalar_antiWedgeDot_lineAtOrigin(Scalar self, LineAtOrigin other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

MultiVectorAtInfinity scalar_antiWedgeDot_motor(Scalar self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity scalar_antiWedgeDot_multiVector(Scalar self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.y, -other.g1_.w), vec3(0.0) - vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_) * other.g2_);
}

MultiVectorAtInfinity scalar_antiWedgeDot_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g1_);
}

Horizon scalar_antiWedgeDot_origin(Scalar self, Origin other) {
    return Horizon(0.0 - self.g0_ * other.g0_);
}

PointAtInfinity scalar_antiWedgeDot_plane(Scalar self, Plane other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

PointAtInfinity scalar_antiWedgeDot_planeAtOrigin(Scalar self, PlaneAtOrigin other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Horizon scalar_antiWedgeDot_point(Scalar self, Point other) {
    return Horizon(0.0 - self.g0_ * other.g0_.w);
}

MultiVectorAtInfinity scalar_antiWedgeDot_rotor(Scalar self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

PointAtInfinity scalar_antiWedgeDot_transflector(Scalar self, Transflector other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

Scalar scalar_antiWedgeDot_translator(Scalar self, Translator other) {
    return Scalar(self.g0_ * other.g0_.w);
}

Transflector transflector_antiWedgeDot_antiScalar(Transflector self, AntiScalar other) {
    return Transflector(self.g0_ * vec3(other.g0_), self.g1_ * vec4(other.g0_));
}

Transflector transflector_antiWedgeDot_dualNum(Transflector self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.y) + vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.x), self.g1_ * vec4(other.g0_.y));
}

MultiVector transflector_antiWedgeDot_flector(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity transflector_antiWedgeDot_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

LineAtInfinity transflector_antiWedgeDot_horizon(Transflector self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

Flector transflector_antiWedgeDot_line(Transflector self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity transflector_antiWedgeDot_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector transflector_antiWedgeDot_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector transflector_antiWedgeDot_motor(Transflector self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector transflector_antiWedgeDot_multiVector(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g1_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtInfinity transflector_antiWedgeDot_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVector transflector_antiWedgeDot_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, other.g2_.y) + vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.x, other.g2_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g1_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g1_.w) * other.g2_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g1_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y));
}

MultiVector transflector_antiWedgeDot_origin(Transflector self, Origin other) {
    return MultiVector(vec2(self.g1_.w) * vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), self.g0_ * vec3(other.g0_), vec4(0.0));
}

MultiVector transflector_antiWedgeDot_plane(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_antiWedgeDot_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

MultiVector transflector_antiWedgeDot_point(Transflector self, Point other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w), self.g0_ * vec3(other.g0_.w) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity transflector_antiWedgeDot_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector transflector_antiWedgeDot_rotor(Transflector self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g1_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

PointAtInfinity transflector_antiWedgeDot_scalar(Transflector self, Scalar other) {
    return PointAtInfinity(vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

MultiVector transflector_antiWedgeDot_transflector(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Transflector transflector_antiWedgeDot_translator(Transflector self, Translator other) {
    return Transflector(self.g0_ * vec3(other.g0_.w) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Translator translator_antiWedgeDot_antiScalar(Translator self, AntiScalar other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

MultiVector translator_antiWedgeDot_dualNum(Translator self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec4(0.0));
}

Flector translator_antiWedgeDot_flector(Translator self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity translator_antiWedgeDot_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.w) * other.g0_);
}

Horizon translator_antiWedgeDot_horizon(Translator self, Horizon other) {
    return Horizon(self.g0_.w * other.g0_);
}

MultiVector translator_antiWedgeDot_line(Translator self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

LineAtInfinity translator_antiWedgeDot_lineAtInfinity(Translator self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector translator_antiWedgeDot_lineAtOrigin(Translator self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVector translator_antiWedgeDot_motor(Translator self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVector translator_antiWedgeDot_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g4_.z, -other.g1_.w, -other.g4_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g4_.y, other.g4_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g3_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g4_.z) + vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity translator_antiWedgeDot_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

MultiVector translator_antiWedgeDot_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g1_.z, other.g0_.y), vec4(self.g0_.x) * vec4(-other.g0_.x, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g2_.z, -other.g0_.x, -other.g2_.x, 0.0) + self.g0_.zzzw * vec4(-other.g2_.y, other.g2_.x, -other.g0_.x, other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g2_.z));
}

Point translator_antiWedgeDot_origin(Translator self, Origin other) {
    return Point(self.g0_ * vec4(-other.g0_));
}

Transflector translator_antiWedgeDot_plane(Translator self, Plane other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * other.g0_);
}

Transflector translator_antiWedgeDot_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g0_.z));
}

Point translator_antiWedgeDot_point(Translator self, Point other) {
    return Point(self.g0_.xyzx * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity translator_antiWedgeDot_pointAtInfinity(Translator self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector translator_antiWedgeDot_rotor(Translator self, Rotor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

Scalar translator_antiWedgeDot_scalar(Translator self, Scalar other) {
    return Scalar(self.g0_.w * other.g0_);
}

Transflector translator_antiWedgeDot_transflector(Translator self, Transflector other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * other.g1_);
}

Translator translator_antiWedgeDot_translator(Translator self, Translator other) {
    return Translator(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

AntiScalar antiScalar_geometricAntiProduct_antiScalar(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

DualNum antiScalar_geometricAntiProduct_dualNum(AntiScalar self, DualNum other) {
    return DualNum(vec2(self.g0_) * other.g0_);
}

Flector antiScalar_geometricAntiProduct_flector(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

FlectorAtInfinity antiScalar_geometricAntiProduct_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

Horizon antiScalar_geometricAntiProduct_horizon(AntiScalar self, Horizon other) {
    return Horizon(self.g0_ * other.g0_);
}

Line antiScalar_geometricAntiProduct_line(AntiScalar self, Line other) {
    return Line(vec3(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

LineAtInfinity antiScalar_geometricAntiProduct_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtOrigin antiScalar_geometricAntiProduct_lineAtOrigin(AntiScalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Motor antiScalar_geometricAntiProduct_motor(AntiScalar self, Motor other) {
    return Motor(vec4(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

MultiVector antiScalar_geometricAntiProduct_multiVector(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g3_, vec4(self.g0_) * other.g4_);
}

MultiVectorAtInfinity antiScalar_geometricAntiProduct_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

MultiVectorAtOrigin antiScalar_geometricAntiProduct_multiVectorAtOrigin(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Origin antiScalar_geometricAntiProduct_origin(AntiScalar self, Origin other) {
    return Origin(self.g0_ * other.g0_);
}

Plane antiScalar_geometricAntiProduct_plane(AntiScalar self, Plane other) {
    return Plane(vec4(self.g0_) * other.g0_);
}

PlaneAtOrigin antiScalar_geometricAntiProduct_planeAtOrigin(AntiScalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Point antiScalar_geometricAntiProduct_point(AntiScalar self, Point other) {
    return Point(vec4(self.g0_) * other.g0_);
}

PointAtInfinity antiScalar_geometricAntiProduct_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

Rotor antiScalar_geometricAntiProduct_rotor(AntiScalar self, Rotor other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

Scalar antiScalar_geometricAntiProduct_scalar(AntiScalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Transflector antiScalar_geometricAntiProduct_transflector(AntiScalar self, Transflector other) {
    return Transflector(vec3(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

Translator antiScalar_geometricAntiProduct_translator(AntiScalar self, Translator other) {
    return Translator(vec4(self.g0_) * other.g0_);
}

DualNum dualNum_geometricAntiProduct_antiScalar(DualNum self, AntiScalar other) {
    return DualNum(self.g0_ * vec2(other.g0_));
}

DualNum dualNum_geometricAntiProduct_dualNum(DualNum self, DualNum other) {
    return DualNum(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_);
}

Flector dualNum_geometricAntiProduct_flector(DualNum self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g0_.y) * other.g1_);
}

FlectorAtInfinity dualNum_geometricAntiProduct_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.y) * other.g0_);
}

Horizon dualNum_geometricAntiProduct_horizon(DualNum self, Horizon other) {
    return Horizon(self.g0_.y * other.g0_);
}

Line dualNum_geometricAntiProduct_line(DualNum self, Line other) {
    return Line(vec3(self.g0_.y) * other.g0_, vec3(self.g0_.x) * other.g0_ + vec3(self.g0_.y) * other.g1_);
}

LineAtInfinity dualNum_geometricAntiProduct_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.y) * other.g0_);
}

Line dualNum_geometricAntiProduct_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return Line(vec3(self.g0_.y) * other.g0_, vec3(self.g0_.x) * other.g0_);
}

MultiVector dualNum_geometricAntiProduct_motor(DualNum self, Motor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g0_.y) * other.g1_, vec4(0.0));
}

MultiVector dualNum_geometricAntiProduct_multiVector(DualNum self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(-other.g4_.x, -other.g4_.y, -other.g4_.z, 0.0) + vec4(self.g0_.y) * other.g1_, vec3(self.g0_.y) * other.g2_, vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g3_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g0_.y) * other.g4_);
}

MultiVectorAtInfinity dualNum_geometricAntiProduct_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_, vec3(self.g0_.y) * other.g2_);
}

MultiVector dualNum_geometricAntiProduct_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ * vec2(other.g0_.y), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(-other.g2_.x, -other.g2_.y, -other.g2_.z, other.g0_.x), vec3(self.g0_.y) * other.g1_, vec3(self.g0_.x) * other.g1_, vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g0_.x));
}

Flector dualNum_geometricAntiProduct_origin(DualNum self, Origin other) {
    return Flector(vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

Transflector dualNum_geometricAntiProduct_plane(DualNum self, Plane other) {
    return Transflector(vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y) * other.g0_);
}

Transflector dualNum_geometricAntiProduct_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return Transflector(vec3(0.0) - vec3(self.g0_.x) * other.g0_, vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector dualNum_geometricAntiProduct_point(DualNum self, Point other) {
    return Flector(vec4(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.w));
}

PointAtInfinity dualNum_geometricAntiProduct_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.y) * other.g0_);
}

MultiVector dualNum_geometricAntiProduct_rotor(DualNum self, Rotor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Scalar dualNum_geometricAntiProduct_scalar(DualNum self, Scalar other) {
    return Scalar(self.g0_.y * other.g0_);
}

Transflector dualNum_geometricAntiProduct_transflector(DualNum self, Transflector other) {
    return Transflector(vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g0_.y) * other.g0_, vec4(self.g0_.y) * other.g1_);
}

MultiVector dualNum_geometricAntiProduct_translator(DualNum self, Translator other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Flector flector_geometricAntiProduct_antiScalar(Flector self, AntiScalar other) {
    return Flector(self.g0_ * vec4(other.g0_), self.g1_ * vec4(other.g0_));
}

Flector flector_geometricAntiProduct_dualNum(Flector self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.y) + self.g1_.xyzx * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + self.g1_ * vec4(other.g0_.y));
}

MultiVector flector_geometricAntiProduct_flector(Flector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) - vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity flector_geometricAntiProduct_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtInfinity flector_geometricAntiProduct_horizon(Flector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

Flector flector_geometricAntiProduct_line(Flector self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity flector_geometricAntiProduct_lineAtInfinity(Flector self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector flector_geometricAntiProduct_lineAtOrigin(Flector self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector flector_geometricAntiProduct_motor(Flector self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector flector_geometricAntiProduct_multiVector(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) - vec2(self.g0_.w) * vec2(other.g4_.w, other.g1_.w) + vec2(self.g1_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g1_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, 0.0) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtInfinity flector_geometricAntiProduct_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * other.g0_.yx * vec2(-1.0, 1.0) + vec2(self.g1_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.w) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(0.0) - vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVector flector_geometricAntiProduct_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) - vec2(self.g0_.z, self.g0_.w) * vec2(other.g2_.z, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, other.g2_.y) + vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.x, other.g2_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g0_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(0.0) - vec3(self.g0_.w) * other.g2_ + vec3(self.g1_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g1_.w) * other.g2_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g1_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y));
}

MultiVector flector_geometricAntiProduct_origin(Flector self, Origin other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, -other.g0_) + vec2(self.g1_.w) * vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_), vec4(0.0));
}

MultiVector flector_geometricAntiProduct_plane(Flector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_geometricAntiProduct_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

MultiVector flector_geometricAntiProduct_point(Flector self, Point other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, -other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity flector_geometricAntiProduct_pointAtInfinity(Flector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector flector_geometricAntiProduct_rotor(Flector self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g0_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g1_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

FlectorAtInfinity flector_geometricAntiProduct_scalar(Flector self, Scalar other) {
    return FlectorAtInfinity(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_) + self.g1_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

MultiVector flector_geometricAntiProduct_transflector(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) - vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Flector flector_geometricAntiProduct_translator(Flector self, Translator other) {
    return Flector(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiProduct_antiScalar(FlectorAtInfinity self, AntiScalar other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiProduct_dualNum(FlectorAtInfinity self, DualNum other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiProduct_flector(FlectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiProduct_line(FlectorAtInfinity self, Line other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiProduct_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiProduct_motor(FlectorAtInfinity self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiProduct_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g4_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g4_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g4_.z, other.g2_.z) + vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) + vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiProduct_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_);
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiProduct_origin(FlectorAtInfinity self, Origin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(other.g0_, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiProduct_plane(FlectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiProduct_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiProduct_point(FlectorAtInfinity self, Point other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiProduct_rotor(FlectorAtInfinity self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiProduct_transflector(FlectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiProduct_translator(FlectorAtInfinity self, Translator other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.w));
}

Horizon horizon_geometricAntiProduct_antiScalar(Horizon self, AntiScalar other) {
    return Horizon(self.g0_ * other.g0_);
}

Horizon horizon_geometricAntiProduct_dualNum(Horizon self, DualNum other) {
    return Horizon(self.g0_ * other.g0_.y);
}

MultiVectorAtInfinity horizon_geometricAntiProduct_flector(Horizon self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

PointAtInfinity horizon_geometricAntiProduct_line(Horizon self, Line other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

PointAtInfinity horizon_geometricAntiProduct_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

FlectorAtInfinity horizon_geometricAntiProduct_motor(Horizon self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

MultiVectorAtInfinity horizon_geometricAntiProduct_multiVector(Horizon self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g1_.w, other.g0_.y), vec3(self.g0_) * other.g2_, vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z));
}

MultiVectorAtInfinity horizon_geometricAntiProduct_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Scalar horizon_geometricAntiProduct_origin(Horizon self, Origin other) {
    return Scalar(self.g0_ * other.g0_);
}

LineAtInfinity horizon_geometricAntiProduct_plane(Horizon self, Plane other) {
    return LineAtInfinity(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

LineAtInfinity horizon_geometricAntiProduct_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

Scalar horizon_geometricAntiProduct_point(Horizon self, Point other) {
    return Scalar(self.g0_ * other.g0_.w);
}

FlectorAtInfinity horizon_geometricAntiProduct_rotor(Horizon self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

LineAtInfinity horizon_geometricAntiProduct_transflector(Horizon self, Transflector other) {
    return LineAtInfinity(vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

Horizon horizon_geometricAntiProduct_translator(Horizon self, Translator other) {
    return Horizon(self.g0_ * other.g0_.w);
}

Line line_geometricAntiProduct_antiScalar(Line self, AntiScalar other) {
    return Line(self.g0_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

Line line_geometricAntiProduct_dualNum(Line self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.y), self.g0_ * vec3(other.g0_.x) + self.g1_ * vec3(other.g0_.y));
}

Flector line_geometricAntiProduct_flector(Line self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

FlectorAtInfinity line_geometricAntiProduct_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity line_geometricAntiProduct_horizon(Line self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector line_geometricAntiProduct_line(Line self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity line_geometricAntiProduct_lineAtInfinity(Line self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector line_geometricAntiProduct_lineAtOrigin(Line self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVector line_geometricAntiProduct_motor(Line self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

MultiVector line_geometricAntiProduct_multiVector(Line self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g1_.x) * vec4(-other.g1_.w, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g4_.z, -other.g1_.w, -other.g4_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g4_.y, other.g4_.x, -other.g1_.w, 0.0), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g4_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g4_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g4_.z));
}

MultiVectorAtInfinity line_geometricAntiProduct_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVector line_geometricAntiProduct_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.x) * vec4(-other.g0_.x, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g2_.z, -other.g0_.x, -other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g2_.y, other.g2_.x, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g2_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g2_.z));
}

Transflector line_geometricAntiProduct_origin(Line self, Origin other) {
    return Transflector(vec3(0.0) - self.g1_ * vec3(other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector line_geometricAntiProduct_plane(Line self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

Flector line_geometricAntiProduct_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

Transflector line_geometricAntiProduct_point(Line self, Point other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) - self.g1_ * vec3(other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity line_geometricAntiProduct_pointAtInfinity(Line self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector line_geometricAntiProduct_rotor(Line self, Rotor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

LineAtInfinity line_geometricAntiProduct_scalar(Line self, Scalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

Flector line_geometricAntiProduct_transflector(Line self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

MultiVector line_geometricAntiProduct_translator(Line self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

LineAtInfinity lineAtInfinity_geometricAntiProduct_antiScalar(LineAtInfinity self, AntiScalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

LineAtInfinity lineAtInfinity_geometricAntiProduct_dualNum(LineAtInfinity self, DualNum other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.y));
}

FlectorAtInfinity lineAtInfinity_geometricAntiProduct_flector(LineAtInfinity self, Flector other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, other.g1_.z));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiProduct_line(LineAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiProduct_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiProduct_motor(LineAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiProduct_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(-other.g2_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(-other.g2_.z, other.g4_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiProduct_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

PointAtInfinity lineAtInfinity_geometricAntiProduct_origin(LineAtInfinity self, Origin other) {
    return PointAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

FlectorAtInfinity lineAtInfinity_geometricAntiProduct_plane(LineAtInfinity self, Plane other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

FlectorAtInfinity lineAtInfinity_geometricAntiProduct_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

PointAtInfinity lineAtInfinity_geometricAntiProduct_point(LineAtInfinity self, Point other) {
    return PointAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiProduct_rotor(LineAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

FlectorAtInfinity lineAtInfinity_geometricAntiProduct_transflector(LineAtInfinity self, Transflector other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, other.g1_.z));
}

LineAtInfinity lineAtInfinity_geometricAntiProduct_translator(LineAtInfinity self, Translator other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.w));
}

LineAtOrigin lineAtOrigin_geometricAntiProduct_antiScalar(LineAtOrigin self, AntiScalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

Line lineAtOrigin_geometricAntiProduct_dualNum(LineAtOrigin self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.y), self.g0_ * vec3(other.g0_.x));
}

Flector lineAtOrigin_geometricAntiProduct_flector(LineAtOrigin self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity lineAtOrigin_geometricAntiProduct_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity lineAtOrigin_geometricAntiProduct_horizon(LineAtOrigin self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector lineAtOrigin_geometricAntiProduct_line(LineAtOrigin self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity lineAtOrigin_geometricAntiProduct_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Rotor lineAtOrigin_geometricAntiProduct_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector lineAtOrigin_geometricAntiProduct_motor(LineAtOrigin self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector lineAtOrigin_geometricAntiProduct_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity lineAtOrigin_geometricAntiProduct_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin lineAtOrigin_geometricAntiProduct_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin lineAtOrigin_geometricAntiProduct_origin(LineAtOrigin self, Origin other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Flector lineAtOrigin_geometricAntiProduct_plane(LineAtOrigin self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector lineAtOrigin_geometricAntiProduct_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Transflector lineAtOrigin_geometricAntiProduct_point(LineAtOrigin self, Point other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity lineAtOrigin_geometricAntiProduct_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Rotor lineAtOrigin_geometricAntiProduct_rotor(LineAtOrigin self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtInfinity lineAtOrigin_geometricAntiProduct_scalar(LineAtOrigin self, Scalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

Flector lineAtOrigin_geometricAntiProduct_transflector(LineAtOrigin self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector lineAtOrigin_geometricAntiProduct_translator(LineAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Motor motor_geometricAntiProduct_antiScalar(Motor self, AntiScalar other) {
    return Motor(self.g0_ * vec4(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector motor_geometricAntiProduct_dualNum(Motor self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x) + self.g1_ * vec3(other.g0_.y), vec4(0.0));
}

Flector motor_geometricAntiProduct_flector(Motor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * other.g1_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

FlectorAtInfinity motor_geometricAntiProduct_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

FlectorAtInfinity motor_geometricAntiProduct_horizon(Motor self, Horizon other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector motor_geometricAntiProduct_line(Motor self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity motor_geometricAntiProduct_lineAtInfinity(Motor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_);
}

MultiVector motor_geometricAntiProduct_lineAtOrigin(Motor self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVector motor_geometricAntiProduct_motor(Motor self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

MultiVector motor_geometricAntiProduct_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g0_.w) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * other.g1_ + vec4(self.g1_.x) * vec4(-other.g1_.w, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g4_.z, -other.g1_.w, -other.g4_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g4_.y, other.g4_.x, -other.g1_.w, 0.0), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g0_.w) * other.g3_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g4_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g4_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g4_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g4_.z));
}

MultiVectorAtInfinity motor_geometricAntiProduct_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_);
}

MultiVector motor_geometricAntiProduct_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x) * vec4(-other.g0_.x, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g2_.z, -other.g0_.x, -other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g2_.y, other.g2_.x, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, 0.0) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g2_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g2_.z));
}

Flector motor_geometricAntiProduct_origin(Motor self, Origin other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0), self.g0_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector motor_geometricAntiProduct_plane(Motor self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

Flector motor_geometricAntiProduct_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

Flector motor_geometricAntiProduct_point(Motor self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity motor_geometricAntiProduct_pointAtInfinity(Motor self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector motor_geometricAntiProduct_rotor(Motor self, Rotor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

MultiVectorAtInfinity motor_geometricAntiProduct_scalar(Motor self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(other.g0_, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector motor_geometricAntiProduct_transflector(Motor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * other.g1_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

MultiVector motor_geometricAntiProduct_translator(Motor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

MultiVector multiVector_geometricAntiProduct_antiScalar(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0_ * vec2(other.g0_), self.g1_ * vec4(other.g0_), self.g2_ * vec3(other.g0_), self.g3_ * vec3(other.g0_), self.g4_ * vec4(other.g0_));
}

MultiVector multiVector_geometricAntiProduct_dualNum(MultiVector self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_, self.g1_ * vec4(other.g0_.y) + self.g4_.xyzx * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), self.g2_ * vec3(other.g0_.y), self.g2_ * vec3(other.g0_.x) + self.g3_ * vec3(other.g0_.y), vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + self.g4_ * vec4(other.g0_.y));
}

MultiVector multiVector_geometricAntiProduct_flector(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) - vec2(self.g1_.w) * vec2(other.g1_.w, other.g0_.w) + vec2(self.g4_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g4_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g4_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g0_.y) * other.g0_ + vec4(self.g2_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, 0.0), vec3(0.0) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g4_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g1_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g0_.y) * other.g1_ + vec4(self.g2_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

MultiVectorAtInfinity multiVector_geometricAntiProduct_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtInfinity multiVector_geometricAntiProduct_horizon(MultiVector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(0.0, other.g0_) + vec2(self.g1_.w) * vec2(-other.g0_, 0.0), self.g2_ * vec3(other.g0_), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_));
}

MultiVector multiVector_geometricAntiProduct_line(MultiVector self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g2_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g2_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g2_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVectorAtInfinity multiVector_geometricAntiProduct_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVector_geometricAntiProduct_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVector multiVector_geometricAntiProduct_motor(MultiVector self, Motor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) - vec2(self.g2_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g2_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g2_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g0_.y) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g3_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g4_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g4_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g4_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector multiVector_geometricAntiProduct_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g4_.z, 0.0) - vec2(self.g1_.w) * vec2(other.g4_.w, other.g1_.w) - vec2(self.g2_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g2_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g2_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g3_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g4_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g4_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g4_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g4_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(-other.g4_.x, -other.g4_.y, -other.g4_.z, 0.0) + vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, 0.0) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y) + vec4(self.g2_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g3_.x) * vec4(-other.g1_.w, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g4_.z, -other.g1_.w, -other.g4_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g4_.y, other.g4_.x, -other.g1_.w, 0.0) + vec4(self.g4_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g4_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g4_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g4_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g0_.y) * other.g2_ - vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g4_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g4_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g3_ + vec3(self.g1_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g1_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g1_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g2_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g2_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g3_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g3_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g3_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g4_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g0_.y) * other.g4_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x) + vec4(self.g2_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g4_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g4_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g4_.z) + vec4(self.g4_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g4_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g4_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g4_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtInfinity multiVector_geometricAntiProduct_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.w) * other.g0_.yx * vec2(-1.0, 1.0) - vec2(self.g2_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g4_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g4_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g4_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.w) * other.g2_ + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g4_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g4_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.y) * other.g2_ - vec3(self.g1_.w) * other.g1_ + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g4_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVector multiVector_geometricAntiProduct_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ * vec2(other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) - vec2(self.g1_.z, self.g1_.w) * vec2(other.g2_.z, other.g0_.x) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g3_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, other.g2_.x) + vec2(self.g4_.y) * vec2(0.0, other.g2_.y) + vec2(self.g4_.w, self.g4_.z) * vec2(other.g0_.x, other.g2_.z), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(-other.g2_.x, -other.g2_.y, -other.g2_.z, other.g0_.x) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g1_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g3_.x) * vec4(-other.g0_.x, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g2_.z, -other.g0_.x, -other.g2_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g2_.y, other.g2_.x, -other.g0_.x, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g4_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.y) * other.g1_ - vec3(self.g1_.w) * other.g2_ + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g4_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g4_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g3_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g3_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g3_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g4_.w) * other.g2_, vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z) + vec4(self.g2_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g2_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g2_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g2_.z) + vec4(self.g4_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g4_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y));
}

MultiVector multiVector_geometricAntiProduct_origin(MultiVector self, Origin other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, -other.g0_) + vec2(self.g4_.w) * vec2(other.g0_, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_) + vec4(self.g3_.x, self.g3_.y, self.g3_.z, self.g3_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_) + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

MultiVector multiVector_geometricAntiProduct_plane(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g4_.x) * vec2(0.0, other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w) + vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

MultiVector multiVector_geometricAntiProduct_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g4_.w) * other.g0_, vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z));
}

MultiVector multiVector_geometricAntiProduct_point(MultiVector self, Point other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, -other.g0_.w) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x, self.g3_.y, self.g3_.z, self.g3_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVector_geometricAntiProduct_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVector multiVector_geometricAntiProduct_rotor(MultiVector self, Rotor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g1_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g3_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g4_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g4_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

MultiVectorAtInfinity multiVector_geometricAntiProduct_scalar(MultiVector self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(other.g0_, 0.0) + vec2(self.g1_.w) * vec2(0.0, other.g0_), vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVector_geometricAntiProduct_transflector(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g4_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g4_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g4_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g4_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) - vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.y) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z));
}

MultiVector multiVector_geometricAntiProduct_translator(MultiVector self, Translator other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), self.g1_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g1_.w) * other.g0_ + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g2_ * vec3(other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + self.g3_ * vec3(other.g0_.w), vec4(self.g4_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g4_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g4_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.y), self.g1_ * vec3(other.g0_.y), self.g2_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, other.g1_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_line(MultiVectorAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.y, -other.g1_.w) + vec2(self.g0_.y) * vec2(other.g1_.w, other.g0_.y) - vec2(self.g1_.x) * vec2(other.g4_.x, other.g2_.x) - vec2(self.g1_.y) * vec2(other.g4_.y, other.g2_.y) - vec2(self.g1_.z) * vec2(other.g4_.z, other.g2_.z) + vec2(self.g2_.x) * vec2(-other.g2_.x, other.g4_.x) + vec2(self.g2_.y) * vec2(-other.g2_.y, other.g4_.y) + vec2(self.g2_.z) * vec2(-other.g2_.z, other.g4_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g2_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g2_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g1_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g1_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g1_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * other.g0_.yx * vec2(1.0, -1.0) + vec2(self.g0_.y) * other.g0_ - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g2_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g2_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g2_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(0.0) - vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g2_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g2_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_origin(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(other.g0_), vec3(0.0) - self.g2_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, other.g0_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, other.g0_.z), vec3(0.0) - vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_point(MultiVectorAtInfinity self, Point other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(other.g0_.w), vec3(0.0) - self.g2_ * vec3(other.g0_.w), self.g1_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, other.g1_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiProduct_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w), self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiProduct_antiScalar(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_geometricAntiProduct_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVector(vec2(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), self.g1_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector multiVectorAtOrigin_geometricAntiProduct_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.w, other.g0_.w) + vec2(self.g2_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g2_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g2_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtOrigin_geometricAntiProduct_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(-other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtOrigin_geometricAntiProduct_horizon(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(-other.g0_), self.g1_ * vec3(other.g0_), vec3(0.0) - self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_geometricAntiProduct_line(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g0_.x) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtOrigin_geometricAntiProduct_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiProduct_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtOrigin_geometricAntiProduct_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g0_.x) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w) + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z));
}

MultiVector multiVectorAtOrigin_geometricAntiProduct_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g4_.w, other.g1_.w) + vec2(self.g0_.y) * other.g0_ - vec2(self.g1_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g1_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g1_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g2_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g2_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g2_.z) * vec2(other.g1_.z, other.g4_.z), vec4(self.g0_.x) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y) + vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g2_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g2_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g2_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g2_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g2_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g0_.y) * other.g3_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g1_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g1_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w), vec4(self.g0_.x) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x) + vec4(self.g0_.y) * other.g4_ + vec4(self.g1_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g2_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g2_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g2_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z));
}

MultiVectorAtInfinity multiVectorAtOrigin_geometricAntiProduct_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * other.g0_.yx * vec2(-1.0, 1.0) + vec2(self.g0_.y) * other.g0_ - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g2_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g2_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g2_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(0.0) - vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiProduct_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_.yx * vec2(1.0, -1.0) + vec2(self.g0_.y) * other.g0_ - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g2_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g2_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g2_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(0.0) - vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g2_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g2_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiProduct_origin(MultiVectorAtOrigin self, Origin other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(other.g0_), vec3(0.0) - self.g2_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_geometricAntiProduct_plane(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.w, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, other.g0_.z), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - self.g2_ * vec3(other.g0_.w), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiProduct_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, other.g0_.z), vec3(0.0) - vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtOrigin_geometricAntiProduct_point(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.w) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec3(0.0) - self.g2_ * vec3(other.g0_.w), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtOrigin_geometricAntiProduct_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiProduct_rotor(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtOrigin_geometricAntiProduct_scalar(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(other.g0_), self.g2_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_geometricAntiProduct_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.w, 0.0) + vec2(self.g2_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g2_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g2_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(0.0) - vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector multiVectorAtOrigin_geometricAntiProduct_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g1_ * vec3(other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Origin origin_geometricAntiProduct_antiScalar(Origin self, AntiScalar other) {
    return Origin(self.g0_ * other.g0_);
}

Flector origin_geometricAntiProduct_dualNum(Origin self, DualNum other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.y), vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVector origin_geometricAntiProduct_flector(Origin self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity origin_geometricAntiProduct_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(-other.g0_.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Scalar origin_geometricAntiProduct_horizon(Origin self, Horizon other) {
    return Scalar(0.0 - self.g0_ * other.g0_);
}

Transflector origin_geometricAntiProduct_line(Origin self, Line other) {
    return Transflector(vec3(self.g0_) * other.g1_, vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity origin_geometricAntiProduct_lineAtInfinity(Origin self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

PlaneAtOrigin origin_geometricAntiProduct_lineAtOrigin(Origin self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Flector origin_geometricAntiProduct_motor(Origin self, Motor other) {
    return Flector(vec4(self.g0_) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector origin_geometricAntiProduct_multiVector(Origin self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(0.0) - vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVectorAtInfinity origin_geometricAntiProduct_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_) * other.g2_, vec3(0.0) - vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin origin_geometricAntiProduct_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g1_);
}

AntiScalar origin_geometricAntiProduct_origin(Origin self, Origin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_);
}

MultiVector origin_geometricAntiProduct_plane(Origin self, Plane other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin origin_geometricAntiProduct_planeAtOrigin(Origin self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Translator origin_geometricAntiProduct_point(Origin self, Point other) {
    return Translator(vec4(0.0) - vec4(self.g0_) * other.g0_);
}

LineAtInfinity origin_geometricAntiProduct_pointAtInfinity(Origin self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Flector origin_geometricAntiProduct_rotor(Origin self, Rotor other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Horizon origin_geometricAntiProduct_scalar(Origin self, Scalar other) {
    return Horizon(self.g0_ * other.g0_);
}

MultiVector origin_geometricAntiProduct_transflector(Origin self, Transflector other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g1_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_) * other.g0_, vec4(0.0));
}

Point origin_geometricAntiProduct_translator(Origin self, Translator other) {
    return Point(vec4(self.g0_) * other.g0_);
}

Plane plane_geometricAntiProduct_antiScalar(Plane self, AntiScalar other) {
    return Plane(self.g0_ * vec4(other.g0_));
}

Transflector plane_geometricAntiProduct_dualNum(Plane self, DualNum other) {
    return Transflector(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), self.g0_ * vec4(other.g0_.y));
}

MultiVector plane_geometricAntiProduct_flector(Plane self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity plane_geometricAntiProduct_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

LineAtInfinity plane_geometricAntiProduct_horizon(Plane self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector plane_geometricAntiProduct_line(Plane self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity plane_geometricAntiProduct_lineAtInfinity(Plane self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector plane_geometricAntiProduct_lineAtOrigin(Plane self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector plane_geometricAntiProduct_motor(Plane self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector plane_geometricAntiProduct_multiVector(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g0_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtInfinity plane_geometricAntiProduct_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVector plane_geometricAntiProduct_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.w, self.g0_.z) * vec2(other.g0_.x, other.g2_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.w) * other.g2_, vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g0_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y));
}

MultiVector plane_geometricAntiProduct_origin(Plane self, Origin other) {
    return MultiVector(vec2(self.g0_.w) * vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_), vec3(0.0), vec4(0.0));
}

Motor plane_geometricAntiProduct_plane(Plane self, Plane other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Motor plane_geometricAntiProduct_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z), vec3(self.g0_.w) * other.g0_);
}

MultiVector plane_geometricAntiProduct_point(Plane self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity plane_geometricAntiProduct_pointAtInfinity(Plane self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector plane_geometricAntiProduct_rotor(Plane self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g0_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

PointAtInfinity plane_geometricAntiProduct_scalar(Plane self, Scalar other) {
    return PointAtInfinity(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

MultiVector plane_geometricAntiProduct_transflector(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Transflector plane_geometricAntiProduct_translator(Plane self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

PlaneAtOrigin planeAtOrigin_geometricAntiProduct_antiScalar(PlaneAtOrigin self, AntiScalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Transflector planeAtOrigin_geometricAntiProduct_dualNum(PlaneAtOrigin self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.x), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector planeAtOrigin_geometricAntiProduct_flector(PlaneAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

MultiVectorAtInfinity planeAtOrigin_geometricAntiProduct_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

LineAtInfinity planeAtOrigin_geometricAntiProduct_horizon(PlaneAtOrigin self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Flector planeAtOrigin_geometricAntiProduct_line(PlaneAtOrigin self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity planeAtOrigin_geometricAntiProduct_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector planeAtOrigin_geometricAntiProduct_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector planeAtOrigin_geometricAntiProduct_motor(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z));
}

MultiVector planeAtOrigin_geometricAntiProduct_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z));
}

MultiVectorAtInfinity planeAtOrigin_geometricAntiProduct_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVectorAtOrigin planeAtOrigin_geometricAntiProduct_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

LineAtOrigin planeAtOrigin_geometricAntiProduct_origin(PlaneAtOrigin self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Motor planeAtOrigin_geometricAntiProduct_plane(PlaneAtOrigin self, Plane other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z), vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

Rotor planeAtOrigin_geometricAntiProduct_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

MultiVector planeAtOrigin_geometricAntiProduct_point(PlaneAtOrigin self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity planeAtOrigin_geometricAntiProduct_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector planeAtOrigin_geometricAntiProduct_rotor(PlaneAtOrigin self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0));
}

PointAtInfinity planeAtOrigin_geometricAntiProduct_scalar(PlaneAtOrigin self, Scalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector planeAtOrigin_geometricAntiProduct_transflector(PlaneAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

Transflector planeAtOrigin_geometricAntiProduct_translator(PlaneAtOrigin self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Point point_geometricAntiProduct_antiScalar(Point self, AntiScalar other) {
    return Point(self.g0_ * vec4(other.g0_));
}

Flector point_geometricAntiProduct_dualNum(Point self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.y), vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVector point_geometricAntiProduct_flector(Point self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) - vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity point_geometricAntiProduct_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Scalar point_geometricAntiProduct_horizon(Point self, Horizon other) {
    return Scalar(0.0 - self.g0_.w * other.g0_);
}

Transflector point_geometricAntiProduct_line(Point self, Line other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

PointAtInfinity point_geometricAntiProduct_lineAtInfinity(Point self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

Transflector point_geometricAntiProduct_lineAtOrigin(Point self, LineAtOrigin other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector point_geometricAntiProduct_motor(Point self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

MultiVector point_geometricAntiProduct_multiVector(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) - vec2(self.g0_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, 0.0) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVectorAtInfinity point_geometricAntiProduct_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_.w) * other.g2_, vec3(0.0) - vec3(self.g0_.w) * other.g1_);
}

MultiVector point_geometricAntiProduct_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) - vec2(self.g0_.z, self.g0_.w) * vec2(other.g2_.z, other.g0_.x), vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g0_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y), vec3(0.0) - vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z));
}

Translator point_geometricAntiProduct_origin(Point self, Origin other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

MultiVector point_geometricAntiProduct_plane(Point self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVector point_geometricAntiProduct_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Translator point_geometricAntiProduct_point(Point self, Point other) {
    return Translator(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) - vec4(self.g0_.w) * other.g0_);
}

LineAtInfinity point_geometricAntiProduct_pointAtInfinity(Point self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_.w) * other.g0_);
}

Flector point_geometricAntiProduct_rotor(Point self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g0_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

Horizon point_geometricAntiProduct_scalar(Point self, Scalar other) {
    return Horizon(self.g0_.w * other.g0_);
}

MultiVector point_geometricAntiProduct_transflector(Point self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) - vec3(self.g0_.w) * other.g0_, vec4(0.0));
}

Point point_geometricAntiProduct_translator(Point self, Translator other) {
    return Point(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity pointAtInfinity_geometricAntiProduct_antiScalar(PointAtInfinity self, AntiScalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

PointAtInfinity pointAtInfinity_geometricAntiProduct_dualNum(PointAtInfinity self, DualNum other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiProduct_flector(PointAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w));
}

FlectorAtInfinity pointAtInfinity_geometricAntiProduct_line(PointAtInfinity self, Line other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

FlectorAtInfinity pointAtInfinity_geometricAntiProduct_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

FlectorAtInfinity pointAtInfinity_geometricAntiProduct_motor(PointAtInfinity self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiProduct_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g4_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g4_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g4_.z, other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiProduct_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

LineAtInfinity pointAtInfinity_geometricAntiProduct_origin(PointAtInfinity self, Origin other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiProduct_plane(PointAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiProduct_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

LineAtInfinity pointAtInfinity_geometricAntiProduct_point(PointAtInfinity self, Point other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.w));
}

FlectorAtInfinity pointAtInfinity_geometricAntiProduct_rotor(PointAtInfinity self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiProduct_transflector(PointAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

PointAtInfinity pointAtInfinity_geometricAntiProduct_translator(PointAtInfinity self, Translator other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

Rotor rotor_geometricAntiProduct_antiScalar(Rotor self, AntiScalar other) {
    return Rotor(self.g0_ * vec4(other.g0_));
}

MultiVector rotor_geometricAntiProduct_dualNum(Rotor self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec4(0.0));
}

Flector rotor_geometricAntiProduct_flector(Rotor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity rotor_geometricAntiProduct_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

FlectorAtInfinity rotor_geometricAntiProduct_horizon(Rotor self, Horizon other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector rotor_geometricAntiProduct_line(Rotor self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity rotor_geometricAntiProduct_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_);
}

Rotor rotor_geometricAntiProduct_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector rotor_geometricAntiProduct_motor(Rotor self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVector rotor_geometricAntiProduct_multiVector(Rotor self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g0_.w) * other.g3_, vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity rotor_geometricAntiProduct_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_);
}

MultiVectorAtOrigin rotor_geometricAntiProduct_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_);
}

Flector rotor_geometricAntiProduct_origin(Rotor self, Origin other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_), self.g0_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector rotor_geometricAntiProduct_plane(Rotor self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_);
}

Flector rotor_geometricAntiProduct_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector rotor_geometricAntiProduct_point(Rotor self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity rotor_geometricAntiProduct_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Rotor rotor_geometricAntiProduct_rotor(Rotor self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity rotor_geometricAntiProduct_scalar(Rotor self, Scalar other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(other.g0_, 0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector rotor_geometricAntiProduct_transflector(Rotor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * other.g1_);
}

MultiVector rotor_geometricAntiProduct_translator(Rotor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Scalar scalar_geometricAntiProduct_antiScalar(Scalar self, AntiScalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Scalar scalar_geometricAntiProduct_dualNum(Scalar self, DualNum other) {
    return Scalar(self.g0_ * other.g0_.y);
}

FlectorAtInfinity scalar_geometricAntiProduct_flector(Scalar self, Flector other) {
    return FlectorAtInfinity(vec4(0.0) - vec4(self.g0_) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w));
}

LineAtInfinity scalar_geometricAntiProduct_line(Scalar self, Line other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtInfinity scalar_geometricAntiProduct_lineAtOrigin(Scalar self, LineAtOrigin other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

MultiVectorAtInfinity scalar_geometricAntiProduct_motor(Scalar self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity scalar_geometricAntiProduct_multiVector(Scalar self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.y, -other.g1_.w), vec3(0.0) - vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_) * other.g2_);
}

MultiVectorAtInfinity scalar_geometricAntiProduct_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g1_);
}

Horizon scalar_geometricAntiProduct_origin(Scalar self, Origin other) {
    return Horizon(0.0 - self.g0_ * other.g0_);
}

PointAtInfinity scalar_geometricAntiProduct_plane(Scalar self, Plane other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

PointAtInfinity scalar_geometricAntiProduct_planeAtOrigin(Scalar self, PlaneAtOrigin other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Horizon scalar_geometricAntiProduct_point(Scalar self, Point other) {
    return Horizon(0.0 - self.g0_ * other.g0_.w);
}

MultiVectorAtInfinity scalar_geometricAntiProduct_rotor(Scalar self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

PointAtInfinity scalar_geometricAntiProduct_transflector(Scalar self, Transflector other) {
    return PointAtInfinity(vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

Scalar scalar_geometricAntiProduct_translator(Scalar self, Translator other) {
    return Scalar(self.g0_ * other.g0_.w);
}

Transflector transflector_geometricAntiProduct_antiScalar(Transflector self, AntiScalar other) {
    return Transflector(self.g0_ * vec3(other.g0_), self.g1_ * vec4(other.g0_));
}

Transflector transflector_geometricAntiProduct_dualNum(Transflector self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.y) + vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.x), self.g1_ * vec4(other.g0_.y));
}

MultiVector transflector_geometricAntiProduct_flector(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.w) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity transflector_geometricAntiProduct_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

LineAtInfinity transflector_geometricAntiProduct_horizon(Transflector self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

Flector transflector_geometricAntiProduct_line(Transflector self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity transflector_geometricAntiProduct_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector transflector_geometricAntiProduct_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector transflector_geometricAntiProduct_motor(Transflector self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

MultiVector transflector_geometricAntiProduct_multiVector(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g1_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(other.g1_.w, other.g4_.z, -other.g4_.y) + vec3(self.g0_.y) * vec3(-other.g4_.z, other.g1_.w, other.g4_.x) + vec3(self.g0_.z) * vec3(other.g4_.y, -other.g4_.x, other.g1_.w) + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtInfinity transflector_geometricAntiProduct_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVector transflector_geometricAntiProduct_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, other.g2_.y) + vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.x, other.g2_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g1_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g1_.w) * other.g2_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g1_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, other.g0_.y));
}

MultiVector transflector_geometricAntiProduct_origin(Transflector self, Origin other) {
    return MultiVector(vec2(self.g1_.w) * vec2(other.g0_, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), self.g0_ * vec3(other.g0_), vec4(0.0));
}

MultiVector transflector_geometricAntiProduct_plane(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_geometricAntiProduct_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

MultiVector transflector_geometricAntiProduct_point(Transflector self, Point other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w), self.g0_ * vec3(other.g0_.w) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity transflector_geometricAntiProduct_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector transflector_geometricAntiProduct_rotor(Transflector self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g1_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, 1.0));
}

PointAtInfinity transflector_geometricAntiProduct_scalar(Transflector self, Scalar other) {
    return PointAtInfinity(vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

MultiVector transflector_geometricAntiProduct_transflector(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Transflector transflector_geometricAntiProduct_translator(Transflector self, Translator other) {
    return Transflector(self.g0_ * vec3(other.g0_.w) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w));
}

Translator translator_geometricAntiProduct_antiScalar(Translator self, AntiScalar other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

MultiVector translator_geometricAntiProduct_dualNum(Translator self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec4(0.0));
}

Flector translator_geometricAntiProduct_flector(Translator self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g0_.w, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity translator_geometricAntiProduct_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.w) * other.g0_);
}

Horizon translator_geometricAntiProduct_horizon(Translator self, Horizon other) {
    return Horizon(self.g0_.w * other.g0_);
}

MultiVector translator_geometricAntiProduct_line(Translator self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

LineAtInfinity translator_geometricAntiProduct_lineAtInfinity(Translator self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector translator_geometricAntiProduct_lineAtOrigin(Translator self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVector translator_geometricAntiProduct_motor(Translator self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVector translator_geometricAntiProduct_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g4_.z, -other.g1_.w, -other.g4_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g4_.y, other.g4_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g3_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g4_.z) + vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity translator_geometricAntiProduct_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

MultiVector translator_geometricAntiProduct_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g1_.z, other.g0_.y), vec4(self.g0_.x) * vec4(-other.g0_.x, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g2_.z, -other.g0_.x, -other.g2_.x, 0.0) + self.g0_.zzzw * vec4(-other.g2_.y, other.g2_.x, -other.g0_.x, other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g2_.z));
}

Point translator_geometricAntiProduct_origin(Translator self, Origin other) {
    return Point(self.g0_ * vec4(-other.g0_));
}

Transflector translator_geometricAntiProduct_plane(Translator self, Plane other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * other.g0_);
}

Transflector translator_geometricAntiProduct_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g0_.z));
}

Point translator_geometricAntiProduct_point(Translator self, Point other) {
    return Point(self.g0_.xyzx * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity translator_geometricAntiProduct_pointAtInfinity(Translator self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector translator_geometricAntiProduct_rotor(Translator self, Rotor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec4(0.0));
}

Scalar translator_geometricAntiProduct_scalar(Translator self, Scalar other) {
    return Scalar(self.g0_.w * other.g0_);
}

Transflector translator_geometricAntiProduct_transflector(Translator self, Transflector other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * other.g1_);
}

Translator translator_geometricAntiProduct_translator(Translator self, Translator other) {
    return Translator(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

AntiScalar antiScalar_geometricProduct_dualNum(AntiScalar self, DualNum other) {
    return AntiScalar(self.g0_ * other.g0_.x);
}

Flector antiScalar_geometricProduct_flector(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector antiScalar_geometricProduct_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec4(self.g0_) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Origin antiScalar_geometricProduct_horizon(AntiScalar self, Horizon other) {
    return Origin(0.0 - self.g0_ * other.g0_);
}

LineAtOrigin antiScalar_geometricProduct_line(AntiScalar self, Line other) {
    return LineAtOrigin(vec3(self.g0_) * other.g1_);
}

LineAtOrigin antiScalar_geometricProduct_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

LineAtOrigin antiScalar_geometricProduct_motor(AntiScalar self, Motor other) {
    return LineAtOrigin(vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin antiScalar_geometricProduct_multiVector(AntiScalar self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * vec2(-other.g4_.w, other.g0_.x), vec3(self.g0_) * other.g3_, vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

MultiVectorAtOrigin antiScalar_geometricProduct_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_) * other.g2_, vec3(0.0) - vec3(self.g0_) * other.g1_);
}

Origin antiScalar_geometricProduct_plane(AntiScalar self, Plane other) {
    return Origin(0.0 - self.g0_ * other.g0_.w);
}

PlaneAtOrigin antiScalar_geometricProduct_point(AntiScalar self, Point other) {
    return PlaneAtOrigin(vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

PlaneAtOrigin antiScalar_geometricProduct_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

AntiScalar antiScalar_geometricProduct_scalar(AntiScalar self, Scalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

Flector antiScalar_geometricProduct_transflector(AntiScalar self, Transflector other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

LineAtOrigin antiScalar_geometricProduct_translator(AntiScalar self, Translator other) {
    return LineAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

AntiScalar dualNum_geometricProduct_antiScalar(DualNum self, AntiScalar other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

DualNum dualNum_geometricProduct_dualNum(DualNum self, DualNum other) {
    return DualNum(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x));
}

Flector dualNum_geometricProduct_flector(DualNum self, Flector other) {
    return Flector(vec4(self.g0_.x) * other.g0_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector dualNum_geometricProduct_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * other.g0_ * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * other.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

Flector dualNum_geometricProduct_horizon(DualNum self, Horizon other) {
    return Flector(vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_));
}

Line dualNum_geometricProduct_line(DualNum self, Line other) {
    return Line(vec3(self.g0_.x) * other.g0_ + vec3(self.g0_.y) * other.g1_, vec3(self.g0_.x) * other.g1_);
}

Line dualNum_geometricProduct_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return Line(vec3(self.g0_.y) * other.g0_, vec3(self.g0_.x) * other.g0_);
}

LineAtOrigin dualNum_geometricProduct_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.x) * other.g0_);
}

Motor dualNum_geometricProduct_motor(DualNum self, Motor other) {
    return Motor(vec4(self.g0_.x) * other.g0_ + vec4(self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(self.g0_.x) * other.g1_);
}

MultiVector dualNum_geometricProduct_multiVector(DualNum self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g4_.w), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g3_, vec3(self.g0_.x) * other.g3_, vec4(self.g0_.x) * other.g4_ + vec4(self.g0_.y) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0));
}

MultiVector dualNum_geometricProduct_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ * vec2(other.g0_.x), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g0_.y), vec3(self.g0_.y) * other.g2_, vec3(self.g0_.x) * other.g2_, vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, other.g0_.y));
}

MultiVectorAtOrigin dualNum_geometricProduct_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_, vec3(self.g0_.x) * other.g2_);
}

Origin dualNum_geometricProduct_origin(DualNum self, Origin other) {
    return Origin(self.g0_.x * other.g0_);
}

Flector dualNum_geometricProduct_plane(DualNum self, Plane other) {
    return Flector(vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_);
}

PlaneAtOrigin dualNum_geometricProduct_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * other.g0_);
}

Flector dualNum_geometricProduct_point(DualNum self, Point other) {
    return Flector(vec4(self.g0_.x) * other.g0_, vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Transflector dualNum_geometricProduct_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return Transflector(vec3(self.g0_.x) * other.g0_, vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Rotor dualNum_geometricProduct_rotor(DualNum self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_);
}

DualNum dualNum_geometricProduct_scalar(DualNum self, Scalar other) {
    return DualNum(self.g0_ * vec2(other.g0_));
}

Flector dualNum_geometricProduct_transflector(DualNum self, Transflector other) {
    return Flector(vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Motor dualNum_geometricProduct_translator(DualNum self, Translator other) {
    return Motor(vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Flector flector_geometricProduct_antiScalar(Flector self, AntiScalar other) {
    return Flector(vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_), self.g0_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector flector_geometricProduct_dualNum(Flector self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.x) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y), self.g0_.xyzx * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + self.g1_ * vec4(other.g0_.x));
}

MultiVector flector_geometricProduct_flector(Flector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g1_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) - vec2(self.g1_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_geometricProduct_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g0_.z, other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_geometricProduct_horizon(Flector self, Horizon other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_) + vec2(self.g1_.w) * vec2(-other.g0_, 0.0), vec4(0.0), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_), vec4(0.0));
}

Flector flector_geometricProduct_line(Flector self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flector_geometricProduct_lineAtInfinity(Flector self, LineAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector flector_geometricProduct_lineAtOrigin(Flector self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flector_geometricProduct_motor(Flector self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector flector_geometricProduct_multiVector(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, other.g4_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g3_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g3_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g3_.z) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w) - vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, 0.0) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVector flector_geometricProduct_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g1_.z, other.g0_.y) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g0_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g1_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z), vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) - vec3(self.g1_.w) * other.g1_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g1_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x));
}

MultiVectorAtOrigin flector_geometricProduct_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z) + vec2(self.g1_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) - vec3(self.g1_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g1_.w) * other.g1_);
}

Rotor flector_geometricProduct_origin(Flector self, Origin other) {
    return Rotor(self.g0_.xyzx * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

MultiVector flector_geometricProduct_plane(Flector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, other.g0_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.w) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) + vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec4(0.0));
}

Rotor flector_geometricProduct_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z) + vec4(self.g1_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

MultiVector flector_geometricProduct_point(Flector self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_geometricProduct_pointAtInfinity(Flector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Flector flector_geometricProduct_rotor(Flector self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flector_geometricProduct_scalar(Flector self, Scalar other) {
    return Flector(self.g0_ * vec4(other.g0_), self.g1_ * vec4(other.g0_));
}

MultiVector flector_geometricProduct_transflector(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g1_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g1_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Flector flector_geometricProduct_translator(Flector self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector flectorAtInfinity_geometricProduct_antiScalar(FlectorAtInfinity self, AntiScalar other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_), self.g0_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector flectorAtInfinity_geometricProduct_dualNum(FlectorAtInfinity self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.x, other.g0_.x, other.g0_.x, other.g0_.y), self.g0_ * vec4(other.g0_.y, other.g0_.y, other.g0_.y, other.g0_.x));
}

MultiVector flectorAtInfinity_geometricProduct_flector(FlectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) - vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity flectorAtInfinity_geometricProduct_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity flectorAtInfinity_geometricProduct_horizon(FlectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector flectorAtInfinity_geometricProduct_line(FlectorAtInfinity self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

FlectorAtInfinity flectorAtInfinity_geometricProduct_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flectorAtInfinity_geometricProduct_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flectorAtInfinity_geometricProduct_motor(FlectorAtInfinity self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector flectorAtInfinity_geometricProduct_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) - vec2(self.g0_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) - vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVectorAtInfinity flectorAtInfinity_geometricProduct_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z) + vec2(self.g0_.w) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) - vec3(self.g0_.w) * other.g1_);
}

MultiVectorAtOrigin flectorAtInfinity_geometricProduct_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z) + vec2(self.g0_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) - vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_);
}

Rotor flectorAtInfinity_geometricProduct_origin(FlectorAtInfinity self, Origin other) {
    return Rotor(vec4(0.0) - self.g0_ * vec4(other.g0_));
}

MultiVector flectorAtInfinity_geometricProduct_plane(FlectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, other.g0_.y) + vec2(self.g0_.w, self.g0_.z) * vec2(-other.g0_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec4(0.0));
}

Rotor flectorAtInfinity_geometricProduct_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

MultiVector flectorAtInfinity_geometricProduct_point(FlectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g0_.z, -other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity flectorAtInfinity_geometricProduct_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g0_.w) * other.g0_);
}

Flector flectorAtInfinity_geometricProduct_rotor(FlectorAtInfinity self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

FlectorAtInfinity flectorAtInfinity_geometricProduct_scalar(FlectorAtInfinity self, Scalar other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector flectorAtInfinity_geometricProduct_transflector(FlectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g0_.w) * other.g0_, vec4(0.0));
}

Flector flectorAtInfinity_geometricProduct_translator(FlectorAtInfinity self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Origin horizon_geometricProduct_antiScalar(Horizon self, AntiScalar other) {
    return Origin(self.g0_ * other.g0_);
}

Flector horizon_geometricProduct_dualNum(Horizon self, DualNum other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.y), vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVector horizon_geometricProduct_flector(Horizon self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity horizon_geometricProduct_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(-other.g0_.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Scalar horizon_geometricProduct_horizon(Horizon self, Horizon other) {
    return Scalar(0.0 - self.g0_ * other.g0_);
}

Transflector horizon_geometricProduct_line(Horizon self, Line other) {
    return Transflector(vec3(self.g0_) * other.g1_, vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity horizon_geometricProduct_lineAtInfinity(Horizon self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

PlaneAtOrigin horizon_geometricProduct_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Flector horizon_geometricProduct_motor(Horizon self, Motor other) {
    return Flector(vec4(self.g0_) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector horizon_geometricProduct_multiVector(Horizon self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(0.0) - vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVectorAtInfinity horizon_geometricProduct_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_) * other.g2_, vec3(0.0) - vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin horizon_geometricProduct_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g1_);
}

AntiScalar horizon_geometricProduct_origin(Horizon self, Origin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_);
}

MultiVector horizon_geometricProduct_plane(Horizon self, Plane other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin horizon_geometricProduct_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Translator horizon_geometricProduct_point(Horizon self, Point other) {
    return Translator(vec4(0.0) - vec4(self.g0_) * other.g0_);
}

LineAtInfinity horizon_geometricProduct_pointAtInfinity(Horizon self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Flector horizon_geometricProduct_rotor(Horizon self, Rotor other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Horizon horizon_geometricProduct_scalar(Horizon self, Scalar other) {
    return Horizon(self.g0_ * other.g0_);
}

MultiVector horizon_geometricProduct_transflector(Horizon self, Transflector other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g1_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_) * other.g0_, vec4(0.0));
}

Point horizon_geometricProduct_translator(Horizon self, Translator other) {
    return Point(vec4(self.g0_) * other.g0_);
}

LineAtOrigin line_geometricProduct_antiScalar(Line self, AntiScalar other) {
    return LineAtOrigin(self.g1_ * vec3(other.g0_));
}

Line line_geometricProduct_dualNum(Line self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.x) + self.g1_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.x));
}

Flector line_geometricProduct_flector(Line self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

Flector line_geometricProduct_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Transflector line_geometricProduct_horizon(Line self, Horizon other) {
    return Transflector(self.g1_ * vec3(other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0));
}

MultiVector line_geometricProduct_line(Line self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector line_geometricProduct_lineAtInfinity(Line self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Rotor line_geometricProduct_lineAtOrigin(Line self, LineAtOrigin other) {
    return Rotor(vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector line_geometricProduct_motor(Line self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector line_geometricProduct_multiVector(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) - vec2(self.g1_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g1_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g1_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g1_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g1_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g1_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(-other.g4_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g4_.w, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g4_.w, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVector line_geometricProduct_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, 0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec4(self.g0_.x) * vec4(-other.g0_.y, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g0_.y, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin line_geometricProduct_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin line_geometricProduct_origin(Line self, Origin other) {
    return PlaneAtOrigin(self.g1_ * vec3(other.g0_));
}

Flector line_geometricProduct_plane(Line self, Plane other) {
    return Flector(vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector line_geometricProduct_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return Flector(vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector line_geometricProduct_point(Line self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Flector line_geometricProduct_pointAtInfinity(Line self, PointAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Rotor line_geometricProduct_rotor(Line self, Rotor other) {
    return Rotor(vec4(self.g1_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g1_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g1_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Line line_geometricProduct_scalar(Line self, Scalar other) {
    return Line(self.g0_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

Flector line_geometricProduct_transflector(Line self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector line_geometricProduct_translator(Line self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + self.g1_ * vec3(other.g0_.w), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

LineAtOrigin lineAtInfinity_geometricProduct_antiScalar(LineAtInfinity self, AntiScalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

Line lineAtInfinity_geometricProduct_dualNum(LineAtInfinity self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.y), self.g0_ * vec3(other.g0_.x));
}

Flector lineAtInfinity_geometricProduct_flector(LineAtInfinity self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity lineAtInfinity_geometricProduct_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity lineAtInfinity_geometricProduct_horizon(LineAtInfinity self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector lineAtInfinity_geometricProduct_line(LineAtInfinity self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity lineAtInfinity_geometricProduct_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Rotor lineAtInfinity_geometricProduct_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector lineAtInfinity_geometricProduct_motor(LineAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector lineAtInfinity_geometricProduct_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity lineAtInfinity_geometricProduct_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin lineAtInfinity_geometricProduct_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin lineAtInfinity_geometricProduct_origin(LineAtInfinity self, Origin other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Flector lineAtInfinity_geometricProduct_plane(LineAtInfinity self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector lineAtInfinity_geometricProduct_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Transflector lineAtInfinity_geometricProduct_point(LineAtInfinity self, Point other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity lineAtInfinity_geometricProduct_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Rotor lineAtInfinity_geometricProduct_rotor(LineAtInfinity self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtInfinity lineAtInfinity_geometricProduct_scalar(LineAtInfinity self, Scalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

Flector lineAtInfinity_geometricProduct_transflector(LineAtInfinity self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector lineAtInfinity_geometricProduct_translator(LineAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

LineAtOrigin lineAtOrigin_geometricProduct_dualNum(LineAtOrigin self, DualNum other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.x));
}

Flector lineAtOrigin_geometricProduct_flector(LineAtOrigin self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0));
}

Flector lineAtOrigin_geometricProduct_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0));
}

PlaneAtOrigin lineAtOrigin_geometricProduct_horizon(LineAtOrigin self, Horizon other) {
    return PlaneAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Rotor lineAtOrigin_geometricProduct_line(LineAtOrigin self, Line other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g1_.z));
}

Rotor lineAtOrigin_geometricProduct_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Rotor lineAtOrigin_geometricProduct_motor(LineAtOrigin self, Motor other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin lineAtOrigin_geometricProduct_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g3_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g3_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g3_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w));
}

MultiVectorAtOrigin lineAtOrigin_geometricProduct_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

PlaneAtOrigin lineAtOrigin_geometricProduct_plane(LineAtOrigin self, Plane other) {
    return PlaneAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

Flector lineAtOrigin_geometricProduct_point(LineAtOrigin self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0));
}

Flector lineAtOrigin_geometricProduct_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0));
}

LineAtOrigin lineAtOrigin_geometricProduct_scalar(LineAtOrigin self, Scalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

Flector lineAtOrigin_geometricProduct_transflector(LineAtOrigin self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0));
}

Rotor lineAtOrigin_geometricProduct_translator(LineAtOrigin self, Translator other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

LineAtOrigin motor_geometricProduct_antiScalar(Motor self, AntiScalar other) {
    return LineAtOrigin(self.g1_ * vec3(other.g0_));
}

Motor motor_geometricProduct_dualNum(Motor self, DualNum other) {
    return Motor(self.g0_ * vec4(other.g0_.x) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0), self.g1_ * vec3(other.g0_.x));
}

Flector motor_geometricProduct_flector(Motor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

Flector motor_geometricProduct_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Flector motor_geometricProduct_horizon(Motor self, Horizon other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0), self.g0_.xyzx * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0));
}

MultiVector motor_geometricProduct_line(Motor self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector motor_geometricProduct_lineAtInfinity(Motor self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Rotor motor_geometricProduct_lineAtOrigin(Motor self, LineAtOrigin other) {
    return Rotor(vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector motor_geometricProduct_motor(Motor self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector motor_geometricProduct_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x) - vec2(self.g1_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g1_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g1_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g4_.w) + vec4(self.g1_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g0_.w) * other.g3_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g1_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g1_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(-other.g4_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g4_.w, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g4_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVector motor_geometricProduct_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, 0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_, vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec4(self.g0_.x) * vec4(-other.g0_.y, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g0_.y, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.y, 0.0) + vec4(self.g0_.w) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin motor_geometricProduct_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin motor_geometricProduct_origin(Motor self, Origin other) {
    return PlaneAtOrigin(self.g1_ * vec3(other.g0_));
}

Flector motor_geometricProduct_plane(Motor self, Plane other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), self.g0_.xyzx * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector motor_geometricProduct_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector motor_geometricProduct_point(Motor self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Flector motor_geometricProduct_pointAtInfinity(Motor self, PointAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Rotor motor_geometricProduct_rotor(Motor self, Rotor other) {
    return Rotor(vec4(self.g1_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g1_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g1_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Motor motor_geometricProduct_scalar(Motor self, Scalar other) {
    return Motor(self.g0_ * vec4(other.g0_), self.g1_ * vec3(other.g0_));
}

Flector motor_geometricProduct_transflector(Motor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector motor_geometricProduct_translator(Motor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtOrigin multiVector_geometricProduct_antiScalar(MultiVector self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_) + vec2(self.g4_.w) * vec2(other.g0_, 0.0), self.g3_ * vec3(other.g0_), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

MultiVector multiVector_geometricProduct_dualNum(MultiVector self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x), self.g1_ * vec4(other.g0_.x) + vec4(self.g4_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y), self.g2_ * vec3(other.g0_.x) + self.g3_ * vec3(other.g0_.y), self.g3_ * vec3(other.g0_.x), self.g1_.xyzx * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + self.g4_ * vec4(other.g0_.x));
}

MultiVector multiVector_geometricProduct_flector(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, other.g1_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z) - vec2(self.g4_.w) * vec2(other.g1_.w, other.g0_.w), vec4(self.g0_.x) * other.g0_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g3_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g3_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g3_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g3_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

MultiVector multiVector_geometricProduct_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z, self.g1_.w) * vec2(other.g0_.z, other.g0_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g4_.w, self.g4_.z) * vec2(other.g0_.w, other.g0_.z), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * other.g0_ * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0), vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w) - vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * other.g0_ * vec4(-1.0, -1.0, -1.0, 1.0) + vec4(self.g2_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVector multiVector_geometricProduct_horizon(MultiVector self, Horizon other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, other.g0_) + vec2(self.g4_.w) * vec2(-other.g0_, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_) + vec4(self.g3_.x, self.g3_.y, self.g3_.z, self.g3_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0), vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_) + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0));
}

MultiVector multiVector_geometricProduct_line(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g3_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g3_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g3_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g4_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g3_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g3_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g3_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVector_geometricProduct_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVector_geometricProduct_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g4_.w) * other.g0_);
}

MultiVector multiVector_geometricProduct_motor(MultiVector self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g3_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g3_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g3_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g4_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g4_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g0_.y) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g3_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * other.g1_ + vec3(self.g3_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g3_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g3_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVector_geometricProduct_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g1_.w) * vec2(0.0, other.g4_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g3_.z) - vec2(self.g3_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g3_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g3_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g4_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g4_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g4_.w) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g3_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g3_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g3_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g3_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g3_.y) + vec4(self.g4_.z) * vec4(0.0, 0.0, 0.0, -other.g3_.z) + vec4(self.g4_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g3_ + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g2_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g2_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g3_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g3_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g3_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g4_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g4_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w) - vec3(self.g4_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * other.g3_ + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g3_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g3_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g3_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) - vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * other.g4_ + vec4(self.g0_.y) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0) + vec4(self.g2_.x) * vec4(-other.g4_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g1_.z, -other.g4_.w, -other.g1_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g4_.w, 0.0) + vec4(self.g3_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g3_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g3_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g4_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, 0.0) + vec4(self.g4_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVector multiVector_geometricProduct_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ * vec2(other.g0_.x) + vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z, self.g1_.w) * vec2(other.g1_.z, other.g0_.y) + vec2(self.g2_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g3_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g1_.y) - vec2(self.g4_.w, self.g4_.z) * vec2(other.g0_.y, other.g1_.z), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g0_.y) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g1_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g3_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g4_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z), vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.w) * other.g1_ + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g4_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g4_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g4_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) + vec3(self.g3_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g3_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g3_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) - vec3(self.g4_.w) * other.g1_, vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g1_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z) + vec4(self.g2_.x) * vec4(-other.g0_.y, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g1_.z, -other.g0_.y, -other.g1_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.y, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g4_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g4_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVector_geometricProduct_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g1_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g1_.z) * vec2(-other.g1_.z, other.g2_.z) - vec2(self.g3_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g3_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g3_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g4_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g1_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) + vec3(self.g3_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g3_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g3_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) - vec3(self.g4_.w) * other.g2_, vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g3_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g3_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g3_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g4_.w) * other.g1_);
}

MultiVectorAtOrigin multiVector_geometricProduct_origin(MultiVector self, Origin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_, 0.0) + vec2(self.g4_.w) * vec2(0.0, -other.g0_), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), self.g3_ * vec3(other.g0_));
}

MultiVector multiVector_geometricProduct_plane(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z) + vec2(self.g1_.w) * vec2(0.0, other.g0_.w) + vec2(self.g4_.w) * vec2(-other.g0_.w, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g3_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) + vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w) - vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g3_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVector_geometricProduct_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g4_.w) * other.g0_, vec3(self.g0_.x) * other.g0_ + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVector_geometricProduct_point(MultiVector self, Point other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVector multiVector_geometricProduct_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g4_.w) * other.g0_, vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVectorAtOrigin multiVector_geometricProduct_rotor(MultiVector self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g3_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVector multiVector_geometricProduct_scalar(MultiVector self, Scalar other) {
    return MultiVector(self.g0_ * vec2(other.g0_), self.g1_ * vec4(other.g0_), self.g2_ * vec3(other.g0_), self.g3_ * vec3(other.g0_), self.g4_ * vec4(other.g0_));
}

MultiVector multiVector_geometricProduct_transflector(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, other.g1_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g4_.w, self.g4_.z) * vec2(other.g1_.w, other.g0_.z), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g1_.w) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g3_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g4_.w) * other.g0_, vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g3_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g3_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g3_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector multiVector_geometricProduct_translator(MultiVector self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g4_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g4_.w) * other.g0_, vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + self.g3_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_geometricProduct_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(other.g0_), self.g2_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_geometricProduct_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_, vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), self.g2_ * vec3(other.g0_.y), self.g2_ * vec3(other.g0_.x), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector multiVectorAtInfinity_geometricProduct_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.y) * vec2(other.g1_.w, other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricProduct_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(-other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricProduct_horizon(MultiVectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(-other.g0_), self.g2_ * vec3(other.g0_), vec3(0.0) - self.g1_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_geometricProduct_line(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g2_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g2_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g2_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricProduct_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_geometricProduct_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtInfinity_geometricProduct_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) - vec2(self.g2_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g2_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g2_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z));
}

MultiVector multiVectorAtInfinity_geometricProduct_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ - vec2(self.g0_.y) * vec2(other.g4_.w, other.g1_.w) + vec2(self.g1_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, other.g4_.z) - vec2(self.g2_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g2_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g2_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g2_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * other.g2_ - vec3(self.g0_.y) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * other.g3_ - vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g2_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g2_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * other.g4_ + vec4(self.g0_.y) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g2_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricProduct_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * other.g0_.yx * vec2(-1.0, 1.0) + vec2(self.g1_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g2_.z) - vec2(self.g2_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * other.g2_ - vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtInfinity_geometricProduct_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * other.g0_.yx * vec2(1.0, -1.0) + vec2(self.g1_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g1_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g1_.z) * vec2(-other.g1_.z, other.g2_.z) - vec2(self.g2_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * other.g1_ - vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtInfinity_geometricProduct_origin(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), vec3(0.0) - self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_geometricProduct_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0_.y) * vec2(-other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - self.g1_ * vec3(other.g0_.w), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_geometricProduct_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtInfinity_geometricProduct_point(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, -other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec3(0.0) - self.g1_ * vec3(other.g0_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricProduct_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_geometricProduct_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricProduct_scalar(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_geometricProduct_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0_.y) * vec2(-other.g1_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector multiVectorAtInfinity_geometricProduct_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g2_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_.x), self.g1_ * vec3(other.g0_.x), self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g1_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_horizon(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g0_), self.g2_ * vec3(other.g0_), vec3(0.0) - self.g1_ * vec3(other.g0_));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_line(MultiVectorAtOrigin self, Line other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_.x, other.g4_.w) + vec2(self.g0_.y) * vec2(-other.g4_.w, other.g0_.x) + vec2(self.g1_.x) * vec2(other.g1_.x, -other.g3_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g3_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g3_.z) - vec2(self.g2_.x) * vec2(other.g3_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g3_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g3_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g0_.y) * other.g3_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g1_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g1_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w), vec3(self.g0_.x) * other.g3_ - vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g2_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g2_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * other.g0_.yx * vec2(-1.0, 1.0) + vec2(self.g1_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g2_.z) - vec2(self.g2_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * other.g2_ - vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_plane(MultiVectorAtOrigin self, Plane other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g0_.w), self.g2_ * vec3(other.g0_.w), vec3(0.0) - self.g1_ * vec3(other.g0_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_point(MultiVectorAtOrigin self, Point other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_scalar(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g1_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricProduct_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Origin origin_geometricProduct_dualNum(Origin self, DualNum other) {
    return Origin(self.g0_ * other.g0_.x);
}

Rotor origin_geometricProduct_flector(Origin self, Flector other) {
    return Rotor(vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w));
}

Rotor origin_geometricProduct_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

AntiScalar origin_geometricProduct_horizon(Origin self, Horizon other) {
    return AntiScalar(self.g0_ * other.g0_);
}

PlaneAtOrigin origin_geometricProduct_line(Origin self, Line other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g1_);
}

PlaneAtOrigin origin_geometricProduct_lineAtInfinity(Origin self, LineAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

PlaneAtOrigin origin_geometricProduct_motor(Origin self, Motor other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin origin_geometricProduct_multiVector(Origin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * vec2(other.g0_.x, other.g4_.w), vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_) * other.g3_);
}

MultiVectorAtOrigin origin_geometricProduct_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

AntiScalar origin_geometricProduct_plane(Origin self, Plane other) {
    return AntiScalar(self.g0_ * other.g0_.w);
}

LineAtOrigin origin_geometricProduct_point(Origin self, Point other) {
    return LineAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

LineAtOrigin origin_geometricProduct_pointAtInfinity(Origin self, PointAtInfinity other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Origin origin_geometricProduct_scalar(Origin self, Scalar other) {
    return Origin(self.g0_ * other.g0_);
}

Rotor origin_geometricProduct_transflector(Origin self, Transflector other) {
    return Rotor(vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w));
}

PlaneAtOrigin origin_geometricProduct_translator(Origin self, Translator other) {
    return PlaneAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Origin plane_geometricProduct_antiScalar(Plane self, AntiScalar other) {
    return Origin(self.g0_.w * other.g0_);
}

Flector plane_geometricProduct_dualNum(Plane self, DualNum other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y), self.g0_ * vec4(other.g0_.x));
}

MultiVector plane_geometricProduct_flector(Plane self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) - vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector plane_geometricProduct_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g0_.w, self.g0_.z) * vec2(other.g0_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector plane_geometricProduct_horizon(Plane self, Horizon other) {
    return MultiVector(vec2(self.g0_.w) * vec2(-other.g0_, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_), vec3(0.0), vec4(0.0));
}

Flector plane_geometricProduct_line(Plane self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector plane_geometricProduct_lineAtInfinity(Plane self, LineAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

PlaneAtOrigin plane_geometricProduct_lineAtOrigin(Plane self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.w) * other.g0_);
}

Flector plane_geometricProduct_motor(Plane self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector plane_geometricProduct_multiVector(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g0_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g3_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g3_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w) - vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, 0.0) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVector plane_geometricProduct_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) - vec2(self.g0_.w, self.g0_.z) * vec2(other.g0_.y, other.g1_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(0.0) - vec3(self.g0_.w) * other.g1_, vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g0_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x));
}

MultiVectorAtOrigin plane_geometricProduct_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0_.w) * other.g2_, vec3(self.g0_.w) * other.g1_);
}

AntiScalar plane_geometricProduct_origin(Plane self, Origin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_);
}

MultiVector plane_geometricProduct_plane(Plane self, Plane other) {
    return MultiVector(vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin plane_geometricProduct_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_.w) * other.g0_);
}

Motor plane_geometricProduct_point(Plane self, Point other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Motor plane_geometricProduct_pointAtInfinity(Plane self, PointAtInfinity other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z), vec3(0.0) - vec3(self.g0_.w) * other.g0_);
}

Flector plane_geometricProduct_rotor(Plane self, Rotor other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Plane plane_geometricProduct_scalar(Plane self, Scalar other) {
    return Plane(self.g0_ * vec4(other.g0_));
}

MultiVector plane_geometricProduct_transflector(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g0_.w, self.g0_.z) * vec2(other.g1_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_.w) * other.g0_, vec4(0.0));
}

Flector plane_geometricProduct_translator(Plane self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

PlaneAtOrigin planeAtOrigin_geometricProduct_dualNum(PlaneAtOrigin self, DualNum other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_.x));
}

Rotor planeAtOrigin_geometricProduct_flector(PlaneAtOrigin self, Flector other) {
    return Rotor(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g0_.z));
}

Rotor planeAtOrigin_geometricProduct_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtOrigin planeAtOrigin_geometricProduct_horizon(PlaneAtOrigin self, Horizon other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

Flector planeAtOrigin_geometricProduct_line(PlaneAtOrigin self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0));
}

Flector planeAtOrigin_geometricProduct_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector planeAtOrigin_geometricProduct_motor(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0));
}

MultiVectorAtOrigin planeAtOrigin_geometricProduct_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x));
}

MultiVectorAtOrigin planeAtOrigin_geometricProduct_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

LineAtOrigin planeAtOrigin_geometricProduct_plane(PlaneAtOrigin self, Plane other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.w));
}

Rotor planeAtOrigin_geometricProduct_point(PlaneAtOrigin self, Point other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Rotor planeAtOrigin_geometricProduct_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

PlaneAtOrigin planeAtOrigin_geometricProduct_scalar(PlaneAtOrigin self, Scalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Rotor planeAtOrigin_geometricProduct_transflector(PlaneAtOrigin self, Transflector other) {
    return Rotor(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g0_.z));
}

Flector planeAtOrigin_geometricProduct_translator(PlaneAtOrigin self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

PlaneAtOrigin point_geometricProduct_antiScalar(Point self, AntiScalar other) {
    return PlaneAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector point_geometricProduct_dualNum(Point self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.x), self.g0_.xyzx * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector point_geometricProduct_flector(Point self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g1_.w), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

MultiVector point_geometricProduct_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w), vec4(0.0));
}

Translator point_geometricProduct_horizon(Point self, Horizon other) {
    return Translator(self.g0_ * vec4(-other.g0_));
}

Flector point_geometricProduct_line(Point self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

Transflector point_geometricProduct_lineAtInfinity(Point self, LineAtInfinity other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector point_geometricProduct_lineAtOrigin(Point self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector point_geometricProduct_motor(Point self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector point_geometricProduct_multiVector(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, other.g4_.w), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0));
}

MultiVector point_geometricProduct_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g1_.z, other.g0_.y), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g0_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z));
}

MultiVectorAtOrigin point_geometricProduct_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

LineAtOrigin point_geometricProduct_origin(Point self, Origin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Motor point_geometricProduct_plane(Point self, Plane other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w));
}

Rotor point_geometricProduct_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

MultiVector point_geometricProduct_point(Point self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVector point_geometricProduct_pointAtInfinity(Point self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

Flector point_geometricProduct_rotor(Point self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0));
}

Point point_geometricProduct_scalar(Point self, Scalar other) {
    return Point(self.g0_ * vec4(other.g0_));
}

MultiVector point_geometricProduct_transflector(Point self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g1_.w), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

Transflector point_geometricProduct_translator(Point self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PlaneAtOrigin pointAtInfinity_geometricProduct_antiScalar(PointAtInfinity self, AntiScalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Transflector pointAtInfinity_geometricProduct_dualNum(PointAtInfinity self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.x), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector pointAtInfinity_geometricProduct_flector(PointAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

MultiVectorAtInfinity pointAtInfinity_geometricProduct_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

LineAtInfinity pointAtInfinity_geometricProduct_horizon(PointAtInfinity self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Flector pointAtInfinity_geometricProduct_line(PointAtInfinity self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity pointAtInfinity_geometricProduct_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector pointAtInfinity_geometricProduct_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector pointAtInfinity_geometricProduct_motor(PointAtInfinity self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z));
}

MultiVector pointAtInfinity_geometricProduct_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z));
}

MultiVectorAtInfinity pointAtInfinity_geometricProduct_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVectorAtOrigin pointAtInfinity_geometricProduct_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

LineAtOrigin pointAtInfinity_geometricProduct_origin(PointAtInfinity self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Motor pointAtInfinity_geometricProduct_plane(PointAtInfinity self, Plane other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z), vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

Rotor pointAtInfinity_geometricProduct_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

MultiVector pointAtInfinity_geometricProduct_point(PointAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity pointAtInfinity_geometricProduct_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector pointAtInfinity_geometricProduct_rotor(PointAtInfinity self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0));
}

PointAtInfinity pointAtInfinity_geometricProduct_scalar(PointAtInfinity self, Scalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector pointAtInfinity_geometricProduct_transflector(PointAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

Transflector pointAtInfinity_geometricProduct_translator(PointAtInfinity self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Rotor rotor_geometricProduct_dualNum(Rotor self, DualNum other) {
    return Rotor(self.g0_ * vec4(other.g0_.x));
}

Flector rotor_geometricProduct_flector(Rotor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector rotor_geometricProduct_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector rotor_geometricProduct_horizon(Rotor self, Horizon other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_), self.g0_.xyzx * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0));
}

Rotor rotor_geometricProduct_line(Rotor self, Line other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

Rotor rotor_geometricProduct_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Rotor rotor_geometricProduct_motor(Rotor self, Motor other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVectorAtOrigin rotor_geometricProduct_multiVector(Rotor self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g3_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g3_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g3_.z) + vec2(self.g0_.w) * vec2(-other.g4_.w, other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g0_.w) * other.g3_, vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

MultiVectorAtOrigin rotor_geometricProduct_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z) + vec2(self.g0_.w) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) - vec3(self.g0_.w) * other.g1_);
}

Flector rotor_geometricProduct_plane(Rotor self, Plane other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), self.g0_.xyzx * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0));
}

Flector rotor_geometricProduct_point(Rotor self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector rotor_geometricProduct_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Rotor rotor_geometricProduct_scalar(Rotor self, Scalar other) {
    return Rotor(self.g0_ * vec4(other.g0_));
}

Flector rotor_geometricProduct_transflector(Rotor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Rotor rotor_geometricProduct_translator(Rotor self, Translator other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

AntiScalar scalar_geometricProduct_antiScalar(Scalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

DualNum scalar_geometricProduct_dualNum(Scalar self, DualNum other) {
    return DualNum(vec2(self.g0_) * other.g0_);
}

Flector scalar_geometricProduct_flector(Scalar self, Flector other) {
    return Flector(vec4(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

FlectorAtInfinity scalar_geometricProduct_flectorAtInfinity(Scalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

Horizon scalar_geometricProduct_horizon(Scalar self, Horizon other) {
    return Horizon(self.g0_ * other.g0_);
}

Line scalar_geometricProduct_line(Scalar self, Line other) {
    return Line(vec3(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

LineAtInfinity scalar_geometricProduct_lineAtInfinity(Scalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtOrigin scalar_geometricProduct_lineAtOrigin(Scalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Motor scalar_geometricProduct_motor(Scalar self, Motor other) {
    return Motor(vec4(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

MultiVector scalar_geometricProduct_multiVector(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g3_, vec4(self.g0_) * other.g4_);
}

MultiVectorAtInfinity scalar_geometricProduct_multiVectorAtInfinity(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

MultiVectorAtOrigin scalar_geometricProduct_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Origin scalar_geometricProduct_origin(Scalar self, Origin other) {
    return Origin(self.g0_ * other.g0_);
}

Plane scalar_geometricProduct_plane(Scalar self, Plane other) {
    return Plane(vec4(self.g0_) * other.g0_);
}

PlaneAtOrigin scalar_geometricProduct_planeAtOrigin(Scalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Point scalar_geometricProduct_point(Scalar self, Point other) {
    return Point(vec4(self.g0_) * other.g0_);
}

PointAtInfinity scalar_geometricProduct_pointAtInfinity(Scalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

Rotor scalar_geometricProduct_rotor(Scalar self, Rotor other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

Scalar scalar_geometricProduct_scalar(Scalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Transflector scalar_geometricProduct_transflector(Scalar self, Transflector other) {
    return Transflector(vec3(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

Translator scalar_geometricProduct_translator(Scalar self, Translator other) {
    return Translator(vec4(self.g0_) * other.g0_);
}

Flector transflector_geometricProduct_antiScalar(Transflector self, AntiScalar other) {
    return Flector(vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector transflector_geometricProduct_dualNum(Transflector self, DualNum other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + self.g1_ * vec4(other.g0_.x));
}

MultiVector transflector_geometricProduct_flector(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) - vec2(self.g1_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) + vec3(self.g1_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_geometricProduct_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.w, other.g0_.z), vec4(0.0), vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_geometricProduct_horizon(Transflector self, Horizon other) {
    return MultiVector(vec2(self.g1_.w) * vec2(-other.g0_, 0.0), vec4(0.0), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec3(0.0) - self.g0_ * vec3(other.g0_), vec4(0.0));
}

Flector transflector_geometricProduct_line(Transflector self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector transflector_geometricProduct_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector transflector_geometricProduct_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector transflector_geometricProduct_motor(Transflector self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector transflector_geometricProduct_multiVector(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g3_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g3_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g3_.z) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g1_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w) - vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, 0.0) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVector transflector_geometricProduct_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g1_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z), vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) - vec3(self.g1_.w) * other.g1_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g1_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x));
}

MultiVectorAtOrigin transflector_geometricProduct_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z) + vec2(self.g1_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) - vec3(self.g1_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g1_.w) * other.g1_);
}

Rotor transflector_geometricProduct_origin(Transflector self, Origin other) {
    return Rotor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

MultiVector transflector_geometricProduct_plane(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, other.g0_.z) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) + vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - self.g0_ * vec3(other.g0_.w), vec4(0.0));
}

Rotor transflector_geometricProduct_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z) + vec4(self.g1_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

MultiVector transflector_geometricProduct_point(Transflector self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g0_.w), vec4(0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_geometricProduct_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Flector transflector_geometricProduct_rotor(Transflector self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Transflector transflector_geometricProduct_scalar(Transflector self, Scalar other) {
    return Transflector(self.g0_ * vec3(other.g0_), self.g1_ * vec4(other.g0_));
}

MultiVector transflector_geometricProduct_transflector(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g1_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Flector transflector_geometricProduct_translator(Transflector self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

LineAtOrigin translator_geometricProduct_antiScalar(Translator self, AntiScalar other) {
    return LineAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Motor translator_geometricProduct_dualNum(Translator self, DualNum other) {
    return Motor(self.g0_ * vec4(other.g0_.y, other.g0_.y, other.g0_.y, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x));
}

Flector translator_geometricProduct_flector(Translator self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector translator_geometricProduct_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g0_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, -1.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) - self.g0_.wwwz * other.g0_.xyzz);
}

Point translator_geometricProduct_horizon(Translator self, Horizon other) {
    return Point(self.g0_ * vec4(other.g0_));
}

MultiVector translator_geometricProduct_line(Translator self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector translator_geometricProduct_lineAtInfinity(Translator self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Rotor translator_geometricProduct_lineAtOrigin(Translator self, LineAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector translator_geometricProduct_motor(Translator self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector translator_geometricProduct_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g4_.w), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g3_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0));
}

MultiVector translator_geometricProduct_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g2_.z, other.g0_.x), vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g0_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, -other.g0_.y), vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) - self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g1_.z));
}

MultiVectorAtOrigin translator_geometricProduct_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin translator_geometricProduct_origin(Translator self, Origin other) {
    return PlaneAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector translator_geometricProduct_plane(Translator self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector translator_geometricProduct_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Transflector translator_geometricProduct_point(Translator self, Point other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Transflector translator_geometricProduct_pointAtInfinity(Translator self, PointAtInfinity other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) - self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g0_.z));
}

Rotor translator_geometricProduct_rotor(Translator self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Translator translator_geometricProduct_scalar(Translator self, Scalar other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

Flector translator_geometricProduct_transflector(Translator self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

MultiVector translator_geometricProduct_translator(Translator self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

AntiScalar antiScalar_wedgeDot_dualNum(AntiScalar self, DualNum other) {
    return AntiScalar(self.g0_ * other.g0_.x);
}

Flector antiScalar_wedgeDot_flector(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector antiScalar_wedgeDot_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec4(self.g0_) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Origin antiScalar_wedgeDot_horizon(AntiScalar self, Horizon other) {
    return Origin(0.0 - self.g0_ * other.g0_);
}

LineAtOrigin antiScalar_wedgeDot_line(AntiScalar self, Line other) {
    return LineAtOrigin(vec3(self.g0_) * other.g1_);
}

LineAtOrigin antiScalar_wedgeDot_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

LineAtOrigin antiScalar_wedgeDot_motor(AntiScalar self, Motor other) {
    return LineAtOrigin(vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin antiScalar_wedgeDot_multiVector(AntiScalar self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * vec2(-other.g4_.w, other.g0_.x), vec3(self.g0_) * other.g3_, vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

MultiVectorAtOrigin antiScalar_wedgeDot_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_) * other.g2_, vec3(0.0) - vec3(self.g0_) * other.g1_);
}

Origin antiScalar_wedgeDot_plane(AntiScalar self, Plane other) {
    return Origin(0.0 - self.g0_ * other.g0_.w);
}

PlaneAtOrigin antiScalar_wedgeDot_point(AntiScalar self, Point other) {
    return PlaneAtOrigin(vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

PlaneAtOrigin antiScalar_wedgeDot_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

AntiScalar antiScalar_wedgeDot_scalar(AntiScalar self, Scalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

Flector antiScalar_wedgeDot_transflector(AntiScalar self, Transflector other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

LineAtOrigin antiScalar_wedgeDot_translator(AntiScalar self, Translator other) {
    return LineAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

AntiScalar dualNum_wedgeDot_antiScalar(DualNum self, AntiScalar other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

DualNum dualNum_wedgeDot_dualNum(DualNum self, DualNum other) {
    return DualNum(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x));
}

Flector dualNum_wedgeDot_flector(DualNum self, Flector other) {
    return Flector(vec4(self.g0_.x) * other.g0_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector dualNum_wedgeDot_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * other.g0_ * vec4(1.0, 1.0, 1.0, -1.0), vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * other.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

Flector dualNum_wedgeDot_horizon(DualNum self, Horizon other) {
    return Flector(vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_));
}

Line dualNum_wedgeDot_line(DualNum self, Line other) {
    return Line(vec3(self.g0_.x) * other.g0_ + vec3(self.g0_.y) * other.g1_, vec3(self.g0_.x) * other.g1_);
}

Line dualNum_wedgeDot_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return Line(vec3(self.g0_.y) * other.g0_, vec3(self.g0_.x) * other.g0_);
}

LineAtOrigin dualNum_wedgeDot_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.x) * other.g0_);
}

Motor dualNum_wedgeDot_motor(DualNum self, Motor other) {
    return Motor(vec4(self.g0_.x) * other.g0_ + vec4(self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(self.g0_.x) * other.g1_);
}

MultiVector dualNum_wedgeDot_multiVector(DualNum self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g4_.w), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g3_, vec3(self.g0_.x) * other.g3_, vec4(self.g0_.x) * other.g4_ + vec4(self.g0_.y) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0));
}

MultiVector dualNum_wedgeDot_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ * vec2(other.g0_.x), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g0_.y), vec3(self.g0_.y) * other.g2_, vec3(self.g0_.x) * other.g2_, vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, other.g0_.y));
}

MultiVectorAtOrigin dualNum_wedgeDot_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_, vec3(self.g0_.x) * other.g2_);
}

Origin dualNum_wedgeDot_origin(DualNum self, Origin other) {
    return Origin(self.g0_.x * other.g0_);
}

Flector dualNum_wedgeDot_plane(DualNum self, Plane other) {
    return Flector(vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_);
}

PlaneAtOrigin dualNum_wedgeDot_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * other.g0_);
}

Flector dualNum_wedgeDot_point(DualNum self, Point other) {
    return Flector(vec4(self.g0_.x) * other.g0_, vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Transflector dualNum_wedgeDot_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return Transflector(vec3(self.g0_.x) * other.g0_, vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Rotor dualNum_wedgeDot_rotor(DualNum self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_);
}

DualNum dualNum_wedgeDot_scalar(DualNum self, Scalar other) {
    return DualNum(self.g0_ * vec2(other.g0_));
}

Flector dualNum_wedgeDot_transflector(DualNum self, Transflector other) {
    return Flector(vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Motor dualNum_wedgeDot_translator(DualNum self, Translator other) {
    return Motor(vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * other.g0_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Flector flector_wedgeDot_antiScalar(Flector self, AntiScalar other) {
    return Flector(vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_), self.g0_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector flector_wedgeDot_dualNum(Flector self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.x) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y), self.g0_.xyzx * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + self.g1_ * vec4(other.g0_.x));
}

MultiVector flector_wedgeDot_flector(Flector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g1_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) - vec2(self.g1_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_wedgeDot_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g0_.z, other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_wedgeDot_horizon(Flector self, Horizon other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_) + vec2(self.g1_.w) * vec2(-other.g0_, 0.0), vec4(0.0), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_), vec4(0.0));
}

Flector flector_wedgeDot_line(Flector self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flector_wedgeDot_lineAtInfinity(Flector self, LineAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector flector_wedgeDot_lineAtOrigin(Flector self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flector_wedgeDot_motor(Flector self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector flector_wedgeDot_multiVector(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, other.g4_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g3_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g3_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g3_.z) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w) - vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, 0.0) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVector flector_wedgeDot_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g1_.z, other.g0_.y) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g0_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g1_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z), vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) - vec3(self.g1_.w) * other.g1_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g1_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x));
}

MultiVectorAtOrigin flector_wedgeDot_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z) + vec2(self.g1_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) - vec3(self.g1_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g1_.w) * other.g1_);
}

Rotor flector_wedgeDot_origin(Flector self, Origin other) {
    return Rotor(self.g0_.xyzx * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

MultiVector flector_wedgeDot_plane(Flector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, other.g0_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.w) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) + vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec4(0.0));
}

Rotor flector_wedgeDot_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z) + vec4(self.g1_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

MultiVector flector_wedgeDot_point(Flector self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_wedgeDot_pointAtInfinity(Flector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Flector flector_wedgeDot_rotor(Flector self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flector_wedgeDot_scalar(Flector self, Scalar other) {
    return Flector(self.g0_ * vec4(other.g0_), self.g1_ * vec4(other.g0_));
}

MultiVector flector_wedgeDot_transflector(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g1_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g1_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g0_ + vec3(self.g1_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Flector flector_wedgeDot_translator(Flector self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector flectorAtInfinity_wedgeDot_antiScalar(FlectorAtInfinity self, AntiScalar other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_), self.g0_.xyzx * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector flectorAtInfinity_wedgeDot_dualNum(FlectorAtInfinity self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.x, other.g0_.x, other.g0_.x, other.g0_.y), self.g0_ * vec4(other.g0_.y, other.g0_.y, other.g0_.y, other.g0_.x));
}

MultiVector flectorAtInfinity_wedgeDot_flector(FlectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) - vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity flectorAtInfinity_wedgeDot_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity flectorAtInfinity_wedgeDot_horizon(FlectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector flectorAtInfinity_wedgeDot_line(FlectorAtInfinity self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

FlectorAtInfinity flectorAtInfinity_wedgeDot_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flectorAtInfinity_wedgeDot_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector flectorAtInfinity_wedgeDot_motor(FlectorAtInfinity self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector flectorAtInfinity_wedgeDot_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) - vec2(self.g0_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) - vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVectorAtInfinity flectorAtInfinity_wedgeDot_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z) + vec2(self.g0_.w) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) - vec3(self.g0_.w) * other.g1_);
}

MultiVectorAtOrigin flectorAtInfinity_wedgeDot_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z) + vec2(self.g0_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) - vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g0_.w) * other.g1_);
}

Rotor flectorAtInfinity_wedgeDot_origin(FlectorAtInfinity self, Origin other) {
    return Rotor(vec4(0.0) - self.g0_ * vec4(other.g0_));
}

MultiVector flectorAtInfinity_wedgeDot_plane(FlectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, other.g0_.y) + vec2(self.g0_.w, self.g0_.z) * vec2(-other.g0_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec4(0.0));
}

Rotor flectorAtInfinity_wedgeDot_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

MultiVector flectorAtInfinity_wedgeDot_point(FlectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g0_.z, -other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity flectorAtInfinity_wedgeDot_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g0_.w) * other.g0_);
}

Flector flectorAtInfinity_wedgeDot_rotor(FlectorAtInfinity self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

FlectorAtInfinity flectorAtInfinity_wedgeDot_scalar(FlectorAtInfinity self, Scalar other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector flectorAtInfinity_wedgeDot_transflector(FlectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g0_.w) * other.g0_, vec4(0.0));
}

Flector flectorAtInfinity_wedgeDot_translator(FlectorAtInfinity self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Origin horizon_wedgeDot_antiScalar(Horizon self, AntiScalar other) {
    return Origin(self.g0_ * other.g0_);
}

Flector horizon_wedgeDot_dualNum(Horizon self, DualNum other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.y), vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVector horizon_wedgeDot_flector(Horizon self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVectorAtInfinity horizon_wedgeDot_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(-other.g0_.w, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Scalar horizon_wedgeDot_horizon(Horizon self, Horizon other) {
    return Scalar(0.0 - self.g0_ * other.g0_);
}

Transflector horizon_wedgeDot_line(Horizon self, Line other) {
    return Transflector(vec3(self.g0_) * other.g1_, vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity horizon_wedgeDot_lineAtInfinity(Horizon self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

PlaneAtOrigin horizon_wedgeDot_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Flector horizon_wedgeDot_motor(Horizon self, Motor other) {
    return Flector(vec4(self.g0_) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector horizon_wedgeDot_multiVector(Horizon self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(0.0) - vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVectorAtInfinity horizon_wedgeDot_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_) * other.g2_, vec3(0.0) - vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin horizon_wedgeDot_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g1_);
}

AntiScalar horizon_wedgeDot_origin(Horizon self, Origin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_);
}

MultiVector horizon_wedgeDot_plane(Horizon self, Plane other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin horizon_wedgeDot_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Translator horizon_wedgeDot_point(Horizon self, Point other) {
    return Translator(vec4(0.0) - vec4(self.g0_) * other.g0_);
}

LineAtInfinity horizon_wedgeDot_pointAtInfinity(Horizon self, PointAtInfinity other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_) * other.g0_);
}

Flector horizon_wedgeDot_rotor(Horizon self, Rotor other) {
    return Flector(vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Horizon horizon_wedgeDot_scalar(Horizon self, Scalar other) {
    return Horizon(self.g0_ * other.g0_);
}

MultiVector horizon_wedgeDot_transflector(Horizon self, Transflector other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g1_.w, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_) * other.g0_, vec4(0.0));
}

Point horizon_wedgeDot_translator(Horizon self, Translator other) {
    return Point(vec4(self.g0_) * other.g0_);
}

LineAtOrigin line_wedgeDot_antiScalar(Line self, AntiScalar other) {
    return LineAtOrigin(self.g1_ * vec3(other.g0_));
}

Line line_wedgeDot_dualNum(Line self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.x) + self.g1_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.x));
}

Flector line_wedgeDot_flector(Line self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

Flector line_wedgeDot_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Transflector line_wedgeDot_horizon(Line self, Horizon other) {
    return Transflector(self.g1_ * vec3(other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0));
}

MultiVector line_wedgeDot_line(Line self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector line_wedgeDot_lineAtInfinity(Line self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Rotor line_wedgeDot_lineAtOrigin(Line self, LineAtOrigin other) {
    return Rotor(vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector line_wedgeDot_motor(Line self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector line_wedgeDot_multiVector(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) - vec2(self.g1_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g1_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g1_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g1_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g1_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g1_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(-other.g4_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g4_.w, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g4_.w, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVector line_wedgeDot_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, 0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec4(self.g0_.x) * vec4(-other.g0_.y, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g0_.y, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin line_wedgeDot_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin line_wedgeDot_origin(Line self, Origin other) {
    return PlaneAtOrigin(self.g1_ * vec3(other.g0_));
}

Flector line_wedgeDot_plane(Line self, Plane other) {
    return Flector(vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector line_wedgeDot_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return Flector(vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector line_wedgeDot_point(Line self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Flector line_wedgeDot_pointAtInfinity(Line self, PointAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Rotor line_wedgeDot_rotor(Line self, Rotor other) {
    return Rotor(vec4(self.g1_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g1_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g1_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Line line_wedgeDot_scalar(Line self, Scalar other) {
    return Line(self.g0_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

Flector line_wedgeDot_transflector(Line self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector line_wedgeDot_translator(Line self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + self.g1_ * vec3(other.g0_.w), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

LineAtOrigin lineAtInfinity_wedgeDot_antiScalar(LineAtInfinity self, AntiScalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

Line lineAtInfinity_wedgeDot_dualNum(LineAtInfinity self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.y), self.g0_ * vec3(other.g0_.x));
}

Flector lineAtInfinity_wedgeDot_flector(LineAtInfinity self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity lineAtInfinity_wedgeDot_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

PointAtInfinity lineAtInfinity_wedgeDot_horizon(LineAtInfinity self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector lineAtInfinity_wedgeDot_line(LineAtInfinity self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity lineAtInfinity_wedgeDot_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Rotor lineAtInfinity_wedgeDot_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector lineAtInfinity_wedgeDot_motor(LineAtInfinity self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector lineAtInfinity_wedgeDot_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity lineAtInfinity_wedgeDot_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin lineAtInfinity_wedgeDot_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin lineAtInfinity_wedgeDot_origin(LineAtInfinity self, Origin other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Flector lineAtInfinity_wedgeDot_plane(LineAtInfinity self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector lineAtInfinity_wedgeDot_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Transflector lineAtInfinity_wedgeDot_point(LineAtInfinity self, Point other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

FlectorAtInfinity lineAtInfinity_wedgeDot_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Rotor lineAtInfinity_wedgeDot_rotor(LineAtInfinity self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtInfinity lineAtInfinity_wedgeDot_scalar(LineAtInfinity self, Scalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

Flector lineAtInfinity_wedgeDot_transflector(LineAtInfinity self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector lineAtInfinity_wedgeDot_translator(LineAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

LineAtOrigin lineAtOrigin_wedgeDot_dualNum(LineAtOrigin self, DualNum other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.x));
}

Flector lineAtOrigin_wedgeDot_flector(LineAtOrigin self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0));
}

Flector lineAtOrigin_wedgeDot_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0));
}

PlaneAtOrigin lineAtOrigin_wedgeDot_horizon(LineAtOrigin self, Horizon other) {
    return PlaneAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Rotor lineAtOrigin_wedgeDot_line(LineAtOrigin self, Line other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g1_.z));
}

Rotor lineAtOrigin_wedgeDot_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Rotor lineAtOrigin_wedgeDot_motor(LineAtOrigin self, Motor other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin lineAtOrigin_wedgeDot_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g3_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g3_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g3_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w));
}

MultiVectorAtOrigin lineAtOrigin_wedgeDot_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

PlaneAtOrigin lineAtOrigin_wedgeDot_plane(LineAtOrigin self, Plane other) {
    return PlaneAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

Flector lineAtOrigin_wedgeDot_point(LineAtOrigin self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0));
}

Flector lineAtOrigin_wedgeDot_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0));
}

LineAtOrigin lineAtOrigin_wedgeDot_scalar(LineAtOrigin self, Scalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

Flector lineAtOrigin_wedgeDot_transflector(LineAtOrigin self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0));
}

Rotor lineAtOrigin_wedgeDot_translator(LineAtOrigin self, Translator other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

LineAtOrigin motor_wedgeDot_antiScalar(Motor self, AntiScalar other) {
    return LineAtOrigin(self.g1_ * vec3(other.g0_));
}

Motor motor_wedgeDot_dualNum(Motor self, DualNum other) {
    return Motor(self.g0_ * vec4(other.g0_.x) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0), self.g1_ * vec3(other.g0_.x));
}

Flector motor_wedgeDot_flector(Motor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

Flector motor_wedgeDot_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0), vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Flector motor_wedgeDot_horizon(Motor self, Horizon other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0), self.g0_.xyzx * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0));
}

MultiVector motor_wedgeDot_line(Motor self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector motor_wedgeDot_lineAtInfinity(Motor self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Rotor motor_wedgeDot_lineAtOrigin(Motor self, LineAtOrigin other) {
    return Rotor(vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector motor_wedgeDot_motor(Motor self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g1_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g1_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector motor_wedgeDot_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x) - vec2(self.g1_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g1_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g1_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g4_.w) + vec4(self.g1_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g0_.w) * other.g3_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g1_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g1_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(-other.g4_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g4_.w, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g4_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVector motor_wedgeDot_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, 0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_, vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec4(self.g0_.x) * vec4(-other.g0_.y, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, -other.g0_.y, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.y, 0.0) + vec4(self.g0_.w) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin motor_wedgeDot_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g1_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g1_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g1_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin motor_wedgeDot_origin(Motor self, Origin other) {
    return PlaneAtOrigin(self.g1_ * vec3(other.g0_));
}

Flector motor_wedgeDot_plane(Motor self, Plane other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), self.g0_.xyzx * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector motor_wedgeDot_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector motor_wedgeDot_point(Motor self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Flector motor_wedgeDot_pointAtInfinity(Motor self, PointAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Rotor motor_wedgeDot_rotor(Motor self, Rotor other) {
    return Rotor(vec4(self.g1_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g1_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g1_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Motor motor_wedgeDot_scalar(Motor self, Scalar other) {
    return Motor(self.g0_ * vec4(other.g0_), self.g1_ * vec3(other.g0_));
}

Flector motor_wedgeDot_transflector(Motor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g1_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector motor_wedgeDot_translator(Motor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtOrigin multiVector_wedgeDot_antiScalar(MultiVector self, AntiScalar other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_) + vec2(self.g4_.w) * vec2(other.g0_, 0.0), self.g3_ * vec3(other.g0_), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

MultiVector multiVector_wedgeDot_dualNum(MultiVector self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x), self.g1_ * vec4(other.g0_.x) + vec4(self.g4_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y), self.g2_ * vec3(other.g0_.x) + self.g3_ * vec3(other.g0_.y), self.g3_ * vec3(other.g0_.x), self.g1_.xyzx * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + self.g4_ * vec4(other.g0_.x));
}

MultiVector multiVector_wedgeDot_flector(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, other.g1_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z) - vec2(self.g4_.w) * vec2(other.g1_.w, other.g0_.w), vec4(self.g0_.x) * other.g0_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.w) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g3_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g3_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g3_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g3_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

MultiVector multiVector_wedgeDot_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z, self.g1_.w) * vec2(other.g0_.z, other.g0_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g4_.w, self.g4_.z) * vec2(other.g0_.w, other.g0_.z), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * other.g0_ * vec4(1.0, 1.0, 1.0, -1.0) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0), vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w) - vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * other.g0_ * vec4(-1.0, -1.0, -1.0, 1.0) + vec4(self.g2_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVector multiVector_wedgeDot_horizon(MultiVector self, Horizon other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, other.g0_) + vec2(self.g4_.w) * vec2(-other.g0_, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_) + vec4(self.g3_.x, self.g3_.y, self.g3_.z, self.g3_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0), vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_) + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0));
}

MultiVector multiVector_wedgeDot_line(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g3_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g3_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g3_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g4_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g3_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g3_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g3_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVector_wedgeDot_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec3(self.g0_.y) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVector_wedgeDot_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g4_.w) * other.g0_);
}

MultiVector multiVector_wedgeDot_motor(MultiVector self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g3_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g3_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g3_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g4_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g4_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g0_.y) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + vec3(self.g3_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * other.g1_ + vec3(self.g3_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g3_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g3_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVector_wedgeDot_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g1_.w) * vec2(0.0, other.g4_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g3_.z) - vec2(self.g3_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g3_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g3_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g4_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g4_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g4_.w) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g3_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g3_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g3_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g3_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g3_.y) + vec4(self.g4_.z) * vec4(0.0, 0.0, 0.0, -other.g3_.z) + vec4(self.g4_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g3_ + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g2_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g2_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g3_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g3_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g3_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g4_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g4_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g4_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w) - vec3(self.g4_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * other.g3_ + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g3_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g3_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g3_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) - vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * other.g4_ + vec4(self.g0_.y) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0) + vec4(self.g2_.x) * vec4(-other.g4_.w, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g1_.z, -other.g4_.w, -other.g1_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g4_.w, 0.0) + vec4(self.g3_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g3_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g3_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g4_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, 0.0) + vec4(self.g4_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVector multiVector_wedgeDot_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ * vec2(other.g0_.x) + vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z, self.g1_.w) * vec2(other.g1_.z, other.g0_.y) + vec2(self.g2_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g3_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g1_.y) - vec2(self.g4_.w, self.g4_.z) * vec2(other.g0_.y, other.g1_.z), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g0_.y) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g1_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g3_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g4_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z), vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.w) * other.g1_ + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g4_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g4_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g4_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) + vec3(self.g3_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g3_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g3_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) - vec3(self.g4_.w) * other.g1_, vec4(self.g0_.y, self.g0_.y, self.g0_.y, self.g0_.x) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g1_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z) + vec4(self.g2_.x) * vec4(-other.g0_.y, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g1_.z, -other.g0_.y, -other.g1_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g1_.y, other.g1_.x, -other.g0_.y, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g4_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g4_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVector_wedgeDot_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g1_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g1_.z) * vec2(-other.g1_.z, other.g2_.z) - vec2(self.g3_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g3_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g3_.z) * vec2(other.g2_.z, other.g1_.z) + vec2(self.g4_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g1_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) + vec3(self.g3_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g3_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g3_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) - vec3(self.g4_.w) * other.g2_, vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g3_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g3_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g3_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g4_.w) * other.g1_);
}

MultiVectorAtOrigin multiVector_wedgeDot_origin(MultiVector self, Origin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_, 0.0) + vec2(self.g4_.w) * vec2(0.0, -other.g0_), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), self.g3_ * vec3(other.g0_));
}

MultiVector multiVector_wedgeDot_plane(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z) + vec2(self.g1_.w) * vec2(0.0, other.g0_.w) + vec2(self.g4_.w) * vec2(-other.g0_.w, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.w) + vec4(self.g3_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) + vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w) - vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g3_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVector_wedgeDot_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g4_.w) * other.g0_, vec3(self.g0_.x) * other.g0_ + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVector_wedgeDot_point(MultiVector self, Point other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g4_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVector multiVector_wedgeDot_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g4_.w) * other.g0_, vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVectorAtOrigin multiVector_wedgeDot_rotor(MultiVector self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g3_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVector multiVector_wedgeDot_scalar(MultiVector self, Scalar other) {
    return MultiVector(self.g0_ * vec2(other.g0_), self.g1_ * vec4(other.g0_), self.g2_ * vec3(other.g0_), self.g3_ * vec3(other.g0_), self.g4_ * vec4(other.g0_));
}

MultiVector multiVector_wedgeDot_transflector(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, other.g1_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g4_.w, self.g4_.z) * vec2(other.g1_.w, other.g0_.z), vec4(self.g0_.x, self.g0_.x, self.g0_.x, self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g1_.w) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g3_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g3_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g3_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g1_.w) * other.g0_ + vec3(self.g4_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g4_.w) * other.g0_, vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g3_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g3_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g3_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector multiVector_wedgeDot_translator(MultiVector self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g4_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g4_.w) * other.g0_, vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + self.g3_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g3_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g3_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g3_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_wedgeDot_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(other.g0_), self.g2_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_wedgeDot_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_, vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), self.g2_ * vec3(other.g0_.y), self.g2_ * vec3(other.g0_.x), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector multiVectorAtInfinity_wedgeDot_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.y) * vec2(other.g1_.w, other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedgeDot_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(-other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedgeDot_horizon(MultiVectorAtInfinity self, Horizon other) {
    return MultiVectorAtInfinity(self.g0_.yx * vec2(-other.g0_), self.g2_ * vec3(other.g0_), vec3(0.0) - self.g1_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_wedgeDot_line(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g2_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g2_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g2_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedgeDot_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_wedgeDot_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtInfinity_wedgeDot_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) - vec2(self.g2_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g2_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g2_.z) * vec2(other.g1_.z, other.g0_.z), vec4(self.g0_.y) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z));
}

MultiVector multiVectorAtInfinity_wedgeDot_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ - vec2(self.g0_.y) * vec2(other.g4_.w, other.g1_.w) + vec2(self.g1_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, other.g4_.z) - vec2(self.g2_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g2_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g2_.z) * vec2(other.g3_.z, other.g2_.z), vec4(self.g0_.x) * other.g1_ + vec4(self.g0_.y) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g2_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z), vec3(self.g0_.x) * other.g2_ - vec3(self.g0_.y) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y), vec3(self.g0_.x) * other.g3_ - vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g2_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g2_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * other.g4_ + vec4(self.g0_.y) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x) + vec4(self.g1_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g2_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedgeDot_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * other.g0_.yx * vec2(-1.0, 1.0) + vec2(self.g1_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g2_.z) - vec2(self.g2_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * other.g2_ - vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtInfinity_wedgeDot_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * other.g0_.yx * vec2(1.0, -1.0) + vec2(self.g1_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g1_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g1_.z) * vec2(-other.g1_.z, other.g2_.z) - vec2(self.g2_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * other.g1_ - vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * other.g2_ + vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtInfinity_wedgeDot_origin(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), vec3(0.0) - self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_wedgeDot_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g0_.y) * vec2(-other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - self.g1_ * vec3(other.g0_.w), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_wedgeDot_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtInfinity_wedgeDot_point(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, -other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.x) * other.g0_ + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), vec3(0.0) - self.g1_ * vec3(other.g0_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedgeDot_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_wedgeDot_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedgeDot_scalar(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_wedgeDot_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0_.y) * vec2(-other.g1_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g1_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g1_.z) * vec2(other.g0_.z, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g2_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

MultiVector multiVectorAtInfinity_wedgeDot_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g2_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_.x), self.g1_ * vec3(other.g0_.x), self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g1_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g0_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_horizon(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g0_), self.g2_ * vec3(other.g0_), vec3(0.0) - self.g1_ * vec3(other.g0_));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_line(MultiVectorAtOrigin self, Line other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec3(self.g0_.x) * other.g1_ + vec3(self.g2_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_.x, other.g4_.w) + vec2(self.g0_.y) * vec2(-other.g4_.w, other.g0_.x) + vec2(self.g1_.x) * vec2(other.g1_.x, -other.g3_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g3_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g3_.z) - vec2(self.g2_.x) * vec2(other.g3_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g3_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g3_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g0_.y) * other.g3_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g1_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g1_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w), vec3(self.g0_.x) * other.g3_ - vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + vec3(self.g1_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g2_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g2_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * other.g0_.yx * vec2(-1.0, 1.0) + vec2(self.g1_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g1_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g1_.z) * vec2(other.g1_.z, -other.g2_.z) - vec2(self.g2_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g2_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g2_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * other.g1_ + vec3(self.g0_.y) * other.g2_ + vec3(self.g1_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g2_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g2_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g2_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * other.g2_ - vec3(self.g0_.y) * other.g1_ + vec3(self.g1_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) + vec3(self.g2_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_plane(MultiVectorAtOrigin self, Plane other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g0_.w), self.g2_ * vec3(other.g0_.w), vec3(0.0) - self.g1_ * vec3(other.g0_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_point(MultiVectorAtOrigin self, Point other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_scalar(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-other.g1_.w) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_ + vec3(self.g2_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w), vec3(0.0) - vec3(self.g0_.y) * other.g0_ + vec3(self.g1_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedgeDot_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Origin origin_wedgeDot_dualNum(Origin self, DualNum other) {
    return Origin(self.g0_ * other.g0_.x);
}

Rotor origin_wedgeDot_flector(Origin self, Flector other) {
    return Rotor(vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w));
}

Rotor origin_wedgeDot_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

AntiScalar origin_wedgeDot_horizon(Origin self, Horizon other) {
    return AntiScalar(self.g0_ * other.g0_);
}

PlaneAtOrigin origin_wedgeDot_line(Origin self, Line other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g1_);
}

PlaneAtOrigin origin_wedgeDot_lineAtInfinity(Origin self, LineAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

PlaneAtOrigin origin_wedgeDot_motor(Origin self, Motor other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin origin_wedgeDot_multiVector(Origin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * vec2(other.g0_.x, other.g4_.w), vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_) * other.g3_);
}

MultiVectorAtOrigin origin_wedgeDot_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

AntiScalar origin_wedgeDot_plane(Origin self, Plane other) {
    return AntiScalar(self.g0_ * other.g0_.w);
}

LineAtOrigin origin_wedgeDot_point(Origin self, Point other) {
    return LineAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

LineAtOrigin origin_wedgeDot_pointAtInfinity(Origin self, PointAtInfinity other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Origin origin_wedgeDot_scalar(Origin self, Scalar other) {
    return Origin(self.g0_ * other.g0_);
}

Rotor origin_wedgeDot_transflector(Origin self, Transflector other) {
    return Rotor(vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w));
}

PlaneAtOrigin origin_wedgeDot_translator(Origin self, Translator other) {
    return PlaneAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Origin plane_wedgeDot_antiScalar(Plane self, AntiScalar other) {
    return Origin(self.g0_.w * other.g0_);
}

Flector plane_wedgeDot_dualNum(Plane self, DualNum other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y), self.g0_ * vec4(other.g0_.x));
}

MultiVector plane_wedgeDot_flector(Plane self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g0_.z) - vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector plane_wedgeDot_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g0_.w, self.g0_.z) * vec2(other.g0_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector plane_wedgeDot_horizon(Plane self, Horizon other) {
    return MultiVector(vec2(self.g0_.w) * vec2(-other.g0_, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_), vec3(0.0), vec4(0.0));
}

Flector plane_wedgeDot_line(Plane self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector plane_wedgeDot_lineAtInfinity(Plane self, LineAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

PlaneAtOrigin plane_wedgeDot_lineAtOrigin(Plane self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.w) * other.g0_);
}

Flector plane_wedgeDot_motor(Plane self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector plane_wedgeDot_multiVector(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g0_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g3_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g3_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w) - vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, 0.0) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVector plane_wedgeDot_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) - vec2(self.g0_.w, self.g0_.z) * vec2(other.g0_.y, other.g1_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(0.0) - vec3(self.g0_.w) * other.g1_, vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g0_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x));
}

MultiVectorAtOrigin plane_wedgeDot_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(0.0) - vec3(self.g0_.w) * other.g2_, vec3(self.g0_.w) * other.g1_);
}

AntiScalar plane_wedgeDot_origin(Plane self, Origin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_);
}

MultiVector plane_wedgeDot_plane(Plane self, Plane other) {
    return MultiVector(vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

LineAtOrigin plane_wedgeDot_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_.w) * other.g0_);
}

Motor plane_wedgeDot_point(Plane self, Point other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(0.0) - vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Motor plane_wedgeDot_pointAtInfinity(Plane self, PointAtInfinity other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z), vec3(0.0) - vec3(self.g0_.w) * other.g0_);
}

Flector plane_wedgeDot_rotor(Plane self, Rotor other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Plane plane_wedgeDot_scalar(Plane self, Scalar other) {
    return Plane(self.g0_ * vec4(other.g0_));
}

MultiVector plane_wedgeDot_transflector(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g0_.w, self.g0_.z) * vec2(other.g1_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(0.0) - vec3(self.g0_.w) * other.g0_, vec4(0.0));
}

Flector plane_wedgeDot_translator(Plane self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

PlaneAtOrigin planeAtOrigin_wedgeDot_dualNum(PlaneAtOrigin self, DualNum other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_.x));
}

Rotor planeAtOrigin_wedgeDot_flector(PlaneAtOrigin self, Flector other) {
    return Rotor(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g0_.z));
}

Rotor planeAtOrigin_wedgeDot_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

LineAtOrigin planeAtOrigin_wedgeDot_horizon(PlaneAtOrigin self, Horizon other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

Flector planeAtOrigin_wedgeDot_line(PlaneAtOrigin self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0));
}

Flector planeAtOrigin_wedgeDot_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector planeAtOrigin_wedgeDot_motor(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0));
}

MultiVectorAtOrigin planeAtOrigin_wedgeDot_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x));
}

MultiVectorAtOrigin planeAtOrigin_wedgeDot_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

LineAtOrigin planeAtOrigin_wedgeDot_plane(PlaneAtOrigin self, Plane other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.w));
}

Rotor planeAtOrigin_wedgeDot_point(PlaneAtOrigin self, Point other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Rotor planeAtOrigin_wedgeDot_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

PlaneAtOrigin planeAtOrigin_wedgeDot_scalar(PlaneAtOrigin self, Scalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Rotor planeAtOrigin_wedgeDot_transflector(PlaneAtOrigin self, Transflector other) {
    return Rotor(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g0_.z));
}

Flector planeAtOrigin_wedgeDot_translator(PlaneAtOrigin self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

PlaneAtOrigin point_wedgeDot_antiScalar(Point self, AntiScalar other) {
    return PlaneAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector point_wedgeDot_dualNum(Point self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.x), self.g0_.xyzx * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector point_wedgeDot_flector(Point self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g1_.w), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

MultiVector point_wedgeDot_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w), vec4(0.0));
}

Translator point_wedgeDot_horizon(Point self, Horizon other) {
    return Translator(self.g0_ * vec4(-other.g0_));
}

Flector point_wedgeDot_line(Point self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

Transflector point_wedgeDot_lineAtInfinity(Point self, LineAtInfinity other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector point_wedgeDot_lineAtOrigin(Point self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector point_wedgeDot_motor(Point self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector point_wedgeDot_multiVector(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, other.g4_.w), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0));
}

MultiVector point_wedgeDot_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(other.g1_.z, other.g0_.y), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g0_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z));
}

MultiVectorAtOrigin point_wedgeDot_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

LineAtOrigin point_wedgeDot_origin(Point self, Origin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Motor point_wedgeDot_plane(Point self, Plane other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w));
}

Rotor point_wedgeDot_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

MultiVector point_wedgeDot_point(Point self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVector point_wedgeDot_pointAtInfinity(Point self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

Flector point_wedgeDot_rotor(Point self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0));
}

Point point_wedgeDot_scalar(Point self, Scalar other) {
    return Point(self.g0_ * vec4(other.g0_));
}

MultiVector point_wedgeDot_transflector(Point self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, other.g1_.w), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

Transflector point_wedgeDot_translator(Point self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PlaneAtOrigin pointAtInfinity_wedgeDot_antiScalar(PointAtInfinity self, AntiScalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Transflector pointAtInfinity_wedgeDot_dualNum(PointAtInfinity self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.x), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector pointAtInfinity_wedgeDot_flector(PointAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

MultiVectorAtInfinity pointAtInfinity_wedgeDot_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w));
}

LineAtInfinity pointAtInfinity_wedgeDot_horizon(PointAtInfinity self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Flector pointAtInfinity_wedgeDot_line(PointAtInfinity self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

FlectorAtInfinity pointAtInfinity_wedgeDot_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

Flector pointAtInfinity_wedgeDot_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector pointAtInfinity_wedgeDot_motor(PointAtInfinity self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z));
}

MultiVector pointAtInfinity_wedgeDot_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z));
}

MultiVectorAtInfinity pointAtInfinity_wedgeDot_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y));
}

MultiVectorAtOrigin pointAtInfinity_wedgeDot_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y));
}

LineAtOrigin pointAtInfinity_wedgeDot_origin(PointAtInfinity self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Motor pointAtInfinity_wedgeDot_plane(PointAtInfinity self, Plane other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z), vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

Rotor pointAtInfinity_wedgeDot_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z));
}

MultiVector pointAtInfinity_wedgeDot_point(PointAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(0.0));
}

MultiVectorAtInfinity pointAtInfinity_wedgeDot_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Flector pointAtInfinity_wedgeDot_rotor(PointAtInfinity self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0));
}

PointAtInfinity pointAtInfinity_wedgeDot_scalar(PointAtInfinity self, Scalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

MultiVector pointAtInfinity_wedgeDot_transflector(PointAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w), vec4(0.0));
}

Transflector pointAtInfinity_wedgeDot_translator(PointAtInfinity self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Rotor rotor_wedgeDot_dualNum(Rotor self, DualNum other) {
    return Rotor(self.g0_ * vec4(other.g0_.x));
}

Flector rotor_wedgeDot_flector(Rotor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector rotor_wedgeDot_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec4(self.g0_.x) * vec4(-other.g0_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g0_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector rotor_wedgeDot_horizon(Rotor self, Horizon other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_), self.g0_.xyzx * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0));
}

Rotor rotor_wedgeDot_line(Rotor self, Line other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

Rotor rotor_wedgeDot_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Rotor rotor_wedgeDot_motor(Rotor self, Motor other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVectorAtOrigin rotor_wedgeDot_multiVector(Rotor self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g3_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g3_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g3_.z) + vec2(self.g0_.w) * vec2(-other.g4_.w, other.g0_.x), vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x) + vec3(self.g0_.w) * other.g3_, vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) - vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

MultiVectorAtOrigin rotor_wedgeDot_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g1_.x, -other.g2_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, -other.g2_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, -other.g2_.z) + vec2(self.g0_.w) * other.g0_.yx * vec2(-1.0, 1.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) - vec3(self.g0_.w) * other.g1_);
}

Flector rotor_wedgeDot_plane(Rotor self, Plane other) {
    return Flector(vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), self.g0_.xyzx * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0));
}

Flector rotor_wedgeDot_point(Rotor self, Point other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector rotor_wedgeDot_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z), vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Rotor rotor_wedgeDot_scalar(Rotor self, Scalar other) {
    return Rotor(self.g0_ * vec4(other.g0_));
}

Flector rotor_wedgeDot_transflector(Rotor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * vec4(-other.g1_.w, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, -other.g1_.w, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, -other.g1_.w, 0.0) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Rotor rotor_wedgeDot_translator(Rotor self, Translator other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

AntiScalar scalar_wedgeDot_antiScalar(Scalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

DualNum scalar_wedgeDot_dualNum(Scalar self, DualNum other) {
    return DualNum(vec2(self.g0_) * other.g0_);
}

Flector scalar_wedgeDot_flector(Scalar self, Flector other) {
    return Flector(vec4(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

FlectorAtInfinity scalar_wedgeDot_flectorAtInfinity(Scalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

Horizon scalar_wedgeDot_horizon(Scalar self, Horizon other) {
    return Horizon(self.g0_ * other.g0_);
}

Line scalar_wedgeDot_line(Scalar self, Line other) {
    return Line(vec3(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

LineAtInfinity scalar_wedgeDot_lineAtInfinity(Scalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtOrigin scalar_wedgeDot_lineAtOrigin(Scalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Motor scalar_wedgeDot_motor(Scalar self, Motor other) {
    return Motor(vec4(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

MultiVector scalar_wedgeDot_multiVector(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g3_, vec4(self.g0_) * other.g4_);
}

MultiVectorAtInfinity scalar_wedgeDot_multiVectorAtInfinity(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

MultiVectorAtOrigin scalar_wedgeDot_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Origin scalar_wedgeDot_origin(Scalar self, Origin other) {
    return Origin(self.g0_ * other.g0_);
}

Plane scalar_wedgeDot_plane(Scalar self, Plane other) {
    return Plane(vec4(self.g0_) * other.g0_);
}

PlaneAtOrigin scalar_wedgeDot_planeAtOrigin(Scalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Point scalar_wedgeDot_point(Scalar self, Point other) {
    return Point(vec4(self.g0_) * other.g0_);
}

PointAtInfinity scalar_wedgeDot_pointAtInfinity(Scalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

Rotor scalar_wedgeDot_rotor(Scalar self, Rotor other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

Scalar scalar_wedgeDot_scalar(Scalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Transflector scalar_wedgeDot_transflector(Scalar self, Transflector other) {
    return Transflector(vec3(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

Translator scalar_wedgeDot_translator(Scalar self, Translator other) {
    return Translator(vec4(self.g0_) * other.g0_);
}

Flector transflector_wedgeDot_antiScalar(Transflector self, AntiScalar other) {
    return Flector(vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_, other.g0_, other.g0_, 0.0));
}

Flector transflector_wedgeDot_dualNum(Transflector self, DualNum other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.y), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + self.g1_ * vec4(other.g0_.x));
}

MultiVector transflector_wedgeDot_flector(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) - vec2(self.g1_.w) * vec2(other.g1_.w, other.g0_.w), vec4(0.0), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.w) + vec3(self.g1_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_wedgeDot_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.w, other.g0_.z), vec4(0.0), vec3(self.g1_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w), vec3(self.g0_.x) * vec3(-other.g0_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g0_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_wedgeDot_horizon(Transflector self, Horizon other) {
    return MultiVector(vec2(self.g1_.w) * vec2(-other.g0_, 0.0), vec4(0.0), vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), vec3(0.0) - self.g0_ * vec3(other.g0_), vec4(0.0));
}

Flector transflector_wedgeDot_line(Transflector self, Line other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector transflector_wedgeDot_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector transflector_wedgeDot_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Flector transflector_wedgeDot_motor(Transflector self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector transflector_wedgeDot_multiVector(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, other.g4_.x) + vec2(self.g0_.y) * vec2(other.g1_.y, other.g4_.y) + vec2(self.g0_.z) * vec2(other.g1_.z, other.g4_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) - vec2(self.g1_.w) * vec2(other.g4_.w, other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, -other.g2_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g3_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g3_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g3_.z) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, -other.g1_.w, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, -other.g1_.w) + vec3(self.g1_.x) * vec3(other.g4_.w, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g4_.w, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g4_.w) - vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec3(self.g0_.x) * vec3(-other.g4_.w, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g4_.w, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g4_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.y, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.y, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.y, -other.g3_.z) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g3_.z, -other.g3_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g3_.z, other.g0_.x, other.g3_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, other.g0_.x, 0.0) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, other.g0_.x));
}

MultiVector transflector_wedgeDot_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g0_.y, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g1_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z), vec3(self.g1_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(-other.g0_.y, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, -other.g0_.y, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, -other.g0_.y) - vec3(self.g1_.w) * other.g1_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.x) * vec4(other.g0_.x, other.g2_.z, -other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g2_.z, other.g0_.x, other.g2_.x, 0.0) + self.g1_.zzzw * vec4(other.g2_.y, -other.g2_.x, other.g0_.x, other.g0_.x));
}

MultiVectorAtOrigin transflector_wedgeDot_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, other.g2_.x) + vec2(self.g0_.y) * vec2(-other.g1_.y, other.g2_.y) + vec2(self.g0_.z) * vec2(-other.g1_.z, other.g2_.z) + vec2(self.g1_.w) * other.g0_.yx * vec2(1.0, -1.0), vec3(self.g0_.x) * vec3(-other.g0_.x, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, -other.g0_.x, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, -other.g0_.x) - vec3(self.g1_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y) + vec3(self.g1_.w) * other.g1_);
}

Rotor transflector_wedgeDot_origin(Transflector self, Origin other) {
    return Rotor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

MultiVector transflector_wedgeDot_plane(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.x) + vec2(self.g0_.y) * vec2(0.0, other.g0_.y) + vec2(self.g0_.z) * vec2(0.0, other.g0_.z) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) + vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0) - self.g0_ * vec3(other.g0_.w), vec4(0.0));
}

Rotor transflector_wedgeDot_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g0_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g0_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g0_.z) + vec4(self.g1_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

MultiVector transflector_wedgeDot_point(Transflector self, Point other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g0_.w), vec4(0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_wedgeDot_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0) - vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Flector transflector_wedgeDot_rotor(Transflector self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, other.g0_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g0_.w, 0.0) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Transflector transflector_wedgeDot_scalar(Transflector self, Scalar other) {
    return Transflector(self.g0_ * vec3(other.g0_), self.g1_ * vec4(other.g0_));
}

MultiVector transflector_wedgeDot_transflector(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, other.g1_.x) + vec2(self.g0_.y) * vec2(other.g0_.y, other.g1_.y) + vec2(self.g0_.z) * vec2(other.g0_.z, other.g1_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) - vec2(self.g1_.w, self.g1_.z) * vec2(other.g1_.w, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g1_.x) * vec3(other.g1_.w, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, other.g1_.w, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, other.g1_.w) - vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(-other.g1_.w, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, -other.g1_.w, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, -other.g1_.w) - vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Flector transflector_wedgeDot_translator(Transflector self, Translator other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

LineAtOrigin translator_wedgeDot_antiScalar(Translator self, AntiScalar other) {
    return LineAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Motor translator_wedgeDot_dualNum(Translator self, DualNum other) {
    return Motor(self.g0_ * vec4(other.g0_.y, other.g0_.y, other.g0_.y, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x));
}

Flector translator_wedgeDot_flector(Translator self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * vec4(other.g0_.w, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.w, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Flector translator_wedgeDot_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g0_.w, other.g0_.x, 0.0) + self.g0_.zzzw * other.g0_.yxww * vec4(1.0, -1.0, 1.0, -1.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) - self.g0_.wwwz * other.g0_.xyzz);
}

Point translator_wedgeDot_horizon(Translator self, Horizon other) {
    return Point(self.g0_ * vec4(other.g0_));
}

MultiVector translator_wedgeDot_line(Translator self, Line other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector translator_wedgeDot_lineAtInfinity(Translator self, LineAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

Rotor translator_wedgeDot_lineAtOrigin(Translator self, LineAtOrigin other) {
    return Rotor(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g0_.z));
}

MultiVector translator_wedgeDot_motor(Translator self, Motor other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g1_.x, other.g0_.x) - vec2(self.g0_.y) * vec2(other.g1_.y, other.g0_.y) - vec2(self.g0_.z) * vec2(other.g1_.z, other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.w, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, other.g0_.w, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, other.g0_.w) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0), vec4(0.0));
}

MultiVector translator_wedgeDot_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g3_.x, other.g2_.x) - vec2(self.g0_.y) * vec2(other.g3_.y, other.g2_.y) - vec2(self.g0_.z) * vec2(other.g3_.z, other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec4(self.g0_.x) * vec4(other.g4_.w, other.g1_.z, -other.g1_.y, -other.g4_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g4_.w, other.g1_.x, -other.g4_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g4_.w), vec3(self.g0_.x) * vec3(other.g0_.y, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.y, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.y) + vec3(self.g0_.w) * other.g3_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g3_.z, -other.g3_.y) + vec3(self.g0_.y) * vec3(-other.g3_.z, other.g0_.x, other.g3_.x) + vec3(self.g0_.z) * vec3(other.g3_.y, -other.g3_.x, other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, other.g4_.z, -other.g4_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g4_.z, other.g1_.w, other.g4_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g4_.y, -other.g4_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(-other.g1_.x, -other.g1_.y, -other.g1_.z, 0.0));
}

MultiVector translator_wedgeDot_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g2_.z, other.g0_.x), vec4(self.g0_.x) * vec4(other.g0_.y, other.g1_.z, -other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g1_.z, other.g0_.y, other.g1_.x, 0.0) + self.g0_.zzzw * vec4(other.g1_.y, -other.g1_.x, other.g0_.y, -other.g0_.y), vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) - self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, other.g1_.z));
}

MultiVectorAtOrigin translator_wedgeDot_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(0.0) - vec2(self.g0_.x) * vec2(other.g2_.x, other.g1_.x) - vec2(self.g0_.y) * vec2(other.g2_.y, other.g1_.y) - vec2(self.g0_.z) * vec2(other.g2_.z, other.g1_.z), vec3(self.g0_.x) * vec3(other.g0_.y, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, other.g0_.y, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, other.g0_.y), vec3(self.g0_.x) * vec3(other.g0_.x, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, other.g0_.x, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, other.g0_.x));
}

PlaneAtOrigin translator_wedgeDot_origin(Translator self, Origin other) {
    return PlaneAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Flector translator_wedgeDot_plane(Translator self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Flector translator_wedgeDot_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0));
}

Transflector translator_wedgeDot_point(Translator self, Point other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

Transflector translator_wedgeDot_pointAtInfinity(Translator self, PointAtInfinity other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) - self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g0_.z));
}

Rotor translator_wedgeDot_rotor(Translator self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_.wzyx * vec4(1.0, 1.0, -1.0, -1.0) + vec4(self.g0_.y) * other.g0_.zwxy * vec4(-1.0, 1.0, 1.0, -1.0) + vec4(self.g0_.z) * other.g0_.yxwz * vec4(1.0, -1.0, 1.0, -1.0));
}

Translator translator_wedgeDot_scalar(Translator self, Scalar other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

Flector translator_wedgeDot_transflector(Translator self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, other.g1_.w, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g1_.w), vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(-other.g0_.x, -other.g0_.y, -other.g0_.z, 0.0));
}

MultiVector translator_wedgeDot_translator(Translator self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(0.0));
}

AntiScalar antiScalar_antiWedge_antiScalar(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

DualNum antiScalar_antiWedge_dualNum(AntiScalar self, DualNum other) {
    return DualNum(vec2(self.g0_) * other.g0_);
}

Flector antiScalar_antiWedge_flector(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

FlectorAtInfinity antiScalar_antiWedge_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

Horizon antiScalar_antiWedge_horizon(AntiScalar self, Horizon other) {
    return Horizon(self.g0_ * other.g0_);
}

Line antiScalar_antiWedge_line(AntiScalar self, Line other) {
    return Line(vec3(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

LineAtInfinity antiScalar_antiWedge_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtOrigin antiScalar_antiWedge_lineAtOrigin(AntiScalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Motor antiScalar_antiWedge_motor(AntiScalar self, Motor other) {
    return Motor(vec4(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

MultiVector antiScalar_antiWedge_multiVector(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g3_, vec4(self.g0_) * other.g4_);
}

MultiVectorAtInfinity antiScalar_antiWedge_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

MultiVectorAtOrigin antiScalar_antiWedge_multiVectorAtOrigin(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Origin antiScalar_antiWedge_origin(AntiScalar self, Origin other) {
    return Origin(self.g0_ * other.g0_);
}

Plane antiScalar_antiWedge_plane(AntiScalar self, Plane other) {
    return Plane(vec4(self.g0_) * other.g0_);
}

PlaneAtOrigin antiScalar_antiWedge_planeAtOrigin(AntiScalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Point antiScalar_antiWedge_point(AntiScalar self, Point other) {
    return Point(vec4(self.g0_) * other.g0_);
}

PointAtInfinity antiScalar_antiWedge_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

Rotor antiScalar_antiWedge_rotor(AntiScalar self, Rotor other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

Scalar antiScalar_antiWedge_scalar(AntiScalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Transflector antiScalar_antiWedge_transflector(AntiScalar self, Transflector other) {
    return Transflector(vec3(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

Translator antiScalar_antiWedge_translator(AntiScalar self, Translator other) {
    return Translator(vec4(self.g0_) * other.g0_);
}

DualNum dualNum_antiWedge_antiScalar(DualNum self, AntiScalar other) {
    return DualNum(self.g0_ * vec2(other.g0_));
}

DualNum dualNum_antiWedge_dualNum(DualNum self, DualNum other) {
    return DualNum(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_);
}

Flector dualNum_antiWedge_flector(DualNum self, Flector other) {
    return Flector(vec4(self.g0_.y) * other.g0_, vec4(self.g0_.y) * other.g1_);
}

FlectorAtInfinity dualNum_antiWedge_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.y) * other.g0_);
}

Horizon dualNum_antiWedge_horizon(DualNum self, Horizon other) {
    return Horizon(self.g0_.y * other.g0_);
}

Line dualNum_antiWedge_line(DualNum self, Line other) {
    return Line(vec3(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_);
}

LineAtInfinity dualNum_antiWedge_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.y) * other.g0_);
}

LineAtOrigin dualNum_antiWedge_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.y) * other.g0_);
}

MultiVector dualNum_antiWedge_motor(DualNum self, Motor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.y) * other.g1_, vec4(0.0));
}

MultiVector dualNum_antiWedge_multiVector(DualNum self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_, vec4(self.g0_.y) * other.g1_, vec3(self.g0_.y) * other.g2_, vec3(self.g0_.y) * other.g3_, vec4(self.g0_.y) * other.g4_);
}

MultiVectorAtInfinity dualNum_antiWedge_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_, vec3(self.g0_.y) * other.g2_);
}

MultiVector dualNum_antiWedge_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ * vec2(other.g0_.y), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(self.g0_.y) * other.g1_, vec3(0.0), vec4(self.g0_.y) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Origin dualNum_antiWedge_origin(DualNum self, Origin other) {
    return Origin(self.g0_.y * other.g0_);
}

Plane dualNum_antiWedge_plane(DualNum self, Plane other) {
    return Plane(vec4(self.g0_.y) * other.g0_);
}

PlaneAtOrigin dualNum_antiWedge_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.y) * other.g0_);
}

Point dualNum_antiWedge_point(DualNum self, Point other) {
    return Point(vec4(self.g0_.y) * other.g0_);
}

PointAtInfinity dualNum_antiWedge_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.y) * other.g0_);
}

MultiVector dualNum_antiWedge_rotor(DualNum self, Rotor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

Scalar dualNum_antiWedge_scalar(DualNum self, Scalar other) {
    return Scalar(self.g0_.y * other.g0_);
}

Transflector dualNum_antiWedge_transflector(DualNum self, Transflector other) {
    return Transflector(vec3(self.g0_.y) * other.g0_, vec4(self.g0_.y) * other.g1_);
}

MultiVector dualNum_antiWedge_translator(DualNum self, Translator other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Flector flector_antiWedge_antiScalar(Flector self, AntiScalar other) {
    return Flector(self.g0_ * vec4(other.g0_), self.g1_ * vec4(other.g0_));
}

Flector flector_antiWedge_dualNum(Flector self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.y), self.g1_ * vec4(other.g0_.y));
}

MultiVector flector_antiWedge_flector(Flector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity flector_antiWedge_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w));
}

MultiVectorAtInfinity flector_antiWedge_horizon(Flector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

Point flector_antiWedge_line(Flector self, Line other) {
    return Point(vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity flector_antiWedge_lineAtInfinity(Flector self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Point flector_antiWedge_lineAtOrigin(Flector self, LineAtOrigin other) {
    return Point(vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector flector_antiWedge_motor(Flector self, Motor other) {
    return Flector(self.g0_ * vec4(other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w));
}

MultiVector flector_antiWedge_multiVector(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g4_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g1_.w, 0.0), self.g0_ * vec4(other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g4_.w) + vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), self.g1_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity flector_antiWedge_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g1_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.y));
}

MultiVector flector_antiWedge_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.x, 0.0), self.g0_ * vec4(other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g1_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g1_.w) * other.g2_, self.g1_ * vec4(other.g0_.y));
}

Scalar flector_antiWedge_origin(Flector self, Origin other) {
    return Scalar(self.g1_.w * other.g0_);
}

MultiVector flector_antiWedge_plane(Flector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_antiWedge_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Scalar flector_antiWedge_point(Flector self, Point other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z + self.g1_.w * other.g0_.w);
}

Scalar flector_antiWedge_pointAtInfinity(Flector self, PointAtInfinity other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Flector flector_antiWedge_rotor(Flector self, Rotor other) {
    return Flector(self.g0_ * vec4(other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g1_ * vec4(other.g0_.w));
}

MultiVector flector_antiWedge_transflector(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Flector flector_antiWedge_translator(Flector self, Translator other) {
    return Flector(self.g0_ * vec4(other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g1_ * vec4(other.g0_.w));
}

FlectorAtInfinity flectorAtInfinity_antiWedge_antiScalar(FlectorAtInfinity self, AntiScalar other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

FlectorAtInfinity flectorAtInfinity_antiWedge_dualNum(FlectorAtInfinity self, DualNum other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity flectorAtInfinity_antiWedge_flector(FlectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

PointAtInfinity flectorAtInfinity_antiWedge_line(FlectorAtInfinity self, Line other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

PointAtInfinity flectorAtInfinity_antiWedge_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

FlectorAtInfinity flectorAtInfinity_antiWedge_motor(FlectorAtInfinity self, Motor other) {
    return FlectorAtInfinity(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_antiWedge_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.y), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z));
}

MultiVectorAtInfinity flectorAtInfinity_antiWedge_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

Scalar flectorAtInfinity_antiWedge_origin(FlectorAtInfinity self, Origin other) {
    return Scalar(self.g0_.w * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_antiWedge_plane(FlectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity flectorAtInfinity_antiWedge_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * other.g0_);
}

Scalar flectorAtInfinity_antiWedge_point(FlectorAtInfinity self, Point other) {
    return Scalar(self.g0_.w * other.g0_.w);
}

FlectorAtInfinity flectorAtInfinity_antiWedge_rotor(FlectorAtInfinity self, Rotor other) {
    return FlectorAtInfinity(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_antiWedge_transflector(FlectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

FlectorAtInfinity flectorAtInfinity_antiWedge_translator(FlectorAtInfinity self, Translator other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.w));
}

Horizon horizon_antiWedge_antiScalar(Horizon self, AntiScalar other) {
    return Horizon(self.g0_ * other.g0_);
}

Horizon horizon_antiWedge_dualNum(Horizon self, DualNum other) {
    return Horizon(self.g0_ * other.g0_.y);
}

MultiVectorAtInfinity horizon_antiWedge_flector(Horizon self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

PointAtInfinity horizon_antiWedge_line(Horizon self, Line other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

PointAtInfinity horizon_antiWedge_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

FlectorAtInfinity horizon_antiWedge_motor(Horizon self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

MultiVectorAtInfinity horizon_antiWedge_multiVector(Horizon self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g1_.w, other.g0_.y), vec3(self.g0_) * other.g2_, vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z));
}

MultiVectorAtInfinity horizon_antiWedge_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Scalar horizon_antiWedge_origin(Horizon self, Origin other) {
    return Scalar(self.g0_ * other.g0_);
}

LineAtInfinity horizon_antiWedge_plane(Horizon self, Plane other) {
    return LineAtInfinity(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

LineAtInfinity horizon_antiWedge_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

Scalar horizon_antiWedge_point(Horizon self, Point other) {
    return Scalar(self.g0_ * other.g0_.w);
}

FlectorAtInfinity horizon_antiWedge_rotor(Horizon self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

LineAtInfinity horizon_antiWedge_transflector(Horizon self, Transflector other) {
    return LineAtInfinity(vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

Horizon horizon_antiWedge_translator(Horizon self, Translator other) {
    return Horizon(self.g0_ * other.g0_.w);
}

Line line_antiWedge_antiScalar(Line self, AntiScalar other) {
    return Line(self.g0_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

Line line_antiWedge_dualNum(Line self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.y));
}

Point line_antiWedge_flector(Line self, Flector other) {
    return Point(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0));
}

PointAtInfinity line_antiWedge_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

PointAtInfinity line_antiWedge_horizon(Line self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

Scalar line_antiWedge_line(Line self, Line other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Scalar line_antiWedge_lineAtInfinity(Line self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar line_antiWedge_lineAtOrigin(Line self, LineAtOrigin other) {
    return Scalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

MultiVector line_antiWedge_motor(Line self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

MultiVector line_antiWedge_multiVector(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g4_.z, 0.0, -other.g4_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g4_.y, other.g4_.x, 0.0, 0.0), self.g0_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.y), vec4(0.0));
}

MultiVectorAtInfinity line_antiWedge_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

MultiVector line_antiWedge_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g2_.z, 0.0, -other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g2_.y, other.g2_.x, 0.0, 0.0), self.g0_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.y), vec4(0.0));
}

Point line_antiWedge_plane(Line self, Plane other) {
    return Point(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0));
}

Point line_antiWedge_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return Point(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0));
}

MultiVector line_antiWedge_rotor(Line self, Rotor other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

Point line_antiWedge_transflector(Line self, Transflector other) {
    return Point(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0));
}

MultiVector line_antiWedge_translator(Line self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

LineAtInfinity lineAtInfinity_antiWedge_antiScalar(LineAtInfinity self, AntiScalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

LineAtInfinity lineAtInfinity_antiWedge_dualNum(LineAtInfinity self, DualNum other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.y));
}

PointAtInfinity lineAtInfinity_antiWedge_flector(LineAtInfinity self, Flector other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

Scalar lineAtInfinity_antiWedge_line(LineAtInfinity self, Line other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar lineAtInfinity_antiWedge_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVectorAtInfinity lineAtInfinity_antiWedge_motor(LineAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), self.g0_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity lineAtInfinity_antiWedge_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), self.g0_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity lineAtInfinity_antiWedge_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), self.g0_ * vec3(other.g0_.y));
}

PointAtInfinity lineAtInfinity_antiWedge_plane(LineAtInfinity self, Plane other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PointAtInfinity lineAtInfinity_antiWedge_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtInfinity lineAtInfinity_antiWedge_rotor(LineAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), self.g0_ * vec3(other.g0_.w));
}

PointAtInfinity lineAtInfinity_antiWedge_transflector(LineAtInfinity self, Transflector other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

LineAtInfinity lineAtInfinity_antiWedge_translator(LineAtInfinity self, Translator other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.w));
}

LineAtOrigin lineAtOrigin_antiWedge_antiScalar(LineAtOrigin self, AntiScalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

LineAtOrigin lineAtOrigin_antiWedge_dualNum(LineAtOrigin self, DualNum other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.y));
}

Point lineAtOrigin_antiWedge_flector(LineAtOrigin self, Flector other) {
    return Point(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

PointAtInfinity lineAtOrigin_antiWedge_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

PointAtInfinity lineAtOrigin_antiWedge_horizon(LineAtOrigin self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

Scalar lineAtOrigin_antiWedge_line(LineAtOrigin self, Line other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

Scalar lineAtOrigin_antiWedge_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVector lineAtOrigin_antiWedge_motor(LineAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(0.0), vec4(0.0));
}

MultiVector lineAtOrigin_antiWedge_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g3_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z), self.g0_ * vec3(other.g0_.y), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity lineAtOrigin_antiWedge_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

MultiVectorAtOrigin lineAtOrigin_antiWedge_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

Point lineAtOrigin_antiWedge_plane(LineAtOrigin self, Plane other) {
    return Point(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Origin lineAtOrigin_antiWedge_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return Origin(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

LineAtOrigin lineAtOrigin_antiWedge_rotor(LineAtOrigin self, Rotor other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.w));
}

Point lineAtOrigin_antiWedge_transflector(LineAtOrigin self, Transflector other) {
    return Point(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVector lineAtOrigin_antiWedge_translator(LineAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(0.0), vec4(0.0));
}

Motor motor_antiWedge_antiScalar(Motor self, AntiScalar other) {
    return Motor(self.g0_ * vec4(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector motor_antiWedge_dualNum(Motor self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.y), vec4(0.0));
}

Flector motor_antiWedge_flector(Motor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity motor_antiWedge_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

FlectorAtInfinity motor_antiWedge_horizon(Motor self, Horizon other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector motor_antiWedge_line(Motor self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity motor_antiWedge_lineAtInfinity(Motor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * other.g0_);
}

MultiVector motor_antiWedge_lineAtOrigin(Motor self, LineAtOrigin other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector motor_antiWedge_motor(Motor self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g1_.z, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.w) * other.g1_ + self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

MultiVector motor_antiWedge_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g0_.w) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * other.g1_ + vec4(self.g1_.x) * vec4(0.0, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g4_.z, 0.0, -other.g4_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g4_.y, other.g4_.x, 0.0, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.w) * other.g3_ + self.g1_ * vec3(other.g0_.y), vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity motor_antiWedge_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

MultiVector motor_antiWedge_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g2_.z, 0.0, -other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g2_.y, other.g2_.x, 0.0, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, self.g1_ * vec3(other.g0_.y), vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Origin motor_antiWedge_origin(Motor self, Origin other) {
    return Origin(self.g0_.w * other.g0_);
}

Flector motor_antiWedge_plane(Motor self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.w) * other.g0_);
}

Flector motor_antiWedge_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point motor_antiWedge_point(Motor self, Point other) {
    return Point(vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity motor_antiWedge_pointAtInfinity(Motor self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector motor_antiWedge_rotor(Motor self, Rotor other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

Scalar motor_antiWedge_scalar(Motor self, Scalar other) {
    return Scalar(self.g0_.w * other.g0_);
}

Flector motor_antiWedge_transflector(Motor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec4(self.g0_.w) * other.g1_);
}

MultiVector motor_antiWedge_translator(Motor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

MultiVector multiVector_antiWedge_antiScalar(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0_ * vec2(other.g0_), self.g1_ * vec4(other.g0_), self.g2_ * vec3(other.g0_), self.g3_ * vec3(other.g0_), self.g4_ * vec4(other.g0_));
}

MultiVector multiVector_antiWedge_dualNum(MultiVector self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_, self.g1_ * vec4(other.g0_.y), self.g2_ * vec3(other.g0_.y), self.g3_ * vec3(other.g0_.y), self.g4_ * vec4(other.g0_.y));
}

MultiVector multiVector_antiWedge_flector(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g2_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec3(self.g4_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g1_.w) + vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.y) * other.g1_);
}

MultiVectorAtInfinity multiVector_antiWedge_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g2_ * vec3(other.g0_.w), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVector_antiWedge_horizon(MultiVector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(0.0, other.g0_) + vec2(self.g1_.w) * vec2(-other.g0_, 0.0), self.g2_ * vec3(other.g0_), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_));
}

MultiVector multiVector_antiWedge_line(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity multiVector_antiWedge_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g4_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_);
}

MultiVector multiVector_antiWedge_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVector(vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec3(self.g0_.y) * other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector multiVector_antiWedge_motor(MultiVector self, Motor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g2_ * vec3(other.g0_.w), vec3(self.g0_.y) * other.g1_ + self.g3_ * vec3(other.g0_.w), self.g4_ * vec4(other.g0_.w));
}

MultiVector multiVector_antiWedge_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g4_.w, 0.0) + vec2(self.g2_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g3_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g4_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.y) * other.g1_ + self.g1_ * vec4(other.g0_.y) + vec4(self.g2_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g2_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g4_.z, 0.0, -other.g4_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g4_.y, other.g4_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g4_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g4_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z) + vec4(self.g4_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g0_.y) * other.g2_ + self.g2_ * vec3(other.g0_.y) + vec3(self.g4_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g4_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g4_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(self.g0_.y) * other.g3_ + self.g3_ * vec3(other.g0_.y) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g4_.w) + vec3(self.g4_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.y) * other.g4_ + self.g4_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity multiVector_antiWedge_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.w) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g4_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + self.g2_ * vec3(other.g0_.y) + vec3(self.g4_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g4_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g4_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(self.g0_.y) * other.g2_ - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.y));
}

MultiVector multiVector_antiWedge_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ * vec2(other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g3_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g0_.x, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x) + self.g1_ * vec4(other.g0_.y) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g2_.z, 0.0, -other.g2_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g2_.y, other.g2_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g4_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.y) * other.g1_ + self.g2_ * vec3(other.g0_.y) + vec3(self.g4_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g4_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g4_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), self.g3_ * vec3(other.g0_.y) + vec3(self.g4_.w) * other.g2_, vec4(self.g0_.y) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0) + self.g4_ * vec4(other.g0_.y));
}

MultiVector multiVector_antiWedge_origin(MultiVector self, Origin other) {
    return MultiVector(vec2(self.g4_.w) * vec2(other.g0_, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector multiVector_antiWedge_plane(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w) + vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y) * other.g0_);
}

MultiVector multiVector_antiWedge_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g4_.w) * other.g0_, vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVector_antiWedge_point(MultiVector self, Point other) {
    return MultiVector(vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec4(self.g0_.y) * other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multiVector_antiWedge_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVector multiVector_antiWedge_rotor(MultiVector self, Rotor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g2_ * vec3(other.g0_.w), self.g3_ * vec3(other.g0_.w), self.g4_ * vec4(other.g0_.w));
}

Scalar multiVector_antiWedge_scalar(MultiVector self, Scalar other) {
    return Scalar(self.g0_.y * other.g0_);
}

MultiVector multiVector_antiWedge_transflector(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec3(self.g4_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g1_.w) + vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.y) * other.g1_);
}

MultiVector multiVector_antiWedge_translator(MultiVector self, Translator other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g2_ * vec3(other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g3_ * vec3(other.g0_.w), self.g4_ * vec4(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.y), self.g1_ * vec3(other.g0_.y), self.g2_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_line(MultiVectorAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.w, other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g2_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g2_.z, 0.0), vec3(self.g0_.y) * other.g2_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g2_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g2_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(self.g0_.y) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + self.g2_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g2_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g2_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g0_.y) * other.g2_ + self.g2_ * vec3(other.g0_.y));
}

Scalar multiVectorAtInfinity_antiWedge_origin(MultiVectorAtInfinity self, Origin other) {
    return Scalar(self.g0_.y * other.g0_);
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_);
}

Scalar multiVectorAtInfinity_antiWedge_point(MultiVectorAtInfinity self, Point other) {
    return Scalar(self.g0_.y * other.g0_.w);
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiWedge_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w), self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedge_antiScalar(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_antiWedge_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVector(vec2(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y), self.g1_ * vec3(other.g0_.y), vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector multiVectorAtOrigin_antiWedge_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.w, 0.0) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z), vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - self.g2_ * vec3(other.g1_.w), vec4(self.g0_.y) * other.g1_);
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedge_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(-other.g0_.w) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec3(0.0) - self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedge_horizon(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(-other.g0_), self.g1_ * vec3(other.g0_), vec3(0.0) - self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_antiWedge_line(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedge_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedge_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVector multiVectorAtOrigin_antiWedge_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.w) + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec3(self.g0_.y) * other.g1_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

MultiVector multiVectorAtOrigin_antiWedge_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.w, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g2_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g1_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g2_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g2_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g2_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z), vec3(self.g0_.y) * other.g2_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g2_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g2_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(self.g0_.y) * other.g3_ - self.g2_ * vec3(other.g4_.w), vec4(self.g0_.y) * other.g4_ + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g2_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(self.g0_.y) * other.g2_ - self.g2_ * vec3(other.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g2_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g2_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g0_.y) * other.g2_ + self.g2_ * vec3(other.g0_.y));
}

Origin multiVectorAtOrigin_antiWedge_origin(MultiVectorAtOrigin self, Origin other) {
    return Origin(self.g0_.y * other.g0_);
}

MultiVector multiVectorAtOrigin_antiWedge_plane(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.w, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - self.g2_ * vec3(other.g0_.w), vec4(self.g0_.y) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedge_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_);
}

MultiVector multiVectorAtOrigin_antiWedge_point(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiWedge_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiWedge_rotor(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

Scalar multiVectorAtOrigin_antiWedge_scalar(MultiVectorAtOrigin self, Scalar other) {
    return Scalar(self.g0_.y * other.g0_);
}

MultiVector multiVectorAtOrigin_antiWedge_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.w, 0.0) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z), vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - self.g2_ * vec3(other.g1_.w), vec4(self.g0_.y) * other.g1_);
}

MultiVector multiVectorAtOrigin_antiWedge_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.w) + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g1_ * vec3(other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

Origin origin_antiWedge_antiScalar(Origin self, AntiScalar other) {
    return Origin(self.g0_ * other.g0_);
}

Origin origin_antiWedge_dualNum(Origin self, DualNum other) {
    return Origin(self.g0_ * other.g0_.y);
}

Scalar origin_antiWedge_flector(Origin self, Flector other) {
    return Scalar(0.0 - self.g0_ * other.g1_.w);
}

Scalar origin_antiWedge_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0_ * other.g0_.w);
}

Scalar origin_antiWedge_horizon(Origin self, Horizon other) {
    return Scalar(0.0 - self.g0_ * other.g0_);
}

Origin origin_antiWedge_motor(Origin self, Motor other) {
    return Origin(self.g0_ * other.g0_.w);
}

MultiVector origin_antiWedge_multiVector(Origin self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g4_.w, 0.0), vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar origin_antiWedge_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0_ * other.g0_.y);
}

Origin origin_antiWedge_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return Origin(self.g0_ * other.g0_.y);
}

Scalar origin_antiWedge_plane(Origin self, Plane other) {
    return Scalar(0.0 - self.g0_ * other.g0_.w);
}

Origin origin_antiWedge_rotor(Origin self, Rotor other) {
    return Origin(self.g0_ * other.g0_.w);
}

Scalar origin_antiWedge_transflector(Origin self, Transflector other) {
    return Scalar(0.0 - self.g0_ * other.g1_.w);
}

Origin origin_antiWedge_translator(Origin self, Translator other) {
    return Origin(self.g0_ * other.g0_.w);
}

Plane plane_antiWedge_antiScalar(Plane self, AntiScalar other) {
    return Plane(self.g0_ * vec4(other.g0_));
}

Plane plane_antiWedge_dualNum(Plane self, DualNum other) {
    return Plane(self.g0_ * vec4(other.g0_.y));
}

MultiVector plane_antiWedge_flector(Plane self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity plane_antiWedge_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w));
}

LineAtInfinity plane_antiWedge_horizon(Plane self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Point plane_antiWedge_line(Plane self, Line other) {
    return Point(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity plane_antiWedge_lineAtInfinity(Plane self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Point plane_antiWedge_lineAtOrigin(Plane self, LineAtOrigin other) {
    return Point(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector plane_antiWedge_motor(Plane self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_ * vec4(other.g0_.w));
}

MultiVector plane_antiWedge_multiVector(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g4_.w) + vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), self.g0_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity plane_antiWedge_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y));
}

MultiVector plane_antiWedge_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.w) * vec2(other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g0_.w) * other.g2_, self.g0_ * vec4(other.g0_.y));
}

Scalar plane_antiWedge_origin(Plane self, Origin other) {
    return Scalar(self.g0_.w * other.g0_);
}

Line plane_antiWedge_plane(Plane self, Plane other) {
    return Line(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Line plane_antiWedge_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return Line(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.w) * other.g0_);
}

Scalar plane_antiWedge_point(Plane self, Point other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

Scalar plane_antiWedge_pointAtInfinity(Plane self, PointAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Flector plane_antiWedge_rotor(Plane self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g0_ * vec4(other.g0_.w));
}

MultiVector plane_antiWedge_transflector(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Transflector plane_antiWedge_translator(Plane self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), self.g0_ * vec4(other.g0_.w));
}

PlaneAtOrigin planeAtOrigin_antiWedge_antiScalar(PlaneAtOrigin self, AntiScalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

PlaneAtOrigin planeAtOrigin_antiWedge_dualNum(PlaneAtOrigin self, DualNum other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_.y));
}

MultiVector planeAtOrigin_antiWedge_flector(PlaneAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g1_.w), vec4(0.0));
}

MultiVectorAtInfinity planeAtOrigin_antiWedge_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

LineAtInfinity planeAtOrigin_antiWedge_horizon(PlaneAtOrigin self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Point planeAtOrigin_antiWedge_line(PlaneAtOrigin self, Line other) {
    return Point(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

PointAtInfinity planeAtOrigin_antiWedge_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Origin planeAtOrigin_antiWedge_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return Origin(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Flector planeAtOrigin_antiWedge_motor(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

MultiVector planeAtOrigin_antiWedge_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z), vec3(self.g0_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g4_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVectorAtInfinity planeAtOrigin_antiWedge_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.y));
}

MultiVectorAtOrigin planeAtOrigin_antiWedge_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), self.g0_ * vec3(other.g0_.y));
}

Line planeAtOrigin_antiWedge_plane(PlaneAtOrigin self, Plane other) {
    return Line(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

LineAtOrigin planeAtOrigin_antiWedge_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Scalar planeAtOrigin_antiWedge_point(PlaneAtOrigin self, Point other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar planeAtOrigin_antiWedge_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Flector planeAtOrigin_antiWedge_rotor(PlaneAtOrigin self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

MultiVector planeAtOrigin_antiWedge_transflector(PlaneAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g1_.w), vec4(0.0));
}

Transflector planeAtOrigin_antiWedge_translator(PlaneAtOrigin self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

Point point_antiWedge_antiScalar(Point self, AntiScalar other) {
    return Point(self.g0_ * vec4(other.g0_));
}

Point point_antiWedge_dualNum(Point self, DualNum other) {
    return Point(self.g0_ * vec4(other.g0_.y));
}

Scalar point_antiWedge_flector(Point self, Flector other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g0_.w * other.g1_.w);
}

Scalar point_antiWedge_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0_.w * other.g0_.w);
}

Scalar point_antiWedge_horizon(Point self, Horizon other) {
    return Scalar(0.0 - self.g0_.w * other.g0_);
}

Point point_antiWedge_motor(Point self, Motor other) {
    return Point(self.g0_ * vec4(other.g0_.w));
}

MultiVector point_antiWedge_multiVector(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g4_.w, 0.0), self.g0_ * vec4(other.g0_.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar point_antiWedge_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0_.w * other.g0_.y);
}

MultiVector point_antiWedge_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec4(other.g0_.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar point_antiWedge_plane(Point self, Plane other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z - self.g0_.w * other.g0_.w);
}

Scalar point_antiWedge_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Point point_antiWedge_rotor(Point self, Rotor other) {
    return Point(self.g0_ * vec4(other.g0_.w));
}

Scalar point_antiWedge_transflector(Point self, Transflector other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g0_.w * other.g1_.w);
}

Point point_antiWedge_translator(Point self, Translator other) {
    return Point(self.g0_ * vec4(other.g0_.w));
}

PointAtInfinity pointAtInfinity_antiWedge_antiScalar(PointAtInfinity self, AntiScalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

PointAtInfinity pointAtInfinity_antiWedge_dualNum(PointAtInfinity self, DualNum other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.y));
}

Scalar pointAtInfinity_antiWedge_flector(PointAtInfinity self, Flector other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

PointAtInfinity pointAtInfinity_antiWedge_motor(PointAtInfinity self, Motor other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity pointAtInfinity_antiWedge_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

MultiVectorAtInfinity pointAtInfinity_antiWedge_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

Scalar pointAtInfinity_antiWedge_plane(PointAtInfinity self, Plane other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar pointAtInfinity_antiWedge_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PointAtInfinity pointAtInfinity_antiWedge_rotor(PointAtInfinity self, Rotor other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

Scalar pointAtInfinity_antiWedge_transflector(PointAtInfinity self, Transflector other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

PointAtInfinity pointAtInfinity_antiWedge_translator(PointAtInfinity self, Translator other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

Rotor rotor_antiWedge_antiScalar(Rotor self, AntiScalar other) {
    return Rotor(self.g0_ * vec4(other.g0_));
}

MultiVector rotor_antiWedge_dualNum(Rotor self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec3(0.0), vec4(0.0));
}

Flector rotor_antiWedge_flector(Rotor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity rotor_antiWedge_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

FlectorAtInfinity rotor_antiWedge_horizon(Rotor self, Horizon other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector rotor_antiWedge_line(Rotor self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity rotor_antiWedge_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * other.g0_);
}

LineAtOrigin rotor_antiWedge_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.w) * other.g0_);
}

MultiVector rotor_antiWedge_motor(Rotor self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g1_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVector rotor_antiWedge_multiVector(Rotor self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.w) * other.g3_, vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity rotor_antiWedge_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

MultiVectorAtOrigin rotor_antiWedge_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

Origin rotor_antiWedge_origin(Rotor self, Origin other) {
    return Origin(self.g0_.w * other.g0_);
}

Flector rotor_antiWedge_plane(Rotor self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.w) * other.g0_);
}

Flector rotor_antiWedge_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point rotor_antiWedge_point(Rotor self, Point other) {
    return Point(vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity rotor_antiWedge_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

Rotor rotor_antiWedge_rotor(Rotor self, Rotor other) {
    return Rotor(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

Scalar rotor_antiWedge_scalar(Rotor self, Scalar other) {
    return Scalar(self.g0_.w * other.g0_);
}

Flector rotor_antiWedge_transflector(Rotor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.w) * other.g1_);
}

MultiVector rotor_antiWedge_translator(Rotor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Scalar scalar_antiWedge_antiScalar(Scalar self, AntiScalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Scalar scalar_antiWedge_dualNum(Scalar self, DualNum other) {
    return Scalar(self.g0_ * other.g0_.y);
}

Scalar scalar_antiWedge_motor(Scalar self, Motor other) {
    return Scalar(self.g0_ * other.g0_.w);
}

Scalar scalar_antiWedge_multiVector(Scalar self, MultiVector other) {
    return Scalar(self.g0_ * other.g0_.y);
}

Scalar scalar_antiWedge_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return Scalar(self.g0_ * other.g0_.y);
}

Scalar scalar_antiWedge_rotor(Scalar self, Rotor other) {
    return Scalar(self.g0_ * other.g0_.w);
}

Scalar scalar_antiWedge_translator(Scalar self, Translator other) {
    return Scalar(self.g0_ * other.g0_.w);
}

Transflector transflector_antiWedge_antiScalar(Transflector self, AntiScalar other) {
    return Transflector(self.g0_ * vec3(other.g0_), self.g1_ * vec4(other.g0_));
}

Transflector transflector_antiWedge_dualNum(Transflector self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.y), self.g1_ * vec4(other.g0_.y));
}

MultiVector transflector_antiWedge_flector(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity transflector_antiWedge_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w));
}

LineAtInfinity transflector_antiWedge_horizon(Transflector self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

Point transflector_antiWedge_line(Transflector self, Line other) {
    return Point(vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity transflector_antiWedge_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Point transflector_antiWedge_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return Point(vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector transflector_antiWedge_motor(Transflector self, Motor other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w));
}

MultiVector transflector_antiWedge_multiVector(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g4_.w) + vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), self.g1_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity transflector_antiWedge_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g1_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.y));
}

MultiVector transflector_antiWedge_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.x, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g1_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g1_.w) * other.g2_, self.g1_ * vec4(other.g0_.y));
}

Scalar transflector_antiWedge_origin(Transflector self, Origin other) {
    return Scalar(self.g1_.w * other.g0_);
}

MultiVector transflector_antiWedge_plane(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_antiWedge_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Scalar transflector_antiWedge_point(Transflector self, Point other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z + self.g1_.w * other.g0_.w);
}

Scalar transflector_antiWedge_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Flector transflector_antiWedge_rotor(Transflector self, Rotor other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g1_ * vec4(other.g0_.w));
}

MultiVector transflector_antiWedge_transflector(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Transflector transflector_antiWedge_translator(Transflector self, Translator other) {
    return Transflector(self.g0_ * vec3(other.g0_.w) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), self.g1_ * vec4(other.g0_.w));
}

Translator translator_antiWedge_antiScalar(Translator self, AntiScalar other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

MultiVector translator_antiWedge_dualNum(Translator self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec4(0.0));
}

Flector translator_antiWedge_flector(Translator self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity translator_antiWedge_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.w) * other.g0_);
}

Horizon translator_antiWedge_horizon(Translator self, Horizon other) {
    return Horizon(self.g0_.w * other.g0_);
}

MultiVector translator_antiWedge_line(Translator self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

LineAtInfinity translator_antiWedge_lineAtInfinity(Translator self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector translator_antiWedge_lineAtOrigin(Translator self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector translator_antiWedge_motor(Translator self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVector translator_antiWedge_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(0.0, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g4_.z, 0.0, -other.g4_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g4_.y, other.g4_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g3_, vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity translator_antiWedge_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

MultiVector translator_antiWedge_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g1_.z, other.g0_.y), vec4(self.g0_.x) * vec4(0.0, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g2_.z, 0.0, -other.g2_.x, 0.0) + self.g0_.zzzw * vec4(-other.g2_.y, other.g2_.x, 0.0, other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Origin translator_antiWedge_origin(Translator self, Origin other) {
    return Origin(self.g0_.w * other.g0_);
}

Transflector translator_antiWedge_plane(Translator self, Plane other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.w) * other.g0_);
}

Transflector translator_antiWedge_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point translator_antiWedge_point(Translator self, Point other) {
    return Point(vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity translator_antiWedge_pointAtInfinity(Translator self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector translator_antiWedge_rotor(Translator self, Rotor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec4(0.0));
}

Scalar translator_antiWedge_scalar(Translator self, Scalar other) {
    return Scalar(self.g0_.w * other.g0_);
}

Transflector translator_antiWedge_transflector(Translator self, Transflector other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec4(self.g0_.w) * other.g1_);
}

Translator translator_antiWedge_translator(Translator self, Translator other) {
    return Translator(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

AntiScalar antiScalar_join_dualNum(AntiScalar self, DualNum other) {
    return AntiScalar(self.g0_ * other.g0_.x);
}

AntiScalar antiScalar_join_multiVector(AntiScalar self, MultiVector other) {
    return AntiScalar(self.g0_ * other.g0_.x);
}

AntiScalar antiScalar_join_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return AntiScalar(self.g0_ * other.g0_.x);
}

AntiScalar antiScalar_join_scalar(AntiScalar self, Scalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

AntiScalar dualNum_join_antiScalar(DualNum self, AntiScalar other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

DualNum dualNum_join_dualNum(DualNum self, DualNum other) {
    return DualNum(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x));
}

Flector dualNum_join_flector(DualNum self, Flector other) {
    return Flector(vec4(self.g0_.x) * other.g0_, vec4(self.g0_.x) * other.g1_);
}

FlectorAtInfinity dualNum_join_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_);
}

Horizon dualNum_join_horizon(DualNum self, Horizon other) {
    return Horizon(self.g0_.x * other.g0_);
}

Line dualNum_join_line(DualNum self, Line other) {
    return Line(vec3(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_);
}

LineAtInfinity dualNum_join_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * other.g0_);
}

LineAtOrigin dualNum_join_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.x) * other.g0_);
}

Motor dualNum_join_motor(DualNum self, Motor other) {
    return Motor(vec4(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_);
}

MultiVector dualNum_join_multiVector(DualNum self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x), vec4(self.g0_.x) * other.g1_, vec3(self.g0_.x) * other.g2_, vec3(self.g0_.x) * other.g3_, vec4(self.g0_.x) * other.g4_);
}

MultiVector dualNum_join_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ * vec2(other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * other.g2_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin dualNum_join_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_, vec3(self.g0_.x) * other.g2_);
}

Origin dualNum_join_origin(DualNum self, Origin other) {
    return Origin(self.g0_.x * other.g0_);
}

Plane dualNum_join_plane(DualNum self, Plane other) {
    return Plane(vec4(self.g0_.x) * other.g0_);
}

PlaneAtOrigin dualNum_join_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * other.g0_);
}

Point dualNum_join_point(DualNum self, Point other) {
    return Point(vec4(self.g0_.x) * other.g0_);
}

PointAtInfinity dualNum_join_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.x) * other.g0_);
}

Rotor dualNum_join_rotor(DualNum self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_);
}

DualNum dualNum_join_scalar(DualNum self, Scalar other) {
    return DualNum(self.g0_ * vec2(other.g0_));
}

Transflector dualNum_join_transflector(DualNum self, Transflector other) {
    return Transflector(vec3(self.g0_.x) * other.g0_, vec4(self.g0_.x) * other.g1_);
}

Translator dualNum_join_translator(DualNum self, Translator other) {
    return Translator(vec4(self.g0_.x) * other.g0_);
}

Flector flector_join_dualNum(Flector self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.x), self.g1_ * vec4(other.g0_.x));
}

Motor flector_join_flector(Flector self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Motor flector_join_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return Motor(vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar flector_join_horizon(Flector self, Horizon other) {
    return AntiScalar(self.g0_.w * other.g0_);
}

Plane flector_join_line(Flector self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

Plane flector_join_lineAtInfinity(Flector self, LineAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

PlaneAtOrigin flector_join_lineAtOrigin(Flector self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane flector_join_motor(Flector self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector flector_join_multiVector(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, other.g4_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g1_.w), self.g0_ * vec4(other.g0_.x), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0) + self.g1_ * vec4(other.g0_.x));
}

MultiVector flector_join_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.y) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), self.g0_ * vec4(other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z) + self.g1_ * vec4(other.g0_.x));
}

MultiVectorAtOrigin flector_join_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g0_.x), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

Rotor flector_join_origin(Flector self, Origin other) {
    return Rotor(self.g0_.xyzx * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

AntiScalar flector_join_plane(Flector self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

AntiScalar flector_join_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Motor flector_join_point(Flector self, Point other) {
    return Motor(self.g0_.xyzx * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Motor flector_join_pointAtInfinity(Flector self, PointAtInfinity other) {
    return Motor(vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin flector_join_rotor(Flector self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Flector flector_join_scalar(Flector self, Scalar other) {
    return Flector(self.g0_ * vec4(other.g0_), self.g1_ * vec4(other.g0_));
}

Motor flector_join_transflector(Flector self, Transflector other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Plane flector_join_translator(Flector self, Translator other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

FlectorAtInfinity flectorAtInfinity_join_dualNum(FlectorAtInfinity self, DualNum other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.x));
}

Motor flectorAtInfinity_join_flector(FlectorAtInfinity self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtInfinity flectorAtInfinity_join_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Plane flectorAtInfinity_join_line(FlectorAtInfinity self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

Horizon flectorAtInfinity_join_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin flectorAtInfinity_join_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane flectorAtInfinity_join_motor(FlectorAtInfinity self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVector flectorAtInfinity_join_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, -other.g1_.w), self.g0_.xyzx * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVectorAtInfinity flectorAtInfinity_join_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

MultiVectorAtOrigin flectorAtInfinity_join_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, -other.g0_.x), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

Rotor flectorAtInfinity_join_origin(FlectorAtInfinity self, Origin other) {
    return Rotor(vec4(0.0) - self.g0_ * vec4(other.g0_));
}

AntiScalar flectorAtInfinity_join_plane(FlectorAtInfinity self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar flectorAtInfinity_join_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Motor flectorAtInfinity_join_point(FlectorAtInfinity self, Point other) {
    return Motor(vec4(0.0) - self.g0_ * vec4(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtInfinity flectorAtInfinity_join_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin flectorAtInfinity_join_rotor(FlectorAtInfinity self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

FlectorAtInfinity flectorAtInfinity_join_scalar(FlectorAtInfinity self, Scalar other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

Translator flectorAtInfinity_join_transflector(FlectorAtInfinity self, Transflector other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g1_.z));
}

Horizon flectorAtInfinity_join_translator(FlectorAtInfinity self, Translator other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Horizon horizon_join_dualNum(Horizon self, DualNum other) {
    return Horizon(self.g0_ * other.g0_.x);
}

AntiScalar horizon_join_flector(Horizon self, Flector other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_.w);
}

MultiVector horizon_join_multiVector(Horizon self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * vec2(0.0, -other.g1_.w), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

Horizon horizon_join_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return Horizon(self.g0_ * other.g0_.x);
}

AntiScalar horizon_join_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_.x);
}

AntiScalar horizon_join_origin(Horizon self, Origin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_);
}

AntiScalar horizon_join_point(Horizon self, Point other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_.w);
}

Horizon horizon_join_scalar(Horizon self, Scalar other) {
    return Horizon(self.g0_ * other.g0_);
}

Line line_join_dualNum(Line self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x));
}

Plane line_join_flector(Line self, Flector other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Plane line_join_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar line_join_line(Line self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar line_join_lineAtInfinity(Line self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar line_join_lineAtOrigin(Line self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar line_join_motor(Line self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

MultiVector line_join_multiVector(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g2_.z), vec4(0.0), self.g0_ * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVector line_join_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z), vec4(0.0), self.g0_ * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin line_join_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g1_ * vec3(other.g0_.x));
}

PlaneAtOrigin line_join_origin(Line self, Origin other) {
    return PlaneAtOrigin(self.g1_ * vec3(other.g0_));
}

Plane line_join_point(Line self, Point other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Plane line_join_pointAtInfinity(Line self, PointAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar line_join_rotor(Line self, Rotor other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Line line_join_scalar(Line self, Scalar other) {
    return Line(self.g0_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

Plane line_join_transflector(Line self, Transflector other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar line_join_translator(Line self, Translator other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

LineAtInfinity lineAtInfinity_join_dualNum(LineAtInfinity self, DualNum other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.x));
}

Plane lineAtInfinity_join_flector(LineAtInfinity self, Flector other) {
    return Plane(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Horizon lineAtInfinity_join_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtInfinity_join_line(LineAtInfinity self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtInfinity_join_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtInfinity_join_motor(LineAtInfinity self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVector lineAtInfinity_join_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z), vec4(0.0), vec3(0.0), self.g0_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity lineAtInfinity_join_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g0_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin lineAtInfinity_join_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g0_ * vec3(other.g0_.x));
}

PlaneAtOrigin lineAtInfinity_join_origin(LineAtInfinity self, Origin other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Plane lineAtInfinity_join_point(LineAtInfinity self, Point other) {
    return Plane(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Horizon lineAtInfinity_join_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtInfinity_join_rotor(LineAtInfinity self, Rotor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

LineAtInfinity lineAtInfinity_join_scalar(LineAtInfinity self, Scalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

Horizon lineAtInfinity_join_transflector(LineAtInfinity self, Transflector other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

LineAtOrigin lineAtOrigin_join_dualNum(LineAtOrigin self, DualNum other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.x));
}

PlaneAtOrigin lineAtOrigin_join_flector(LineAtOrigin self, Flector other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin lineAtOrigin_join_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar lineAtOrigin_join_line(LineAtOrigin self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

AntiScalar lineAtOrigin_join_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtOrigin_join_motor(LineAtOrigin self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

MultiVectorAtOrigin lineAtOrigin_join_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z), self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

MultiVectorAtOrigin lineAtOrigin_join_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z), self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

PlaneAtOrigin lineAtOrigin_join_point(LineAtOrigin self, Point other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin lineAtOrigin_join_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtOrigin lineAtOrigin_join_scalar(LineAtOrigin self, Scalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

PlaneAtOrigin lineAtOrigin_join_transflector(LineAtOrigin self, Transflector other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar lineAtOrigin_join_translator(LineAtOrigin self, Translator other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Motor motor_join_dualNum(Motor self, DualNum other) {
    return Motor(self.g0_ * vec4(other.g0_.x), self.g1_ * vec3(other.g0_.x));
}

Plane motor_join_flector(Motor self, Flector other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Plane motor_join_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar motor_join_line(Motor self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar motor_join_lineAtInfinity(Motor self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar motor_join_lineAtOrigin(Motor self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar motor_join_motor(Motor self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

MultiVector motor_join_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g2_.z), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVector motor_join_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin motor_join_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g1_ * vec3(other.g0_.x));
}

PlaneAtOrigin motor_join_origin(Motor self, Origin other) {
    return PlaneAtOrigin(self.g1_ * vec3(other.g0_));
}

Plane motor_join_point(Motor self, Point other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Plane motor_join_pointAtInfinity(Motor self, PointAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar motor_join_rotor(Motor self, Rotor other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Motor motor_join_scalar(Motor self, Scalar other) {
    return Motor(self.g0_ * vec4(other.g0_), self.g1_ * vec3(other.g0_));
}

Plane motor_join_transflector(Motor self, Transflector other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar motor_join_translator(Motor self, Translator other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar multiVector_join_antiScalar(MultiVector self, AntiScalar other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

MultiVector multiVector_join_dualNum(MultiVector self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x), self.g1_ * vec4(other.g0_.x), self.g2_ * vec3(other.g0_.x), self.g3_ * vec3(other.g0_.x), self.g4_ * vec4(other.g0_.x));
}

MultiVector multiVector_join_flector(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, other.g1_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_, vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVector multiVector_join_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, other.g0_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.w) + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVector multiVector_join_horizon(MultiVector self, Horizon other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, other.g0_), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector multiVector_join_line(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_, vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector multiVector_join_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(0.0), vec3(self.g0_.x) * other.g0_, vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

MultiVectorAtOrigin multiVector_join_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVector_join_motor(MultiVector self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * other.g1_, vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector multiVector_join_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, other.g4_.x) + vec2(self.g1_.y) * vec2(0.0, other.g4_.y) + vec2(self.g1_.z) * vec2(0.0, other.g4_.z) + vec2(self.g1_.w) * vec2(0.0, other.g4_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g3_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g4_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + self.g1_ * vec4(other.g0_.x), vec3(self.g0_.x) * other.g2_ - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + self.g2_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g3_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g3_ * vec3(other.g0_.x), vec4(self.g0_.x) * other.g4_ + vec4(self.g1_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + self.g4_ * vec4(other.g0_.x));
}

MultiVector multiVector_join_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ * vec2(other.g0_.x) + vec2(self.g1_.w) * vec2(0.0, other.g0_.y) + vec2(self.g2_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g4_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g1_.z), vec4(self.g0_.x) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + self.g1_ * vec4(other.g0_.x), vec3(self.g1_.w) * other.g1_ + self.g2_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g3_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g1_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z) + vec4(self.g2_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + self.g4_ * vec4(other.g0_.x));
}

MultiVectorAtOrigin multiVector_join_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g1_.x) * vec2(0.0, other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, other.g2_.z) + vec2(self.g3_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g0_.x), vec3(self.g0_.x) * other.g1_ - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + self.g3_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVector_join_origin(MultiVector self, Origin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_, 0.0) + vec2(self.g4_.w) * vec2(0.0, -other.g0_), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), self.g3_ * vec3(other.g0_));
}

MultiVector multiVector_join_plane(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z) + vec2(self.g1_.w) * vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x) * other.g0_);
}

MultiVectorAtOrigin multiVector_join_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec3(0.0), vec3(self.g0_.x) * other.g0_);
}

MultiVector multiVector_join_point(MultiVector self, Point other) {
    return MultiVector(vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_, vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVector multiVector_join_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g1_.w) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVectorAtOrigin multiVector_join_rotor(MultiVector self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVector_join_scalar(MultiVector self, Scalar other) {
    return MultiVector(self.g0_ * vec2(other.g0_), self.g1_ * vec4(other.g0_), self.g2_ * vec3(other.g0_), self.g3_ * vec3(other.g0_), self.g4_ * vec4(other.g0_));
}

MultiVector multiVector_join_transflector(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, other.g1_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g1_.w) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVector multiVector_join_translator(MultiVector self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

AntiScalar multiVectorAtInfinity_join_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

MultiVector multiVectorAtInfinity_join_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_, vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0), self.g2_ * vec3(other.g0_.x), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVector multiVectorAtInfinity_join_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, -other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, other.g1_.z), vec4(self.g0_.x) * other.g0_, vec3(0.0) - self.g1_ * vec3(other.g0_.w), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_join_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Horizon multiVectorAtInfinity_join_horizon(MultiVectorAtInfinity self, Horizon other) {
    return Horizon(self.g0_.x * other.g0_);
}

MultiVector multiVectorAtInfinity_join_line(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_, vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_join_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec3(0.0), vec3(self.g0_.x) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtInfinity_join_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtInfinity_join_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * other.g1_, vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVector multiVectorAtInfinity_join_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, -other.g1_.w) + vec2(self.g1_.x) * vec2(0.0, other.g4_.x) + vec2(self.g1_.y) * vec2(0.0, other.g4_.y) + vec2(self.g1_.z) * vec2(0.0, other.g4_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g2_.z), vec4(self.g0_.x) * other.g1_ + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(self.g0_.x) * other.g2_ - self.g1_ * vec3(other.g1_.w), vec3(self.g0_.x) * other.g3_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x), vec4(self.g0_.x) * other.g4_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g2_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_join_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z), vec3(self.g0_.x) * other.g1_ + self.g1_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtInfinity_join_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, other.g2_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z), vec3(self.g0_.x) * other.g1_ - self.g1_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtInfinity_join_origin(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), vec3(0.0) - self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_join_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtInfinity_join_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec3(0.0), vec3(self.g0_.x) * other.g0_);
}

MultiVector multiVectorAtInfinity_join_point(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_, vec3(0.0) - self.g1_ * vec3(other.g0_.w), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_join_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_join_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_join_scalar(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_join_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVector multiVectorAtInfinity_join_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVectorAtOrigin multiVectorAtOrigin_join_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_.x), self.g1_ * vec3(other.g0_.x), self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_join_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g1_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_join_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar multiVectorAtOrigin_join_horizon(MultiVectorAtOrigin self, Horizon other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_join_line(MultiVectorAtOrigin self, Line other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), vec3(self.g0_.x) * other.g1_);
}

MultiVectorAtOrigin multiVectorAtOrigin_join_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec3(0.0), vec3(self.g0_.x) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_join_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), vec3(self.g0_.x) * other.g1_);
}

MultiVectorAtOrigin multiVectorAtOrigin_join_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_.x, other.g4_.w) + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z), vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + self.g1_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g3_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_join_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z), vec3(self.g0_.x) * other.g1_ + self.g1_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x));
}

AntiScalar multiVectorAtOrigin_join_plane(MultiVectorAtOrigin self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.w);
}

MultiVectorAtOrigin multiVectorAtOrigin_join_point(MultiVectorAtOrigin self, Point other) {
    return MultiVectorAtOrigin(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_join_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_join_scalar(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVectorAtOrigin multiVectorAtOrigin_join_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g1_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_join_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Origin origin_join_dualNum(Origin self, DualNum other) {
    return Origin(self.g0_ * other.g0_.x);
}

Rotor origin_join_flector(Origin self, Flector other) {
    return Rotor(vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w));
}

Rotor origin_join_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

AntiScalar origin_join_horizon(Origin self, Horizon other) {
    return AntiScalar(self.g0_ * other.g0_);
}

PlaneAtOrigin origin_join_line(Origin self, Line other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g1_);
}

PlaneAtOrigin origin_join_lineAtInfinity(Origin self, LineAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

PlaneAtOrigin origin_join_motor(Origin self, Motor other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin origin_join_multiVector(Origin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * vec2(other.g0_.x, other.g4_.w), vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_) * other.g3_);
}

MultiVectorAtOrigin origin_join_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

AntiScalar origin_join_plane(Origin self, Plane other) {
    return AntiScalar(self.g0_ * other.g0_.w);
}

LineAtOrigin origin_join_point(Origin self, Point other) {
    return LineAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

LineAtOrigin origin_join_pointAtInfinity(Origin self, PointAtInfinity other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Origin origin_join_scalar(Origin self, Scalar other) {
    return Origin(self.g0_ * other.g0_);
}

Rotor origin_join_transflector(Origin self, Transflector other) {
    return Rotor(vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w));
}

PlaneAtOrigin origin_join_translator(Origin self, Translator other) {
    return PlaneAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Plane plane_join_dualNum(Plane self, DualNum other) {
    return Plane(self.g0_ * vec4(other.g0_.x));
}

AntiScalar plane_join_flector(Plane self, Flector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z - self.g0_.w * other.g0_.w);
}

AntiScalar plane_join_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVector plane_join_multiVector(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, -other.g1_.w), vec4(0.0), vec3(0.0), vec3(0.0), self.g0_ * vec4(other.g0_.x));
}

MultiVector plane_join_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec4(0.0), vec3(0.0), vec3(0.0), self.g0_ * vec4(other.g0_.x));
}

AntiScalar plane_join_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_.x);
}

AntiScalar plane_join_origin(Plane self, Origin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_);
}

AntiScalar plane_join_point(Plane self, Point other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z - self.g0_.w * other.g0_.w);
}

AntiScalar plane_join_pointAtInfinity(Plane self, PointAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Plane plane_join_scalar(Plane self, Scalar other) {
    return Plane(self.g0_ * vec4(other.g0_));
}

AntiScalar plane_join_transflector(Plane self, Transflector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin planeAtOrigin_join_dualNum(PlaneAtOrigin self, DualNum other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_.x));
}

AntiScalar planeAtOrigin_join_flector(PlaneAtOrigin self, Flector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar planeAtOrigin_join_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVectorAtOrigin planeAtOrigin_join_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g0_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin planeAtOrigin_join_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g0_ * vec3(other.g0_.x));
}

AntiScalar planeAtOrigin_join_point(PlaneAtOrigin self, Point other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar planeAtOrigin_join_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin planeAtOrigin_join_scalar(PlaneAtOrigin self, Scalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

AntiScalar planeAtOrigin_join_transflector(PlaneAtOrigin self, Transflector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Point point_join_dualNum(Point self, DualNum other) {
    return Point(self.g0_ * vec4(other.g0_.x));
}

Motor point_join_flector(Point self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Motor point_join_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return Motor(vec4(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar point_join_horizon(Point self, Horizon other) {
    return AntiScalar(self.g0_.w * other.g0_);
}

Plane point_join_line(Point self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

Plane point_join_lineAtInfinity(Point self, LineAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

PlaneAtOrigin point_join_lineAtOrigin(Point self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane point_join_motor(Point self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector point_join_multiVector(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, other.g4_.w), self.g0_ * vec4(other.g0_.x), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0));
}

MultiVector point_join_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.y), self.g0_ * vec4(other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z));
}

MultiVectorAtOrigin point_join_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

LineAtOrigin point_join_origin(Point self, Origin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

AntiScalar point_join_plane(Point self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

AntiScalar point_join_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Line point_join_point(Point self, Point other) {
    return Line(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Line point_join_pointAtInfinity(Point self, PointAtInfinity other) {
    return Line(vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin point_join_rotor(Point self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Point point_join_scalar(Point self, Scalar other) {
    return Point(self.g0_ * vec4(other.g0_));
}

Motor point_join_transflector(Point self, Transflector other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Plane point_join_translator(Point self, Translator other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

PointAtInfinity pointAtInfinity_join_dualNum(PointAtInfinity self, DualNum other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.x));
}

Motor pointAtInfinity_join_flector(PointAtInfinity self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtInfinity pointAtInfinity_join_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Plane pointAtInfinity_join_line(PointAtInfinity self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

Horizon pointAtInfinity_join_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin pointAtInfinity_join_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane pointAtInfinity_join_motor(PointAtInfinity self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVector pointAtInfinity_join_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z));
}

MultiVectorAtInfinity pointAtInfinity_join_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z), self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

MultiVectorAtOrigin pointAtInfinity_join_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z), vec3(0.0) - self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

LineAtOrigin pointAtInfinity_join_origin(PointAtInfinity self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

AntiScalar pointAtInfinity_join_plane(PointAtInfinity self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar pointAtInfinity_join_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Line pointAtInfinity_join_point(PointAtInfinity self, Point other) {
    return Line(vec3(0.0) - self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtInfinity pointAtInfinity_join_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin pointAtInfinity_join_rotor(PointAtInfinity self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

PointAtInfinity pointAtInfinity_join_scalar(PointAtInfinity self, Scalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

Translator pointAtInfinity_join_transflector(PointAtInfinity self, Transflector other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g1_.z));
}

Horizon pointAtInfinity_join_translator(PointAtInfinity self, Translator other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Rotor rotor_join_dualNum(Rotor self, DualNum other) {
    return Rotor(self.g0_ * vec4(other.g0_.x));
}

PlaneAtOrigin rotor_join_flector(Rotor self, Flector other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin rotor_join_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar rotor_join_line(Rotor self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

AntiScalar rotor_join_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar rotor_join_motor(Rotor self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

MultiVectorAtOrigin rotor_join_multiVector(Rotor self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

MultiVectorAtOrigin rotor_join_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

PlaneAtOrigin rotor_join_point(Rotor self, Point other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin rotor_join_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Rotor rotor_join_scalar(Rotor self, Scalar other) {
    return Rotor(self.g0_ * vec4(other.g0_));
}

PlaneAtOrigin rotor_join_transflector(Rotor self, Transflector other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar rotor_join_translator(Rotor self, Translator other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar scalar_join_antiScalar(Scalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

DualNum scalar_join_dualNum(Scalar self, DualNum other) {
    return DualNum(vec2(self.g0_) * other.g0_);
}

Flector scalar_join_flector(Scalar self, Flector other) {
    return Flector(vec4(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

FlectorAtInfinity scalar_join_flectorAtInfinity(Scalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

Horizon scalar_join_horizon(Scalar self, Horizon other) {
    return Horizon(self.g0_ * other.g0_);
}

Line scalar_join_line(Scalar self, Line other) {
    return Line(vec3(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

LineAtInfinity scalar_join_lineAtInfinity(Scalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtOrigin scalar_join_lineAtOrigin(Scalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Motor scalar_join_motor(Scalar self, Motor other) {
    return Motor(vec4(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

MultiVector scalar_join_multiVector(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g3_, vec4(self.g0_) * other.g4_);
}

MultiVectorAtInfinity scalar_join_multiVectorAtInfinity(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

MultiVectorAtOrigin scalar_join_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Origin scalar_join_origin(Scalar self, Origin other) {
    return Origin(self.g0_ * other.g0_);
}

Plane scalar_join_plane(Scalar self, Plane other) {
    return Plane(vec4(self.g0_) * other.g0_);
}

PlaneAtOrigin scalar_join_planeAtOrigin(Scalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Point scalar_join_point(Scalar self, Point other) {
    return Point(vec4(self.g0_) * other.g0_);
}

PointAtInfinity scalar_join_pointAtInfinity(Scalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

Rotor scalar_join_rotor(Scalar self, Rotor other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

Scalar scalar_join_scalar(Scalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Transflector scalar_join_transflector(Scalar self, Transflector other) {
    return Transflector(vec3(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

Translator scalar_join_translator(Scalar self, Translator other) {
    return Translator(vec4(self.g0_) * other.g0_);
}

Transflector transflector_join_dualNum(Transflector self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.x), self.g1_ * vec4(other.g0_.x));
}

Motor transflector_join_flector(Transflector self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Translator transflector_join_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Plane transflector_join_line(Transflector self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

Horizon transflector_join_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin transflector_join_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane transflector_join_motor(Transflector self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVector transflector_join_multiVector(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g1_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + self.g1_ * vec4(other.g0_.x));
}

MultiVector transflector_join_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + self.g1_ * vec4(other.g0_.x));
}

MultiVectorAtOrigin transflector_join_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g0_.x), vec3(0.0) - self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

Rotor transflector_join_origin(Transflector self, Origin other) {
    return Rotor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

AntiScalar transflector_join_plane(Transflector self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar transflector_join_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Motor transflector_join_point(Transflector self, Point other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Translator transflector_join_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

PlaneAtOrigin transflector_join_rotor(Transflector self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Transflector transflector_join_scalar(Transflector self, Scalar other) {
    return Transflector(self.g0_ * vec3(other.g0_), self.g1_ * vec4(other.g0_));
}

Translator transflector_join_transflector(Transflector self, Transflector other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Horizon transflector_join_translator(Transflector self, Translator other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Translator translator_join_dualNum(Translator self, DualNum other) {
    return Translator(self.g0_ * vec4(other.g0_.x));
}

Plane translator_join_flector(Translator self, Flector other) {
    return Plane(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Horizon translator_join_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar translator_join_line(Translator self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar translator_join_lineAtOrigin(Translator self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar translator_join_motor(Translator self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVector translator_join_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVector translator_join_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin translator_join_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x));
}

PlaneAtOrigin translator_join_origin(Translator self, Origin other) {
    return PlaneAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Plane translator_join_point(Translator self, Point other) {
    return Plane(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Horizon translator_join_pointAtInfinity(Translator self, PointAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar translator_join_rotor(Translator self, Rotor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Translator translator_join_scalar(Translator self, Scalar other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

Horizon translator_join_transflector(Translator self, Transflector other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar antiScalar_meet_antiScalar(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

DualNum antiScalar_meet_dualNum(AntiScalar self, DualNum other) {
    return DualNum(vec2(self.g0_) * other.g0_);
}

Flector antiScalar_meet_flector(AntiScalar self, Flector other) {
    return Flector(vec4(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

FlectorAtInfinity antiScalar_meet_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

Horizon antiScalar_meet_horizon(AntiScalar self, Horizon other) {
    return Horizon(self.g0_ * other.g0_);
}

Line antiScalar_meet_line(AntiScalar self, Line other) {
    return Line(vec3(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

LineAtInfinity antiScalar_meet_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtOrigin antiScalar_meet_lineAtOrigin(AntiScalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Motor antiScalar_meet_motor(AntiScalar self, Motor other) {
    return Motor(vec4(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

MultiVector antiScalar_meet_multiVector(AntiScalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g3_, vec4(self.g0_) * other.g4_);
}

MultiVectorAtInfinity antiScalar_meet_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

MultiVectorAtOrigin antiScalar_meet_multiVectorAtOrigin(AntiScalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Origin antiScalar_meet_origin(AntiScalar self, Origin other) {
    return Origin(self.g0_ * other.g0_);
}

Plane antiScalar_meet_plane(AntiScalar self, Plane other) {
    return Plane(vec4(self.g0_) * other.g0_);
}

PlaneAtOrigin antiScalar_meet_planeAtOrigin(AntiScalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Point antiScalar_meet_point(AntiScalar self, Point other) {
    return Point(vec4(self.g0_) * other.g0_);
}

PointAtInfinity antiScalar_meet_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

Rotor antiScalar_meet_rotor(AntiScalar self, Rotor other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

Scalar antiScalar_meet_scalar(AntiScalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Transflector antiScalar_meet_transflector(AntiScalar self, Transflector other) {
    return Transflector(vec3(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

Translator antiScalar_meet_translator(AntiScalar self, Translator other) {
    return Translator(vec4(self.g0_) * other.g0_);
}

DualNum dualNum_meet_antiScalar(DualNum self, AntiScalar other) {
    return DualNum(self.g0_ * vec2(other.g0_));
}

DualNum dualNum_meet_dualNum(DualNum self, DualNum other) {
    return DualNum(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_);
}

Flector dualNum_meet_flector(DualNum self, Flector other) {
    return Flector(vec4(self.g0_.y) * other.g0_, vec4(self.g0_.y) * other.g1_);
}

FlectorAtInfinity dualNum_meet_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.y) * other.g0_);
}

Horizon dualNum_meet_horizon(DualNum self, Horizon other) {
    return Horizon(self.g0_.y * other.g0_);
}

Line dualNum_meet_line(DualNum self, Line other) {
    return Line(vec3(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_);
}

LineAtInfinity dualNum_meet_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.y) * other.g0_);
}

LineAtOrigin dualNum_meet_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.y) * other.g0_);
}

MultiVector dualNum_meet_motor(DualNum self, Motor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.y) * other.g1_, vec4(0.0));
}

MultiVector dualNum_meet_multiVector(DualNum self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_, vec4(self.g0_.y) * other.g1_, vec3(self.g0_.y) * other.g2_, vec3(self.g0_.y) * other.g3_, vec4(self.g0_.y) * other.g4_);
}

MultiVectorAtInfinity dualNum_meet_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_, vec3(self.g0_.y) * other.g2_);
}

MultiVector dualNum_meet_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ * vec2(other.g0_.y), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x), vec3(self.g0_.y) * other.g1_, vec3(0.0), vec4(self.g0_.y) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Origin dualNum_meet_origin(DualNum self, Origin other) {
    return Origin(self.g0_.y * other.g0_);
}

Plane dualNum_meet_plane(DualNum self, Plane other) {
    return Plane(vec4(self.g0_.y) * other.g0_);
}

PlaneAtOrigin dualNum_meet_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.y) * other.g0_);
}

Point dualNum_meet_point(DualNum self, Point other) {
    return Point(vec4(self.g0_.y) * other.g0_);
}

PointAtInfinity dualNum_meet_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.y) * other.g0_);
}

MultiVector dualNum_meet_rotor(DualNum self, Rotor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(0.0), vec4(0.0));
}

Scalar dualNum_meet_scalar(DualNum self, Scalar other) {
    return Scalar(self.g0_.y * other.g0_);
}

Transflector dualNum_meet_transflector(DualNum self, Transflector other) {
    return Transflector(vec3(self.g0_.y) * other.g0_, vec4(self.g0_.y) * other.g1_);
}

MultiVector dualNum_meet_translator(DualNum self, Translator other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Flector flector_meet_antiScalar(Flector self, AntiScalar other) {
    return Flector(self.g0_ * vec4(other.g0_), self.g1_ * vec4(other.g0_));
}

Flector flector_meet_dualNum(Flector self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.y), self.g1_ * vec4(other.g0_.y));
}

MultiVector flector_meet_flector(Flector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity flector_meet_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w));
}

MultiVectorAtInfinity flector_meet_horizon(Flector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

Point flector_meet_line(Flector self, Line other) {
    return Point(vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity flector_meet_lineAtInfinity(Flector self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Point flector_meet_lineAtOrigin(Flector self, LineAtOrigin other) {
    return Point(vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector flector_meet_motor(Flector self, Motor other) {
    return Flector(self.g0_ * vec4(other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w));
}

MultiVector flector_meet_multiVector(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g4_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g1_.w, 0.0), self.g0_ * vec4(other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g4_.w) + vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), self.g1_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity flector_meet_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g1_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.y));
}

MultiVector flector_meet_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.x, 0.0), self.g0_ * vec4(other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g1_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g1_.w) * other.g2_, self.g1_ * vec4(other.g0_.y));
}

Scalar flector_meet_origin(Flector self, Origin other) {
    return Scalar(self.g1_.w * other.g0_);
}

MultiVector flector_meet_plane(Flector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g0_.w, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector flector_meet_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Scalar flector_meet_point(Flector self, Point other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z + self.g1_.w * other.g0_.w);
}

Scalar flector_meet_pointAtInfinity(Flector self, PointAtInfinity other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Flector flector_meet_rotor(Flector self, Rotor other) {
    return Flector(self.g0_ * vec4(other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g1_ * vec4(other.g0_.w));
}

MultiVector flector_meet_transflector(Flector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Flector flector_meet_translator(Flector self, Translator other) {
    return Flector(self.g0_ * vec4(other.g0_.w) + vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g1_ * vec4(other.g0_.w));
}

FlectorAtInfinity flectorAtInfinity_meet_antiScalar(FlectorAtInfinity self, AntiScalar other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

FlectorAtInfinity flectorAtInfinity_meet_dualNum(FlectorAtInfinity self, DualNum other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity flectorAtInfinity_meet_flector(FlectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

PointAtInfinity flectorAtInfinity_meet_line(FlectorAtInfinity self, Line other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

PointAtInfinity flectorAtInfinity_meet_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

FlectorAtInfinity flectorAtInfinity_meet_motor(FlectorAtInfinity self, Motor other) {
    return FlectorAtInfinity(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_meet_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g1_.w, other.g0_.y), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z));
}

MultiVectorAtInfinity flectorAtInfinity_meet_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

Scalar flectorAtInfinity_meet_origin(FlectorAtInfinity self, Origin other) {
    return Scalar(self.g0_.w * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_meet_plane(FlectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity flectorAtInfinity_meet_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * other.g0_);
}

Scalar flectorAtInfinity_meet_point(FlectorAtInfinity self, Point other) {
    return Scalar(self.g0_.w * other.g0_.w);
}

FlectorAtInfinity flectorAtInfinity_meet_rotor(FlectorAtInfinity self, Rotor other) {
    return FlectorAtInfinity(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

MultiVectorAtInfinity flectorAtInfinity_meet_transflector(FlectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

FlectorAtInfinity flectorAtInfinity_meet_translator(FlectorAtInfinity self, Translator other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.w));
}

Horizon horizon_meet_antiScalar(Horizon self, AntiScalar other) {
    return Horizon(self.g0_ * other.g0_);
}

Horizon horizon_meet_dualNum(Horizon self, DualNum other) {
    return Horizon(self.g0_ * other.g0_.y);
}

MultiVectorAtInfinity horizon_meet_flector(Horizon self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g0_.w, 0.0), vec3(0.0), vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

PointAtInfinity horizon_meet_line(Horizon self, Line other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

PointAtInfinity horizon_meet_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

FlectorAtInfinity horizon_meet_motor(Horizon self, Motor other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

MultiVectorAtInfinity horizon_meet_multiVector(Horizon self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * vec2(other.g1_.w, other.g0_.y), vec3(self.g0_) * other.g2_, vec3(self.g0_) * vec3(other.g4_.x, other.g4_.y, other.g4_.z));
}

MultiVectorAtInfinity horizon_meet_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Scalar horizon_meet_origin(Horizon self, Origin other) {
    return Scalar(self.g0_ * other.g0_);
}

LineAtInfinity horizon_meet_plane(Horizon self, Plane other) {
    return LineAtInfinity(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

LineAtInfinity horizon_meet_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

Scalar horizon_meet_point(Horizon self, Point other) {
    return Scalar(self.g0_ * other.g0_.w);
}

FlectorAtInfinity horizon_meet_rotor(Horizon self, Rotor other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

LineAtInfinity horizon_meet_transflector(Horizon self, Transflector other) {
    return LineAtInfinity(vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

Horizon horizon_meet_translator(Horizon self, Translator other) {
    return Horizon(self.g0_ * other.g0_.w);
}

Line line_meet_antiScalar(Line self, AntiScalar other) {
    return Line(self.g0_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

Line line_meet_dualNum(Line self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.y));
}

Point line_meet_flector(Line self, Flector other) {
    return Point(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0));
}

PointAtInfinity line_meet_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

PointAtInfinity line_meet_horizon(Line self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

Scalar line_meet_line(Line self, Line other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Scalar line_meet_lineAtInfinity(Line self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar line_meet_lineAtOrigin(Line self, LineAtOrigin other) {
    return Scalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

MultiVector line_meet_motor(Line self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

MultiVector line_meet_multiVector(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g4_.z, 0.0, -other.g4_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g4_.y, other.g4_.x, 0.0, 0.0), self.g0_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.y), vec4(0.0));
}

MultiVectorAtInfinity line_meet_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

MultiVector line_meet_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g2_.z, 0.0, -other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g2_.y, other.g2_.x, 0.0, 0.0), self.g0_ * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.y), vec4(0.0));
}

Point line_meet_plane(Line self, Plane other) {
    return Point(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0));
}

Point line_meet_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return Point(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0));
}

MultiVector line_meet_rotor(Line self, Rotor other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

Point line_meet_transflector(Line self, Transflector other) {
    return Point(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0));
}

MultiVector line_meet_translator(Line self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

LineAtInfinity lineAtInfinity_meet_antiScalar(LineAtInfinity self, AntiScalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

LineAtInfinity lineAtInfinity_meet_dualNum(LineAtInfinity self, DualNum other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.y));
}

PointAtInfinity lineAtInfinity_meet_flector(LineAtInfinity self, Flector other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

Scalar lineAtInfinity_meet_line(LineAtInfinity self, Line other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar lineAtInfinity_meet_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVectorAtInfinity lineAtInfinity_meet_motor(LineAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), self.g0_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity lineAtInfinity_meet_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), self.g0_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity lineAtInfinity_meet_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), self.g0_ * vec3(other.g0_.y));
}

PointAtInfinity lineAtInfinity_meet_plane(LineAtInfinity self, Plane other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PointAtInfinity lineAtInfinity_meet_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtInfinity lineAtInfinity_meet_rotor(LineAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), self.g0_ * vec3(other.g0_.w));
}

PointAtInfinity lineAtInfinity_meet_transflector(LineAtInfinity self, Transflector other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

LineAtInfinity lineAtInfinity_meet_translator(LineAtInfinity self, Translator other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.w));
}

LineAtOrigin lineAtOrigin_meet_antiScalar(LineAtOrigin self, AntiScalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

LineAtOrigin lineAtOrigin_meet_dualNum(LineAtOrigin self, DualNum other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.y));
}

Point lineAtOrigin_meet_flector(LineAtOrigin self, Flector other) {
    return Point(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

PointAtInfinity lineAtOrigin_meet_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

PointAtInfinity lineAtOrigin_meet_horizon(LineAtOrigin self, Horizon other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

Scalar lineAtOrigin_meet_line(LineAtOrigin self, Line other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

Scalar lineAtOrigin_meet_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVector lineAtOrigin_meet_motor(LineAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(0.0), vec4(0.0));
}

MultiVector lineAtOrigin_meet_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g3_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z), self.g0_ * vec3(other.g0_.y), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity lineAtOrigin_meet_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

MultiVectorAtOrigin lineAtOrigin_meet_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

Point lineAtOrigin_meet_plane(LineAtOrigin self, Plane other) {
    return Point(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Origin lineAtOrigin_meet_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return Origin(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

LineAtOrigin lineAtOrigin_meet_rotor(LineAtOrigin self, Rotor other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.w));
}

Point lineAtOrigin_meet_transflector(LineAtOrigin self, Transflector other) {
    return Point(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVector lineAtOrigin_meet_translator(LineAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), self.g0_ * vec3(other.g0_.w), vec3(0.0), vec4(0.0));
}

Motor motor_meet_antiScalar(Motor self, AntiScalar other) {
    return Motor(self.g0_ * vec4(other.g0_), self.g1_ * vec3(other.g0_));
}

MultiVector motor_meet_dualNum(Motor self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), self.g1_ * vec3(other.g0_.y), vec4(0.0));
}

Flector motor_meet_flector(Motor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity motor_meet_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

FlectorAtInfinity motor_meet_horizon(Motor self, Horizon other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector motor_meet_line(Motor self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity motor_meet_lineAtInfinity(Motor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * other.g0_);
}

MultiVector motor_meet_lineAtOrigin(Motor self, LineAtOrigin other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector motor_meet_motor(Motor self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g1_.z, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.w) * other.g1_ + self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

MultiVector motor_meet_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g0_.w) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0), vec4(self.g0_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * other.g1_ + vec4(self.g1_.x) * vec4(0.0, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g4_.z, 0.0, -other.g4_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g4_.y, other.g4_.x, 0.0, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.w) * other.g3_ + self.g1_ * vec3(other.g0_.y), vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity motor_meet_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

MultiVector motor_meet_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g2_.z, 0.0, -other.g2_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g2_.y, other.g2_.x, 0.0, 0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, self.g1_ * vec3(other.g0_.y), vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Origin motor_meet_origin(Motor self, Origin other) {
    return Origin(self.g0_.w * other.g0_);
}

Flector motor_meet_plane(Motor self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.w) * other.g0_);
}

Flector motor_meet_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point motor_meet_point(Motor self, Point other) {
    return Point(vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity motor_meet_pointAtInfinity(Motor self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector motor_meet_rotor(Motor self, Rotor other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

Scalar motor_meet_scalar(Motor self, Scalar other) {
    return Scalar(self.g0_.w * other.g0_);
}

Flector motor_meet_transflector(Motor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g1_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g1_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec4(self.g0_.w) * other.g1_);
}

MultiVector motor_meet_translator(Motor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec4(0.0));
}

MultiVector multiVector_meet_antiScalar(MultiVector self, AntiScalar other) {
    return MultiVector(self.g0_ * vec2(other.g0_), self.g1_ * vec4(other.g0_), self.g2_ * vec3(other.g0_), self.g3_ * vec3(other.g0_), self.g4_ * vec4(other.g0_));
}

MultiVector multiVector_meet_dualNum(MultiVector self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_, self.g1_ * vec4(other.g0_.y), self.g2_ * vec3(other.g0_.y), self.g3_ * vec3(other.g0_.y), self.g4_ * vec4(other.g0_.y));
}

MultiVector multiVector_meet_flector(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g2_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec3(self.g4_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g1_.w) + vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.y) * other.g1_);
}

MultiVectorAtInfinity multiVector_meet_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g2_ * vec3(other.g0_.w), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVector_meet_horizon(MultiVector self, Horizon other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(0.0, other.g0_) + vec2(self.g1_.w) * vec2(-other.g0_, 0.0), self.g2_ * vec3(other.g0_), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_));
}

MultiVector multiVector_meet_line(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity multiVector_meet_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g4_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g4_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g4_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_);
}

MultiVector multiVector_meet_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVector(vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z), vec3(self.g0_.y) * other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector multiVector_meet_motor(MultiVector self, Motor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w) + vec4(self.g4_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g4_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g4_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g4_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g2_ * vec3(other.g0_.w), vec3(self.g0_.y) * other.g1_ + self.g3_ * vec3(other.g0_.w), self.g4_ * vec4(other.g0_.w));
}

MultiVector multiVector_meet_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g4_.w, 0.0) + vec2(self.g2_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g3_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g4_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.y) * other.g1_ + self.g1_ * vec4(other.g0_.y) + vec4(self.g2_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g2_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g4_.z, 0.0, -other.g4_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g4_.y, other.g4_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g4_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g4_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z) + vec4(self.g4_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g0_.y) * other.g2_ + self.g2_ * vec3(other.g0_.y) + vec3(self.g4_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g4_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g4_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(self.g0_.y) * other.g3_ + self.g3_ * vec3(other.g0_.y) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g4_.w) + vec3(self.g4_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), vec4(self.g0_.y) * other.g4_ + self.g4_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity multiVector_meet_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.w) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g4_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + self.g2_ * vec3(other.g0_.y) + vec3(self.g4_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g4_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g4_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(self.g0_.y) * other.g2_ - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.y));
}

MultiVector multiVector_meet_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVector(self.g0_ * vec2(other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g3_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g0_.x, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x) + self.g1_ * vec4(other.g0_.y) + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g2_.z, 0.0, -other.g2_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g2_.y, other.g2_.x, 0.0, 0.0) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g4_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.y) * other.g1_ + self.g2_ * vec3(other.g0_.y) + vec3(self.g4_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g4_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g4_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), self.g3_ * vec3(other.g0_.y) + vec3(self.g4_.w) * other.g2_, vec4(self.g0_.y) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0) + self.g4_ * vec4(other.g0_.y));
}

MultiVector multiVector_meet_origin(MultiVector self, Origin other) {
    return MultiVector(vec2(self.g4_.w) * vec2(other.g0_, 0.0), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_), vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVector multiVector_meet_plane(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g0_.w, 0.0), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g0_.w) + vec3(self.g4_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g0_.y) * other.g0_);
}

MultiVector multiVector_meet_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0), vec3(self.g4_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g4_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g4_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g4_.w) * other.g0_, vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

MultiVector multiVector_meet_point(MultiVector self, Point other) {
    return MultiVector(vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g4_.w) * vec2(other.g0_.w, 0.0), vec4(self.g0_.y) * other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multiVector_meet_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVector multiVector_meet_rotor(MultiVector self, Rotor other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g3_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g3_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g3_.z) * vec2(-other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w) + vec4(self.g4_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g4_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g4_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g2_ * vec3(other.g0_.w), self.g3_ * vec3(other.g0_.w), self.g4_ * vec4(other.g0_.w));
}

Scalar multiVector_meet_scalar(MultiVector self, Scalar other) {
    return Scalar(self.g0_.y * other.g0_);
}

MultiVector multiVector_meet_transflector(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(-other.g1_.w, 0.0) + vec2(self.g4_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g4_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g4_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g2_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g3_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g3_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g3_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0), vec3(self.g4_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g4_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g4_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g4_.x, self.g4_.y, self.g4_.z) * vec3(other.g1_.w) + vec3(self.g4_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(self.g0_.y) * other.g1_);
}

MultiVector multiVector_meet_translator(MultiVector self, Translator other) {
    return MultiVector(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w) + vec4(self.g4_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g4_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g4_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g2_ * vec3(other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g3_ * vec3(other.g0_.w), self.g4_ * vec4(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.y), self.g1_ * vec3(other.g0_.y), self.g2_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.y) * vec2(other.g0_.w, 0.0) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_line(MultiVectorAtInfinity self, Line other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.w, other.g0_.y) + vec2(self.g1_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g2_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g2_.z, 0.0), vec3(self.g0_.y) * other.g2_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g2_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g2_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(self.g0_.y) * vec3(other.g4_.x, other.g4_.y, other.g4_.z) + self.g2_ * vec3(other.g0_.y));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g2_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g2_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g0_.y) * other.g2_ + self.g2_ * vec3(other.g0_.y));
}

Scalar multiVectorAtInfinity_meet_origin(MultiVectorAtInfinity self, Origin other) {
    return Scalar(self.g0_.y * other.g0_);
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_);
}

Scalar multiVectorAtInfinity_meet_point(MultiVectorAtInfinity self, Point other) {
    return Scalar(self.g0_.y * other.g0_.w);
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(self.g0_.y) * vec3(other.g1_.x, other.g1_.y, other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_meet_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_.w), self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtOrigin multiVectorAtOrigin_meet_antiScalar(MultiVectorAtOrigin self, AntiScalar other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_meet_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVector(vec2(self.g0_.y) * other.g0_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y), self.g1_ * vec3(other.g0_.y), vec3(0.0), vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVector multiVectorAtOrigin_meet_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.w, 0.0) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * other.g0_ + vec4(self.g1_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z), vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - self.g2_ * vec3(other.g1_.w), vec4(self.g0_.y) * other.g1_);
}

MultiVectorAtInfinity multiVectorAtOrigin_meet_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(-other.g0_.w) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec3(0.0) - self.g2_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity multiVectorAtOrigin_meet_horizon(MultiVectorAtOrigin self, Horizon other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(-other.g0_), self.g1_ * vec3(other.g0_), vec3(0.0) - self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtOrigin_meet_line(MultiVectorAtOrigin self, Line other) {
    return MultiVector(vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.y) * other.g0_, vec3(self.g0_.y) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity multiVectorAtOrigin_meet_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g2_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g2_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_meet_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVector multiVectorAtOrigin_meet_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.w) + vec4(self.g2_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g2_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g2_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), vec3(self.g0_.y) * other.g1_, vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

MultiVector multiVectorAtOrigin_meet_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.w, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g2_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g0_.y) * other.g1_ + vec4(self.g1_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g1_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g2_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g2_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g2_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z), vec3(self.g0_.y) * other.g2_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g2_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g2_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(self.g0_.y) * other.g3_ - self.g2_ * vec3(other.g4_.w), vec4(self.g0_.y) * other.g4_ + vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVectorAtInfinity multiVectorAtOrigin_meet_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g2_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g2_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g2_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(self.g0_.y) * other.g2_ - self.g2_ * vec3(other.g0_.y));
}

MultiVectorAtOrigin multiVectorAtOrigin_meet_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.y) * other.g0_ + vec2(self.g1_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g2_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.y) * other.g1_ + self.g1_ * vec3(other.g0_.y) + vec3(self.g2_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g2_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g2_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g0_.y) * other.g2_ + self.g2_ * vec3(other.g0_.y));
}

Origin multiVectorAtOrigin_meet_origin(MultiVectorAtOrigin self, Origin other) {
    return Origin(self.g0_.y * other.g0_);
}

MultiVector multiVectorAtOrigin_meet_plane(MultiVectorAtOrigin self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.w, 0.0), vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - self.g2_ * vec3(other.g0_.w), vec4(self.g0_.y) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_meet_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g2_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g2_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g2_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.y) * other.g0_);
}

MultiVector multiVectorAtOrigin_meet_point(MultiVectorAtOrigin self, Point other) {
    return MultiVector(vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * other.g0_, vec3(0.0), vec3(0.0), vec4(0.0));
}

MultiVectorAtInfinity multiVectorAtOrigin_meet_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec3(self.g0_.y) * other.g0_, vec3(0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_meet_rotor(MultiVectorAtOrigin self, Rotor other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_.w) + vec2(self.g2_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(-other.g0_.z, 0.0), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z) + self.g1_ * vec3(other.g0_.w), self.g2_ * vec3(other.g0_.w));
}

Scalar multiVectorAtOrigin_meet_scalar(MultiVectorAtOrigin self, Scalar other) {
    return Scalar(self.g0_.y * other.g0_);
}

MultiVector multiVectorAtOrigin_meet_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.w, 0.0) + vec2(self.g2_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g2_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g2_.z) * vec2(other.g0_.z, 0.0), vec4(self.g0_.y) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z), vec3(self.g2_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g2_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g2_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - self.g2_ * vec3(other.g1_.w), vec4(self.g0_.y) * other.g1_);
}

MultiVector multiVectorAtOrigin_meet_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, other.g0_.w) + vec2(self.g1_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(-other.g0_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.w) + vec4(self.g2_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, 0.0), self.g1_ * vec3(other.g0_.w), vec3(self.g0_.y) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g2_.x, self.g2_.y, self.g2_.z, self.g2_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

Origin origin_meet_antiScalar(Origin self, AntiScalar other) {
    return Origin(self.g0_ * other.g0_);
}

Origin origin_meet_dualNum(Origin self, DualNum other) {
    return Origin(self.g0_ * other.g0_.y);
}

Scalar origin_meet_flector(Origin self, Flector other) {
    return Scalar(0.0 - self.g0_ * other.g1_.w);
}

Scalar origin_meet_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0_ * other.g0_.w);
}

Scalar origin_meet_horizon(Origin self, Horizon other) {
    return Scalar(0.0 - self.g0_ * other.g0_);
}

Origin origin_meet_motor(Origin self, Motor other) {
    return Origin(self.g0_ * other.g0_.w);
}

MultiVector origin_meet_multiVector(Origin self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * vec2(-other.g4_.w, 0.0), vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar origin_meet_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0_ * other.g0_.y);
}

Origin origin_meet_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return Origin(self.g0_ * other.g0_.y);
}

Scalar origin_meet_plane(Origin self, Plane other) {
    return Scalar(0.0 - self.g0_ * other.g0_.w);
}

Origin origin_meet_rotor(Origin self, Rotor other) {
    return Origin(self.g0_ * other.g0_.w);
}

Scalar origin_meet_transflector(Origin self, Transflector other) {
    return Scalar(0.0 - self.g0_ * other.g1_.w);
}

Origin origin_meet_translator(Origin self, Translator other) {
    return Origin(self.g0_ * other.g0_.w);
}

Plane plane_meet_antiScalar(Plane self, AntiScalar other) {
    return Plane(self.g0_ * vec4(other.g0_));
}

Plane plane_meet_dualNum(Plane self, DualNum other) {
    return Plane(self.g0_ * vec4(other.g0_.y));
}

MultiVector plane_meet_flector(Plane self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity plane_meet_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w));
}

LineAtInfinity plane_meet_horizon(Plane self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Point plane_meet_line(Plane self, Line other) {
    return Point(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity plane_meet_lineAtInfinity(Plane self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Point plane_meet_lineAtOrigin(Plane self, LineAtOrigin other) {
    return Point(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector plane_meet_motor(Plane self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g0_ * vec4(other.g0_.w));
}

MultiVector plane_meet_multiVector(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g0_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z) + vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g4_.w) + vec3(self.g0_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), self.g0_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity plane_meet_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y));
}

MultiVector plane_meet_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.w) * vec2(other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g0_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g0_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g0_.w) * other.g2_, self.g0_ * vec4(other.g0_.y));
}

Scalar plane_meet_origin(Plane self, Origin other) {
    return Scalar(self.g0_.w * other.g0_);
}

Line plane_meet_plane(Plane self, Plane other) {
    return Line(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Line plane_meet_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return Line(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g0_.w) * other.g0_);
}

Scalar plane_meet_point(Plane self, Point other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

Scalar plane_meet_pointAtInfinity(Plane self, PointAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Flector plane_meet_rotor(Plane self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g0_ * vec4(other.g0_.w));
}

MultiVector plane_meet_transflector(Plane self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Transflector plane_meet_translator(Plane self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), self.g0_ * vec4(other.g0_.w));
}

PlaneAtOrigin planeAtOrigin_meet_antiScalar(PlaneAtOrigin self, AntiScalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

PlaneAtOrigin planeAtOrigin_meet_dualNum(PlaneAtOrigin self, DualNum other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_.y));
}

MultiVector planeAtOrigin_meet_flector(PlaneAtOrigin self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g1_.w), vec4(0.0));
}

MultiVectorAtInfinity planeAtOrigin_meet_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

LineAtInfinity planeAtOrigin_meet_horizon(PlaneAtOrigin self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

Point planeAtOrigin_meet_line(PlaneAtOrigin self, Line other) {
    return Point(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z));
}

PointAtInfinity planeAtOrigin_meet_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Origin planeAtOrigin_meet_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return Origin(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Flector planeAtOrigin_meet_motor(PlaneAtOrigin self, Motor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g0_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g0_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

MultiVector planeAtOrigin_meet_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g0_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g0_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z), vec3(self.g0_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g0_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g0_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g4_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0));
}

MultiVectorAtInfinity planeAtOrigin_meet_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g1_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g0_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g0_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.y));
}

MultiVectorAtOrigin planeAtOrigin_meet_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec3(self.g0_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g0_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g0_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), self.g0_ * vec3(other.g0_.y));
}

Line planeAtOrigin_meet_plane(PlaneAtOrigin self, Plane other) {
    return Line(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g0_.w));
}

LineAtOrigin planeAtOrigin_meet_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Scalar planeAtOrigin_meet_point(PlaneAtOrigin self, Point other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar planeAtOrigin_meet_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Flector planeAtOrigin_meet_rotor(PlaneAtOrigin self, Rotor other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

MultiVector planeAtOrigin_meet_transflector(PlaneAtOrigin self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g1_.w), vec4(0.0));
}

Transflector planeAtOrigin_meet_translator(PlaneAtOrigin self, Translator other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0));
}

Point point_meet_antiScalar(Point self, AntiScalar other) {
    return Point(self.g0_ * vec4(other.g0_));
}

Point point_meet_dualNum(Point self, DualNum other) {
    return Point(self.g0_ * vec4(other.g0_.y));
}

Scalar point_meet_flector(Point self, Flector other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g0_.w * other.g1_.w);
}

Scalar point_meet_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0_.w * other.g0_.w);
}

Scalar point_meet_horizon(Point self, Horizon other) {
    return Scalar(0.0 - self.g0_.w * other.g0_);
}

Point point_meet_motor(Point self, Motor other) {
    return Point(self.g0_ * vec4(other.g0_.w));
}

MultiVector point_meet_multiVector(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g0_.w) * vec2(-other.g4_.w, 0.0), self.g0_ * vec4(other.g0_.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar point_meet_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0_.w * other.g0_.y);
}

MultiVector point_meet_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec4(other.g0_.y), vec3(0.0), vec3(0.0), vec4(0.0));
}

Scalar point_meet_plane(Point self, Plane other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z - self.g0_.w * other.g0_.w);
}

Scalar point_meet_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Point point_meet_rotor(Point self, Rotor other) {
    return Point(self.g0_ * vec4(other.g0_.w));
}

Scalar point_meet_transflector(Point self, Transflector other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g0_.w * other.g1_.w);
}

Point point_meet_translator(Point self, Translator other) {
    return Point(self.g0_ * vec4(other.g0_.w));
}

PointAtInfinity pointAtInfinity_meet_antiScalar(PointAtInfinity self, AntiScalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

PointAtInfinity pointAtInfinity_meet_dualNum(PointAtInfinity self, DualNum other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.y));
}

Scalar pointAtInfinity_meet_flector(PointAtInfinity self, Flector other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

PointAtInfinity pointAtInfinity_meet_motor(PointAtInfinity self, Motor other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

MultiVectorAtInfinity pointAtInfinity_meet_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

MultiVectorAtInfinity pointAtInfinity_meet_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0), self.g0_ * vec3(other.g0_.y), vec3(0.0));
}

Scalar pointAtInfinity_meet_plane(PointAtInfinity self, Plane other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar pointAtInfinity_meet_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PointAtInfinity pointAtInfinity_meet_rotor(PointAtInfinity self, Rotor other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

Scalar pointAtInfinity_meet_transflector(PointAtInfinity self, Transflector other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

PointAtInfinity pointAtInfinity_meet_translator(PointAtInfinity self, Translator other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.w));
}

Rotor rotor_meet_antiScalar(Rotor self, AntiScalar other) {
    return Rotor(self.g0_ * vec4(other.g0_));
}

MultiVector rotor_meet_dualNum(Rotor self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec3(0.0), vec4(0.0));
}

Flector rotor_meet_flector(Rotor self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity rotor_meet_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return FlectorAtInfinity(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

FlectorAtInfinity rotor_meet_horizon(Rotor self, Horizon other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

MultiVector rotor_meet_line(Rotor self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVectorAtInfinity rotor_meet_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec3(0.0), vec3(self.g0_.w) * other.g0_);
}

LineAtOrigin rotor_meet_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.w) * other.g0_);
}

MultiVector rotor_meet_motor(Rotor self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g1_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVector rotor_meet_multiVector(Rotor self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g3_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g3_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g3_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(other.g4_.w, 0.0, 0.0, -other.g4_.x) + vec4(self.g0_.y) * vec4(0.0, other.g4_.w, 0.0, -other.g4_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g4_.w, -other.g4_.z) + vec4(self.g0_.w) * other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g2_, vec3(self.g0_.w) * other.g3_, vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity rotor_meet_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

MultiVectorAtOrigin rotor_meet_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

Origin rotor_meet_origin(Rotor self, Origin other) {
    return Origin(self.g0_.w * other.g0_);
}

Flector rotor_meet_plane(Rotor self, Plane other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z), vec4(self.g0_.w) * other.g0_);
}

Flector rotor_meet_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point rotor_meet_point(Rotor self, Point other) {
    return Point(vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity rotor_meet_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

Rotor rotor_meet_rotor(Rotor self, Rotor other) {
    return Rotor(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

Scalar rotor_meet_scalar(Rotor self, Scalar other) {
    return Scalar(self.g0_.w * other.g0_);
}

Flector rotor_meet_transflector(Rotor self, Transflector other) {
    return Flector(vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec4(self.g0_.w) * other.g1_);
}

MultiVector rotor_meet_translator(Rotor self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

Scalar scalar_meet_antiScalar(Scalar self, AntiScalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Scalar scalar_meet_dualNum(Scalar self, DualNum other) {
    return Scalar(self.g0_ * other.g0_.y);
}

Scalar scalar_meet_motor(Scalar self, Motor other) {
    return Scalar(self.g0_ * other.g0_.w);
}

Scalar scalar_meet_multiVector(Scalar self, MultiVector other) {
    return Scalar(self.g0_ * other.g0_.y);
}

Scalar scalar_meet_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return Scalar(self.g0_ * other.g0_.y);
}

Scalar scalar_meet_rotor(Scalar self, Rotor other) {
    return Scalar(self.g0_ * other.g0_.w);
}

Scalar scalar_meet_translator(Scalar self, Translator other) {
    return Scalar(self.g0_ * other.g0_.w);
}

Transflector transflector_meet_antiScalar(Transflector self, AntiScalar other) {
    return Transflector(self.g0_ * vec3(other.g0_), self.g1_ * vec4(other.g0_));
}

Transflector transflector_meet_dualNum(Transflector self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.y), self.g1_ * vec4(other.g0_.y));
}

MultiVector transflector_meet_flector(Transflector self, Flector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.w, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

MultiVectorAtInfinity transflector_meet_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec3(0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w));
}

LineAtInfinity transflector_meet_horizon(Transflector self, Horizon other) {
    return LineAtInfinity(vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_));
}

Point transflector_meet_line(Transflector self, Line other) {
    return Point(vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

PointAtInfinity transflector_meet_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return PointAtInfinity(vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Point transflector_meet_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return Point(vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

Flector transflector_meet_motor(Transflector self, Motor other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g1_.z, -other.g1_.y, -other.g0_.x) + vec4(self.g1_.y) * vec4(-other.g1_.z, 0.0, other.g1_.x, -other.g0_.y) + vec4(self.g1_.z) * vec4(other.g1_.y, -other.g1_.x, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), self.g1_ * vec4(other.g0_.w));
}

MultiVector transflector_meet_multiVector(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g4_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g4_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g4_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g1_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g1_.w, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(0.0, other.g3_.z, -other.g3_.y, -other.g2_.x) + vec4(self.g1_.y) * vec4(-other.g3_.z, 0.0, other.g3_.x, -other.g2_.y) + vec4(self.g1_.z) * vec4(other.g3_.y, -other.g3_.x, 0.0, -other.g2_.z) + vec4(self.g1_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, -other.g4_.z, other.g4_.y) + vec3(self.g1_.y) * vec3(other.g4_.z, 0.0, -other.g4_.x) + vec3(self.g1_.z) * vec3(-other.g4_.y, other.g4_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g4_.w) + vec3(self.g1_.w) * vec3(other.g4_.x, other.g4_.y, other.g4_.z), self.g1_ * vec4(other.g0_.y));
}

MultiVectorAtInfinity transflector_meet_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(other.g1_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g1_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g1_.z, 0.0), vec3(self.g1_.x) * vec3(0.0, other.g2_.z, -other.g2_.y) + vec3(self.g1_.y) * vec3(-other.g2_.z, 0.0, other.g2_.x) + vec3(self.g1_.z) * vec3(other.g2_.y, -other.g2_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.y));
}

MultiVector transflector_meet_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g1_.w) * vec2(other.g0_.x, 0.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.y, other.g0_.y, other.g0_.y, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + self.g1_.wwwz * vec4(other.g1_.x, other.g1_.y, other.g1_.z, -other.g1_.z), vec3(self.g1_.x) * vec3(0.0, -other.g2_.z, other.g2_.y) + vec3(self.g1_.y) * vec3(other.g2_.z, 0.0, -other.g2_.x) + vec3(self.g1_.z) * vec3(-other.g2_.y, other.g2_.x, 0.0), vec3(self.g1_.w) * other.g2_, self.g1_ * vec4(other.g0_.y));
}

Scalar transflector_meet_origin(Transflector self, Origin other) {
    return Scalar(self.g1_.w * other.g0_);
}

MultiVector transflector_meet_plane(Transflector self, Plane other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(0.0));
}

MultiVector transflector_meet_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec3(self.g1_.w) * other.g0_, vec4(0.0));
}

Scalar transflector_meet_point(Transflector self, Point other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z + self.g1_.w * other.g0_.w);
}

Scalar transflector_meet_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Flector transflector_meet_rotor(Transflector self, Rotor other) {
    return Flector(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0), self.g1_ * vec4(other.g0_.w));
}

MultiVector transflector_meet_transflector(Transflector self, Transflector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g1_.z, 0.0) + vec2(self.g1_.x) * vec2(other.g0_.x, 0.0) + vec2(self.g1_.y) * vec2(other.g0_.y, 0.0) + vec2(self.g1_.z) * vec2(other.g0_.z, 0.0), vec4(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec4(0.0));
}

Transflector transflector_meet_translator(Transflector self, Translator other) {
    return Transflector(self.g0_ * vec3(other.g0_.w) + vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0), self.g1_ * vec4(other.g0_.w));
}

Translator translator_meet_antiScalar(Translator self, AntiScalar other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

MultiVector translator_meet_dualNum(Translator self, DualNum other) {
    return MultiVector(vec2(self.g0_.w) * other.g0_, vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec4(0.0));
}

Flector translator_meet_flector(Translator self, Flector other) {
    return Flector(vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g0_, vec4(self.g0_.w) * other.g1_);
}

FlectorAtInfinity translator_meet_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.w) * other.g0_);
}

Horizon translator_meet_horizon(Translator self, Horizon other) {
    return Horizon(self.g0_.w * other.g0_);
}

MultiVector translator_meet_line(Translator self, Line other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

LineAtInfinity translator_meet_lineAtInfinity(Translator self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector translator_meet_lineAtOrigin(Translator self, LineAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g0_.z, 0.0), vec4(0.0), vec3(self.g0_.w) * other.g0_, vec3(0.0), vec4(0.0));
}

MultiVector translator_meet_motor(Translator self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * other.g1_, vec4(0.0));
}

MultiVector translator_meet_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g2_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g2_.y, 0.0) + vec2(self.g0_.z) * vec2(-other.g2_.z, 0.0) + vec2(self.g0_.w) * other.g0_, vec4(self.g0_.x) * vec4(0.0, -other.g4_.z, other.g4_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g4_.z, 0.0, -other.g4_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g4_.y, other.g4_.x, 0.0, 0.0) + vec4(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y) + vec3(self.g0_.w) * other.g3_, vec4(self.g0_.w) * other.g4_);
}

MultiVectorAtInfinity translator_meet_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.w) * other.g0_, vec3(self.g0_.w) * other.g1_, vec3(self.g0_.w) * other.g2_);
}

MultiVector translator_meet_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g1_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g1_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g1_.z, other.g0_.y), vec4(self.g0_.x) * vec4(0.0, -other.g2_.z, other.g2_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g2_.z, 0.0, -other.g2_.x, 0.0) + self.g0_.zzzw * vec4(-other.g2_.y, other.g2_.x, 0.0, other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.y), vec4(self.g0_.w) * vec4(other.g2_.x, other.g2_.y, other.g2_.z, 0.0));
}

Origin translator_meet_origin(Translator self, Origin other) {
    return Origin(self.g0_.w * other.g0_);
}

Transflector translator_meet_plane(Translator self, Plane other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.w) * other.g0_);
}

Transflector translator_meet_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0));
}

Point translator_meet_point(Translator self, Point other) {
    return Point(vec4(self.g0_.w) * other.g0_);
}

PointAtInfinity translator_meet_pointAtInfinity(Translator self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.w) * other.g0_);
}

MultiVector translator_meet_rotor(Translator self, Rotor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(-other.g0_.x, 0.0) + vec2(self.g0_.y) * vec2(-other.g0_.y, 0.0) + vec2(self.g0_.z, self.g0_.w) * vec2(-other.g0_.z, other.g0_.w), vec4(0.0), vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w), vec4(0.0));
}

Scalar translator_meet_scalar(Translator self, Scalar other) {
    return Scalar(self.g0_.w * other.g0_);
}

Transflector translator_meet_transflector(Translator self, Transflector other) {
    return Transflector(vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + vec3(self.g0_.w) * other.g0_, vec4(self.g0_.w) * other.g1_);
}

Translator translator_meet_translator(Translator self, Translator other) {
    return Translator(self.g0_.xyzx * vec4(other.g0_.w, other.g0_.w, other.g0_.w, 0.0) + vec4(self.g0_.w) * other.g0_);
}

AntiScalar antiScalar_wedge_dualNum(AntiScalar self, DualNum other) {
    return AntiScalar(self.g0_ * other.g0_.x);
}

AntiScalar antiScalar_wedge_multiVector(AntiScalar self, MultiVector other) {
    return AntiScalar(self.g0_ * other.g0_.x);
}

AntiScalar antiScalar_wedge_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return AntiScalar(self.g0_ * other.g0_.x);
}

AntiScalar antiScalar_wedge_scalar(AntiScalar self, Scalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

AntiScalar dualNum_wedge_antiScalar(DualNum self, AntiScalar other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

DualNum dualNum_wedge_dualNum(DualNum self, DualNum other) {
    return DualNum(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x));
}

Flector dualNum_wedge_flector(DualNum self, Flector other) {
    return Flector(vec4(self.g0_.x) * other.g0_, vec4(self.g0_.x) * other.g1_);
}

FlectorAtInfinity dualNum_wedge_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_.x) * other.g0_);
}

Horizon dualNum_wedge_horizon(DualNum self, Horizon other) {
    return Horizon(self.g0_.x * other.g0_);
}

Line dualNum_wedge_line(DualNum self, Line other) {
    return Line(vec3(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_);
}

LineAtInfinity dualNum_wedge_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * other.g0_);
}

LineAtOrigin dualNum_wedge_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_.x) * other.g0_);
}

Motor dualNum_wedge_motor(DualNum self, Motor other) {
    return Motor(vec4(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_);
}

MultiVector dualNum_wedge_multiVector(DualNum self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x), vec4(self.g0_.x) * other.g1_, vec3(self.g0_.x) * other.g2_, vec3(self.g0_.x) * other.g3_, vec4(self.g0_.x) * other.g4_);
}

MultiVector dualNum_wedge_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ * vec2(other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0), vec3(0.0), vec3(self.g0_.x) * other.g2_, vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y));
}

MultiVectorAtOrigin dualNum_wedge_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_, vec3(self.g0_.x) * other.g2_);
}

Origin dualNum_wedge_origin(DualNum self, Origin other) {
    return Origin(self.g0_.x * other.g0_);
}

Plane dualNum_wedge_plane(DualNum self, Plane other) {
    return Plane(vec4(self.g0_.x) * other.g0_);
}

PlaneAtOrigin dualNum_wedge_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * other.g0_);
}

Point dualNum_wedge_point(DualNum self, Point other) {
    return Point(vec4(self.g0_.x) * other.g0_);
}

PointAtInfinity dualNum_wedge_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_.x) * other.g0_);
}

Rotor dualNum_wedge_rotor(DualNum self, Rotor other) {
    return Rotor(vec4(self.g0_.x) * other.g0_);
}

DualNum dualNum_wedge_scalar(DualNum self, Scalar other) {
    return DualNum(self.g0_ * vec2(other.g0_));
}

Transflector dualNum_wedge_transflector(DualNum self, Transflector other) {
    return Transflector(vec3(self.g0_.x) * other.g0_, vec4(self.g0_.x) * other.g1_);
}

Translator dualNum_wedge_translator(DualNum self, Translator other) {
    return Translator(vec4(self.g0_.x) * other.g0_);
}

Flector flector_wedge_dualNum(Flector self, DualNum other) {
    return Flector(self.g0_ * vec4(other.g0_.x), self.g1_ * vec4(other.g0_.x));
}

Motor flector_wedge_flector(Flector self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Motor flector_wedge_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return Motor(vec4(self.g0_.w) * other.g0_ + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar flector_wedge_horizon(Flector self, Horizon other) {
    return AntiScalar(self.g0_.w * other.g0_);
}

Plane flector_wedge_line(Flector self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

Plane flector_wedge_lineAtInfinity(Flector self, LineAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

PlaneAtOrigin flector_wedge_lineAtOrigin(Flector self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane flector_wedge_motor(Flector self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector flector_wedge_multiVector(Flector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, other.g4_.w) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g1_.w), self.g0_ * vec4(other.g0_.x), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0) + self.g1_ * vec4(other.g0_.x));
}

MultiVector flector_wedge_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.y) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), self.g0_ * vec4(other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z) + self.g1_ * vec4(other.g0_.x));
}

MultiVectorAtOrigin flector_wedge_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g0_.x), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

Rotor flector_wedge_origin(Flector self, Origin other) {
    return Rotor(self.g0_.xyzx * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

AntiScalar flector_wedge_plane(Flector self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

AntiScalar flector_wedge_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Motor flector_wedge_point(Flector self, Point other) {
    return Motor(self.g0_.xyzx * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Motor flector_wedge_pointAtInfinity(Flector self, PointAtInfinity other) {
    return Motor(vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin flector_wedge_rotor(Flector self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Flector flector_wedge_scalar(Flector self, Scalar other) {
    return Flector(self.g0_ * vec4(other.g0_), self.g1_ * vec4(other.g0_));
}

Motor flector_wedge_transflector(Flector self, Transflector other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Plane flector_wedge_translator(Flector self, Translator other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

FlectorAtInfinity flectorAtInfinity_wedge_dualNum(FlectorAtInfinity self, DualNum other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_.x));
}

Motor flectorAtInfinity_wedge_flector(FlectorAtInfinity self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtInfinity flectorAtInfinity_wedge_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Plane flectorAtInfinity_wedge_line(FlectorAtInfinity self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

Horizon flectorAtInfinity_wedge_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin flectorAtInfinity_wedge_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane flectorAtInfinity_wedge_motor(FlectorAtInfinity self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVector flectorAtInfinity_wedge_multiVector(FlectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, -other.g1_.w), self.g0_.xyzx * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g0_.w) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVectorAtInfinity flectorAtInfinity_wedge_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

MultiVectorAtOrigin flectorAtInfinity_wedge_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, -other.g0_.x), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

Rotor flectorAtInfinity_wedge_origin(FlectorAtInfinity self, Origin other) {
    return Rotor(vec4(0.0) - self.g0_ * vec4(other.g0_));
}

AntiScalar flectorAtInfinity_wedge_plane(FlectorAtInfinity self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar flectorAtInfinity_wedge_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Motor flectorAtInfinity_wedge_point(FlectorAtInfinity self, Point other) {
    return Motor(vec4(0.0) - self.g0_ * vec4(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtInfinity flectorAtInfinity_wedge_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin flectorAtInfinity_wedge_rotor(FlectorAtInfinity self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

FlectorAtInfinity flectorAtInfinity_wedge_scalar(FlectorAtInfinity self, Scalar other) {
    return FlectorAtInfinity(self.g0_ * vec4(other.g0_));
}

Translator flectorAtInfinity_wedge_transflector(FlectorAtInfinity self, Transflector other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g1_.z));
}

Horizon flectorAtInfinity_wedge_translator(FlectorAtInfinity self, Translator other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Horizon horizon_wedge_dualNum(Horizon self, DualNum other) {
    return Horizon(self.g0_ * other.g0_.x);
}

AntiScalar horizon_wedge_flector(Horizon self, Flector other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_.w);
}

MultiVector horizon_wedge_multiVector(Horizon self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * vec2(0.0, -other.g1_.w), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

Horizon horizon_wedge_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return Horizon(self.g0_ * other.g0_.x);
}

AntiScalar horizon_wedge_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_.x);
}

AntiScalar horizon_wedge_origin(Horizon self, Origin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_);
}

AntiScalar horizon_wedge_point(Horizon self, Point other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_.w);
}

Horizon horizon_wedge_scalar(Horizon self, Scalar other) {
    return Horizon(self.g0_ * other.g0_);
}

Line line_wedge_dualNum(Line self, DualNum other) {
    return Line(self.g0_ * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x));
}

Plane line_wedge_flector(Line self, Flector other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Plane line_wedge_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar line_wedge_line(Line self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar line_wedge_lineAtInfinity(Line self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar line_wedge_lineAtOrigin(Line self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar line_wedge_motor(Line self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

MultiVector line_wedge_multiVector(Line self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g2_.z), vec4(0.0), self.g0_ * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVector line_wedge_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z), vec4(0.0), self.g0_ * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin line_wedge_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g1_ * vec3(other.g0_.x));
}

PlaneAtOrigin line_wedge_origin(Line self, Origin other) {
    return PlaneAtOrigin(self.g1_ * vec3(other.g0_));
}

Plane line_wedge_point(Line self, Point other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Plane line_wedge_pointAtInfinity(Line self, PointAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar line_wedge_rotor(Line self, Rotor other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Line line_wedge_scalar(Line self, Scalar other) {
    return Line(self.g0_ * vec3(other.g0_), self.g1_ * vec3(other.g0_));
}

Plane line_wedge_transflector(Line self, Transflector other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar line_wedge_translator(Line self, Translator other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

LineAtInfinity lineAtInfinity_wedge_dualNum(LineAtInfinity self, DualNum other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_.x));
}

Plane lineAtInfinity_wedge_flector(LineAtInfinity self, Flector other) {
    return Plane(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Horizon lineAtInfinity_wedge_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtInfinity_wedge_line(LineAtInfinity self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtInfinity_wedge_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtInfinity_wedge_motor(LineAtInfinity self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVector lineAtInfinity_wedge_multiVector(LineAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z), vec4(0.0), vec3(0.0), self.g0_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity lineAtInfinity_wedge_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g0_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin lineAtInfinity_wedge_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g0_ * vec3(other.g0_.x));
}

PlaneAtOrigin lineAtInfinity_wedge_origin(LineAtInfinity self, Origin other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

Plane lineAtInfinity_wedge_point(LineAtInfinity self, Point other) {
    return Plane(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Horizon lineAtInfinity_wedge_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtInfinity_wedge_rotor(LineAtInfinity self, Rotor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

LineAtInfinity lineAtInfinity_wedge_scalar(LineAtInfinity self, Scalar other) {
    return LineAtInfinity(self.g0_ * vec3(other.g0_));
}

Horizon lineAtInfinity_wedge_transflector(LineAtInfinity self, Transflector other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

LineAtOrigin lineAtOrigin_wedge_dualNum(LineAtOrigin self, DualNum other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_.x));
}

PlaneAtOrigin lineAtOrigin_wedge_flector(LineAtOrigin self, Flector other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin lineAtOrigin_wedge_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar lineAtOrigin_wedge_line(LineAtOrigin self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

AntiScalar lineAtOrigin_wedge_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtOrigin_wedge_motor(LineAtOrigin self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

MultiVectorAtOrigin lineAtOrigin_wedge_multiVector(LineAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z), self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

MultiVectorAtOrigin lineAtOrigin_wedge_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z), self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

PlaneAtOrigin lineAtOrigin_wedge_point(LineAtOrigin self, Point other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin lineAtOrigin_wedge_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtOrigin lineAtOrigin_wedge_scalar(LineAtOrigin self, Scalar other) {
    return LineAtOrigin(self.g0_ * vec3(other.g0_));
}

PlaneAtOrigin lineAtOrigin_wedge_transflector(LineAtOrigin self, Transflector other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar lineAtOrigin_wedge_translator(LineAtOrigin self, Translator other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Motor motor_wedge_dualNum(Motor self, DualNum other) {
    return Motor(self.g0_ * vec4(other.g0_.x), self.g1_ * vec3(other.g0_.x));
}

Plane motor_wedge_flector(Motor self, Flector other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Plane motor_wedge_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar motor_wedge_line(Motor self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar motor_wedge_lineAtInfinity(Motor self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar motor_wedge_lineAtOrigin(Motor self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar motor_wedge_motor(Motor self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

MultiVector motor_wedge_multiVector(Motor self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g2_.z), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVector motor_wedge_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec4(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), self.g1_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin motor_wedge_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g1_ * vec3(other.g0_.x));
}

PlaneAtOrigin motor_wedge_origin(Motor self, Origin other) {
    return PlaneAtOrigin(self.g1_ * vec3(other.g0_));
}

Plane motor_wedge_point(Motor self, Point other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Plane motor_wedge_pointAtInfinity(Motor self, PointAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar motor_wedge_rotor(Motor self, Rotor other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Motor motor_wedge_scalar(Motor self, Scalar other) {
    return Motor(self.g0_ * vec4(other.g0_), self.g1_ * vec3(other.g0_));
}

Plane motor_wedge_transflector(Motor self, Transflector other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

AntiScalar motor_wedge_translator(Motor self, Translator other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar multiVector_wedge_antiScalar(MultiVector self, AntiScalar other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

MultiVector multiVector_wedge_dualNum(MultiVector self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x), self.g1_ * vec4(other.g0_.x), self.g2_ * vec3(other.g0_.x), self.g3_ * vec3(other.g0_.x), self.g4_ * vec4(other.g0_.x));
}

MultiVector multiVector_wedge_flector(MultiVector self, Flector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, other.g1_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_, vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVector multiVector_wedge_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, other.g0_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.w) + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVector multiVector_wedge_horizon(MultiVector self, Horizon other) {
    return MultiVector(vec2(self.g1_.w) * vec2(0.0, other.g0_), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_));
}

MultiVector multiVector_wedge_line(MultiVector self, Line other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_, vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector multiVector_wedge_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(0.0), vec3(self.g0_.x) * other.g0_, vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

MultiVectorAtOrigin multiVector_wedge_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVector_wedge_motor(MultiVector self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * other.g1_, vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g1_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector multiVector_wedge_multiVector(MultiVector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, other.g4_.x) + vec2(self.g1_.y) * vec2(0.0, other.g4_.y) + vec2(self.g1_.z) * vec2(0.0, other.g4_.z) + vec2(self.g1_.w) * vec2(0.0, other.g4_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g3_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g4_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g1_.w), vec4(self.g0_.x) * other.g1_ + self.g1_ * vec4(other.g0_.x), vec3(self.g0_.x) * other.g2_ - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g1_.w) + vec3(self.g1_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + self.g2_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g3_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g3_ * vec3(other.g0_.x), vec4(self.g0_.x) * other.g4_ + vec4(self.g1_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g1_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0) + vec4(self.g2_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z) + self.g4_ * vec4(other.g0_.x));
}

MultiVector multiVector_wedge_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return MultiVector(self.g0_ * vec2(other.g0_.x) + vec2(self.g1_.w) * vec2(0.0, other.g0_.y) + vec2(self.g2_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g4_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g1_.z), vec4(self.g0_.x) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0) + self.g1_ * vec4(other.g0_.x), vec3(self.g1_.w) * other.g1_ + self.g2_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g3_ * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g0_.y) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g1_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z) + vec4(self.g2_.x) * vec4(0.0, -other.g1_.z, other.g1_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g1_.z, 0.0, -other.g1_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g1_.y, other.g1_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z) + self.g4_ * vec4(other.g0_.x));
}

MultiVectorAtOrigin multiVector_wedge_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g1_.x) * vec2(0.0, other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, other.g2_.z) + vec2(self.g3_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g0_.x), vec3(self.g0_.x) * other.g1_ - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + self.g3_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVector_wedge_origin(MultiVector self, Origin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_, 0.0) + vec2(self.g4_.w) * vec2(0.0, -other.g0_), vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_), self.g3_ * vec3(other.g0_));
}

MultiVector multiVector_wedge_plane(MultiVector self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z) + vec2(self.g1_.w) * vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x) * other.g0_);
}

MultiVectorAtOrigin multiVector_wedge_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec3(0.0), vec3(self.g0_.x) * other.g0_);
}

MultiVector multiVector_wedge_point(MultiVector self, Point other) {
    return MultiVector(vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z) + vec2(self.g4_.w) * vec2(0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_, vec3(0.0) - vec3(self.g1_.x, self.g1_.y, self.g1_.z) * vec3(other.g0_.w) + vec3(self.g1_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVector multiVector_wedge_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return MultiVector(vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g1_.w) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVectorAtOrigin multiVector_wedge_rotor(MultiVector self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g3_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g3_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g3_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVector_wedge_scalar(MultiVector self, Scalar other) {
    return MultiVector(self.g0_ * vec2(other.g0_), self.g1_ * vec4(other.g0_), self.g2_ * vec3(other.g0_), self.g3_ * vec3(other.g0_), self.g4_ * vec4(other.g0_));
}

MultiVector multiVector_wedge_transflector(MultiVector self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, other.g1_.w) + vec2(self.g4_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g4_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g4_.z) * vec2(0.0, -other.g0_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(self.g1_.w) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g2_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g2_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g3_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g3_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g3_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVector multiVector_wedge_translator(MultiVector self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g1_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

AntiScalar multiVectorAtInfinity_wedge_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

MultiVector multiVectorAtInfinity_wedge_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_, vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0), self.g2_ * vec3(other.g0_.x), vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x));
}

MultiVector multiVectorAtInfinity_wedge_flector(MultiVectorAtInfinity self, Flector other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, -other.g0_.w) + vec2(self.g1_.x) * vec2(0.0, other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, other.g1_.z), vec4(self.g0_.x) * other.g0_, vec3(0.0) - self.g1_ * vec3(other.g0_.w), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedge_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Horizon multiVectorAtInfinity_wedge_horizon(MultiVectorAtInfinity self, Horizon other) {
    return Horizon(self.g0_.x * other.g0_);
}

MultiVector multiVectorAtInfinity_wedge_line(MultiVectorAtInfinity self, Line other) {
    return MultiVector(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.x) * other.g0_, vec3(self.g0_.x) * other.g1_, vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedge_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec3(0.0), vec3(self.g0_.x) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtInfinity_wedge_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVector multiVectorAtInfinity_wedge_motor(MultiVectorAtInfinity self, Motor other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec4(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * other.g1_, vec4(self.g1_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g1_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g1_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVector multiVectorAtInfinity_wedge_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, -other.g1_.w) + vec2(self.g1_.x) * vec2(0.0, other.g4_.x) + vec2(self.g1_.y) * vec2(0.0, other.g4_.y) + vec2(self.g1_.z) * vec2(0.0, other.g4_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g2_.z), vec4(self.g0_.x) * other.g1_ + vec4(self.g1_.x, self.g1_.y, self.g1_.z, self.g1_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(self.g0_.x) * other.g2_ - self.g1_ * vec3(other.g1_.w), vec3(self.g0_.x) * other.g3_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x), vec4(self.g0_.x) * other.g4_ + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g0_.x) + vec4(self.g1_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g1_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g1_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g2_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g2_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedge_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z), vec3(self.g0_.x) * other.g1_ + self.g1_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtInfinity_wedge_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, other.g2_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z), vec3(self.g0_.x) * other.g1_ - self.g1_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g1_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g1_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtInfinity_wedge_origin(MultiVectorAtInfinity self, Origin other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), vec3(0.0) - self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_wedge_plane(MultiVectorAtInfinity self, Plane other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec4(0.0), vec3(0.0), vec3(0.0), vec4(self.g0_.x) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtInfinity_wedge_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, other.g0_.z), vec3(0.0), vec3(self.g0_.x) * other.g0_);
}

MultiVector multiVectorAtInfinity_wedge_point(MultiVectorAtInfinity self, Point other) {
    return MultiVector(vec2(self.g0_.y) * vec2(0.0, -other.g0_.w), vec4(self.g0_.x) * other.g0_, vec3(0.0) - self.g1_ * vec3(other.g0_.w), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g2_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedge_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtInfinity_wedge_rotor(MultiVectorAtInfinity self, Rotor other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g1_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g1_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_wedge_scalar(MultiVectorAtInfinity self, Scalar other) {
    return MultiVectorAtInfinity(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVector multiVectorAtInfinity_wedge_transflector(MultiVectorAtInfinity self, Transflector other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, other.g1_.z), vec4(self.g0_.x) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, 0.0), vec3(0.0), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0), vec4(self.g0_.x) * other.g1_ + vec4(self.g2_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g2_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g2_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVector multiVectorAtInfinity_wedge_translator(MultiVectorAtInfinity self, Translator other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g0_.w), vec4(0.0), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_.x), self.g1_ * vec3(other.g0_.x), self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_flector(MultiVectorAtOrigin self, Flector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g1_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g0_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar multiVectorAtOrigin_wedge_horizon(MultiVectorAtOrigin self, Horizon other) {
    return AntiScalar(self.g0_.x * other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_line(MultiVectorAtOrigin self, Line other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), vec3(self.g0_.x) * other.g1_);
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec3(0.0), vec3(self.g0_.x) * other.g0_);
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_motor(MultiVectorAtOrigin self, Motor other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), vec3(self.g0_.x) * other.g1_);
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(other.g0_.x, other.g4_.w) + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z), vec3(self.g0_.x) * vec3(other.g1_.x, other.g1_.y, other.g1_.z) + self.g1_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g3_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * other.g0_ + vec2(self.g0_.y) * vec2(0.0, other.g0_.x) + vec2(self.g1_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g2_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g1_.z), vec3(self.g0_.x) * other.g1_ + self.g1_ * vec3(other.g0_.x), vec3(self.g0_.x) * other.g2_ + vec3(self.g1_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g1_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g1_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0) + self.g2_ * vec3(other.g0_.x));
}

AntiScalar multiVectorAtOrigin_wedge_plane(MultiVectorAtOrigin self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.w);
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_point(MultiVectorAtOrigin self, Point other) {
    return MultiVectorAtOrigin(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_scalar(MultiVectorAtOrigin self, Scalar other) {
    return MultiVectorAtOrigin(self.g0_ * vec2(other.g0_), self.g1_ * vec3(other.g0_), self.g2_ * vec3(other.g0_));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_transflector(MultiVectorAtOrigin self, Transflector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g1_.w) + vec2(self.g2_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g2_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g2_.z) * vec2(0.0, -other.g0_.z), vec3(self.g0_.x) * other.g0_, vec3(self.g1_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g1_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g1_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_wedge_translator(MultiVectorAtOrigin self, Translator other) {
    return MultiVectorAtOrigin(vec2(self.g1_.x) * vec2(0.0, -other.g0_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g0_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g0_.z), vec3(0.0), vec3(self.g0_.x) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Origin origin_wedge_dualNum(Origin self, DualNum other) {
    return Origin(self.g0_ * other.g0_.x);
}

Rotor origin_wedge_flector(Origin self, Flector other) {
    return Rotor(vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w));
}

Rotor origin_wedge_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

AntiScalar origin_wedge_horizon(Origin self, Horizon other) {
    return AntiScalar(self.g0_ * other.g0_);
}

PlaneAtOrigin origin_wedge_line(Origin self, Line other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g1_);
}

PlaneAtOrigin origin_wedge_lineAtInfinity(Origin self, LineAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

PlaneAtOrigin origin_wedge_motor(Origin self, Motor other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g1_);
}

MultiVectorAtOrigin origin_wedge_multiVector(Origin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * vec2(other.g0_.x, other.g4_.w), vec3(self.g0_) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_) * other.g3_);
}

MultiVectorAtOrigin origin_wedge_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

AntiScalar origin_wedge_plane(Origin self, Plane other) {
    return AntiScalar(self.g0_ * other.g0_.w);
}

LineAtOrigin origin_wedge_point(Origin self, Point other) {
    return LineAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

LineAtOrigin origin_wedge_pointAtInfinity(Origin self, PointAtInfinity other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Origin origin_wedge_scalar(Origin self, Scalar other) {
    return Origin(self.g0_ * other.g0_);
}

Rotor origin_wedge_transflector(Origin self, Transflector other) {
    return Rotor(vec4(self.g0_) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w));
}

PlaneAtOrigin origin_wedge_translator(Origin self, Translator other) {
    return PlaneAtOrigin(vec3(self.g0_) * vec3(other.g0_.x, other.g0_.y, other.g0_.z));
}

Plane plane_wedge_dualNum(Plane self, DualNum other) {
    return Plane(self.g0_ * vec4(other.g0_.x));
}

AntiScalar plane_wedge_flector(Plane self, Flector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z - self.g0_.w * other.g0_.w);
}

AntiScalar plane_wedge_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVector plane_wedge_multiVector(Plane self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g0_.w) * vec2(0.0, -other.g1_.w), vec4(0.0), vec3(0.0), vec3(0.0), self.g0_ * vec4(other.g0_.x));
}

MultiVector plane_wedge_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec4(0.0), vec3(0.0), vec3(0.0), self.g0_ * vec4(other.g0_.x));
}

AntiScalar plane_wedge_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_.x);
}

AntiScalar plane_wedge_origin(Plane self, Origin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_);
}

AntiScalar plane_wedge_point(Plane self, Point other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z - self.g0_.w * other.g0_.w);
}

AntiScalar plane_wedge_pointAtInfinity(Plane self, PointAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Plane plane_wedge_scalar(Plane self, Scalar other) {
    return Plane(self.g0_ * vec4(other.g0_));
}

AntiScalar plane_wedge_transflector(Plane self, Transflector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin planeAtOrigin_wedge_dualNum(PlaneAtOrigin self, DualNum other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_.x));
}

AntiScalar planeAtOrigin_wedge_flector(PlaneAtOrigin self, Flector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar planeAtOrigin_wedge_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVectorAtOrigin planeAtOrigin_wedge_multiVector(PlaneAtOrigin self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g0_ * vec3(other.g0_.x));
}

MultiVectorAtOrigin planeAtOrigin_wedge_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), self.g0_ * vec3(other.g0_.x));
}

AntiScalar planeAtOrigin_wedge_point(PlaneAtOrigin self, Point other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar planeAtOrigin_wedge_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin planeAtOrigin_wedge_scalar(PlaneAtOrigin self, Scalar other) {
    return PlaneAtOrigin(self.g0_ * vec3(other.g0_));
}

AntiScalar planeAtOrigin_wedge_transflector(PlaneAtOrigin self, Transflector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Point point_wedge_dualNum(Point self, DualNum other) {
    return Point(self.g0_ * vec4(other.g0_.x));
}

Motor point_wedge_flector(Point self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Motor point_wedge_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return Motor(vec4(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar point_wedge_horizon(Point self, Horizon other) {
    return AntiScalar(self.g0_.w * other.g0_);
}

Plane point_wedge_line(Point self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

Plane point_wedge_lineAtInfinity(Point self, LineAtInfinity other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * vec4(other.g0_.x, other.g0_.y, other.g0_.z, -other.g0_.z));
}

PlaneAtOrigin point_wedge_lineAtOrigin(Point self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane point_wedge_motor(Point self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z) + vec4(self.g0_.w) * vec4(other.g1_.x, other.g1_.y, other.g1_.z, 0.0));
}

MultiVector point_wedge_multiVector(Point self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z) + vec2(self.g0_.w) * vec2(0.0, other.g4_.w), self.g0_ * vec4(other.g0_.x), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g1_.w) + vec3(self.g0_.w) * vec3(other.g1_.x, other.g1_.y, other.g1_.z), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + vec4(self.g0_.w) * vec4(other.g3_.x, other.g3_.y, other.g3_.z, 0.0));
}

MultiVector point_wedge_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.y), self.g0_ * vec4(other.g0_.x), vec3(self.g0_.w) * other.g1_, vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + self.g0_.wwwz * vec4(other.g2_.x, other.g2_.y, other.g2_.z, -other.g2_.z));
}

MultiVectorAtOrigin point_wedge_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z), vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

LineAtOrigin point_wedge_origin(Point self, Origin other) {
    return LineAtOrigin(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

AntiScalar point_wedge_plane(Point self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

AntiScalar point_wedge_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Line point_wedge_point(Point self, Point other) {
    return Line(vec3(0.0) - vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.w) + vec3(self.g0_.w) * vec3(other.g0_.x, other.g0_.y, other.g0_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Line point_wedge_pointAtInfinity(Point self, PointAtInfinity other) {
    return Line(vec3(self.g0_.w) * other.g0_, vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin point_wedge_rotor(Point self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Point point_wedge_scalar(Point self, Scalar other) {
    return Point(self.g0_ * vec4(other.g0_));
}

Motor point_wedge_transflector(Point self, Transflector other) {
    return Motor(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, other.g1_.z) + vec4(self.g0_.w) * vec4(other.g0_.x, other.g0_.y, other.g0_.z, other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Plane point_wedge_translator(Point self, Translator other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + self.g0_.wwwz * other.g0_.xyzz * vec4(1.0, 1.0, 1.0, -1.0));
}

PointAtInfinity pointAtInfinity_wedge_dualNum(PointAtInfinity self, DualNum other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_.x));
}

Motor pointAtInfinity_wedge_flector(PointAtInfinity self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtInfinity pointAtInfinity_wedge_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Plane pointAtInfinity_wedge_line(PointAtInfinity self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

Horizon pointAtInfinity_wedge_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin pointAtInfinity_wedge_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane pointAtInfinity_wedge_motor(PointAtInfinity self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVector pointAtInfinity_wedge_multiVector(PointAtInfinity self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z));
}

MultiVectorAtInfinity pointAtInfinity_wedge_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z), self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

MultiVectorAtOrigin pointAtInfinity_wedge_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z), vec3(0.0) - self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

LineAtOrigin pointAtInfinity_wedge_origin(PointAtInfinity self, Origin other) {
    return LineAtOrigin(vec3(0.0) - self.g0_ * vec3(other.g0_));
}

AntiScalar pointAtInfinity_wedge_plane(PointAtInfinity self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar pointAtInfinity_wedge_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Line pointAtInfinity_wedge_point(PointAtInfinity self, Point other) {
    return Line(vec3(0.0) - self.g0_ * vec3(other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

LineAtInfinity pointAtInfinity_wedge_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin pointAtInfinity_wedge_rotor(PointAtInfinity self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

PointAtInfinity pointAtInfinity_wedge_scalar(PointAtInfinity self, Scalar other) {
    return PointAtInfinity(self.g0_ * vec3(other.g0_));
}

Translator pointAtInfinity_wedge_transflector(PointAtInfinity self, Transflector other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g1_.z));
}

Horizon pointAtInfinity_wedge_translator(PointAtInfinity self, Translator other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Rotor rotor_wedge_dualNum(Rotor self, DualNum other) {
    return Rotor(self.g0_ * vec4(other.g0_.x));
}

PlaneAtOrigin rotor_wedge_flector(Rotor self, Flector other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin rotor_wedge_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar rotor_wedge_line(Rotor self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

AntiScalar rotor_wedge_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar rotor_wedge_motor(Rotor self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

MultiVectorAtOrigin rotor_wedge_multiVector(Rotor self, MultiVector other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g3_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g3_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g3_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

MultiVectorAtOrigin rotor_wedge_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0));
}

PlaneAtOrigin rotor_wedge_point(Rotor self, Point other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

PlaneAtOrigin rotor_wedge_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Rotor rotor_wedge_scalar(Rotor self, Scalar other) {
    return Rotor(self.g0_ * vec4(other.g0_));
}

PlaneAtOrigin rotor_wedge_transflector(Rotor self, Transflector other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

AntiScalar rotor_wedge_translator(Rotor self, Translator other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar scalar_wedge_antiScalar(Scalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

DualNum scalar_wedge_dualNum(Scalar self, DualNum other) {
    return DualNum(vec2(self.g0_) * other.g0_);
}

Flector scalar_wedge_flector(Scalar self, Flector other) {
    return Flector(vec4(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

FlectorAtInfinity scalar_wedge_flectorAtInfinity(Scalar self, FlectorAtInfinity other) {
    return FlectorAtInfinity(vec4(self.g0_) * other.g0_);
}

Horizon scalar_wedge_horizon(Scalar self, Horizon other) {
    return Horizon(self.g0_ * other.g0_);
}

Line scalar_wedge_line(Scalar self, Line other) {
    return Line(vec3(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

LineAtInfinity scalar_wedge_lineAtInfinity(Scalar self, LineAtInfinity other) {
    return LineAtInfinity(vec3(self.g0_) * other.g0_);
}

LineAtOrigin scalar_wedge_lineAtOrigin(Scalar self, LineAtOrigin other) {
    return LineAtOrigin(vec3(self.g0_) * other.g0_);
}

Motor scalar_wedge_motor(Scalar self, Motor other) {
    return Motor(vec4(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_);
}

MultiVector scalar_wedge_multiVector(Scalar self, MultiVector other) {
    return MultiVector(vec2(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_, vec3(self.g0_) * other.g3_, vec4(self.g0_) * other.g4_);
}

MultiVectorAtInfinity scalar_wedge_multiVectorAtInfinity(Scalar self, MultiVectorAtInfinity other) {
    return MultiVectorAtInfinity(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

MultiVectorAtOrigin scalar_wedge_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_) * other.g0_, vec3(self.g0_) * other.g1_, vec3(self.g0_) * other.g2_);
}

Origin scalar_wedge_origin(Scalar self, Origin other) {
    return Origin(self.g0_ * other.g0_);
}

Plane scalar_wedge_plane(Scalar self, Plane other) {
    return Plane(vec4(self.g0_) * other.g0_);
}

PlaneAtOrigin scalar_wedge_planeAtOrigin(Scalar self, PlaneAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_) * other.g0_);
}

Point scalar_wedge_point(Scalar self, Point other) {
    return Point(vec4(self.g0_) * other.g0_);
}

PointAtInfinity scalar_wedge_pointAtInfinity(Scalar self, PointAtInfinity other) {
    return PointAtInfinity(vec3(self.g0_) * other.g0_);
}

Rotor scalar_wedge_rotor(Scalar self, Rotor other) {
    return Rotor(vec4(self.g0_) * other.g0_);
}

Scalar scalar_wedge_scalar(Scalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Transflector scalar_wedge_transflector(Scalar self, Transflector other) {
    return Transflector(vec3(self.g0_) * other.g0_, vec4(self.g0_) * other.g1_);
}

Translator scalar_wedge_translator(Scalar self, Translator other) {
    return Translator(vec4(self.g0_) * other.g0_);
}

Transflector transflector_wedge_dualNum(Transflector self, DualNum other) {
    return Transflector(self.g0_ * vec3(other.g0_.x), self.g1_ * vec4(other.g0_.x));
}

Motor transflector_wedge_flector(Transflector self, Flector other) {
    return Motor(vec4(self.g0_.x) * vec4(-other.g0_.w, 0.0, 0.0, other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, -other.g0_.w, 0.0, other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, -other.g0_.w, other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Translator transflector_wedge_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Plane transflector_wedge_line(Transflector self, Line other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

Horizon transflector_wedge_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

PlaneAtOrigin transflector_wedge_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Plane transflector_wedge_motor(Transflector self, Motor other) {
    return Plane(vec4(self.g0_.x) * vec4(0.0, other.g0_.z, -other.g0_.y, -other.g1_.x) + vec4(self.g0_.y) * vec4(-other.g0_.z, 0.0, other.g0_.x, -other.g1_.y) + vec4(self.g0_.z) * vec4(other.g0_.y, -other.g0_.x, 0.0, -other.g1_.z));
}

MultiVector transflector_wedge_multiVector(Transflector self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, other.g4_.x) + vec2(self.g0_.y) * vec2(0.0, other.g4_.y) + vec2(self.g0_.z) * vec2(0.0, other.g4_.z) + vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g1_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0) - self.g0_ * vec3(other.g1_.w), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, other.g2_.z, -other.g2_.y, -other.g3_.x) + vec4(self.g0_.y) * vec4(-other.g2_.z, 0.0, other.g2_.x, -other.g3_.y) + vec4(self.g0_.z) * vec4(other.g2_.y, -other.g2_.x, 0.0, -other.g3_.z) + self.g1_ * vec4(other.g0_.x));
}

MultiVector transflector_wedge_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g1_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g1_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g1_.z) * vec2(0.0, -other.g1_.z), vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(other.g0_.x, other.g0_.x, other.g0_.x, 0.0), vec3(0.0), vec3(self.g0_.x) * vec3(0.0, -other.g1_.z, other.g1_.y) + vec3(self.g0_.y) * vec3(other.g1_.z, 0.0, -other.g1_.x) + vec3(self.g0_.z) * vec3(-other.g1_.y, other.g1_.x, 0.0), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g2_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g2_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g2_.z) + self.g1_ * vec4(other.g0_.x));
}

MultiVectorAtOrigin transflector_wedge_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, other.g2_.z) + vec2(self.g1_.w) * vec2(0.0, -other.g0_.x), vec3(0.0) - self.g0_ * vec3(other.g0_.x), vec3(self.g0_.x) * vec3(0.0, other.g1_.z, -other.g1_.y) + vec3(self.g0_.y) * vec3(-other.g1_.z, 0.0, other.g1_.x) + vec3(self.g0_.z) * vec3(other.g1_.y, -other.g1_.x, 0.0));
}

Rotor transflector_wedge_origin(Transflector self, Origin other) {
    return Rotor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_, -other.g0_, -other.g0_, 0.0) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_));
}

AntiScalar transflector_wedge_plane(Transflector self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar transflector_wedge_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Motor transflector_wedge_point(Transflector self, Point other) {
    return Motor(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g0_.x) * vec4(-other.g0_.w, -other.g0_.w, -other.g0_.w, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z) + vec4(self.g1_.w) * vec4(0.0, 0.0, 0.0, -other.g0_.w), vec3(self.g0_.x) * vec3(0.0, -other.g0_.z, other.g0_.y) + vec3(self.g0_.y) * vec3(other.g0_.z, 0.0, -other.g0_.x) + vec3(self.g0_.z) * vec3(-other.g0_.y, other.g0_.x, 0.0));
}

Translator transflector_wedge_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, 0.0) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, 0.0) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, 0.0) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

PlaneAtOrigin transflector_wedge_rotor(Transflector self, Rotor other) {
    return PlaneAtOrigin(vec3(self.g0_.x) * vec3(0.0, other.g0_.z, -other.g0_.y) + vec3(self.g0_.y) * vec3(-other.g0_.z, 0.0, other.g0_.x) + vec3(self.g0_.z) * vec3(other.g0_.y, -other.g0_.x, 0.0));
}

Transflector transflector_wedge_scalar(Transflector self, Scalar other) {
    return Transflector(self.g0_ * vec3(other.g0_), self.g1_ * vec4(other.g0_));
}

Translator transflector_wedge_transflector(Transflector self, Transflector other) {
    return Translator(vec4(self.g0_.x) * vec4(0.0, -other.g0_.z, other.g0_.y, other.g1_.x) + vec4(self.g0_.y) * vec4(other.g0_.z, 0.0, -other.g0_.x, other.g1_.y) + vec4(self.g0_.z) * vec4(-other.g0_.y, other.g0_.x, 0.0, other.g1_.z) + vec4(self.g1_.x) * vec4(0.0, 0.0, 0.0, -other.g0_.x) + vec4(self.g1_.y) * vec4(0.0, 0.0, 0.0, -other.g0_.y) + vec4(self.g1_.z) * vec4(0.0, 0.0, 0.0, -other.g0_.z));
}

Horizon transflector_wedge_translator(Transflector self, Translator other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Translator translator_wedge_dualNum(Translator self, DualNum other) {
    return Translator(self.g0_ * vec4(other.g0_.x));
}

Plane translator_wedge_flector(Translator self, Flector other) {
    return Plane(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Horizon translator_wedge_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar translator_wedge_line(Translator self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar translator_wedge_lineAtOrigin(Translator self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar translator_wedge_motor(Translator self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

MultiVector translator_wedge_multiVector(Translator self, MultiVector other) {
    return MultiVector(vec2(self.g0_.x) * vec2(0.0, -other.g2_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g2_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g2_.z) + vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(other.g1_.w, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, other.g1_.w, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g1_.w, -other.g1_.z));
}

MultiVector translator_wedge_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return MultiVector(vec2(self.g0_.w) * vec2(0.0, other.g0_.x), vec4(0.0), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x), vec4(self.g0_.x) * vec4(0.0, 0.0, 0.0, -other.g1_.x) + vec4(self.g0_.y) * vec4(0.0, 0.0, 0.0, -other.g1_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, 0.0, -other.g1_.z));
}

MultiVectorAtOrigin translator_wedge_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return MultiVectorAtOrigin(vec2(self.g0_.x) * vec2(0.0, -other.g1_.x) + vec2(self.g0_.y) * vec2(0.0, -other.g1_.y) + vec2(self.g0_.z) * vec2(0.0, -other.g1_.z), vec3(0.0), vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_.x));
}

PlaneAtOrigin translator_wedge_origin(Translator self, Origin other) {
    return PlaneAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z) * vec3(other.g0_));
}

Plane translator_wedge_point(Translator self, Point other) {
    return Plane(vec4(self.g0_.x) * vec4(other.g0_.w, 0.0, 0.0, -other.g0_.x) + vec4(self.g0_.y) * vec4(0.0, other.g0_.w, 0.0, -other.g0_.y) + vec4(self.g0_.z) * vec4(0.0, 0.0, other.g0_.w, -other.g0_.z));
}

Horizon translator_wedge_pointAtInfinity(Translator self, PointAtInfinity other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar translator_wedge_rotor(Translator self, Rotor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Translator translator_wedge_scalar(Translator self, Scalar other) {
    return Translator(self.g0_ * vec4(other.g0_));
}

Horizon translator_wedge_transflector(Translator self, Transflector other) {
    return Horizon(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar antiScalar_antiDot_antiScalar(AntiScalar self, AntiScalar other) {
    return AntiScalar(self.g0_ * other.g0_);
}

AntiScalar antiScalar_antiDot_dualNum(AntiScalar self, DualNum other) {
    return AntiScalar(self.g0_ * other.g0_.y);
}

AntiScalar antiScalar_antiDot_motor(AntiScalar self, Motor other) {
    return AntiScalar(self.g0_ * other.g0_.w);
}

AntiScalar antiScalar_antiDot_multiVector(AntiScalar self, MultiVector other) {
    return AntiScalar(self.g0_ * other.g0_.y);
}

AntiScalar antiScalar_antiDot_multiVectorAtOrigin(AntiScalar self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0_ * other.g0_.y);
}

AntiScalar antiScalar_antiDot_rotor(AntiScalar self, Rotor other) {
    return AntiScalar(self.g0_ * other.g0_.w);
}

AntiScalar antiScalar_antiDot_translator(AntiScalar self, Translator other) {
    return AntiScalar(self.g0_ * other.g0_.w);
}

AntiScalar dualNum_antiDot_antiScalar(DualNum self, AntiScalar other) {
    return AntiScalar(self.g0_.y * other.g0_);
}

AntiScalar dualNum_antiDot_dualNum(DualNum self, DualNum other) {
    return AntiScalar(self.g0_.y * other.g0_.y);
}

AntiScalar dualNum_antiDot_motor(DualNum self, Motor other) {
    return AntiScalar(self.g0_.y * other.g0_.w);
}

AntiScalar dualNum_antiDot_multiVector(DualNum self, MultiVector other) {
    return AntiScalar(self.g0_.y * other.g0_.y);
}

AntiScalar dualNum_antiDot_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0_.y * other.g0_.y);
}

AntiScalar dualNum_antiDot_rotor(DualNum self, Rotor other) {
    return AntiScalar(self.g0_.y * other.g0_.w);
}

AntiScalar dualNum_antiDot_translator(DualNum self, Translator other) {
    return AntiScalar(self.g0_.y * other.g0_.w);
}

AntiScalar flector_antiDot_flector(Flector self, Flector other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_.w + self.g1_.x * other.g1_.x + self.g1_.y * other.g1_.y + self.g1_.z * other.g1_.z);
}

AntiScalar flector_antiDot_multiVector(Flector self, MultiVector other) {
    return AntiScalar(0.0 - self.g0_.w * other.g1_.w + self.g1_.x * other.g4_.x + self.g1_.y * other.g4_.y + self.g1_.z * other.g4_.z);
}

AntiScalar flector_antiDot_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_.x + self.g1_.x * other.g2_.x + self.g1_.y * other.g2_.y + self.g1_.z * other.g2_.z);
}

AntiScalar flector_antiDot_origin(Flector self, Origin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_);
}

AntiScalar flector_antiDot_plane(Flector self, Plane other) {
    return AntiScalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

AntiScalar flector_antiDot_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return AntiScalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

AntiScalar flector_antiDot_point(Flector self, Point other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_.w);
}

AntiScalar flector_antiDot_transflector(Flector self, Transflector other) {
    return AntiScalar(self.g1_.x * other.g1_.x + self.g1_.y * other.g1_.y + self.g1_.z * other.g1_.z);
}

AntiScalar line_antiDot_line(Line self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar line_antiDot_lineAtOrigin(Line self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar line_antiDot_motor(Line self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar line_antiDot_multiVector(Line self, MultiVector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g2_.x - self.g0_.y * other.g2_.y - self.g0_.z * other.g2_.z);
}

AntiScalar line_antiDot_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

AntiScalar line_antiDot_rotor(Line self, Rotor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtOrigin_antiDot_line(LineAtOrigin self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtOrigin_antiDot_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtOrigin_antiDot_motor(LineAtOrigin self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar lineAtOrigin_antiDot_multiVector(LineAtOrigin self, MultiVector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g2_.x - self.g0_.y * other.g2_.y - self.g0_.z * other.g2_.z);
}

AntiScalar lineAtOrigin_antiDot_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

AntiScalar lineAtOrigin_antiDot_rotor(LineAtOrigin self, Rotor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar motor_antiDot_antiScalar(Motor self, AntiScalar other) {
    return AntiScalar(self.g0_.w * other.g0_);
}

AntiScalar motor_antiDot_dualNum(Motor self, DualNum other) {
    return AntiScalar(self.g0_.w * other.g0_.y);
}

AntiScalar motor_antiDot_line(Motor self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar motor_antiDot_lineAtOrigin(Motor self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar motor_antiDot_motor(Motor self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

AntiScalar motor_antiDot_multiVector(Motor self, MultiVector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g2_.x - self.g0_.y * other.g2_.y - self.g0_.z * other.g2_.z + self.g0_.w * other.g0_.y);
}

AntiScalar motor_antiDot_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z + self.g0_.w * other.g0_.y);
}

AntiScalar motor_antiDot_rotor(Motor self, Rotor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

AntiScalar motor_antiDot_translator(Motor self, Translator other) {
    return AntiScalar(self.g0_.w * other.g0_.w);
}

AntiScalar multiVector_antiDot_antiScalar(MultiVector self, AntiScalar other) {
    return AntiScalar(self.g0_.y * other.g0_);
}

AntiScalar multiVector_antiDot_dualNum(MultiVector self, DualNum other) {
    return AntiScalar(self.g0_.y * other.g0_.y);
}

AntiScalar multiVector_antiDot_flector(MultiVector self, Flector other) {
    return AntiScalar(0.0 - self.g1_.w * other.g0_.w + self.g4_.x * other.g1_.x + self.g4_.y * other.g1_.y + self.g4_.z * other.g1_.z);
}

AntiScalar multiVector_antiDot_line(MultiVector self, Line other) {
    return AntiScalar(0.0 - self.g2_.x * other.g0_.x - self.g2_.y * other.g0_.y - self.g2_.z * other.g0_.z);
}

AntiScalar multiVector_antiDot_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g2_.x * other.g0_.x - self.g2_.y * other.g0_.y - self.g2_.z * other.g0_.z);
}

AntiScalar multiVector_antiDot_motor(MultiVector self, Motor other) {
    return AntiScalar(self.g0_.y * other.g0_.w - self.g2_.x * other.g0_.x - self.g2_.y * other.g0_.y - self.g2_.z * other.g0_.z);
}

AntiScalar multiVector_antiDot_multiVector(MultiVector self, MultiVector other) {
    return AntiScalar(self.g0_.y * other.g0_.y - self.g1_.w * other.g1_.w - self.g2_.x * other.g2_.x - self.g2_.y * other.g2_.y - self.g2_.z * other.g2_.z + self.g4_.x * other.g4_.x + self.g4_.y * other.g4_.y + self.g4_.z * other.g4_.z);
}

AntiScalar multiVector_antiDot_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0_.y * other.g0_.y - self.g1_.w * other.g0_.x - self.g2_.x * other.g1_.x - self.g2_.y * other.g1_.y - self.g2_.z * other.g1_.z + self.g4_.x * other.g2_.x + self.g4_.y * other.g2_.y + self.g4_.z * other.g2_.z);
}

AntiScalar multiVector_antiDot_origin(MultiVector self, Origin other) {
    return AntiScalar(0.0 - self.g1_.w * other.g0_);
}

AntiScalar multiVector_antiDot_plane(MultiVector self, Plane other) {
    return AntiScalar(self.g4_.x * other.g0_.x + self.g4_.y * other.g0_.y + self.g4_.z * other.g0_.z);
}

AntiScalar multiVector_antiDot_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return AntiScalar(self.g4_.x * other.g0_.x + self.g4_.y * other.g0_.y + self.g4_.z * other.g0_.z);
}

AntiScalar multiVector_antiDot_point(MultiVector self, Point other) {
    return AntiScalar(0.0 - self.g1_.w * other.g0_.w);
}

AntiScalar multiVector_antiDot_rotor(MultiVector self, Rotor other) {
    return AntiScalar(self.g0_.y * other.g0_.w - self.g2_.x * other.g0_.x - self.g2_.y * other.g0_.y - self.g2_.z * other.g0_.z);
}

AntiScalar multiVector_antiDot_transflector(MultiVector self, Transflector other) {
    return AntiScalar(self.g4_.x * other.g1_.x + self.g4_.y * other.g1_.y + self.g4_.z * other.g1_.z);
}

AntiScalar multiVector_antiDot_translator(MultiVector self, Translator other) {
    return AntiScalar(self.g0_.y * other.g0_.w);
}

AntiScalar multiVectorAtOrigin_antiDot_antiScalar(MultiVectorAtOrigin self, AntiScalar other) {
    return AntiScalar(self.g0_.y * other.g0_);
}

AntiScalar multiVectorAtOrigin_antiDot_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return AntiScalar(self.g0_.y * other.g0_.y);
}

AntiScalar multiVectorAtOrigin_antiDot_flector(MultiVectorAtOrigin self, Flector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.w + self.g2_.x * other.g1_.x + self.g2_.y * other.g1_.y + self.g2_.z * other.g1_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_line(MultiVectorAtOrigin self, Line other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_motor(MultiVectorAtOrigin self, Motor other) {
    return AntiScalar(self.g0_.y * other.g0_.w - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.w + self.g0_.y * other.g0_.y - self.g1_.x * other.g2_.x - self.g1_.y * other.g2_.y - self.g1_.z * other.g2_.z + self.g2_.x * other.g4_.x + self.g2_.y * other.g4_.y + self.g2_.z * other.g4_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y - self.g1_.x * other.g1_.x - self.g1_.y * other.g1_.y - self.g1_.z * other.g1_.z + self.g2_.x * other.g2_.x + self.g2_.y * other.g2_.y + self.g2_.z * other.g2_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_origin(MultiVectorAtOrigin self, Origin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_);
}

AntiScalar multiVectorAtOrigin_antiDot_plane(MultiVectorAtOrigin self, Plane other) {
    return AntiScalar(self.g2_.x * other.g0_.x + self.g2_.y * other.g0_.y + self.g2_.z * other.g0_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return AntiScalar(self.g2_.x * other.g0_.x + self.g2_.y * other.g0_.y + self.g2_.z * other.g0_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_point(MultiVectorAtOrigin self, Point other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.w);
}

AntiScalar multiVectorAtOrigin_antiDot_rotor(MultiVectorAtOrigin self, Rotor other) {
    return AntiScalar(self.g0_.y * other.g0_.w - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_transflector(MultiVectorAtOrigin self, Transflector other) {
    return AntiScalar(self.g2_.x * other.g1_.x + self.g2_.y * other.g1_.y + self.g2_.z * other.g1_.z);
}

AntiScalar multiVectorAtOrigin_antiDot_translator(MultiVectorAtOrigin self, Translator other) {
    return AntiScalar(self.g0_.y * other.g0_.w);
}

AntiScalar origin_antiDot_flector(Origin self, Flector other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_.w);
}

AntiScalar origin_antiDot_multiVector(Origin self, MultiVector other) {
    return AntiScalar(0.0 - self.g0_ * other.g1_.w);
}

AntiScalar origin_antiDot_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_.x);
}

AntiScalar origin_antiDot_origin(Origin self, Origin other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_);
}

AntiScalar origin_antiDot_point(Origin self, Point other) {
    return AntiScalar(0.0 - self.g0_ * other.g0_.w);
}

AntiScalar plane_antiDot_flector(Plane self, Flector other) {
    return AntiScalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z);
}

AntiScalar plane_antiDot_multiVector(Plane self, MultiVector other) {
    return AntiScalar(self.g0_.x * other.g4_.x + self.g0_.y * other.g4_.y + self.g0_.z * other.g4_.z);
}

AntiScalar plane_antiDot_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g2_.x + self.g0_.y * other.g2_.y + self.g0_.z * other.g2_.z);
}

AntiScalar plane_antiDot_plane(Plane self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar plane_antiDot_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar plane_antiDot_transflector(Plane self, Transflector other) {
    return AntiScalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z);
}

AntiScalar planeAtOrigin_antiDot_flector(PlaneAtOrigin self, Flector other) {
    return AntiScalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z);
}

AntiScalar planeAtOrigin_antiDot_multiVector(PlaneAtOrigin self, MultiVector other) {
    return AntiScalar(self.g0_.x * other.g4_.x + self.g0_.y * other.g4_.y + self.g0_.z * other.g4_.z);
}

AntiScalar planeAtOrigin_antiDot_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g2_.x + self.g0_.y * other.g2_.y + self.g0_.z * other.g2_.z);
}

AntiScalar planeAtOrigin_antiDot_plane(PlaneAtOrigin self, Plane other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar planeAtOrigin_antiDot_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return AntiScalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

AntiScalar planeAtOrigin_antiDot_transflector(PlaneAtOrigin self, Transflector other) {
    return AntiScalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z);
}

AntiScalar point_antiDot_flector(Point self, Flector other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_.w);
}

AntiScalar point_antiDot_multiVector(Point self, MultiVector other) {
    return AntiScalar(0.0 - self.g0_.w * other.g1_.w);
}

AntiScalar point_antiDot_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_.x);
}

AntiScalar point_antiDot_origin(Point self, Origin other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_);
}

AntiScalar point_antiDot_point(Point self, Point other) {
    return AntiScalar(0.0 - self.g0_.w * other.g0_.w);
}

AntiScalar rotor_antiDot_antiScalar(Rotor self, AntiScalar other) {
    return AntiScalar(self.g0_.w * other.g0_);
}

AntiScalar rotor_antiDot_dualNum(Rotor self, DualNum other) {
    return AntiScalar(self.g0_.w * other.g0_.y);
}

AntiScalar rotor_antiDot_line(Rotor self, Line other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar rotor_antiDot_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

AntiScalar rotor_antiDot_motor(Rotor self, Motor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

AntiScalar rotor_antiDot_multiVector(Rotor self, MultiVector other) {
    return AntiScalar(0.0 - self.g0_.x * other.g2_.x - self.g0_.y * other.g2_.y - self.g0_.z * other.g2_.z + self.g0_.w * other.g0_.y);
}

AntiScalar rotor_antiDot_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return AntiScalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z + self.g0_.w * other.g0_.y);
}

AntiScalar rotor_antiDot_rotor(Rotor self, Rotor other) {
    return AntiScalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z + self.g0_.w * other.g0_.w);
}

AntiScalar rotor_antiDot_translator(Rotor self, Translator other) {
    return AntiScalar(self.g0_.w * other.g0_.w);
}

AntiScalar transflector_antiDot_flector(Transflector self, Flector other) {
    return AntiScalar(self.g1_.x * other.g1_.x + self.g1_.y * other.g1_.y + self.g1_.z * other.g1_.z);
}

AntiScalar transflector_antiDot_multiVector(Transflector self, MultiVector other) {
    return AntiScalar(self.g1_.x * other.g4_.x + self.g1_.y * other.g4_.y + self.g1_.z * other.g4_.z);
}

AntiScalar transflector_antiDot_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g1_.x * other.g2_.x + self.g1_.y * other.g2_.y + self.g1_.z * other.g2_.z);
}

AntiScalar transflector_antiDot_plane(Transflector self, Plane other) {
    return AntiScalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

AntiScalar transflector_antiDot_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return AntiScalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

AntiScalar transflector_antiDot_transflector(Transflector self, Transflector other) {
    return AntiScalar(self.g1_.x * other.g1_.x + self.g1_.y * other.g1_.y + self.g1_.z * other.g1_.z);
}

AntiScalar translator_antiDot_antiScalar(Translator self, AntiScalar other) {
    return AntiScalar(self.g0_.w * other.g0_);
}

AntiScalar translator_antiDot_dualNum(Translator self, DualNum other) {
    return AntiScalar(self.g0_.w * other.g0_.y);
}

AntiScalar translator_antiDot_motor(Translator self, Motor other) {
    return AntiScalar(self.g0_.w * other.g0_.w);
}

AntiScalar translator_antiDot_multiVector(Translator self, MultiVector other) {
    return AntiScalar(self.g0_.w * other.g0_.y);
}

AntiScalar translator_antiDot_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return AntiScalar(self.g0_.w * other.g0_.y);
}

AntiScalar translator_antiDot_rotor(Translator self, Rotor other) {
    return AntiScalar(self.g0_.w * other.g0_.w);
}

AntiScalar translator_antiDot_translator(Translator self, Translator other) {
    return AntiScalar(self.g0_.w * other.g0_.w);
}

Scalar dualNum_dot_dualNum(DualNum self, DualNum other) {
    return Scalar(self.g0_.x * other.g0_.x);
}

Scalar dualNum_dot_multiVector(DualNum self, MultiVector other) {
    return Scalar(self.g0_.x * other.g0_.x);
}

Scalar dualNum_dot_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x);
}

Scalar dualNum_dot_scalar(DualNum self, Scalar other) {
    return Scalar(self.g0_.x * other.g0_);
}

Scalar flector_dot_flector(Flector self, Flector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z - self.g1_.w * other.g1_.w);
}

Scalar flector_dot_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z - self.g1_.w * other.g0_.w);
}

Scalar flector_dot_horizon(Flector self, Horizon other) {
    return Scalar(0.0 - self.g1_.w * other.g0_);
}

Scalar flector_dot_multiVector(Flector self, MultiVector other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z - self.g1_.w * other.g4_.w);
}

Scalar flector_dot_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z - self.g1_.w * other.g0_.y);
}

Scalar flector_dot_plane(Flector self, Plane other) {
    return Scalar(0.0 - self.g1_.w * other.g0_.w);
}

Scalar flector_dot_point(Flector self, Point other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar flector_dot_pointAtInfinity(Flector self, PointAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar flector_dot_transflector(Flector self, Transflector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z - self.g1_.w * other.g1_.w);
}

Scalar flectorAtInfinity_dot_flector(FlectorAtInfinity self, Flector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z - self.g0_.w * other.g1_.w);
}

Scalar flectorAtInfinity_dot_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z - self.g0_.w * other.g0_.w);
}

Scalar flectorAtInfinity_dot_horizon(FlectorAtInfinity self, Horizon other) {
    return Scalar(0.0 - self.g0_.w * other.g0_);
}

Scalar flectorAtInfinity_dot_multiVector(FlectorAtInfinity self, MultiVector other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z - self.g0_.w * other.g4_.w);
}

Scalar flectorAtInfinity_dot_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z - self.g0_.w * other.g0_.y);
}

Scalar flectorAtInfinity_dot_plane(FlectorAtInfinity self, Plane other) {
    return Scalar(0.0 - self.g0_.w * other.g0_.w);
}

Scalar flectorAtInfinity_dot_point(FlectorAtInfinity self, Point other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar flectorAtInfinity_dot_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar flectorAtInfinity_dot_transflector(FlectorAtInfinity self, Transflector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z - self.g0_.w * other.g1_.w);
}

Scalar horizon_dot_flector(Horizon self, Flector other) {
    return Scalar(0.0 - self.g0_ * other.g1_.w);
}

Scalar horizon_dot_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0_ * other.g0_.w);
}

Scalar horizon_dot_horizon(Horizon self, Horizon other) {
    return Scalar(0.0 - self.g0_ * other.g0_);
}

Scalar horizon_dot_multiVector(Horizon self, MultiVector other) {
    return Scalar(0.0 - self.g0_ * other.g4_.w);
}

Scalar horizon_dot_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0_ * other.g0_.y);
}

Scalar horizon_dot_plane(Horizon self, Plane other) {
    return Scalar(0.0 - self.g0_ * other.g0_.w);
}

Scalar horizon_dot_transflector(Horizon self, Transflector other) {
    return Scalar(0.0 - self.g0_ * other.g1_.w);
}

Scalar line_dot_line(Line self, Line other) {
    return Scalar(0.0 - self.g1_.x * other.g1_.x - self.g1_.y * other.g1_.y - self.g1_.z * other.g1_.z);
}

Scalar line_dot_lineAtInfinity(Line self, LineAtInfinity other) {
    return Scalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Scalar line_dot_motor(Line self, Motor other) {
    return Scalar(0.0 - self.g1_.x * other.g1_.x - self.g1_.y * other.g1_.y - self.g1_.z * other.g1_.z);
}

Scalar line_dot_multiVector(Line self, MultiVector other) {
    return Scalar(0.0 - self.g1_.x * other.g3_.x - self.g1_.y * other.g3_.y - self.g1_.z * other.g3_.z);
}

Scalar line_dot_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g1_.x * other.g2_.x - self.g1_.y * other.g2_.y - self.g1_.z * other.g2_.z);
}

Scalar line_dot_translator(Line self, Translator other) {
    return Scalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Scalar lineAtInfinity_dot_line(LineAtInfinity self, Line other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

Scalar lineAtInfinity_dot_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar lineAtInfinity_dot_motor(LineAtInfinity self, Motor other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

Scalar lineAtInfinity_dot_multiVector(LineAtInfinity self, MultiVector other) {
    return Scalar(0.0 - self.g0_.x * other.g3_.x - self.g0_.y * other.g3_.y - self.g0_.z * other.g3_.z);
}

Scalar lineAtInfinity_dot_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0_.x * other.g2_.x - self.g0_.y * other.g2_.y - self.g0_.z * other.g2_.z);
}

Scalar lineAtInfinity_dot_translator(LineAtInfinity self, Translator other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar motor_dot_line(Motor self, Line other) {
    return Scalar(0.0 - self.g1_.x * other.g1_.x - self.g1_.y * other.g1_.y - self.g1_.z * other.g1_.z);
}

Scalar motor_dot_lineAtInfinity(Motor self, LineAtInfinity other) {
    return Scalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Scalar motor_dot_motor(Motor self, Motor other) {
    return Scalar(0.0 - self.g1_.x * other.g1_.x - self.g1_.y * other.g1_.y - self.g1_.z * other.g1_.z);
}

Scalar motor_dot_multiVector(Motor self, MultiVector other) {
    return Scalar(0.0 - self.g1_.x * other.g3_.x - self.g1_.y * other.g3_.y - self.g1_.z * other.g3_.z);
}

Scalar motor_dot_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g1_.x * other.g2_.x - self.g1_.y * other.g2_.y - self.g1_.z * other.g2_.z);
}

Scalar motor_dot_translator(Motor self, Translator other) {
    return Scalar(0.0 - self.g1_.x * other.g0_.x - self.g1_.y * other.g0_.y - self.g1_.z * other.g0_.z);
}

Scalar multiVector_dot_dualNum(MultiVector self, DualNum other) {
    return Scalar(self.g0_.x * other.g0_.x);
}

Scalar multiVector_dot_flector(MultiVector self, Flector other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z - self.g4_.w * other.g1_.w);
}

Scalar multiVector_dot_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z - self.g4_.w * other.g0_.w);
}

Scalar multiVector_dot_horizon(MultiVector self, Horizon other) {
    return Scalar(0.0 - self.g4_.w * other.g0_);
}

Scalar multiVector_dot_line(MultiVector self, Line other) {
    return Scalar(0.0 - self.g3_.x * other.g1_.x - self.g3_.y * other.g1_.y - self.g3_.z * other.g1_.z);
}

Scalar multiVector_dot_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return Scalar(0.0 - self.g3_.x * other.g0_.x - self.g3_.y * other.g0_.y - self.g3_.z * other.g0_.z);
}

Scalar multiVector_dot_motor(MultiVector self, Motor other) {
    return Scalar(0.0 - self.g3_.x * other.g1_.x - self.g3_.y * other.g1_.y - self.g3_.z * other.g1_.z);
}

Scalar multiVector_dot_multiVector(MultiVector self, MultiVector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g1_.x * other.g1_.x + self.g1_.y * other.g1_.y + self.g1_.z * other.g1_.z - self.g3_.x * other.g3_.x - self.g3_.y * other.g3_.y - self.g3_.z * other.g3_.z - self.g4_.w * other.g4_.w);
}

Scalar multiVector_dot_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g1_.x * other.g1_.x + self.g1_.y * other.g1_.y + self.g1_.z * other.g1_.z - self.g3_.x * other.g2_.x - self.g3_.y * other.g2_.y - self.g3_.z * other.g2_.z - self.g4_.w * other.g0_.y);
}

Scalar multiVector_dot_plane(MultiVector self, Plane other) {
    return Scalar(0.0 - self.g4_.w * other.g0_.w);
}

Scalar multiVector_dot_point(MultiVector self, Point other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Scalar multiVector_dot_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Scalar multiVector_dot_scalar(MultiVector self, Scalar other) {
    return Scalar(self.g0_.x * other.g0_);
}

Scalar multiVector_dot_transflector(MultiVector self, Transflector other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z - self.g4_.w * other.g1_.w);
}

Scalar multiVector_dot_translator(MultiVector self, Translator other) {
    return Scalar(0.0 - self.g3_.x * other.g0_.x - self.g3_.y * other.g0_.y - self.g3_.z * other.g0_.z);
}

Scalar multiVectorAtInfinity_dot_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return Scalar(self.g0_.x * other.g0_.x);
}

Scalar multiVectorAtInfinity_dot_flector(MultiVectorAtInfinity self, Flector other) {
    return Scalar(0.0 - self.g0_.y * other.g1_.w + self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Scalar multiVectorAtInfinity_dot_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0_.y * other.g0_.w + self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Scalar multiVectorAtInfinity_dot_horizon(MultiVectorAtInfinity self, Horizon other) {
    return Scalar(0.0 - self.g0_.y * other.g0_);
}

Scalar multiVectorAtInfinity_dot_line(MultiVectorAtInfinity self, Line other) {
    return Scalar(0.0 - self.g2_.x * other.g1_.x - self.g2_.y * other.g1_.y - self.g2_.z * other.g1_.z);
}

Scalar multiVectorAtInfinity_dot_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return Scalar(0.0 - self.g2_.x * other.g0_.x - self.g2_.y * other.g0_.y - self.g2_.z * other.g0_.z);
}

Scalar multiVectorAtInfinity_dot_motor(MultiVectorAtInfinity self, Motor other) {
    return Scalar(0.0 - self.g2_.x * other.g1_.x - self.g2_.y * other.g1_.y - self.g2_.z * other.g1_.z);
}

Scalar multiVectorAtInfinity_dot_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return Scalar(self.g0_.x * other.g0_.x - self.g0_.y * other.g4_.w + self.g1_.x * other.g1_.x + self.g1_.y * other.g1_.y + self.g1_.z * other.g1_.z - self.g2_.x * other.g3_.x - self.g2_.y * other.g3_.y - self.g2_.z * other.g3_.z);
}

Scalar multiVectorAtInfinity_dot_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y + self.g1_.x * other.g1_.x + self.g1_.y * other.g1_.y + self.g1_.z * other.g1_.z - self.g2_.x * other.g2_.x - self.g2_.y * other.g2_.y - self.g2_.z * other.g2_.z);
}

Scalar multiVectorAtInfinity_dot_plane(MultiVectorAtInfinity self, Plane other) {
    return Scalar(0.0 - self.g0_.y * other.g0_.w);
}

Scalar multiVectorAtInfinity_dot_point(MultiVectorAtInfinity self, Point other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Scalar multiVectorAtInfinity_dot_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return Scalar(self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Scalar multiVectorAtInfinity_dot_scalar(MultiVectorAtInfinity self, Scalar other) {
    return Scalar(self.g0_.x * other.g0_);
}

Scalar multiVectorAtInfinity_dot_transflector(MultiVectorAtInfinity self, Transflector other) {
    return Scalar(0.0 - self.g0_.y * other.g1_.w + self.g1_.x * other.g0_.x + self.g1_.y * other.g0_.y + self.g1_.z * other.g0_.z);
}

Scalar multiVectorAtInfinity_dot_translator(MultiVectorAtInfinity self, Translator other) {
    return Scalar(0.0 - self.g2_.x * other.g0_.x - self.g2_.y * other.g0_.y - self.g2_.z * other.g0_.z);
}

Scalar plane_dot_flector(Plane self, Flector other) {
    return Scalar(0.0 - self.g0_.w * other.g1_.w);
}

Scalar plane_dot_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return Scalar(0.0 - self.g0_.w * other.g0_.w);
}

Scalar plane_dot_horizon(Plane self, Horizon other) {
    return Scalar(0.0 - self.g0_.w * other.g0_);
}

Scalar plane_dot_multiVector(Plane self, MultiVector other) {
    return Scalar(0.0 - self.g0_.w * other.g4_.w);
}

Scalar plane_dot_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0_.w * other.g0_.y);
}

Scalar plane_dot_plane(Plane self, Plane other) {
    return Scalar(0.0 - self.g0_.w * other.g0_.w);
}

Scalar plane_dot_transflector(Plane self, Transflector other) {
    return Scalar(0.0 - self.g0_.w * other.g1_.w);
}

Scalar point_dot_flector(Point self, Flector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar point_dot_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar point_dot_multiVector(Point self, MultiVector other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z);
}

Scalar point_dot_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z);
}

Scalar point_dot_point(Point self, Point other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar point_dot_pointAtInfinity(Point self, PointAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar point_dot_transflector(Point self, Transflector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar pointAtInfinity_dot_flector(PointAtInfinity self, Flector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar pointAtInfinity_dot_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar pointAtInfinity_dot_multiVector(PointAtInfinity self, MultiVector other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z);
}

Scalar pointAtInfinity_dot_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z);
}

Scalar pointAtInfinity_dot_point(PointAtInfinity self, Point other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar pointAtInfinity_dot_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar pointAtInfinity_dot_transflector(PointAtInfinity self, Transflector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar scalar_dot_dualNum(Scalar self, DualNum other) {
    return Scalar(self.g0_ * other.g0_.x);
}

Scalar scalar_dot_multiVector(Scalar self, MultiVector other) {
    return Scalar(self.g0_ * other.g0_.x);
}

Scalar scalar_dot_multiVectorAtInfinity(Scalar self, MultiVectorAtInfinity other) {
    return Scalar(self.g0_ * other.g0_.x);
}

Scalar scalar_dot_scalar(Scalar self, Scalar other) {
    return Scalar(self.g0_ * other.g0_);
}

Scalar transflector_dot_flector(Transflector self, Flector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z - self.g1_.w * other.g1_.w);
}

Scalar transflector_dot_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z - self.g1_.w * other.g0_.w);
}

Scalar transflector_dot_horizon(Transflector self, Horizon other) {
    return Scalar(0.0 - self.g1_.w * other.g0_);
}

Scalar transflector_dot_multiVector(Transflector self, MultiVector other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z - self.g1_.w * other.g4_.w);
}

Scalar transflector_dot_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return Scalar(self.g0_.x * other.g1_.x + self.g0_.y * other.g1_.y + self.g0_.z * other.g1_.z - self.g1_.w * other.g0_.y);
}

Scalar transflector_dot_plane(Transflector self, Plane other) {
    return Scalar(0.0 - self.g1_.w * other.g0_.w);
}

Scalar transflector_dot_point(Transflector self, Point other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar transflector_dot_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z);
}

Scalar transflector_dot_transflector(Transflector self, Transflector other) {
    return Scalar(self.g0_.x * other.g0_.x + self.g0_.y * other.g0_.y + self.g0_.z * other.g0_.z - self.g1_.w * other.g1_.w);
}

Scalar translator_dot_line(Translator self, Line other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

Scalar translator_dot_lineAtInfinity(Translator self, LineAtInfinity other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar translator_dot_motor(Translator self, Motor other) {
    return Scalar(0.0 - self.g0_.x * other.g1_.x - self.g0_.y * other.g1_.y - self.g0_.z * other.g1_.z);
}

Scalar translator_dot_multiVector(Translator self, MultiVector other) {
    return Scalar(0.0 - self.g0_.x * other.g3_.x - self.g0_.y * other.g3_.y - self.g0_.z * other.g3_.z);
}

Scalar translator_dot_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return Scalar(0.0 - self.g0_.x * other.g2_.x - self.g0_.y * other.g2_.y - self.g0_.z * other.g2_.z);
}

Scalar translator_dot_translator(Translator self, Translator other) {
    return Scalar(0.0 - self.g0_.x * other.g0_.x - self.g0_.y * other.g0_.y - self.g0_.z * other.g0_.z);
}

Scalar dualNum_bulk(DualNum self) {
    return Scalar(self.g0_.x);
}

FlectorAtInfinity flector_bulk(Flector self) {
    return FlectorAtInfinity(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g1_.w));
}

FlectorAtInfinity flectorAtInfinity_bulk(FlectorAtInfinity self) {
    return self;
}

Horizon horizon_bulk(Horizon self) {
    return self;
}

LineAtInfinity line_bulk(Line self) {
    return LineAtInfinity(self.g1_);
}

LineAtInfinity lineAtInfinity_bulk(LineAtInfinity self) {
    return self;
}

LineAtInfinity motor_bulk(Motor self) {
    return LineAtInfinity(self.g1_);
}

MultiVectorAtInfinity multiVector_bulk(MultiVector self) {
    return MultiVectorAtInfinity(vec2(self.g0_.x, self.g4_.w), vec3(self.g1_.x, self.g1_.y, self.g1_.z), self.g3_);
}

MultiVectorAtInfinity multiVectorAtInfinity_bulk(MultiVectorAtInfinity self) {
    return self;
}

Horizon plane_bulk(Plane self) {
    return Horizon(self.g0_.w);
}

PointAtInfinity point_bulk(Point self) {
    return PointAtInfinity(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

PointAtInfinity pointAtInfinity_bulk(PointAtInfinity self) {
    return self;
}

Scalar scalar_bulk(Scalar self) {
    return self;
}

FlectorAtInfinity transflector_bulk(Transflector self) {
    return FlectorAtInfinity(vec4(self.g0_.x, self.g0_.y, self.g0_.z, self.g1_.w));
}

LineAtInfinity translator_bulk(Translator self) {
    return LineAtInfinity(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

AntiScalar antiScalar_weight(AntiScalar self) {
    return self;
}

AntiScalar dualNum_weight(DualNum self) {
    return AntiScalar(self.g0_.y);
}

Flector flector_weight(Flector self) {
    return Flector(self.g0_ * vec4(0.0, 0.0, 0.0, 1.0), self.g1_ * vec4(1.0, 1.0, 1.0, 0.0));
}

LineAtOrigin line_weight(Line self) {
    return LineAtOrigin(self.g0_);
}

LineAtOrigin lineAtOrigin_weight(LineAtOrigin self) {
    return self;
}

Rotor motor_weight(Motor self) {
    return Rotor(self.g0_);
}

MultiVectorAtOrigin multiVector_weight(MultiVector self) {
    return MultiVectorAtOrigin(vec2(self.g1_.w, self.g0_.y), self.g2_, vec3(self.g4_.x, self.g4_.y, self.g4_.z));
}

MultiVectorAtOrigin multiVectorAtOrigin_weight(MultiVectorAtOrigin self) {
    return self;
}

Origin origin_weight(Origin self) {
    return self;
}

PlaneAtOrigin plane_weight(Plane self) {
    return PlaneAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

PlaneAtOrigin planeAtOrigin_weight(PlaneAtOrigin self) {
    return self;
}

Origin point_weight(Point self) {
    return Origin(self.g0_.w);
}

Rotor rotor_weight(Rotor self) {
    return self;
}

PlaneAtOrigin transflector_weight(Transflector self) {
    return PlaneAtOrigin(vec3(self.g1_.x, self.g1_.y, self.g1_.z));
}

AntiScalar translator_weight(Translator self) {
    return AntiScalar(self.g0_.w);
}

FlectorAtInfinity flector_antiDual(Flector self) {
    return FlectorAtInfinity(vec4(-self.g1_.x, -self.g1_.y, -self.g1_.z, self.g0_.w));
}

LineAtInfinity line_antiDual(Line self) {
    return LineAtInfinity(self.g0_ * vec3(-1.0));
}

LineAtInfinity lineAtOrigin_antiDual(LineAtOrigin self) {
    return LineAtInfinity(self.g0_ * vec3(-1.0));
}

MultiVectorAtInfinity motor_antiDual(Motor self) {
    return MultiVectorAtInfinity(vec2(0.0), vec3(0.0), vec3(-self.g0_.x, self.g0_.y, self.g0_.z));
}

MultiVectorAtInfinity multiVector_antiDual(MultiVector self) {
    return MultiVectorAtInfinity(vec2(0.0, self.g1_.w), vec3(-self.g4_.x, self.g4_.y, self.g4_.z), self.g2_ * vec3(-1.0));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiDual(MultiVectorAtOrigin self) {
    return MultiVectorAtInfinity(vec2(0.0, self.g0_.x), self.g2_ * vec3(-1.0), self.g1_ * vec3(-1.0));
}

Horizon origin_antiDual(Origin self) {
    return Horizon(self.g0_);
}

PointAtInfinity plane_antiDual(Plane self) {
    return PointAtInfinity(vec3(-self.g0_.x, self.g0_.y, self.g0_.z));
}

PointAtInfinity planeAtOrigin_antiDual(PlaneAtOrigin self) {
    return PointAtInfinity(self.g0_ * vec3(-1.0));
}

Horizon point_antiDual(Point self) {
    return Horizon(self.g0_.w);
}

MultiVectorAtInfinity rotor_antiDual(Rotor self) {
    return MultiVectorAtInfinity(vec2(0.0), vec3(0.0), vec3(-self.g0_.x, self.g0_.y, self.g0_.z));
}

PointAtInfinity transflector_antiDual(Transflector self) {
    return PointAtInfinity(vec3(-self.g1_.x, self.g1_.y, self.g1_.z));
}

AntiScalar antiScalar_antiReversal(AntiScalar self) {
    return self;
}

DualNum dualNum_antiReversal(DualNum self) {
    return self;
}

Flector flector_antiReversal(Flector self) {
    return Flector(self.g0_ * vec4(-1.0), self.g1_);
}

FlectorAtInfinity flectorAtInfinity_antiReversal(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

Horizon horizon_antiReversal(Horizon self) {
    return self;
}

Line line_antiReversal(Line self) {
    return Line(self.g0_ * vec3(-1.0), self.g1_ * vec3(-1.0));
}

LineAtInfinity lineAtInfinity_antiReversal(LineAtInfinity self) {
    return LineAtInfinity(self.g0_ * vec3(-1.0));
}

LineAtOrigin lineAtOrigin_antiReversal(LineAtOrigin self) {
    return LineAtOrigin(self.g0_ * vec3(-1.0));
}

Motor motor_antiReversal(Motor self) {
    return Motor(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0), self.g1_ * vec3(-1.0));
}

MultiVector multiVector_antiReversal(MultiVector self) {
    return MultiVector(self.g0_, self.g1_ * vec4(-1.0), self.g2_ * vec3(-1.0), self.g3_ * vec3(-1.0), self.g4_);
}

MultiVectorAtInfinity multiVectorAtInfinity_antiReversal(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0_, self.g1_ * vec3(-1.0), self.g2_ * vec3(-1.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiReversal(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0_ * vec2(-1.0, 1.0), self.g1_ * vec3(-1.0), self.g2_);
}

Origin origin_antiReversal(Origin self) {
    return Origin(-self.g0_);
}

Plane plane_antiReversal(Plane self) {
    return self;
}

PlaneAtOrigin planeAtOrigin_antiReversal(PlaneAtOrigin self) {
    return self;
}

Point point_antiReversal(Point self) {
    return Point(self.g0_ * vec4(-1.0));
}

PointAtInfinity pointAtInfinity_antiReversal(PointAtInfinity self) {
    return PointAtInfinity(self.g0_ * vec3(-1.0));
}

Rotor rotor_antiReversal(Rotor self) {
    return Rotor(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

Scalar scalar_antiReversal(Scalar self) {
    return self;
}

Transflector transflector_antiReversal(Transflector self) {
    return Transflector(self.g0_ * vec3(-1.0), self.g1_);
}

Translator translator_antiReversal(Translator self) {
    return Translator(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

AntiScalar antiScalar_automorphism(AntiScalar self) {
    return self;
}

DualNum dualNum_automorphism(DualNum self) {
    return self;
}

Flector flector_automorphism(Flector self) {
    return Flector(self.g0_ * vec4(-1.0), self.g1_ * vec4(-1.0));
}

FlectorAtInfinity flectorAtInfinity_automorphism(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0_ * vec4(-1.0));
}

Horizon horizon_automorphism(Horizon self) {
    return Horizon(-self.g0_);
}

Line line_automorphism(Line self) {
    return self;
}

LineAtInfinity lineAtInfinity_automorphism(LineAtInfinity self) {
    return self;
}

LineAtOrigin lineAtOrigin_automorphism(LineAtOrigin self) {
    return self;
}

Motor motor_automorphism(Motor self) {
    return self;
}

MultiVector multiVector_automorphism(MultiVector self) {
    return MultiVector(self.g0_, self.g1_ * vec4(-1.0), self.g2_, self.g3_, self.g4_ * vec4(-1.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_automorphism(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0_ * vec2(1.0, -1.0), self.g1_ * vec3(-1.0), self.g2_);
}

MultiVectorAtOrigin multiVectorAtOrigin_automorphism(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0_ * vec2(-1.0, 1.0), self.g1_, self.g2_ * vec3(-1.0));
}

Origin origin_automorphism(Origin self) {
    return Origin(-self.g0_);
}

Plane plane_automorphism(Plane self) {
    return Plane(self.g0_ * vec4(-1.0));
}

PlaneAtOrigin planeAtOrigin_automorphism(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0_ * vec3(-1.0));
}

Point point_automorphism(Point self) {
    return Point(self.g0_ * vec4(-1.0));
}

PointAtInfinity pointAtInfinity_automorphism(PointAtInfinity self) {
    return PointAtInfinity(self.g0_ * vec3(-1.0));
}

Rotor rotor_automorphism(Rotor self) {
    return self;
}

Scalar scalar_automorphism(Scalar self) {
    return self;
}

Transflector transflector_automorphism(Transflector self) {
    return Transflector(self.g0_ * vec3(-1.0), self.g1_ * vec4(-1.0));
}

Translator translator_automorphism(Translator self) {
    return self;
}

AntiScalar antiScalar_conjugation(AntiScalar self) {
    return self;
}

DualNum dualNum_conjugation(DualNum self) {
    return self;
}

Flector flector_conjugation(Flector self) {
    return Flector(self.g0_ * vec4(-1.0), self.g1_);
}

FlectorAtInfinity flectorAtInfinity_conjugation(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

Horizon horizon_conjugation(Horizon self) {
    return self;
}

Line line_conjugation(Line self) {
    return Line(self.g0_ * vec3(-1.0), self.g1_ * vec3(-1.0));
}

LineAtInfinity lineAtInfinity_conjugation(LineAtInfinity self) {
    return LineAtInfinity(self.g0_ * vec3(-1.0));
}

LineAtOrigin lineAtOrigin_conjugation(LineAtOrigin self) {
    return LineAtOrigin(self.g0_ * vec3(-1.0));
}

Motor motor_conjugation(Motor self) {
    return Motor(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0), self.g1_ * vec3(-1.0));
}

MultiVector multiVector_conjugation(MultiVector self) {
    return MultiVector(self.g0_, self.g1_ * vec4(-1.0), self.g2_ * vec3(-1.0), self.g3_ * vec3(-1.0), self.g4_);
}

MultiVectorAtInfinity multiVectorAtInfinity_conjugation(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0_, self.g1_ * vec3(-1.0), self.g2_ * vec3(-1.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_conjugation(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0_ * vec2(-1.0, 1.0), self.g1_ * vec3(-1.0), self.g2_);
}

Origin origin_conjugation(Origin self) {
    return Origin(-self.g0_);
}

Plane plane_conjugation(Plane self) {
    return self;
}

PlaneAtOrigin planeAtOrigin_conjugation(PlaneAtOrigin self) {
    return self;
}

Point point_conjugation(Point self) {
    return Point(self.g0_ * vec4(-1.0));
}

PointAtInfinity pointAtInfinity_conjugation(PointAtInfinity self) {
    return PointAtInfinity(self.g0_ * vec3(-1.0));
}

Rotor rotor_conjugation(Rotor self) {
    return Rotor(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

Scalar scalar_conjugation(Scalar self) {
    return self;
}

Transflector transflector_conjugation(Transflector self) {
    return Transflector(self.g0_ * vec3(-1.0), self.g1_);
}

Translator translator_conjugation(Translator self) {
    return Translator(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

AntiScalar antiScalar_doubleComplement(AntiScalar self) {
    return self;
}

DualNum dualNum_doubleComplement(DualNum self) {
    return self;
}

Flector flector_doubleComplement(Flector self) {
    return Flector(self.g0_ * vec4(-1.0), self.g1_ * vec4(-1.0));
}

FlectorAtInfinity flectorAtInfinity_doubleComplement(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0_ * vec4(-1.0));
}

Horizon horizon_doubleComplement(Horizon self) {
    return Horizon(-self.g0_);
}

Line line_doubleComplement(Line self) {
    return self;
}

LineAtInfinity lineAtInfinity_doubleComplement(LineAtInfinity self) {
    return self;
}

LineAtOrigin lineAtOrigin_doubleComplement(LineAtOrigin self) {
    return self;
}

Motor motor_doubleComplement(Motor self) {
    return self;
}

MultiVector multiVector_doubleComplement(MultiVector self) {
    return MultiVector(self.g0_, self.g1_ * vec4(-1.0), self.g2_, self.g3_, self.g4_ * vec4(-1.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_doubleComplement(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0_ * vec2(1.0, -1.0), self.g1_ * vec3(-1.0), self.g2_);
}

MultiVectorAtOrigin multiVectorAtOrigin_doubleComplement(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0_ * vec2(-1.0, 1.0), self.g1_, self.g2_ * vec3(-1.0));
}

Origin origin_doubleComplement(Origin self) {
    return Origin(-self.g0_);
}

Plane plane_doubleComplement(Plane self) {
    return Plane(self.g0_ * vec4(-1.0));
}

PlaneAtOrigin planeAtOrigin_doubleComplement(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0_ * vec3(-1.0));
}

Point point_doubleComplement(Point self) {
    return Point(self.g0_ * vec4(-1.0));
}

PointAtInfinity pointAtInfinity_doubleComplement(PointAtInfinity self) {
    return PointAtInfinity(self.g0_ * vec3(-1.0));
}

Rotor rotor_doubleComplement(Rotor self) {
    return self;
}

Scalar scalar_doubleComplement(Scalar self) {
    return self;
}

Transflector transflector_doubleComplement(Transflector self) {
    return Transflector(self.g0_ * vec3(-1.0), self.g1_ * vec4(-1.0));
}

Translator translator_doubleComplement(Translator self) {
    return self;
}

AntiScalar dualNum_dual(DualNum self) {
    return AntiScalar(self.g0_.x);
}

Flector flector_dual(Flector self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g1_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Flector flectorAtInfinity_dual(FlectorAtInfinity self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Origin horizon_dual(Horizon self) {
    return Origin(-self.g0_);
}

LineAtOrigin line_dual(Line self) {
    return LineAtOrigin(self.g1_ * vec3(-1.0));
}

LineAtOrigin lineAtInfinity_dual(LineAtInfinity self) {
    return LineAtOrigin(self.g0_ * vec3(-1.0));
}

LineAtOrigin motor_dual(Motor self) {
    return LineAtOrigin(self.g1_ * vec3(-1.0));
}

MultiVectorAtOrigin multiVector_dual(MultiVector self) {
    return MultiVectorAtOrigin(vec2(-self.g4_.w, self.g0_.x), self.g3_ * vec3(-1.0), vec3(self.g1_.x, self.g1_.y, self.g1_.z));
}

MultiVectorAtOrigin multiVectorAtInfinity_dual(MultiVectorAtInfinity self) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-1.0, 1.0), self.g2_ * vec3(-1.0), self.g1_);
}

Origin plane_dual(Plane self) {
    return Origin(-self.g0_.w);
}

PlaneAtOrigin point_dual(Point self) {
    return PlaneAtOrigin(vec3(self.g0_.x, self.g0_.y, self.g0_.z));
}

PlaneAtOrigin pointAtInfinity_dual(PointAtInfinity self) {
    return PlaneAtOrigin(self.g0_);
}

AntiScalar scalar_dual(Scalar self) {
    return AntiScalar(self.g0_);
}

Flector transflector_dual(Transflector self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g1_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

LineAtOrigin translator_dual(Translator self) {
    return LineAtOrigin(vec3(-self.g0_.x, self.g0_.y, self.g0_.z));
}

Scalar antiScalar_leftComplement(AntiScalar self) {
    return Scalar(self.g0_);
}

DualNum dualNum_leftComplement(DualNum self) {
    return DualNum(self.g0_.yx);
}

Flector flector_leftComplement(Flector self) {
    return Flector(self.g1_ * vec4(-1.0), self.g0_);
}

Flector flectorAtInfinity_leftComplement(FlectorAtInfinity self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Origin horizon_leftComplement(Horizon self) {
    return Origin(-self.g0_);
}

Line line_leftComplement(Line self) {
    return Line(self.g1_ * vec3(-1.0), self.g0_ * vec3(-1.0));
}

LineAtOrigin lineAtInfinity_leftComplement(LineAtInfinity self) {
    return LineAtOrigin(self.g0_ * vec3(-1.0));
}

LineAtInfinity lineAtOrigin_leftComplement(LineAtOrigin self) {
    return LineAtInfinity(self.g0_ * vec3(-1.0));
}

MultiVector motor_leftComplement(Motor self) {
    return MultiVector(vec2(self.g0_.w, 0.0), vec4(0.0), self.g1_ * vec3(-1.0), vec3(-self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector multiVector_leftComplement(MultiVector self) {
    return MultiVector(self.g0_.yx, self.g4_ * vec4(-1.0), self.g3_ * vec3(-1.0), self.g2_ * vec3(-1.0), self.g1_);
}

MultiVectorAtOrigin multiVectorAtInfinity_leftComplement(MultiVectorAtInfinity self) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-1.0, 1.0), self.g2_ * vec3(-1.0), self.g1_);
}

MultiVectorAtInfinity multiVectorAtOrigin_leftComplement(MultiVectorAtOrigin self) {
    return MultiVectorAtInfinity(self.g0_.yx, self.g2_ * vec3(-1.0), self.g1_ * vec3(-1.0));
}

Horizon origin_leftComplement(Origin self) {
    return Horizon(self.g0_);
}

Point plane_leftComplement(Plane self) {
    return Point(self.g0_ * vec4(-1.0));
}

PointAtInfinity planeAtOrigin_leftComplement(PlaneAtOrigin self) {
    return PointAtInfinity(self.g0_ * vec3(-1.0));
}

Plane point_leftComplement(Point self) {
    return Plane(self.g0_);
}

PlaneAtOrigin pointAtInfinity_leftComplement(PointAtInfinity self) {
    return PlaneAtOrigin(self.g0_);
}

MultiVectorAtInfinity rotor_leftComplement(Rotor self) {
    return MultiVectorAtInfinity(vec2(self.g0_.w, 0.0), vec3(0.0), vec3(-self.g0_.x, self.g0_.y, self.g0_.z));
}

AntiScalar scalar_leftComplement(Scalar self) {
    return AntiScalar(self.g0_);
}

Flector transflector_leftComplement(Transflector self) {
    return Flector(self.g1_ * vec4(-1.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVector translator_leftComplement(Translator self) {
    return MultiVector(vec2(self.g0_.w, 0.0), vec4(0.0), vec3(-self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

AntiScalar antiScalar_reversal(AntiScalar self) {
    return self;
}

DualNum dualNum_reversal(DualNum self) {
    return self;
}

Flector flector_reversal(Flector self) {
    return Flector(self.g0_, self.g1_ * vec4(-1.0));
}

FlectorAtInfinity flectorAtInfinity_reversal(FlectorAtInfinity self) {
    return FlectorAtInfinity(self.g0_ * vec4(1.0, 1.0, 1.0, -1.0));
}

Horizon horizon_reversal(Horizon self) {
    return Horizon(-self.g0_);
}

Line line_reversal(Line self) {
    return Line(self.g0_ * vec3(-1.0), self.g1_ * vec3(-1.0));
}

LineAtInfinity lineAtInfinity_reversal(LineAtInfinity self) {
    return LineAtInfinity(self.g0_ * vec3(-1.0));
}

LineAtOrigin lineAtOrigin_reversal(LineAtOrigin self) {
    return LineAtOrigin(self.g0_ * vec3(-1.0));
}

Motor motor_reversal(Motor self) {
    return Motor(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0), self.g1_ * vec3(-1.0));
}

MultiVector multiVector_reversal(MultiVector self) {
    return MultiVector(self.g0_, self.g1_, self.g2_ * vec3(-1.0), self.g3_ * vec3(-1.0), self.g4_ * vec4(-1.0));
}

MultiVectorAtInfinity multiVectorAtInfinity_reversal(MultiVectorAtInfinity self) {
    return MultiVectorAtInfinity(self.g0_ * vec2(1.0, -1.0), self.g1_, self.g2_ * vec3(-1.0));
}

MultiVectorAtOrigin multiVectorAtOrigin_reversal(MultiVectorAtOrigin self) {
    return MultiVectorAtOrigin(self.g0_, self.g1_ * vec3(-1.0), self.g2_ * vec3(-1.0));
}

Origin origin_reversal(Origin self) {
    return self;
}

Plane plane_reversal(Plane self) {
    return Plane(self.g0_ * vec4(-1.0));
}

PlaneAtOrigin planeAtOrigin_reversal(PlaneAtOrigin self) {
    return PlaneAtOrigin(self.g0_ * vec3(-1.0));
}

Point point_reversal(Point self) {
    return self;
}

PointAtInfinity pointAtInfinity_reversal(PointAtInfinity self) {
    return self;
}

Rotor rotor_reversal(Rotor self) {
    return Rotor(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

Scalar scalar_reversal(Scalar self) {
    return self;
}

Transflector transflector_reversal(Transflector self) {
    return Transflector(self.g0_, self.g1_ * vec4(-1.0));
}

Translator translator_reversal(Translator self) {
    return Translator(self.g0_ * vec4(-1.0, -1.0, -1.0, 1.0));
}

Scalar antiScalar_rightComplement(AntiScalar self) {
    return Scalar(self.g0_);
}

DualNum dualNum_rightComplement(DualNum self) {
    return DualNum(self.g0_.yx);
}

Flector flector_rightComplement(Flector self) {
    return Flector(self.g1_ * vec4(-1.0), self.g0_);
}

Flector flectorAtInfinity_rightComplement(FlectorAtInfinity self) {
    return Flector(vec4(0.0, 0.0, 0.0, -self.g0_.w), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

Origin horizon_rightComplement(Horizon self) {
    return Origin(-self.g0_);
}

Line line_rightComplement(Line self) {
    return Line(self.g1_ * vec3(-1.0), self.g0_ * vec3(-1.0));
}

LineAtOrigin lineAtInfinity_rightComplement(LineAtInfinity self) {
    return LineAtOrigin(self.g0_ * vec3(-1.0));
}

LineAtInfinity lineAtOrigin_rightComplement(LineAtOrigin self) {
    return LineAtInfinity(self.g0_ * vec3(-1.0));
}

MultiVector motor_rightComplement(Motor self) {
    return MultiVector(vec2(self.g0_.w, 0.0), vec4(0.0), self.g1_ * vec3(-1.0), vec3(-self.g0_.x, self.g0_.y, self.g0_.z), vec4(0.0));
}

MultiVector multiVector_rightComplement(MultiVector self) {
    return MultiVector(self.g0_.yx, self.g4_ * vec4(-1.0), self.g3_ * vec3(-1.0), self.g2_ * vec3(-1.0), self.g1_);
}

MultiVectorAtOrigin multiVectorAtInfinity_rightComplement(MultiVectorAtInfinity self) {
    return MultiVectorAtOrigin(self.g0_.yx * vec2(-1.0, 1.0), self.g2_ * vec3(-1.0), self.g1_);
}

MultiVectorAtInfinity multiVectorAtOrigin_rightComplement(MultiVectorAtOrigin self) {
    return MultiVectorAtInfinity(self.g0_.yx, self.g2_ * vec3(-1.0), self.g1_ * vec3(-1.0));
}

Horizon origin_rightComplement(Origin self) {
    return Horizon(self.g0_);
}

Point plane_rightComplement(Plane self) {
    return Point(self.g0_ * vec4(-1.0));
}

PointAtInfinity planeAtOrigin_rightComplement(PlaneAtOrigin self) {
    return PointAtInfinity(self.g0_ * vec3(-1.0));
}

Plane point_rightComplement(Point self) {
    return Plane(self.g0_);
}

PlaneAtOrigin pointAtInfinity_rightComplement(PointAtInfinity self) {
    return PlaneAtOrigin(self.g0_);
}

MultiVectorAtInfinity rotor_rightComplement(Rotor self) {
    return MultiVectorAtInfinity(vec2(self.g0_.w, 0.0), vec3(0.0), vec3(-self.g0_.x, self.g0_.y, self.g0_.z));
}

AntiScalar scalar_rightComplement(Scalar self) {
    return AntiScalar(self.g0_);
}

Flector transflector_rightComplement(Transflector self) {
    return Flector(self.g1_ * vec4(-1.0), vec4(self.g0_.x, self.g0_.y, self.g0_.z, 0.0));
}

MultiVector translator_rightComplement(Translator self) {
    return MultiVector(vec2(self.g0_.w, 0.0), vec4(0.0), vec3(-self.g0_.x, self.g0_.y, self.g0_.z), vec3(0.0), vec4(0.0));
}

AntiScalar dualNum_leftBulkDual(DualNum self) {
    return scalar_leftComplement(dualNum_bulk(self));
}

Flector flector_leftBulkDual(Flector self) {
    return flectorAtInfinity_leftComplement(flector_bulk(self));
}

Flector flectorAtInfinity_leftBulkDual(FlectorAtInfinity self) {
    return flectorAtInfinity_leftComplement(flectorAtInfinity_bulk(self));
}

Origin horizon_leftBulkDual(Horizon self) {
    return horizon_leftComplement(horizon_bulk(self));
}

LineAtOrigin line_leftBulkDual(Line self) {
    return lineAtInfinity_leftComplement(line_bulk(self));
}

LineAtOrigin lineAtInfinity_leftBulkDual(LineAtInfinity self) {
    return lineAtInfinity_leftComplement(lineAtInfinity_bulk(self));
}

LineAtOrigin motor_leftBulkDual(Motor self) {
    return lineAtInfinity_leftComplement(motor_bulk(self));
}

MultiVectorAtOrigin multiVector_leftBulkDual(MultiVector self) {
    return multiVectorAtInfinity_leftComplement(multiVector_bulk(self));
}

MultiVectorAtOrigin multiVectorAtInfinity_leftBulkDual(MultiVectorAtInfinity self) {
    return multiVectorAtInfinity_leftComplement(multiVectorAtInfinity_bulk(self));
}

Origin plane_leftBulkDual(Plane self) {
    return horizon_leftComplement(plane_bulk(self));
}

PlaneAtOrigin point_leftBulkDual(Point self) {
    return pointAtInfinity_leftComplement(point_bulk(self));
}

PlaneAtOrigin pointAtInfinity_leftBulkDual(PointAtInfinity self) {
    return pointAtInfinity_leftComplement(pointAtInfinity_bulk(self));
}

AntiScalar scalar_leftBulkDual(Scalar self) {
    return scalar_leftComplement(scalar_bulk(self));
}

Flector transflector_leftBulkDual(Transflector self) {
    return flectorAtInfinity_leftComplement(transflector_bulk(self));
}

LineAtOrigin translator_leftBulkDual(Translator self) {
    return lineAtInfinity_leftComplement(translator_bulk(self));
}

Scalar antiScalar_leftWeightDual(AntiScalar self) {
    return antiScalar_leftComplement(antiScalar_weight(self));
}

Scalar dualNum_leftWeightDual(DualNum self) {
    return antiScalar_leftComplement(dualNum_weight(self));
}

Flector flector_leftWeightDual(Flector self) {
    return flector_leftComplement(flector_weight(self));
}

LineAtInfinity line_leftWeightDual(Line self) {
    return lineAtOrigin_leftComplement(line_weight(self));
}

LineAtInfinity lineAtOrigin_leftWeightDual(LineAtOrigin self) {
    return lineAtOrigin_leftComplement(lineAtOrigin_weight(self));
}

MultiVectorAtInfinity motor_leftWeightDual(Motor self) {
    return rotor_leftComplement(motor_weight(self));
}

MultiVectorAtInfinity multiVector_leftWeightDual(MultiVector self) {
    return multiVectorAtOrigin_leftComplement(multiVector_weight(self));
}

MultiVectorAtInfinity multiVectorAtOrigin_leftWeightDual(MultiVectorAtOrigin self) {
    return multiVectorAtOrigin_leftComplement(multiVectorAtOrigin_weight(self));
}

Horizon origin_leftWeightDual(Origin self) {
    return origin_leftComplement(origin_weight(self));
}

PointAtInfinity plane_leftWeightDual(Plane self) {
    return planeAtOrigin_leftComplement(plane_weight(self));
}

PointAtInfinity planeAtOrigin_leftWeightDual(PlaneAtOrigin self) {
    return planeAtOrigin_leftComplement(planeAtOrigin_weight(self));
}

Horizon point_leftWeightDual(Point self) {
    return origin_leftComplement(point_weight(self));
}

MultiVectorAtInfinity rotor_leftWeightDual(Rotor self) {
    return rotor_leftComplement(rotor_weight(self));
}

PointAtInfinity transflector_leftWeightDual(Transflector self) {
    return planeAtOrigin_leftComplement(transflector_weight(self));
}

Scalar translator_leftWeightDual(Translator self) {
    return antiScalar_leftComplement(translator_weight(self));
}

AntiScalar dualNum_rightBulkDual(DualNum self) {
    return scalar_rightComplement(dualNum_bulk(self));
}

Flector flector_rightBulkDual(Flector self) {
    return flectorAtInfinity_rightComplement(flector_bulk(self));
}

Flector flectorAtInfinity_rightBulkDual(FlectorAtInfinity self) {
    return flectorAtInfinity_rightComplement(flectorAtInfinity_bulk(self));
}

Origin horizon_rightBulkDual(Horizon self) {
    return horizon_rightComplement(horizon_bulk(self));
}

LineAtOrigin line_rightBulkDual(Line self) {
    return lineAtInfinity_rightComplement(line_bulk(self));
}

LineAtOrigin lineAtInfinity_rightBulkDual(LineAtInfinity self) {
    return lineAtInfinity_rightComplement(lineAtInfinity_bulk(self));
}

LineAtOrigin motor_rightBulkDual(Motor self) {
    return lineAtInfinity_rightComplement(motor_bulk(self));
}

MultiVectorAtOrigin multiVector_rightBulkDual(MultiVector self) {
    return multiVectorAtInfinity_rightComplement(multiVector_bulk(self));
}

MultiVectorAtOrigin multiVectorAtInfinity_rightBulkDual(MultiVectorAtInfinity self) {
    return multiVectorAtInfinity_rightComplement(multiVectorAtInfinity_bulk(self));
}

Origin plane_rightBulkDual(Plane self) {
    return horizon_rightComplement(plane_bulk(self));
}

PlaneAtOrigin point_rightBulkDual(Point self) {
    return pointAtInfinity_rightComplement(point_bulk(self));
}

PlaneAtOrigin pointAtInfinity_rightBulkDual(PointAtInfinity self) {
    return pointAtInfinity_rightComplement(pointAtInfinity_bulk(self));
}

AntiScalar scalar_rightBulkDual(Scalar self) {
    return scalar_rightComplement(scalar_bulk(self));
}

Flector transflector_rightBulkDual(Transflector self) {
    return flectorAtInfinity_rightComplement(transflector_bulk(self));
}

LineAtOrigin translator_rightBulkDual(Translator self) {
    return lineAtInfinity_rightComplement(translator_bulk(self));
}

Scalar antiScalar_rightWeightDual(AntiScalar self) {
    return antiScalar_rightComplement(antiScalar_weight(self));
}

Scalar dualNum_rightWeightDual(DualNum self) {
    return antiScalar_rightComplement(dualNum_weight(self));
}

Flector flector_rightWeightDual(Flector self) {
    return flector_rightComplement(flector_weight(self));
}

LineAtInfinity line_rightWeightDual(Line self) {
    return lineAtOrigin_rightComplement(line_weight(self));
}

LineAtInfinity lineAtOrigin_rightWeightDual(LineAtOrigin self) {
    return lineAtOrigin_rightComplement(lineAtOrigin_weight(self));
}

MultiVectorAtInfinity motor_rightWeightDual(Motor self) {
    return rotor_rightComplement(motor_weight(self));
}

MultiVectorAtInfinity multiVector_rightWeightDual(MultiVector self) {
    return multiVectorAtOrigin_rightComplement(multiVector_weight(self));
}

MultiVectorAtInfinity multiVectorAtOrigin_rightWeightDual(MultiVectorAtOrigin self) {
    return multiVectorAtOrigin_rightComplement(multiVectorAtOrigin_weight(self));
}

Horizon origin_rightWeightDual(Origin self) {
    return origin_rightComplement(origin_weight(self));
}

PointAtInfinity plane_rightWeightDual(Plane self) {
    return planeAtOrigin_rightComplement(plane_weight(self));
}

PointAtInfinity planeAtOrigin_rightWeightDual(PlaneAtOrigin self) {
    return planeAtOrigin_rightComplement(planeAtOrigin_weight(self));
}

Horizon point_rightWeightDual(Point self) {
    return origin_rightComplement(point_weight(self));
}

MultiVectorAtInfinity rotor_rightWeightDual(Rotor self) {
    return rotor_rightComplement(rotor_weight(self));
}

PointAtInfinity transflector_rightWeightDual(Transflector self) {
    return planeAtOrigin_rightComplement(transflector_weight(self));
}

Scalar translator_rightWeightDual(Translator self) {
    return antiScalar_rightComplement(translator_weight(self));
}

int antiScalar_antiGrade() {
    return 0;
}

int horizon_antiGrade() {
    return 1;
}

int line_antiGrade() {
    return 2;
}

int lineAtInfinity_antiGrade() {
    return 2;
}

int lineAtOrigin_antiGrade() {
    return 2;
}

int origin_antiGrade() {
    return 3;
}

int plane_antiGrade() {
    return 1;
}

int planeAtOrigin_antiGrade() {
    return 1;
}

int point_antiGrade() {
    return 3;
}

int pointAtInfinity_antiGrade() {
    return 3;
}

int scalar_antiGrade() {
    return 4;
}

int antiScalar_grade() {
    return 4;
}

int horizon_grade() {
    return 3;
}

int line_grade() {
    return 2;
}

int lineAtInfinity_grade() {
    return 2;
}

int lineAtOrigin_grade() {
    return 2;
}

int origin_grade() {
    return 1;
}

int plane_grade() {
    return 3;
}

int planeAtOrigin_grade() {
    return 3;
}

int point_grade() {
    return 1;
}

int pointAtInfinity_grade() {
    return 1;
}

int scalar_grade() {
    return 0;
}

AntiScalar antiScalar_antiSqrt(AntiScalar self) {
    return AntiScalar(sqrt(self.g0_));
}

DualNum dualNum_antiSqrt(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float sqrt_t = sqrt(t);
    return DualNum(vec2(s / (2.0 * sqrt_t), sqrt_t));
}

Horizon antiScalar_attitude(AntiScalar self) {
    return antiScalar_antiWedge_horizon(self, horizon_unit());
}

Horizon dualNum_attitude(DualNum self) {
    return dualNum_antiWedge_horizon(self, horizon_unit());
}

MultiVectorAtInfinity flector_attitude(Flector self) {
    return flector_antiWedge_horizon(self, horizon_unit());
}

PointAtInfinity line_attitude(Line self) {
    return line_antiWedge_horizon(self, horizon_unit());
}

PointAtInfinity lineAtOrigin_attitude(LineAtOrigin self) {
    return lineAtOrigin_antiWedge_horizon(self, horizon_unit());
}

FlectorAtInfinity motor_attitude(Motor self) {
    return motor_antiWedge_horizon(self, horizon_unit());
}

MultiVectorAtInfinity multiVector_attitude(MultiVector self) {
    return multiVector_antiWedge_horizon(self, horizon_unit());
}

MultiVectorAtInfinity multiVectorAtOrigin_attitude(MultiVectorAtOrigin self) {
    return multiVectorAtOrigin_antiWedge_horizon(self, horizon_unit());
}

Scalar origin_attitude(Origin self) {
    return origin_antiWedge_horizon(self, horizon_unit());
}

LineAtInfinity plane_attitude(Plane self) {
    return plane_antiWedge_horizon(self, horizon_unit());
}

LineAtInfinity planeAtOrigin_attitude(PlaneAtOrigin self) {
    return planeAtOrigin_antiWedge_horizon(self, horizon_unit());
}

Scalar point_attitude(Point self) {
    return point_antiWedge_horizon(self, horizon_unit());
}

FlectorAtInfinity rotor_attitude(Rotor self) {
    return rotor_antiWedge_horizon(self, horizon_unit());
}

LineAtInfinity transflector_attitude(Transflector self) {
    return transflector_antiWedge_horizon(self, horizon_unit());
}

Horizon translator_attitude(Translator self) {
    return translator_antiWedge_horizon(self, horizon_unit());
}

DualNum dualNum_sqrt(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float sqrt_s = sqrt(s);
    return DualNum(vec2(sqrt_s, t / (2.0 * sqrt_s)));
}

Scalar scalar_sqrt(Scalar self) {
    return Scalar(sqrt(self.g0_));
}

AntiScalar antiScalar_antiInverse(AntiScalar self) {
    return antiScalar_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), antiScalar_antiDot_antiScalar(self, self)));
}

DualNum dualNum_antiInverse(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(-1.0 * s / (t * t), 1.0 / t));
}

Flector flector_antiInverse(Flector self) {
    return flector_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), flector_antiDot_flector(self, self)));
}

Line line_antiInverse(Line self) {
    return line_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), line_antiDot_line(self, self)));
}

LineAtOrigin lineAtOrigin_antiInverse(LineAtOrigin self) {
    return lineAtOrigin_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), lineAtOrigin_antiDot_lineAtOrigin(self, self)));
}

Motor motor_antiInverse(Motor self) {
    return motor_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), motor_antiDot_motor(self, self)));
}

MultiVector multiVector_antiInverse(MultiVector self) {
    return multiVector_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), multiVector_antiDot_multiVector(self, self)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiInverse(MultiVectorAtOrigin self) {
    return multiVectorAtOrigin_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), multiVectorAtOrigin_antiDot_multiVectorAtOrigin(self, self)));
}

Origin origin_antiInverse(Origin self) {
    return origin_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), origin_antiDot_origin(self, self)));
}

Plane plane_antiInverse(Plane self) {
    return plane_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), plane_antiDot_plane(self, self)));
}

PlaneAtOrigin planeAtOrigin_antiInverse(PlaneAtOrigin self) {
    return planeAtOrigin_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), planeAtOrigin_antiDot_planeAtOrigin(self, self)));
}

Point point_antiInverse(Point self) {
    return point_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), point_antiDot_point(self, self)));
}

Rotor rotor_antiInverse(Rotor self) {
    return rotor_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), rotor_antiDot_rotor(self, self)));
}

Transflector transflector_antiInverse(Transflector self) {
    return transflector_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), transflector_antiDot_transflector(self, self)));
}

Translator translator_antiInverse(Translator self) {
    return translator_geometricAntiProduct_antiScalar(self, antiScalar_div_antiScalar(antiScalar_unit(), translator_antiDot_translator(self, self)));
}

DualNum dualNum_inverse(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(1.0 / s, -1.0 * t / (s * s)));
}

Flector flector_inverse(Flector self) {
    return flector_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), flector_dot_flector(self, self)));
}

FlectorAtInfinity flectorAtInfinity_inverse(FlectorAtInfinity self) {
    return flectorAtInfinity_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), flectorAtInfinity_dot_flectorAtInfinity(self, self)));
}

Horizon horizon_inverse(Horizon self) {
    return horizon_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), horizon_dot_horizon(self, self)));
}

Line line_inverse(Line self) {
    return line_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), line_dot_line(self, self)));
}

LineAtInfinity lineAtInfinity_inverse(LineAtInfinity self) {
    return lineAtInfinity_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), lineAtInfinity_dot_lineAtInfinity(self, self)));
}

Motor motor_inverse(Motor self) {
    return motor_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), motor_dot_motor(self, self)));
}

MultiVector multiVector_inverse(MultiVector self) {
    return multiVector_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), multiVector_dot_multiVector(self, self)));
}

MultiVectorAtInfinity multiVectorAtInfinity_inverse(MultiVectorAtInfinity self) {
    return multiVectorAtInfinity_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), multiVectorAtInfinity_dot_multiVectorAtInfinity(self, self)));
}

Plane plane_inverse(Plane self) {
    return plane_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), plane_dot_plane(self, self)));
}

Point point_inverse(Point self) {
    return point_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), point_dot_point(self, self)));
}

PointAtInfinity pointAtInfinity_inverse(PointAtInfinity self) {
    return pointAtInfinity_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), pointAtInfinity_dot_pointAtInfinity(self, self)));
}

Scalar scalar_inverse(Scalar self) {
    return scalar_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), scalar_dot_scalar(self, self)));
}

Transflector transflector_inverse(Transflector self) {
    return transflector_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), transflector_dot_transflector(self, self)));
}

Translator translator_inverse(Translator self) {
    return translator_geometricProduct_scalar(self, scalar_div_scalar(scalar_unit(), translator_dot_translator(self, self)));
}

DualNum dualNum_antiCos(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(-1.0 * s * sin(t), cos(t)));
}

AntiScalar antiScalar_antiCosh(AntiScalar self) {
    return AntiScalar(cosh(self.g0_));
}

DualNum dualNum_antiCosh(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(s * sinh(t), cosh(t)));
}

AntiScalar antiScalar_antiExp(AntiScalar self) {
    return AntiScalar(exp(self.g0_));
}

DualNum dualNum_antiExp(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float exp_t = exp(t);
    return DualNum(vec2(s * exp_t, exp_t));
}

AntiScalar antiScalar_antiInverseSqrt(AntiScalar self) {
    return AntiScalar(1.0 / sqrt(self.g0_));
}

DualNum dualNum_antiInverseSqrt(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float sqrt_t = sqrt(t);
    return DualNum(vec2(-1.0 * s / (2.0 * t * sqrt_t), 1.0 / sqrt_t));
}

AntiScalar antiScalar_antiPow(AntiScalar self, float other) {
    return AntiScalar(pow(self.g0_, other));
}

DualNum dualNum_antiPow(DualNum self, float other) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(other * pow(t, other - 1.0) * s, pow(t, other)));
}

DualNum dualNum_antiSin(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(s * cos(t), sin(t)));
}

AntiScalar antiScalar_antiSinh(AntiScalar self) {
    return AntiScalar(sinh(self.g0_));
}

DualNum dualNum_antiSinh(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(s * cosh(t), sinh(t)));
}

DualNum dualNum_antiTan(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float tan_t = tan(t);
    return DualNum(vec2(s * (1.0 + tan_t * tan_t), tan_t));
}

AntiScalar antiScalar_antiTanh(AntiScalar self) {
    return AntiScalar(tanh(self.g0_));
}

DualNum dualNum_antiTanh(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float tanh_t = tanh(t);
    return DualNum(vec2(s * (1.0 - tanh_t * tanh_t), tanh_t));
}

DualNum dualNum_cos(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(cos(s), -1.0 * t * sin(s)));
}

DualNum dualNum_cosh(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(cosh(s), t * sinh(s)));
}

Scalar scalar_cosh(Scalar self) {
    return Scalar(cosh(self.g0_));
}

DualNum dualNum_exp(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float exp_s = exp(s);
    return DualNum(vec2(exp_s, t * exp_s));
}

Scalar scalar_exp(Scalar self) {
    return Scalar(exp(self.g0_));
}

DualNum dualNum_inverseSqrt(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float sqrt_s = sqrt(s);
    return DualNum(vec2(1.0 / sqrt_s, -1.0 * t / (2.0 * s * sqrt_s)));
}

Scalar scalar_inverseSqrt(Scalar self) {
    return Scalar(1.0 / sqrt(self.g0_));
}

DualNum dualNum_pow(DualNum self, float other) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(pow(s, other), other * pow(s, other - 1.0) * t));
}

Scalar scalar_pow(Scalar self, float other) {
    return Scalar(pow(self.g0_, other));
}

DualNum dualNum_sin(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(sin(s), t * cos(s)));
}

DualNum dualNum_sinh(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    return DualNum(vec2(sinh(s), t * cosh(s)));
}

Scalar scalar_sinh(Scalar self) {
    return Scalar(sinh(self.g0_));
}

DualNum dualNum_tan(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float tan_s = tan(s);
    return DualNum(vec2(tan_s, t * (1.0 + tan_s * tan_s)));
}

DualNum dualNum_tanh(DualNum self) {
    float s = self.g0_.x;
    float t = self.g0_.y;
    float tanh_s = tanh(s);
    return DualNum(vec2(tanh_s, t * (1.0 - tanh_s * tanh_s)));
}

Scalar scalar_tanh(Scalar self) {
    return Scalar(tanh(self.g0_));
}

Scalar dualNum_bulkNormSquared(DualNum self) {
    Scalar flat_bulk_thing = dualNum_bulk(self);
    return scalar_dot_scalar(flat_bulk_thing, flat_bulk_thing);
}

Scalar flector_bulkNormSquared(Flector self) {
    FlectorAtInfinity flat_bulk_thing = flector_bulk(self);
    return flectorAtInfinity_dot_flectorAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar flectorAtInfinity_bulkNormSquared(FlectorAtInfinity self) {
    FlectorAtInfinity flat_bulk_thing = flectorAtInfinity_bulk(self);
    return flectorAtInfinity_dot_flectorAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar horizon_bulkNormSquared(Horizon self) {
    Horizon flat_bulk_thing = horizon_bulk(self);
    return horizon_dot_horizon(flat_bulk_thing, flat_bulk_thing);
}

Scalar line_bulkNormSquared(Line self) {
    LineAtInfinity flat_bulk_thing = line_bulk(self);
    return lineAtInfinity_dot_lineAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar lineAtInfinity_bulkNormSquared(LineAtInfinity self) {
    LineAtInfinity flat_bulk_thing = lineAtInfinity_bulk(self);
    return lineAtInfinity_dot_lineAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar motor_bulkNormSquared(Motor self) {
    LineAtInfinity flat_bulk_thing = motor_bulk(self);
    return lineAtInfinity_dot_lineAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar multiVector_bulkNormSquared(MultiVector self) {
    MultiVectorAtInfinity flat_bulk_thing = multiVector_bulk(self);
    return multiVectorAtInfinity_dot_multiVectorAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar multiVectorAtInfinity_bulkNormSquared(MultiVectorAtInfinity self) {
    MultiVectorAtInfinity flat_bulk_thing = multiVectorAtInfinity_bulk(self);
    return multiVectorAtInfinity_dot_multiVectorAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar plane_bulkNormSquared(Plane self) {
    Horizon flat_bulk_thing = plane_bulk(self);
    return horizon_dot_horizon(flat_bulk_thing, flat_bulk_thing);
}

Scalar point_bulkNormSquared(Point self) {
    PointAtInfinity flat_bulk_thing = point_bulk(self);
    return pointAtInfinity_dot_pointAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar pointAtInfinity_bulkNormSquared(PointAtInfinity self) {
    PointAtInfinity flat_bulk_thing = pointAtInfinity_bulk(self);
    return pointAtInfinity_dot_pointAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar scalar_bulkNormSquared(Scalar self) {
    Scalar flat_bulk_thing = scalar_bulk(self);
    return scalar_dot_scalar(flat_bulk_thing, flat_bulk_thing);
}

Scalar transflector_bulkNormSquared(Transflector self) {
    FlectorAtInfinity flat_bulk_thing = transflector_bulk(self);
    return flectorAtInfinity_dot_flectorAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar translator_bulkNormSquared(Translator self) {
    LineAtInfinity flat_bulk_thing = translator_bulk(self);
    return lineAtInfinity_dot_lineAtInfinity(flat_bulk_thing, flat_bulk_thing);
}

Scalar dualNum_bulkNorm(DualNum self) {
    return scalar_sqrt(dualNum_bulkNormSquared(self));
}

Scalar flector_bulkNorm(Flector self) {
    return scalar_sqrt(flector_bulkNormSquared(self));
}

Scalar flectorAtInfinity_bulkNorm(FlectorAtInfinity self) {
    return scalar_sqrt(flectorAtInfinity_bulkNormSquared(self));
}

Scalar horizon_bulkNorm(Horizon self) {
    return scalar_sqrt(horizon_bulkNormSquared(self));
}

Scalar line_bulkNorm(Line self) {
    return scalar_sqrt(line_bulkNormSquared(self));
}

Scalar lineAtInfinity_bulkNorm(LineAtInfinity self) {
    return scalar_sqrt(lineAtInfinity_bulkNormSquared(self));
}

Scalar motor_bulkNorm(Motor self) {
    return scalar_sqrt(motor_bulkNormSquared(self));
}

Scalar multiVector_bulkNorm(MultiVector self) {
    return scalar_sqrt(multiVector_bulkNormSquared(self));
}

Scalar multiVectorAtInfinity_bulkNorm(MultiVectorAtInfinity self) {
    return scalar_sqrt(multiVectorAtInfinity_bulkNormSquared(self));
}

Scalar plane_bulkNorm(Plane self) {
    return scalar_sqrt(plane_bulkNormSquared(self));
}

Scalar point_bulkNorm(Point self) {
    return scalar_sqrt(point_bulkNormSquared(self));
}

Scalar pointAtInfinity_bulkNorm(PointAtInfinity self) {
    return scalar_sqrt(pointAtInfinity_bulkNormSquared(self));
}

Scalar scalar_bulkNorm(Scalar self) {
    return scalar_sqrt(scalar_bulkNormSquared(self));
}

Scalar transflector_bulkNorm(Transflector self) {
    return scalar_sqrt(transflector_bulkNormSquared(self));
}

Scalar translator_bulkNorm(Translator self) {
    return scalar_sqrt(translator_bulkNormSquared(self));
}

AntiScalar antiScalar_weightNormSquared(AntiScalar self) {
    AntiScalar flat_weight = antiScalar_weight(self);
    return antiScalar_antiDot_antiScalar(flat_weight, flat_weight);
}

AntiScalar dualNum_weightNormSquared(DualNum self) {
    AntiScalar flat_weight = dualNum_weight(self);
    return antiScalar_antiDot_antiScalar(flat_weight, flat_weight);
}

AntiScalar flector_weightNormSquared(Flector self) {
    Flector flat_weight = flector_weight(self);
    return flector_antiDot_flector(flat_weight, flat_weight);
}

AntiScalar line_weightNormSquared(Line self) {
    LineAtOrigin flat_weight = line_weight(self);
    return lineAtOrigin_antiDot_lineAtOrigin(flat_weight, flat_weight);
}

AntiScalar lineAtOrigin_weightNormSquared(LineAtOrigin self) {
    LineAtOrigin flat_weight = lineAtOrigin_weight(self);
    return lineAtOrigin_antiDot_lineAtOrigin(flat_weight, flat_weight);
}

AntiScalar motor_weightNormSquared(Motor self) {
    Rotor flat_weight = motor_weight(self);
    return rotor_antiDot_rotor(flat_weight, flat_weight);
}

AntiScalar multiVector_weightNormSquared(MultiVector self) {
    MultiVectorAtOrigin flat_weight = multiVector_weight(self);
    return multiVectorAtOrigin_antiDot_multiVectorAtOrigin(flat_weight, flat_weight);
}

AntiScalar multiVectorAtOrigin_weightNormSquared(MultiVectorAtOrigin self) {
    MultiVectorAtOrigin flat_weight = multiVectorAtOrigin_weight(self);
    return multiVectorAtOrigin_antiDot_multiVectorAtOrigin(flat_weight, flat_weight);
}

AntiScalar origin_weightNormSquared(Origin self) {
    Origin flat_weight = origin_weight(self);
    return origin_antiDot_origin(flat_weight, flat_weight);
}

AntiScalar plane_weightNormSquared(Plane self) {
    PlaneAtOrigin flat_weight = plane_weight(self);
    return planeAtOrigin_antiDot_planeAtOrigin(flat_weight, flat_weight);
}

AntiScalar planeAtOrigin_weightNormSquared(PlaneAtOrigin self) {
    PlaneAtOrigin flat_weight = planeAtOrigin_weight(self);
    return planeAtOrigin_antiDot_planeAtOrigin(flat_weight, flat_weight);
}

AntiScalar point_weightNormSquared(Point self) {
    Origin flat_weight = point_weight(self);
    return origin_antiDot_origin(flat_weight, flat_weight);
}

AntiScalar rotor_weightNormSquared(Rotor self) {
    Rotor flat_weight = rotor_weight(self);
    return rotor_antiDot_rotor(flat_weight, flat_weight);
}

AntiScalar transflector_weightNormSquared(Transflector self) {
    PlaneAtOrigin flat_weight = transflector_weight(self);
    return planeAtOrigin_antiDot_planeAtOrigin(flat_weight, flat_weight);
}

AntiScalar translator_weightNormSquared(Translator self) {
    AntiScalar flat_weight = translator_weight(self);
    return antiScalar_antiDot_antiScalar(flat_weight, flat_weight);
}

AntiScalar antiScalar_weightNorm(AntiScalar self) {
    return antiScalar_antiSqrt(antiScalar_weightNormSquared(self));
}

AntiScalar dualNum_weightNorm(DualNum self) {
    return antiScalar_antiSqrt(dualNum_weightNormSquared(self));
}

AntiScalar flector_weightNorm(Flector self) {
    return antiScalar_antiSqrt(flector_weightNormSquared(self));
}

AntiScalar line_weightNorm(Line self) {
    return antiScalar_antiSqrt(line_weightNormSquared(self));
}

AntiScalar lineAtOrigin_weightNorm(LineAtOrigin self) {
    return antiScalar_antiSqrt(lineAtOrigin_weightNormSquared(self));
}

AntiScalar motor_weightNorm(Motor self) {
    return antiScalar_antiSqrt(motor_weightNormSquared(self));
}

AntiScalar multiVector_weightNorm(MultiVector self) {
    return antiScalar_antiSqrt(multiVector_weightNormSquared(self));
}

AntiScalar multiVectorAtOrigin_weightNorm(MultiVectorAtOrigin self) {
    return antiScalar_antiSqrt(multiVectorAtOrigin_weightNormSquared(self));
}

AntiScalar origin_weightNorm(Origin self) {
    return antiScalar_antiSqrt(origin_weightNormSquared(self));
}

AntiScalar plane_weightNorm(Plane self) {
    return antiScalar_antiSqrt(plane_weightNormSquared(self));
}

AntiScalar planeAtOrigin_weightNorm(PlaneAtOrigin self) {
    return antiScalar_antiSqrt(planeAtOrigin_weightNormSquared(self));
}

AntiScalar point_weightNorm(Point self) {
    return antiScalar_antiSqrt(point_weightNormSquared(self));
}

AntiScalar rotor_weightNorm(Rotor self) {
    return antiScalar_antiSqrt(rotor_weightNormSquared(self));
}

AntiScalar transflector_weightNorm(Transflector self) {
    return antiScalar_antiSqrt(transflector_weightNormSquared(self));
}

AntiScalar translator_weightNorm(Translator self) {
    return antiScalar_antiSqrt(translator_weightNormSquared(self));
}

DualNum dualNum_normSquared(DualNum self) {
    return scalar_add_antiScalar(dualNum_bulkNormSquared(self), dualNum_weightNormSquared(self));
}

DualNum flector_normSquared(Flector self) {
    return scalar_add_antiScalar(flector_bulkNormSquared(self), flector_weightNormSquared(self));
}

DualNum line_normSquared(Line self) {
    return scalar_add_antiScalar(line_bulkNormSquared(self), line_weightNormSquared(self));
}

DualNum motor_normSquared(Motor self) {
    return scalar_add_antiScalar(motor_bulkNormSquared(self), motor_weightNormSquared(self));
}

DualNum multiVector_normSquared(MultiVector self) {
    return scalar_add_antiScalar(multiVector_bulkNormSquared(self), multiVector_weightNormSquared(self));
}

DualNum plane_normSquared(Plane self) {
    return scalar_add_antiScalar(plane_bulkNormSquared(self), plane_weightNormSquared(self));
}

DualNum point_normSquared(Point self) {
    return scalar_add_antiScalar(point_bulkNormSquared(self), point_weightNormSquared(self));
}

DualNum transflector_normSquared(Transflector self) {
    return scalar_add_antiScalar(transflector_bulkNormSquared(self), transflector_weightNormSquared(self));
}

DualNum translator_normSquared(Translator self) {
    return scalar_add_antiScalar(translator_bulkNormSquared(self), translator_weightNormSquared(self));
}

DualNum dualNum_norm(DualNum self) {
    return scalar_add_antiScalar(dualNum_bulkNorm(self), dualNum_weightNorm(self));
}

DualNum flector_norm(Flector self) {
    return scalar_add_antiScalar(flector_bulkNorm(self), flector_weightNorm(self));
}

DualNum line_norm(Line self) {
    return scalar_add_antiScalar(line_bulkNorm(self), line_weightNorm(self));
}

DualNum motor_norm(Motor self) {
    return scalar_add_antiScalar(motor_bulkNorm(self), motor_weightNorm(self));
}

DualNum multiVector_norm(MultiVector self) {
    return scalar_add_antiScalar(multiVector_bulkNorm(self), multiVector_weightNorm(self));
}

DualNum plane_norm(Plane self) {
    return scalar_add_antiScalar(plane_bulkNorm(self), plane_weightNorm(self));
}

DualNum point_norm(Point self) {
    return scalar_add_antiScalar(point_bulkNorm(self), point_weightNorm(self));
}

DualNum transflector_norm(Transflector self) {
    return scalar_add_antiScalar(transflector_bulkNorm(self), transflector_weightNorm(self));
}

DualNum translator_norm(Translator self) {
    return scalar_add_antiScalar(translator_bulkNorm(self), translator_weightNorm(self));
}

float dualNum_unitizedNormSquared(DualNum self) {
    return dualNum_bulkNormSquared(self).g0_ / dualNum_weightNormSquared(self).g0_;
}

float flector_unitizedNormSquared(Flector self) {
    return flector_bulkNormSquared(self).g0_ / flector_weightNormSquared(self).g0_;
}

float line_unitizedNormSquared(Line self) {
    return line_bulkNormSquared(self).g0_ / line_weightNormSquared(self).g0_;
}

float motor_unitizedNormSquared(Motor self) {
    return motor_bulkNormSquared(self).g0_ / motor_weightNormSquared(self).g0_;
}

float multiVector_unitizedNormSquared(MultiVector self) {
    return multiVector_bulkNormSquared(self).g0_ / multiVector_weightNormSquared(self).g0_;
}

float plane_unitizedNormSquared(Plane self) {
    return plane_bulkNormSquared(self).g0_ / plane_weightNormSquared(self).g0_;
}

float point_unitizedNormSquared(Point self) {
    return point_bulkNormSquared(self).g0_ / point_weightNormSquared(self).g0_;
}

float transflector_unitizedNormSquared(Transflector self) {
    return transflector_bulkNormSquared(self).g0_ / transflector_weightNormSquared(self).g0_;
}

float translator_unitizedNormSquared(Translator self) {
    return translator_bulkNormSquared(self).g0_ / translator_weightNormSquared(self).g0_;
}

float dualNum_unitizedNorm(DualNum self) {
    return sqrt(dualNum_unitizedNormSquared(self));
}

float flector_unitizedNorm(Flector self) {
    return sqrt(flector_unitizedNormSquared(self));
}

float line_unitizedNorm(Line self) {
    return sqrt(line_unitizedNormSquared(self));
}

float motor_unitizedNorm(Motor self) {
    return sqrt(motor_unitizedNormSquared(self));
}

float multiVector_unitizedNorm(MultiVector self) {
    return sqrt(multiVector_unitizedNormSquared(self));
}

float plane_unitizedNorm(Plane self) {
    return sqrt(plane_unitizedNormSquared(self));
}

float point_unitizedNorm(Point self) {
    return sqrt(point_unitizedNormSquared(self));
}

float transflector_unitizedNorm(Transflector self) {
    return sqrt(transflector_unitizedNormSquared(self));
}

float translator_unitizedNorm(Translator self) {
    return sqrt(translator_unitizedNormSquared(self));
}

AntiScalar antiScalar_unitize(AntiScalar self) {
    return antiScalar_geometricProduct_scalar(self, Scalar(1.0 / antiScalar_weightNorm(self).g0_));
}

DualNum dualNum_unitize(DualNum self) {
    return dualNum_geometricProduct_scalar(self, Scalar(1.0 / dualNum_weightNorm(self).g0_));
}

Flector flector_unitize(Flector self) {
    return flector_geometricProduct_scalar(self, Scalar(1.0 / flector_weightNorm(self).g0_));
}

Line line_unitize(Line self) {
    return line_geometricProduct_scalar(self, Scalar(1.0 / line_weightNorm(self).g0_));
}

LineAtOrigin lineAtOrigin_unitize(LineAtOrigin self) {
    return lineAtOrigin_geometricProduct_scalar(self, Scalar(1.0 / lineAtOrigin_weightNorm(self).g0_));
}

Motor motor_unitize(Motor self) {
    return motor_geometricProduct_scalar(self, Scalar(1.0 / motor_weightNorm(self).g0_));
}

MultiVector multiVector_unitize(MultiVector self) {
    return multiVector_geometricProduct_scalar(self, Scalar(1.0 / multiVector_weightNorm(self).g0_));
}

MultiVectorAtOrigin multiVectorAtOrigin_unitize(MultiVectorAtOrigin self) {
    return multiVectorAtOrigin_geometricProduct_scalar(self, Scalar(1.0 / multiVectorAtOrigin_weightNorm(self).g0_));
}

Origin origin_unitize(Origin self) {
    return origin_geometricProduct_scalar(self, Scalar(1.0 / origin_weightNorm(self).g0_));
}

Plane plane_unitize(Plane self) {
    return plane_geometricProduct_scalar(self, Scalar(1.0 / plane_weightNorm(self).g0_));
}

PlaneAtOrigin planeAtOrigin_unitize(PlaneAtOrigin self) {
    return planeAtOrigin_geometricProduct_scalar(self, Scalar(1.0 / planeAtOrigin_weightNorm(self).g0_));
}

Point point_unitize(Point self) {
    return point_geometricProduct_scalar(self, Scalar(1.0 / point_weightNorm(self).g0_));
}

Rotor rotor_unitize(Rotor self) {
    return rotor_geometricProduct_scalar(self, Scalar(1.0 / rotor_weightNorm(self).g0_));
}

Transflector transflector_unitize(Transflector self) {
    return transflector_geometricProduct_scalar(self, Scalar(1.0 / transflector_weightNorm(self).g0_));
}

Translator translator_unitize(Translator self) {
    return translator_geometricProduct_scalar(self, Scalar(1.0 / translator_weightNorm(self).g0_));
}

Flector antiScalar_sandwich_flector(AntiScalar self, Flector other) {
    return flector_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_flector(self, other), antiScalar_antiReversal(self));
}

FlectorAtInfinity antiScalar_sandwich_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return flectorAtInfinity_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_flectorAtInfinity(self, other), antiScalar_antiReversal(self));
}

Horizon antiScalar_sandwich_horizon(AntiScalar self, Horizon other) {
    return horizon_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_horizon(self, other), antiScalar_antiReversal(self));
}

Line antiScalar_sandwich_line(AntiScalar self, Line other) {
    return line_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_line(self, other), antiScalar_antiReversal(self));
}

LineAtInfinity antiScalar_sandwich_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return lineAtInfinity_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_lineAtInfinity(self, other), antiScalar_antiReversal(self));
}

LineAtOrigin antiScalar_sandwich_lineAtOrigin(AntiScalar self, LineAtOrigin other) {
    return lineAtOrigin_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_lineAtOrigin(self, other), antiScalar_antiReversal(self));
}

Motor antiScalar_sandwich_motor(AntiScalar self, Motor other) {
    return motor_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_motor(self, other), antiScalar_antiReversal(self));
}

MultiVector antiScalar_sandwich_multiVector(AntiScalar self, MultiVector other) {
    return multiVector_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_multiVector(self, other), antiScalar_antiReversal(self));
}

MultiVectorAtInfinity antiScalar_sandwich_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_multiVectorAtInfinity(self, other), antiScalar_antiReversal(self));
}

MultiVectorAtOrigin antiScalar_sandwich_multiVectorAtOrigin(AntiScalar self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_multiVectorAtOrigin(self, other), antiScalar_antiReversal(self));
}

Origin antiScalar_sandwich_origin(AntiScalar self, Origin other) {
    return origin_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_origin(self, other), antiScalar_antiReversal(self));
}

Plane antiScalar_sandwich_plane(AntiScalar self, Plane other) {
    return plane_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_plane(self, other), antiScalar_antiReversal(self));
}

PlaneAtOrigin antiScalar_sandwich_planeAtOrigin(AntiScalar self, PlaneAtOrigin other) {
    return planeAtOrigin_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_planeAtOrigin(self, other), antiScalar_antiReversal(self));
}

Point antiScalar_sandwich_point(AntiScalar self, Point other) {
    return point_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_point(self, other), antiScalar_antiReversal(self));
}

PointAtInfinity antiScalar_sandwich_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return pointAtInfinity_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_pointAtInfinity(self, other), antiScalar_antiReversal(self));
}

Rotor antiScalar_sandwich_rotor(AntiScalar self, Rotor other) {
    return rotor_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_rotor(self, other), antiScalar_antiReversal(self));
}

Transflector antiScalar_sandwich_transflector(AntiScalar self, Transflector other) {
    return transflector_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_transflector(self, other), antiScalar_antiReversal(self));
}

Translator antiScalar_sandwich_translator(AntiScalar self, Translator other) {
    return translator_geometricAntiProduct_antiScalar(antiScalar_geometricAntiProduct_translator(self, other), antiScalar_antiReversal(self));
}

Flector dualNum_sandwich_flector(DualNum self, Flector other) {
    return flector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_flector(self, other), dualNum_antiReversal(self));
}

FlectorAtInfinity dualNum_sandwich_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return flectorAtInfinity_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_flectorAtInfinity(self, other), dualNum_antiReversal(self));
}

Horizon dualNum_sandwich_horizon(DualNum self, Horizon other) {
    return horizon_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_horizon(self, other), dualNum_antiReversal(self));
}

Line dualNum_sandwich_line(DualNum self, Line other) {
    return line_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_line(self, other), dualNum_antiReversal(self));
}

LineAtInfinity dualNum_sandwich_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return lineAtInfinity_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_lineAtInfinity(self, other), dualNum_antiReversal(self));
}

LineAtOrigin dualNum_sandwich_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return line_into_lineAtOrigin(line_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_lineAtOrigin(self, other), dualNum_antiReversal(self)));
}

Motor dualNum_sandwich_motor(DualNum self, Motor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_motor(self, other), dualNum_antiReversal(self)));
}

MultiVector dualNum_sandwich_multiVector(DualNum self, MultiVector other) {
    return multiVector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_multiVector(self, other), dualNum_antiReversal(self));
}

MultiVectorAtInfinity dualNum_sandwich_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_multiVectorAtInfinity(self, other), dualNum_antiReversal(self));
}

MultiVectorAtOrigin dualNum_sandwich_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return multiVector_into_multiVectorAtOrigin(multiVector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_multiVectorAtOrigin(self, other), dualNum_antiReversal(self)));
}

Origin dualNum_sandwich_origin(DualNum self, Origin other) {
    return flector_into_origin(flector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_origin(self, other), dualNum_antiReversal(self)));
}

Plane dualNum_sandwich_plane(DualNum self, Plane other) {
    return transflector_into_plane(transflector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_plane(self, other), dualNum_antiReversal(self)));
}

PlaneAtOrigin dualNum_sandwich_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return transflector_into_planeAtOrigin(transflector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_planeAtOrigin(self, other), dualNum_antiReversal(self)));
}

Point dualNum_sandwich_point(DualNum self, Point other) {
    return flector_into_point(flector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_point(self, other), dualNum_antiReversal(self)));
}

PointAtInfinity dualNum_sandwich_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return pointAtInfinity_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_pointAtInfinity(self, other), dualNum_antiReversal(self));
}

Rotor dualNum_sandwich_rotor(DualNum self, Rotor other) {
    return multiVector_into_rotor(multiVector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_rotor(self, other), dualNum_antiReversal(self)));
}

Transflector dualNum_sandwich_transflector(DualNum self, Transflector other) {
    return transflector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_transflector(self, other), dualNum_antiReversal(self));
}

Translator dualNum_sandwich_translator(DualNum self, Translator other) {
    return multiVector_into_translator(multiVector_geometricAntiProduct_dualNum(dualNum_geometricAntiProduct_translator(self, other), dualNum_antiReversal(self)));
}

Flector flector_sandwich_flector(Flector self, Flector other) {
    return multiVector_into_flector(multiVector_geometricAntiProduct_flector(flector_geometricAntiProduct_flector(self, other), flector_antiReversal(self)));
}

FlectorAtInfinity flector_sandwich_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_into_flectorAtInfinity(multiVectorAtInfinity_geometricAntiProduct_flector(flector_geometricAntiProduct_flectorAtInfinity(self, other), flector_antiReversal(self)));
}

Horizon flector_sandwich_horizon(Flector self, Horizon other) {
    return multiVectorAtInfinity_into_horizon(multiVectorAtInfinity_geometricAntiProduct_flector(flector_geometricAntiProduct_horizon(self, other), flector_antiReversal(self)));
}

Line flector_sandwich_line(Flector self, Line other) {
    return multiVector_into_line(flector_geometricAntiProduct_flector(flector_geometricAntiProduct_line(self, other), flector_antiReversal(self)));
}

LineAtInfinity flector_sandwich_lineAtInfinity(Flector self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(flectorAtInfinity_geometricAntiProduct_flector(flector_geometricAntiProduct_lineAtInfinity(self, other), flector_antiReversal(self)));
}

Line flector_sandwich_lineAtOrigin(Flector self, LineAtOrigin other) {
    return multiVector_into_line(flector_geometricAntiProduct_flector(flector_geometricAntiProduct_lineAtOrigin(self, other), flector_antiReversal(self)));
}

Motor flector_sandwich_motor(Flector self, Motor other) {
    return multiVector_into_motor(flector_geometricAntiProduct_flector(flector_geometricAntiProduct_motor(self, other), flector_antiReversal(self)));
}

MultiVector flector_sandwich_multiVector(Flector self, MultiVector other) {
    return multiVector_geometricAntiProduct_flector(flector_geometricAntiProduct_multiVector(self, other), flector_antiReversal(self));
}

MultiVectorAtInfinity flector_sandwich_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_flector(flector_geometricAntiProduct_multiVectorAtInfinity(self, other), flector_antiReversal(self));
}

MultiVectorAtOrigin flector_sandwich_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return multiVector_into_multiVectorAtOrigin(multiVector_geometricAntiProduct_flector(flector_geometricAntiProduct_multiVectorAtOrigin(self, other), flector_antiReversal(self)));
}

Point flector_sandwich_origin(Flector self, Origin other) {
    return multiVector_into_point(multiVector_geometricAntiProduct_flector(flector_geometricAntiProduct_origin(self, other), flector_antiReversal(self)));
}

Plane flector_sandwich_plane(Flector self, Plane other) {
    return multiVector_into_plane(multiVector_geometricAntiProduct_flector(flector_geometricAntiProduct_plane(self, other), flector_antiReversal(self)));
}

Plane flector_sandwich_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return multiVector_into_plane(multiVector_geometricAntiProduct_flector(flector_geometricAntiProduct_planeAtOrigin(self, other), flector_antiReversal(self)));
}

Point flector_sandwich_point(Flector self, Point other) {
    return multiVector_into_point(multiVector_geometricAntiProduct_flector(flector_geometricAntiProduct_point(self, other), flector_antiReversal(self)));
}

PointAtInfinity flector_sandwich_pointAtInfinity(Flector self, PointAtInfinity other) {
    return multiVectorAtInfinity_into_pointAtInfinity(multiVectorAtInfinity_geometricAntiProduct_flector(flector_geometricAntiProduct_pointAtInfinity(self, other), flector_antiReversal(self)));
}

Motor flector_sandwich_rotor(Flector self, Rotor other) {
    return multiVector_into_motor(flector_geometricAntiProduct_flector(flector_geometricAntiProduct_rotor(self, other), flector_antiReversal(self)));
}

Transflector flector_sandwich_transflector(Flector self, Transflector other) {
    return multiVector_into_transflector(multiVector_geometricAntiProduct_flector(flector_geometricAntiProduct_transflector(self, other), flector_antiReversal(self)));
}

Translator flector_sandwich_translator(Flector self, Translator other) {
    return multiVector_into_translator(flector_geometricAntiProduct_flector(flector_geometricAntiProduct_translator(self, other), flector_antiReversal(self)));
}

Flector line_sandwich_flector(Line self, Flector other) {
    return flector_geometricAntiProduct_line(line_geometricAntiProduct_flector(self, other), line_antiReversal(self));
}

FlectorAtInfinity line_sandwich_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return flectorAtInfinity_geometricAntiProduct_line(line_geometricAntiProduct_flectorAtInfinity(self, other), line_antiReversal(self));
}

Horizon line_sandwich_horizon(Line self, Horizon other) {
    return flectorAtInfinity_into_horizon(pointAtInfinity_geometricAntiProduct_line(line_geometricAntiProduct_horizon(self, other), line_antiReversal(self)));
}

Line line_sandwich_line(Line self, Line other) {
    return multiVector_into_line(multiVector_geometricAntiProduct_line(line_geometricAntiProduct_line(self, other), line_antiReversal(self)));
}

LineAtInfinity line_sandwich_lineAtInfinity(Line self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(multiVectorAtInfinity_geometricAntiProduct_line(line_geometricAntiProduct_lineAtInfinity(self, other), line_antiReversal(self)));
}

LineAtOrigin line_sandwich_lineAtOrigin(Line self, LineAtOrigin other) {
    return multiVector_into_lineAtOrigin(multiVector_geometricAntiProduct_line(line_geometricAntiProduct_lineAtOrigin(self, other), line_antiReversal(self)));
}

Motor line_sandwich_motor(Line self, Motor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_line(line_geometricAntiProduct_motor(self, other), line_antiReversal(self)));
}

MultiVector line_sandwich_multiVector(Line self, MultiVector other) {
    return multiVector_geometricAntiProduct_line(line_geometricAntiProduct_multiVector(self, other), line_antiReversal(self));
}

MultiVectorAtInfinity line_sandwich_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_line(line_geometricAntiProduct_multiVectorAtInfinity(self, other), line_antiReversal(self));
}

MultiVectorAtOrigin line_sandwich_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return multiVector_into_multiVectorAtOrigin(multiVector_geometricAntiProduct_line(line_geometricAntiProduct_multiVectorAtOrigin(self, other), line_antiReversal(self)));
}

Origin line_sandwich_origin(Line self, Origin other) {
    return flector_into_origin(transflector_geometricAntiProduct_line(line_geometricAntiProduct_origin(self, other), line_antiReversal(self)));
}

Plane line_sandwich_plane(Line self, Plane other) {
    return flector_into_plane(flector_geometricAntiProduct_line(line_geometricAntiProduct_plane(self, other), line_antiReversal(self)));
}

PlaneAtOrigin line_sandwich_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return flector_into_planeAtOrigin(flector_geometricAntiProduct_line(line_geometricAntiProduct_planeAtOrigin(self, other), line_antiReversal(self)));
}

Point line_sandwich_point(Line self, Point other) {
    return flector_into_point(transflector_geometricAntiProduct_line(line_geometricAntiProduct_point(self, other), line_antiReversal(self)));
}

PointAtInfinity line_sandwich_pointAtInfinity(Line self, PointAtInfinity other) {
    return flectorAtInfinity_into_pointAtInfinity(flectorAtInfinity_geometricAntiProduct_line(line_geometricAntiProduct_pointAtInfinity(self, other), line_antiReversal(self)));
}

Rotor line_sandwich_rotor(Line self, Rotor other) {
    return multiVector_into_rotor(multiVector_geometricAntiProduct_line(line_geometricAntiProduct_rotor(self, other), line_antiReversal(self)));
}

Transflector line_sandwich_transflector(Line self, Transflector other) {
    return flector_into_transflector(flector_geometricAntiProduct_line(line_geometricAntiProduct_transflector(self, other), line_antiReversal(self)));
}

Translator line_sandwich_translator(Line self, Translator other) {
    return multiVector_into_translator(multiVector_geometricAntiProduct_line(line_geometricAntiProduct_translator(self, other), line_antiReversal(self)));
}

Flector lineAtOrigin_sandwich_flector(LineAtOrigin self, Flector other) {
    return flector_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_flector(self, other), lineAtOrigin_antiReversal(self));
}

FlectorAtInfinity lineAtOrigin_sandwich_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return flectorAtInfinity_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_flectorAtInfinity(self, other), lineAtOrigin_antiReversal(self));
}

Horizon lineAtOrigin_sandwich_horizon(LineAtOrigin self, Horizon other) {
    return flectorAtInfinity_into_horizon(pointAtInfinity_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_horizon(self, other), lineAtOrigin_antiReversal(self)));
}

Line lineAtOrigin_sandwich_line(LineAtOrigin self, Line other) {
    return multiVector_into_line(multiVector_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_line(self, other), lineAtOrigin_antiReversal(self)));
}

LineAtInfinity lineAtOrigin_sandwich_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(multiVectorAtInfinity_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_lineAtInfinity(self, other), lineAtOrigin_antiReversal(self)));
}

LineAtOrigin lineAtOrigin_sandwich_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return rotor_into_lineAtOrigin(rotor_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_lineAtOrigin(self, other), lineAtOrigin_antiReversal(self)));
}

Motor lineAtOrigin_sandwich_motor(LineAtOrigin self, Motor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_motor(self, other), lineAtOrigin_antiReversal(self)));
}

MultiVector lineAtOrigin_sandwich_multiVector(LineAtOrigin self, MultiVector other) {
    return multiVector_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_multiVector(self, other), lineAtOrigin_antiReversal(self));
}

MultiVectorAtInfinity lineAtOrigin_sandwich_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_multiVectorAtInfinity(self, other), lineAtOrigin_antiReversal(self));
}

MultiVectorAtOrigin lineAtOrigin_sandwich_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_multiVectorAtOrigin(self, other), lineAtOrigin_antiReversal(self));
}

Origin lineAtOrigin_sandwich_origin(LineAtOrigin self, Origin other) {
    return flector_into_origin(planeAtOrigin_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_origin(self, other), lineAtOrigin_antiReversal(self)));
}

Plane lineAtOrigin_sandwich_plane(LineAtOrigin self, Plane other) {
    return flector_into_plane(flector_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_plane(self, other), lineAtOrigin_antiReversal(self)));
}

PlaneAtOrigin lineAtOrigin_sandwich_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return flector_into_planeAtOrigin(flector_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_planeAtOrigin(self, other), lineAtOrigin_antiReversal(self)));
}

Point lineAtOrigin_sandwich_point(LineAtOrigin self, Point other) {
    return flector_into_point(transflector_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_point(self, other), lineAtOrigin_antiReversal(self)));
}

PointAtInfinity lineAtOrigin_sandwich_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return flectorAtInfinity_into_pointAtInfinity(flectorAtInfinity_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_pointAtInfinity(self, other), lineAtOrigin_antiReversal(self)));
}

Rotor lineAtOrigin_sandwich_rotor(LineAtOrigin self, Rotor other) {
    return rotor_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_rotor(self, other), lineAtOrigin_antiReversal(self));
}

Transflector lineAtOrigin_sandwich_transflector(LineAtOrigin self, Transflector other) {
    return flector_into_transflector(flector_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_transflector(self, other), lineAtOrigin_antiReversal(self)));
}

Translator lineAtOrigin_sandwich_translator(LineAtOrigin self, Translator other) {
    return multiVector_into_translator(multiVector_geometricAntiProduct_lineAtOrigin(lineAtOrigin_geometricAntiProduct_translator(self, other), lineAtOrigin_antiReversal(self)));
}

Flector motor_sandwich_flector(Motor self, Flector other) {
    return flector_geometricAntiProduct_motor(motor_geometricAntiProduct_flector(self, other), motor_antiReversal(self));
}

FlectorAtInfinity motor_sandwich_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return flectorAtInfinity_geometricAntiProduct_motor(motor_geometricAntiProduct_flectorAtInfinity(self, other), motor_antiReversal(self));
}

Horizon motor_sandwich_horizon(Motor self, Horizon other) {
    return flectorAtInfinity_into_horizon(flectorAtInfinity_geometricAntiProduct_motor(motor_geometricAntiProduct_horizon(self, other), motor_antiReversal(self)));
}

Line motor_sandwich_line(Motor self, Line other) {
    return multiVector_into_line(multiVector_geometricAntiProduct_motor(motor_geometricAntiProduct_line(self, other), motor_antiReversal(self)));
}

LineAtInfinity motor_sandwich_lineAtInfinity(Motor self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(multiVectorAtInfinity_geometricAntiProduct_motor(motor_geometricAntiProduct_lineAtInfinity(self, other), motor_antiReversal(self)));
}

Line motor_sandwich_lineAtOrigin(Motor self, LineAtOrigin other) {
    return multiVector_into_line(multiVector_geometricAntiProduct_motor(motor_geometricAntiProduct_lineAtOrigin(self, other), motor_antiReversal(self)));
}

Motor motor_sandwich_motor(Motor self, Motor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_motor(motor_geometricAntiProduct_motor(self, other), motor_antiReversal(self)));
}

MultiVector motor_sandwich_multiVector(Motor self, MultiVector other) {
    return multiVector_geometricAntiProduct_motor(motor_geometricAntiProduct_multiVector(self, other), motor_antiReversal(self));
}

MultiVectorAtInfinity motor_sandwich_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_motor(motor_geometricAntiProduct_multiVectorAtInfinity(self, other), motor_antiReversal(self));
}

MultiVectorAtOrigin motor_sandwich_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return multiVector_into_multiVectorAtOrigin(multiVector_geometricAntiProduct_motor(motor_geometricAntiProduct_multiVectorAtOrigin(self, other), motor_antiReversal(self)));
}

Point motor_sandwich_origin(Motor self, Origin other) {
    return flector_into_point(flector_geometricAntiProduct_motor(motor_geometricAntiProduct_origin(self, other), motor_antiReversal(self)));
}

Plane motor_sandwich_plane(Motor self, Plane other) {
    return flector_into_plane(flector_geometricAntiProduct_motor(motor_geometricAntiProduct_plane(self, other), motor_antiReversal(self)));
}

Plane motor_sandwich_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return flector_into_plane(flector_geometricAntiProduct_motor(motor_geometricAntiProduct_planeAtOrigin(self, other), motor_antiReversal(self)));
}

Point motor_sandwich_point(Motor self, Point other) {
    return flector_into_point(flector_geometricAntiProduct_motor(motor_geometricAntiProduct_point(self, other), motor_antiReversal(self)));
}

PointAtInfinity motor_sandwich_pointAtInfinity(Motor self, PointAtInfinity other) {
    return flectorAtInfinity_into_pointAtInfinity(flectorAtInfinity_geometricAntiProduct_motor(motor_geometricAntiProduct_pointAtInfinity(self, other), motor_antiReversal(self)));
}

Motor motor_sandwich_rotor(Motor self, Rotor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_motor(motor_geometricAntiProduct_rotor(self, other), motor_antiReversal(self)));
}

Transflector motor_sandwich_transflector(Motor self, Transflector other) {
    return flector_into_transflector(flector_geometricAntiProduct_motor(motor_geometricAntiProduct_transflector(self, other), motor_antiReversal(self)));
}

Translator motor_sandwich_translator(Motor self, Translator other) {
    return multiVector_into_translator(multiVector_geometricAntiProduct_motor(motor_geometricAntiProduct_translator(self, other), motor_antiReversal(self)));
}

Flector multiVector_sandwich_flector(MultiVector self, Flector other) {
    return multiVector_into_flector(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_flector(self, other), multiVector_antiReversal(self)));
}

FlectorAtInfinity multiVector_sandwich_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_into_flectorAtInfinity(multiVectorAtInfinity_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_flectorAtInfinity(self, other), multiVector_antiReversal(self)));
}

Horizon multiVector_sandwich_horizon(MultiVector self, Horizon other) {
    return multiVectorAtInfinity_into_horizon(multiVectorAtInfinity_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_horizon(self, other), multiVector_antiReversal(self)));
}

Line multiVector_sandwich_line(MultiVector self, Line other) {
    return multiVector_into_line(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_line(self, other), multiVector_antiReversal(self)));
}

LineAtInfinity multiVector_sandwich_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(multiVectorAtInfinity_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_lineAtInfinity(self, other), multiVector_antiReversal(self)));
}

LineAtOrigin multiVector_sandwich_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return multiVector_into_lineAtOrigin(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_lineAtOrigin(self, other), multiVector_antiReversal(self)));
}

Motor multiVector_sandwich_motor(MultiVector self, Motor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_motor(self, other), multiVector_antiReversal(self)));
}

MultiVector multiVector_sandwich_multiVector(MultiVector self, MultiVector other) {
    return multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_multiVector(self, other), multiVector_antiReversal(self));
}

MultiVectorAtInfinity multiVector_sandwich_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_multiVectorAtInfinity(self, other), multiVector_antiReversal(self));
}

MultiVectorAtOrigin multiVector_sandwich_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return multiVector_into_multiVectorAtOrigin(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_multiVectorAtOrigin(self, other), multiVector_antiReversal(self)));
}

Origin multiVector_sandwich_origin(MultiVector self, Origin other) {
    return multiVector_into_origin(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_origin(self, other), multiVector_antiReversal(self)));
}

Plane multiVector_sandwich_plane(MultiVector self, Plane other) {
    return multiVector_into_plane(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_plane(self, other), multiVector_antiReversal(self)));
}

PlaneAtOrigin multiVector_sandwich_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return multiVector_into_planeAtOrigin(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_planeAtOrigin(self, other), multiVector_antiReversal(self)));
}

Point multiVector_sandwich_point(MultiVector self, Point other) {
    return multiVector_into_point(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_point(self, other), multiVector_antiReversal(self)));
}

PointAtInfinity multiVector_sandwich_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return multiVectorAtInfinity_into_pointAtInfinity(multiVectorAtInfinity_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_pointAtInfinity(self, other), multiVector_antiReversal(self)));
}

Rotor multiVector_sandwich_rotor(MultiVector self, Rotor other) {
    return multiVector_into_rotor(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_rotor(self, other), multiVector_antiReversal(self)));
}

Transflector multiVector_sandwich_transflector(MultiVector self, Transflector other) {
    return multiVector_into_transflector(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_transflector(self, other), multiVector_antiReversal(self)));
}

Translator multiVector_sandwich_translator(MultiVector self, Translator other) {
    return multiVector_into_translator(multiVector_geometricAntiProduct_multiVector(multiVector_geometricAntiProduct_translator(self, other), multiVector_antiReversal(self)));
}

Flector multiVectorAtOrigin_sandwich_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVector_into_flector(multiVector_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_flector(self, other), multiVectorAtOrigin_antiReversal(self)));
}

FlectorAtInfinity multiVectorAtOrigin_sandwich_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_into_flectorAtInfinity(multiVectorAtInfinity_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_flectorAtInfinity(self, other), multiVectorAtOrigin_antiReversal(self)));
}

Horizon multiVectorAtOrigin_sandwich_horizon(MultiVectorAtOrigin self, Horizon other) {
    return multiVectorAtInfinity_into_horizon(multiVectorAtInfinity_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_horizon(self, other), multiVectorAtOrigin_antiReversal(self)));
}

Line multiVectorAtOrigin_sandwich_line(MultiVectorAtOrigin self, Line other) {
    return multiVector_into_line(multiVector_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_line(self, other), multiVectorAtOrigin_antiReversal(self)));
}

LineAtInfinity multiVectorAtOrigin_sandwich_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(multiVectorAtInfinity_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_lineAtInfinity(self, other), multiVectorAtOrigin_antiReversal(self)));
}

LineAtOrigin multiVectorAtOrigin_sandwich_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return multiVectorAtOrigin_into_lineAtOrigin(multiVectorAtOrigin_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_lineAtOrigin(self, other), multiVectorAtOrigin_antiReversal(self)));
}

Motor multiVectorAtOrigin_sandwich_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_motor(self, other), multiVectorAtOrigin_antiReversal(self)));
}

MultiVector multiVectorAtOrigin_sandwich_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVector_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_multiVector(self, other), multiVectorAtOrigin_antiReversal(self));
}

MultiVectorAtInfinity multiVectorAtOrigin_sandwich_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_multiVectorAtInfinity(self, other), multiVectorAtOrigin_antiReversal(self));
}

MultiVectorAtOrigin multiVectorAtOrigin_sandwich_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiReversal(self));
}

Origin multiVectorAtOrigin_sandwich_origin(MultiVectorAtOrigin self, Origin other) {
    return multiVectorAtOrigin_into_origin(multiVectorAtOrigin_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_origin(self, other), multiVectorAtOrigin_antiReversal(self)));
}

Plane multiVectorAtOrigin_sandwich_plane(MultiVectorAtOrigin self, Plane other) {
    return multiVector_into_plane(multiVector_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_plane(self, other), multiVectorAtOrigin_antiReversal(self)));
}

PlaneAtOrigin multiVectorAtOrigin_sandwich_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return multiVectorAtOrigin_into_planeAtOrigin(multiVectorAtOrigin_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_planeAtOrigin(self, other), multiVectorAtOrigin_antiReversal(self)));
}

Point multiVectorAtOrigin_sandwich_point(MultiVectorAtOrigin self, Point other) {
    return multiVector_into_point(multiVector_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_point(self, other), multiVectorAtOrigin_antiReversal(self)));
}

PointAtInfinity multiVectorAtOrigin_sandwich_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return multiVectorAtInfinity_into_pointAtInfinity(multiVectorAtInfinity_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_pointAtInfinity(self, other), multiVectorAtOrigin_antiReversal(self)));
}

Rotor multiVectorAtOrigin_sandwich_rotor(MultiVectorAtOrigin self, Rotor other) {
    return multiVectorAtOrigin_into_rotor(multiVectorAtOrigin_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_rotor(self, other), multiVectorAtOrigin_antiReversal(self)));
}

Transflector multiVectorAtOrigin_sandwich_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVector_into_transflector(multiVector_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_transflector(self, other), multiVectorAtOrigin_antiReversal(self)));
}

Translator multiVectorAtOrigin_sandwich_translator(MultiVectorAtOrigin self, Translator other) {
    return multiVector_into_translator(multiVector_geometricAntiProduct_multiVectorAtOrigin(multiVectorAtOrigin_geometricAntiProduct_translator(self, other), multiVectorAtOrigin_antiReversal(self)));
}

Flector origin_sandwich_flector(Origin self, Flector other) {
    return multiVector_into_flector(multiVector_geometricAntiProduct_origin(origin_geometricAntiProduct_flector(self, other), origin_antiReversal(self)));
}

FlectorAtInfinity origin_sandwich_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_into_flectorAtInfinity(multiVectorAtInfinity_geometricAntiProduct_origin(origin_geometricAntiProduct_flectorAtInfinity(self, other), origin_antiReversal(self)));
}

Horizon origin_sandwich_horizon(Origin self, Horizon other) {
    return scalar_geometricAntiProduct_origin(origin_geometricAntiProduct_horizon(self, other), origin_antiReversal(self));
}

Line origin_sandwich_line(Origin self, Line other) {
    return multiVector_into_line(transflector_geometricAntiProduct_origin(origin_geometricAntiProduct_line(self, other), origin_antiReversal(self)));
}

LineAtInfinity origin_sandwich_lineAtInfinity(Origin self, LineAtInfinity other) {
    return pointAtInfinity_geometricAntiProduct_origin(origin_geometricAntiProduct_lineAtInfinity(self, other), origin_antiReversal(self));
}

LineAtOrigin origin_sandwich_lineAtOrigin(Origin self, LineAtOrigin other) {
    return planeAtOrigin_geometricAntiProduct_origin(origin_geometricAntiProduct_lineAtOrigin(self, other), origin_antiReversal(self));
}

Motor origin_sandwich_motor(Origin self, Motor other) {
    return multiVector_into_motor(flector_geometricAntiProduct_origin(origin_geometricAntiProduct_motor(self, other), origin_antiReversal(self)));
}

MultiVector origin_sandwich_multiVector(Origin self, MultiVector other) {
    return multiVector_geometricAntiProduct_origin(origin_geometricAntiProduct_multiVector(self, other), origin_antiReversal(self));
}

MultiVectorAtInfinity origin_sandwich_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_origin(origin_geometricAntiProduct_multiVectorAtInfinity(self, other), origin_antiReversal(self));
}

MultiVectorAtOrigin origin_sandwich_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_geometricAntiProduct_origin(origin_geometricAntiProduct_multiVectorAtOrigin(self, other), origin_antiReversal(self));
}

Origin origin_sandwich_origin(Origin self, Origin other) {
    return antiScalar_geometricAntiProduct_origin(origin_geometricAntiProduct_origin(self, other), origin_antiReversal(self));
}

Plane origin_sandwich_plane(Origin self, Plane other) {
    return multiVector_into_plane(multiVector_geometricAntiProduct_origin(origin_geometricAntiProduct_plane(self, other), origin_antiReversal(self)));
}

PlaneAtOrigin origin_sandwich_planeAtOrigin(Origin self, PlaneAtOrigin other) {
    return lineAtOrigin_geometricAntiProduct_origin(origin_geometricAntiProduct_planeAtOrigin(self, other), origin_antiReversal(self));
}

Point origin_sandwich_point(Origin self, Point other) {
    return translator_geometricAntiProduct_origin(origin_geometricAntiProduct_point(self, other), origin_antiReversal(self));
}

PointAtInfinity origin_sandwich_pointAtInfinity(Origin self, PointAtInfinity other) {
    return lineAtInfinity_geometricAntiProduct_origin(origin_geometricAntiProduct_pointAtInfinity(self, other), origin_antiReversal(self));
}

Rotor origin_sandwich_rotor(Origin self, Rotor other) {
    return multiVector_into_rotor(flector_geometricAntiProduct_origin(origin_geometricAntiProduct_rotor(self, other), origin_antiReversal(self)));
}

Transflector origin_sandwich_transflector(Origin self, Transflector other) {
    return multiVector_into_transflector(multiVector_geometricAntiProduct_origin(origin_geometricAntiProduct_transflector(self, other), origin_antiReversal(self)));
}

Translator origin_sandwich_translator(Origin self, Translator other) {
    return point_geometricAntiProduct_origin(origin_geometricAntiProduct_translator(self, other), origin_antiReversal(self));
}

Flector plane_sandwich_flector(Plane self, Flector other) {
    return multiVector_into_flector(multiVector_geometricAntiProduct_plane(plane_geometricAntiProduct_flector(self, other), plane_antiReversal(self)));
}

FlectorAtInfinity plane_sandwich_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_into_flectorAtInfinity(multiVectorAtInfinity_geometricAntiProduct_plane(plane_geometricAntiProduct_flectorAtInfinity(self, other), plane_antiReversal(self)));
}

Horizon plane_sandwich_horizon(Plane self, Horizon other) {
    return flectorAtInfinity_into_horizon(lineAtInfinity_geometricAntiProduct_plane(plane_geometricAntiProduct_horizon(self, other), plane_antiReversal(self)));
}

Line plane_sandwich_line(Plane self, Line other) {
    return multiVector_into_line(flector_geometricAntiProduct_plane(plane_geometricAntiProduct_line(self, other), plane_antiReversal(self)));
}

LineAtInfinity plane_sandwich_lineAtInfinity(Plane self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(flectorAtInfinity_geometricAntiProduct_plane(plane_geometricAntiProduct_lineAtInfinity(self, other), plane_antiReversal(self)));
}

LineAtOrigin plane_sandwich_lineAtOrigin(Plane self, LineAtOrigin other) {
    return multiVector_into_lineAtOrigin(flector_geometricAntiProduct_plane(plane_geometricAntiProduct_lineAtOrigin(self, other), plane_antiReversal(self)));
}

Motor plane_sandwich_motor(Plane self, Motor other) {
    return multiVector_into_motor(flector_geometricAntiProduct_plane(plane_geometricAntiProduct_motor(self, other), plane_antiReversal(self)));
}

MultiVector plane_sandwich_multiVector(Plane self, MultiVector other) {
    return multiVector_geometricAntiProduct_plane(plane_geometricAntiProduct_multiVector(self, other), plane_antiReversal(self));
}

MultiVectorAtInfinity plane_sandwich_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_plane(plane_geometricAntiProduct_multiVectorAtInfinity(self, other), plane_antiReversal(self));
}

MultiVectorAtOrigin plane_sandwich_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return multiVector_into_multiVectorAtOrigin(multiVector_geometricAntiProduct_plane(plane_geometricAntiProduct_multiVectorAtOrigin(self, other), plane_antiReversal(self)));
}

Origin plane_sandwich_origin(Plane self, Origin other) {
    return multiVector_into_origin(multiVector_geometricAntiProduct_plane(plane_geometricAntiProduct_origin(self, other), plane_antiReversal(self)));
}

Plane plane_sandwich_plane(Plane self, Plane other) {
    return flector_into_plane(motor_geometricAntiProduct_plane(plane_geometricAntiProduct_plane(self, other), plane_antiReversal(self)));
}

PlaneAtOrigin plane_sandwich_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return flector_into_planeAtOrigin(motor_geometricAntiProduct_plane(plane_geometricAntiProduct_planeAtOrigin(self, other), plane_antiReversal(self)));
}

Point plane_sandwich_point(Plane self, Point other) {
    return multiVector_into_point(multiVector_geometricAntiProduct_plane(plane_geometricAntiProduct_point(self, other), plane_antiReversal(self)));
}

PointAtInfinity plane_sandwich_pointAtInfinity(Plane self, PointAtInfinity other) {
    return multiVectorAtInfinity_into_pointAtInfinity(multiVectorAtInfinity_geometricAntiProduct_plane(plane_geometricAntiProduct_pointAtInfinity(self, other), plane_antiReversal(self)));
}

Rotor plane_sandwich_rotor(Plane self, Rotor other) {
    return multiVector_into_rotor(flector_geometricAntiProduct_plane(plane_geometricAntiProduct_rotor(self, other), plane_antiReversal(self)));
}

Transflector plane_sandwich_transflector(Plane self, Transflector other) {
    return multiVector_into_transflector(multiVector_geometricAntiProduct_plane(plane_geometricAntiProduct_transflector(self, other), plane_antiReversal(self)));
}

Translator plane_sandwich_translator(Plane self, Translator other) {
    return multiVector_into_translator(transflector_geometricAntiProduct_plane(plane_geometricAntiProduct_translator(self, other), plane_antiReversal(self)));
}

Flector planeAtOrigin_sandwich_flector(PlaneAtOrigin self, Flector other) {
    return multiVector_into_flector(multiVector_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_flector(self, other), planeAtOrigin_antiReversal(self)));
}

FlectorAtInfinity planeAtOrigin_sandwich_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_into_flectorAtInfinity(multiVectorAtInfinity_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_flectorAtInfinity(self, other), planeAtOrigin_antiReversal(self)));
}

Horizon planeAtOrigin_sandwich_horizon(PlaneAtOrigin self, Horizon other) {
    return flectorAtInfinity_into_horizon(lineAtInfinity_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_horizon(self, other), planeAtOrigin_antiReversal(self)));
}

Line planeAtOrigin_sandwich_line(PlaneAtOrigin self, Line other) {
    return multiVector_into_line(flector_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_line(self, other), planeAtOrigin_antiReversal(self)));
}

LineAtInfinity planeAtOrigin_sandwich_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(flectorAtInfinity_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_lineAtInfinity(self, other), planeAtOrigin_antiReversal(self)));
}

LineAtOrigin planeAtOrigin_sandwich_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return multiVector_into_lineAtOrigin(flector_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_lineAtOrigin(self, other), planeAtOrigin_antiReversal(self)));
}

Motor planeAtOrigin_sandwich_motor(PlaneAtOrigin self, Motor other) {
    return multiVector_into_motor(flector_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_motor(self, other), planeAtOrigin_antiReversal(self)));
}

MultiVector planeAtOrigin_sandwich_multiVector(PlaneAtOrigin self, MultiVector other) {
    return multiVector_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_multiVector(self, other), planeAtOrigin_antiReversal(self));
}

MultiVectorAtInfinity planeAtOrigin_sandwich_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_multiVectorAtInfinity(self, other), planeAtOrigin_antiReversal(self));
}

MultiVectorAtOrigin planeAtOrigin_sandwich_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_multiVectorAtOrigin(self, other), planeAtOrigin_antiReversal(self));
}

Origin planeAtOrigin_sandwich_origin(PlaneAtOrigin self, Origin other) {
    return flector_into_origin(lineAtOrigin_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_origin(self, other), planeAtOrigin_antiReversal(self)));
}

Plane planeAtOrigin_sandwich_plane(PlaneAtOrigin self, Plane other) {
    return flector_into_plane(motor_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_plane(self, other), planeAtOrigin_antiReversal(self)));
}

PlaneAtOrigin planeAtOrigin_sandwich_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return flector_into_planeAtOrigin(rotor_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_planeAtOrigin(self, other), planeAtOrigin_antiReversal(self)));
}

Point planeAtOrigin_sandwich_point(PlaneAtOrigin self, Point other) {
    return multiVector_into_point(multiVector_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_point(self, other), planeAtOrigin_antiReversal(self)));
}

PointAtInfinity planeAtOrigin_sandwich_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return multiVectorAtInfinity_into_pointAtInfinity(multiVectorAtInfinity_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_pointAtInfinity(self, other), planeAtOrigin_antiReversal(self)));
}

Rotor planeAtOrigin_sandwich_rotor(PlaneAtOrigin self, Rotor other) {
    return multiVector_into_rotor(flector_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_rotor(self, other), planeAtOrigin_antiReversal(self)));
}

Transflector planeAtOrigin_sandwich_transflector(PlaneAtOrigin self, Transflector other) {
    return multiVector_into_transflector(multiVector_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_transflector(self, other), planeAtOrigin_antiReversal(self)));
}

Translator planeAtOrigin_sandwich_translator(PlaneAtOrigin self, Translator other) {
    return multiVector_into_translator(transflector_geometricAntiProduct_planeAtOrigin(planeAtOrigin_geometricAntiProduct_translator(self, other), planeAtOrigin_antiReversal(self)));
}

Flector point_sandwich_flector(Point self, Flector other) {
    return multiVector_into_flector(multiVector_geometricAntiProduct_point(point_geometricAntiProduct_flector(self, other), point_antiReversal(self)));
}

FlectorAtInfinity point_sandwich_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_into_flectorAtInfinity(multiVectorAtInfinity_geometricAntiProduct_point(point_geometricAntiProduct_flectorAtInfinity(self, other), point_antiReversal(self)));
}

Horizon point_sandwich_horizon(Point self, Horizon other) {
    return scalar_geometricAntiProduct_point(point_geometricAntiProduct_horizon(self, other), point_antiReversal(self));
}

Line point_sandwich_line(Point self, Line other) {
    return multiVector_into_line(transflector_geometricAntiProduct_point(point_geometricAntiProduct_line(self, other), point_antiReversal(self)));
}

LineAtInfinity point_sandwich_lineAtInfinity(Point self, LineAtInfinity other) {
    return pointAtInfinity_geometricAntiProduct_point(point_geometricAntiProduct_lineAtInfinity(self, other), point_antiReversal(self));
}

LineAtOrigin point_sandwich_lineAtOrigin(Point self, LineAtOrigin other) {
    return multiVector_into_lineAtOrigin(transflector_geometricAntiProduct_point(point_geometricAntiProduct_lineAtOrigin(self, other), point_antiReversal(self)));
}

Motor point_sandwich_motor(Point self, Motor other) {
    return multiVector_into_motor(flector_geometricAntiProduct_point(point_geometricAntiProduct_motor(self, other), point_antiReversal(self)));
}

MultiVector point_sandwich_multiVector(Point self, MultiVector other) {
    return multiVector_geometricAntiProduct_point(point_geometricAntiProduct_multiVector(self, other), point_antiReversal(self));
}

MultiVectorAtInfinity point_sandwich_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_point(point_geometricAntiProduct_multiVectorAtInfinity(self, other), point_antiReversal(self));
}

MultiVectorAtOrigin point_sandwich_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return multiVector_into_multiVectorAtOrigin(multiVector_geometricAntiProduct_point(point_geometricAntiProduct_multiVectorAtOrigin(self, other), point_antiReversal(self)));
}

Origin point_sandwich_origin(Point self, Origin other) {
    return point_into_origin(translator_geometricAntiProduct_point(point_geometricAntiProduct_origin(self, other), point_antiReversal(self)));
}

Plane point_sandwich_plane(Point self, Plane other) {
    return multiVector_into_plane(multiVector_geometricAntiProduct_point(point_geometricAntiProduct_plane(self, other), point_antiReversal(self)));
}

PlaneAtOrigin point_sandwich_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return multiVector_into_planeAtOrigin(multiVector_geometricAntiProduct_point(point_geometricAntiProduct_planeAtOrigin(self, other), point_antiReversal(self)));
}

Point point_sandwich_point(Point self, Point other) {
    return translator_geometricAntiProduct_point(point_geometricAntiProduct_point(self, other), point_antiReversal(self));
}

PointAtInfinity point_sandwich_pointAtInfinity(Point self, PointAtInfinity other) {
    return lineAtInfinity_geometricAntiProduct_point(point_geometricAntiProduct_pointAtInfinity(self, other), point_antiReversal(self));
}

Rotor point_sandwich_rotor(Point self, Rotor other) {
    return multiVector_into_rotor(flector_geometricAntiProduct_point(point_geometricAntiProduct_rotor(self, other), point_antiReversal(self)));
}

Transflector point_sandwich_transflector(Point self, Transflector other) {
    return multiVector_into_transflector(multiVector_geometricAntiProduct_point(point_geometricAntiProduct_transflector(self, other), point_antiReversal(self)));
}

Translator point_sandwich_translator(Point self, Translator other) {
    return point_geometricAntiProduct_point(point_geometricAntiProduct_translator(self, other), point_antiReversal(self));
}

Flector rotor_sandwich_flector(Rotor self, Flector other) {
    return flector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_flector(self, other), rotor_antiReversal(self));
}

FlectorAtInfinity rotor_sandwich_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return flectorAtInfinity_geometricAntiProduct_rotor(rotor_geometricAntiProduct_flectorAtInfinity(self, other), rotor_antiReversal(self));
}

Horizon rotor_sandwich_horizon(Rotor self, Horizon other) {
    return flectorAtInfinity_into_horizon(flectorAtInfinity_geometricAntiProduct_rotor(rotor_geometricAntiProduct_horizon(self, other), rotor_antiReversal(self)));
}

Line rotor_sandwich_line(Rotor self, Line other) {
    return multiVector_into_line(multiVector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_line(self, other), rotor_antiReversal(self)));
}

LineAtInfinity rotor_sandwich_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(multiVectorAtInfinity_geometricAntiProduct_rotor(rotor_geometricAntiProduct_lineAtInfinity(self, other), rotor_antiReversal(self)));
}

LineAtOrigin rotor_sandwich_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return rotor_into_lineAtOrigin(rotor_geometricAntiProduct_rotor(rotor_geometricAntiProduct_lineAtOrigin(self, other), rotor_antiReversal(self)));
}

Motor rotor_sandwich_motor(Rotor self, Motor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_motor(self, other), rotor_antiReversal(self)));
}

MultiVector rotor_sandwich_multiVector(Rotor self, MultiVector other) {
    return multiVector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_multiVector(self, other), rotor_antiReversal(self));
}

MultiVectorAtInfinity rotor_sandwich_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_rotor(rotor_geometricAntiProduct_multiVectorAtInfinity(self, other), rotor_antiReversal(self));
}

MultiVectorAtOrigin rotor_sandwich_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_geometricAntiProduct_rotor(rotor_geometricAntiProduct_multiVectorAtOrigin(self, other), rotor_antiReversal(self));
}

Origin rotor_sandwich_origin(Rotor self, Origin other) {
    return flector_into_origin(flector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_origin(self, other), rotor_antiReversal(self)));
}

Plane rotor_sandwich_plane(Rotor self, Plane other) {
    return flector_into_plane(flector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_plane(self, other), rotor_antiReversal(self)));
}

PlaneAtOrigin rotor_sandwich_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return flector_into_planeAtOrigin(flector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_planeAtOrigin(self, other), rotor_antiReversal(self)));
}

Point rotor_sandwich_point(Rotor self, Point other) {
    return flector_into_point(flector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_point(self, other), rotor_antiReversal(self)));
}

PointAtInfinity rotor_sandwich_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return flectorAtInfinity_into_pointAtInfinity(flectorAtInfinity_geometricAntiProduct_rotor(rotor_geometricAntiProduct_pointAtInfinity(self, other), rotor_antiReversal(self)));
}

Rotor rotor_sandwich_rotor(Rotor self, Rotor other) {
    return rotor_geometricAntiProduct_rotor(rotor_geometricAntiProduct_rotor(self, other), rotor_antiReversal(self));
}

Transflector rotor_sandwich_transflector(Rotor self, Transflector other) {
    return flector_into_transflector(flector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_transflector(self, other), rotor_antiReversal(self)));
}

Translator rotor_sandwich_translator(Rotor self, Translator other) {
    return multiVector_into_translator(multiVector_geometricAntiProduct_rotor(rotor_geometricAntiProduct_translator(self, other), rotor_antiReversal(self)));
}

Flector transflector_sandwich_flector(Transflector self, Flector other) {
    return multiVector_into_flector(multiVector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_flector(self, other), transflector_antiReversal(self)));
}

FlectorAtInfinity transflector_sandwich_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_into_flectorAtInfinity(multiVectorAtInfinity_geometricAntiProduct_transflector(transflector_geometricAntiProduct_flectorAtInfinity(self, other), transflector_antiReversal(self)));
}

Horizon transflector_sandwich_horizon(Transflector self, Horizon other) {
    return flectorAtInfinity_into_horizon(lineAtInfinity_geometricAntiProduct_transflector(transflector_geometricAntiProduct_horizon(self, other), transflector_antiReversal(self)));
}

Line transflector_sandwich_line(Transflector self, Line other) {
    return multiVector_into_line(flector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_line(self, other), transflector_antiReversal(self)));
}

LineAtInfinity transflector_sandwich_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return multiVectorAtInfinity_into_lineAtInfinity(flectorAtInfinity_geometricAntiProduct_transflector(transflector_geometricAntiProduct_lineAtInfinity(self, other), transflector_antiReversal(self)));
}

LineAtOrigin transflector_sandwich_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return multiVector_into_lineAtOrigin(flector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_lineAtOrigin(self, other), transflector_antiReversal(self)));
}

Motor transflector_sandwich_motor(Transflector self, Motor other) {
    return multiVector_into_motor(flector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_motor(self, other), transflector_antiReversal(self)));
}

MultiVector transflector_sandwich_multiVector(Transflector self, MultiVector other) {
    return multiVector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_multiVector(self, other), transflector_antiReversal(self));
}

MultiVectorAtInfinity transflector_sandwich_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_transflector(transflector_geometricAntiProduct_multiVectorAtInfinity(self, other), transflector_antiReversal(self));
}

MultiVectorAtOrigin transflector_sandwich_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return multiVector_into_multiVectorAtOrigin(multiVector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_multiVectorAtOrigin(self, other), transflector_antiReversal(self)));
}

Origin transflector_sandwich_origin(Transflector self, Origin other) {
    return multiVector_into_origin(multiVector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_origin(self, other), transflector_antiReversal(self)));
}

Plane transflector_sandwich_plane(Transflector self, Plane other) {
    return multiVector_into_plane(multiVector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_plane(self, other), transflector_antiReversal(self)));
}

PlaneAtOrigin transflector_sandwich_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return multiVector_into_planeAtOrigin(multiVector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_planeAtOrigin(self, other), transflector_antiReversal(self)));
}

Point transflector_sandwich_point(Transflector self, Point other) {
    return multiVector_into_point(multiVector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_point(self, other), transflector_antiReversal(self)));
}

PointAtInfinity transflector_sandwich_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return multiVectorAtInfinity_into_pointAtInfinity(multiVectorAtInfinity_geometricAntiProduct_transflector(transflector_geometricAntiProduct_pointAtInfinity(self, other), transflector_antiReversal(self)));
}

Rotor transflector_sandwich_rotor(Transflector self, Rotor other) {
    return multiVector_into_rotor(flector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_rotor(self, other), transflector_antiReversal(self)));
}

Transflector transflector_sandwich_transflector(Transflector self, Transflector other) {
    return multiVector_into_transflector(multiVector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_transflector(self, other), transflector_antiReversal(self)));
}

Translator transflector_sandwich_translator(Transflector self, Translator other) {
    return multiVector_into_translator(transflector_geometricAntiProduct_transflector(transflector_geometricAntiProduct_translator(self, other), transflector_antiReversal(self)));
}

Flector translator_sandwich_flector(Translator self, Flector other) {
    return flector_geometricAntiProduct_translator(translator_geometricAntiProduct_flector(self, other), translator_antiReversal(self));
}

FlectorAtInfinity translator_sandwich_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return flectorAtInfinity_geometricAntiProduct_translator(translator_geometricAntiProduct_flectorAtInfinity(self, other), translator_antiReversal(self));
}

Horizon translator_sandwich_horizon(Translator self, Horizon other) {
    return horizon_geometricAntiProduct_translator(translator_geometricAntiProduct_horizon(self, other), translator_antiReversal(self));
}

Line translator_sandwich_line(Translator self, Line other) {
    return multiVector_into_line(multiVector_geometricAntiProduct_translator(translator_geometricAntiProduct_line(self, other), translator_antiReversal(self)));
}

LineAtInfinity translator_sandwich_lineAtInfinity(Translator self, LineAtInfinity other) {
    return lineAtInfinity_geometricAntiProduct_translator(translator_geometricAntiProduct_lineAtInfinity(self, other), translator_antiReversal(self));
}

Line translator_sandwich_lineAtOrigin(Translator self, LineAtOrigin other) {
    return multiVector_into_line(multiVector_geometricAntiProduct_translator(translator_geometricAntiProduct_lineAtOrigin(self, other), translator_antiReversal(self)));
}

Motor translator_sandwich_motor(Translator self, Motor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_translator(translator_geometricAntiProduct_motor(self, other), translator_antiReversal(self)));
}

MultiVector translator_sandwich_multiVector(Translator self, MultiVector other) {
    return multiVector_geometricAntiProduct_translator(translator_geometricAntiProduct_multiVector(self, other), translator_antiReversal(self));
}

MultiVectorAtInfinity translator_sandwich_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricAntiProduct_translator(translator_geometricAntiProduct_multiVectorAtInfinity(self, other), translator_antiReversal(self));
}

MultiVectorAtOrigin translator_sandwich_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return multiVector_into_multiVectorAtOrigin(multiVector_geometricAntiProduct_translator(translator_geometricAntiProduct_multiVectorAtOrigin(self, other), translator_antiReversal(self)));
}

Point translator_sandwich_origin(Translator self, Origin other) {
    return point_geometricAntiProduct_translator(translator_geometricAntiProduct_origin(self, other), translator_antiReversal(self));
}

Plane translator_sandwich_plane(Translator self, Plane other) {
    return transflector_into_plane(transflector_geometricAntiProduct_translator(translator_geometricAntiProduct_plane(self, other), translator_antiReversal(self)));
}

Plane translator_sandwich_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return transflector_into_plane(transflector_geometricAntiProduct_translator(translator_geometricAntiProduct_planeAtOrigin(self, other), translator_antiReversal(self)));
}

Point translator_sandwich_point(Translator self, Point other) {
    return point_geometricAntiProduct_translator(translator_geometricAntiProduct_point(self, other), translator_antiReversal(self));
}

PointAtInfinity translator_sandwich_pointAtInfinity(Translator self, PointAtInfinity other) {
    return pointAtInfinity_geometricAntiProduct_translator(translator_geometricAntiProduct_pointAtInfinity(self, other), translator_antiReversal(self));
}

Motor translator_sandwich_rotor(Translator self, Rotor other) {
    return multiVector_into_motor(multiVector_geometricAntiProduct_translator(translator_geometricAntiProduct_rotor(self, other), translator_antiReversal(self)));
}

Transflector translator_sandwich_transflector(Translator self, Transflector other) {
    return transflector_geometricAntiProduct_translator(translator_geometricAntiProduct_transflector(self, other), translator_antiReversal(self));
}

Translator translator_sandwich_translator(Translator self, Translator other) {
    return translator_geometricAntiProduct_translator(translator_geometricAntiProduct_translator(self, other), translator_antiReversal(self));
}

Flector point_pointInversion_flector(Point self, Flector other) {
    return point_sandwich_flector(point_unitize(self), other);
}

FlectorAtInfinity point_pointInversion_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return point_sandwich_flectorAtInfinity(point_unitize(self), other);
}

Horizon point_pointInversion_horizon(Point self, Horizon other) {
    return point_sandwich_horizon(point_unitize(self), other);
}

Line point_pointInversion_line(Point self, Line other) {
    return point_sandwich_line(point_unitize(self), other);
}

LineAtInfinity point_pointInversion_lineAtInfinity(Point self, LineAtInfinity other) {
    return point_sandwich_lineAtInfinity(point_unitize(self), other);
}

LineAtOrigin point_pointInversion_lineAtOrigin(Point self, LineAtOrigin other) {
    return point_sandwich_lineAtOrigin(point_unitize(self), other);
}

Motor point_pointInversion_motor(Point self, Motor other) {
    return point_sandwich_motor(point_unitize(self), other);
}

MultiVector point_pointInversion_multiVector(Point self, MultiVector other) {
    return point_sandwich_multiVector(point_unitize(self), other);
}

MultiVectorAtInfinity point_pointInversion_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return point_sandwich_multiVectorAtInfinity(point_unitize(self), other);
}

MultiVectorAtOrigin point_pointInversion_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return point_sandwich_multiVectorAtOrigin(point_unitize(self), other);
}

Origin point_pointInversion_origin(Point self, Origin other) {
    return point_sandwich_origin(point_unitize(self), other);
}

Plane point_pointInversion_plane(Point self, Plane other) {
    return point_sandwich_plane(point_unitize(self), other);
}

PlaneAtOrigin point_pointInversion_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return point_sandwich_planeAtOrigin(point_unitize(self), other);
}

Point point_pointInversion_point(Point self, Point other) {
    return point_sandwich_point(point_unitize(self), other);
}

PointAtInfinity point_pointInversion_pointAtInfinity(Point self, PointAtInfinity other) {
    return point_sandwich_pointAtInfinity(point_unitize(self), other);
}

Rotor point_pointInversion_rotor(Point self, Rotor other) {
    return point_sandwich_rotor(point_unitize(self), other);
}

Transflector point_pointInversion_transflector(Point self, Transflector other) {
    return point_sandwich_transflector(point_unitize(self), other);
}

Translator point_pointInversion_translator(Point self, Translator other) {
    return point_sandwich_translator(point_unitize(self), other);
}

Flector plane_reflect_flector(Plane self, Flector other) {
    return plane_sandwich_flector(plane_unitize(self), other);
}

FlectorAtInfinity plane_reflect_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return plane_sandwich_flectorAtInfinity(plane_unitize(self), other);
}

Horizon plane_reflect_horizon(Plane self, Horizon other) {
    return plane_sandwich_horizon(plane_unitize(self), other);
}

Line plane_reflect_line(Plane self, Line other) {
    return plane_sandwich_line(plane_unitize(self), other);
}

LineAtInfinity plane_reflect_lineAtInfinity(Plane self, LineAtInfinity other) {
    return plane_sandwich_lineAtInfinity(plane_unitize(self), other);
}

LineAtOrigin plane_reflect_lineAtOrigin(Plane self, LineAtOrigin other) {
    return plane_sandwich_lineAtOrigin(plane_unitize(self), other);
}

Motor plane_reflect_motor(Plane self, Motor other) {
    return plane_sandwich_motor(plane_unitize(self), other);
}

MultiVector plane_reflect_multiVector(Plane self, MultiVector other) {
    return plane_sandwich_multiVector(plane_unitize(self), other);
}

MultiVectorAtInfinity plane_reflect_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return plane_sandwich_multiVectorAtInfinity(plane_unitize(self), other);
}

MultiVectorAtOrigin plane_reflect_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return plane_sandwich_multiVectorAtOrigin(plane_unitize(self), other);
}

Origin plane_reflect_origin(Plane self, Origin other) {
    return plane_sandwich_origin(plane_unitize(self), other);
}

Plane plane_reflect_plane(Plane self, Plane other) {
    return plane_sandwich_plane(plane_unitize(self), other);
}

PlaneAtOrigin plane_reflect_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return plane_sandwich_planeAtOrigin(plane_unitize(self), other);
}

Point plane_reflect_point(Plane self, Point other) {
    return plane_sandwich_point(plane_unitize(self), other);
}

PointAtInfinity plane_reflect_pointAtInfinity(Plane self, PointAtInfinity other) {
    return plane_sandwich_pointAtInfinity(plane_unitize(self), other);
}

Rotor plane_reflect_rotor(Plane self, Rotor other) {
    return plane_sandwich_rotor(plane_unitize(self), other);
}

Transflector plane_reflect_transflector(Plane self, Transflector other) {
    return plane_sandwich_transflector(plane_unitize(self), other);
}

Translator plane_reflect_translator(Plane self, Translator other) {
    return plane_sandwich_translator(plane_unitize(self), other);
}

Flector rotor_rotate_flector(Rotor self, Flector other) {
    return rotor_sandwich_flector(self, other);
}

FlectorAtInfinity rotor_rotate_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return rotor_sandwich_flectorAtInfinity(self, other);
}

Horizon rotor_rotate_horizon(Rotor self, Horizon other) {
    return rotor_sandwich_horizon(self, other);
}

Line rotor_rotate_line(Rotor self, Line other) {
    return rotor_sandwich_line(self, other);
}

LineAtInfinity rotor_rotate_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return rotor_sandwich_lineAtInfinity(self, other);
}

LineAtOrigin rotor_rotate_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return rotor_sandwich_lineAtOrigin(self, other);
}

Motor rotor_rotate_motor(Rotor self, Motor other) {
    return rotor_sandwich_motor(self, other);
}

MultiVector rotor_rotate_multiVector(Rotor self, MultiVector other) {
    return rotor_sandwich_multiVector(self, other);
}

MultiVectorAtInfinity rotor_rotate_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return rotor_sandwich_multiVectorAtInfinity(self, other);
}

MultiVectorAtOrigin rotor_rotate_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return rotor_sandwich_multiVectorAtOrigin(self, other);
}

Origin rotor_rotate_origin(Rotor self, Origin other) {
    return rotor_sandwich_origin(self, other);
}

Plane rotor_rotate_plane(Rotor self, Plane other) {
    return rotor_sandwich_plane(self, other);
}

PlaneAtOrigin rotor_rotate_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return rotor_sandwich_planeAtOrigin(self, other);
}

Point rotor_rotate_point(Rotor self, Point other) {
    return rotor_sandwich_point(self, other);
}

PointAtInfinity rotor_rotate_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return rotor_sandwich_pointAtInfinity(self, other);
}

Rotor rotor_rotate_rotor(Rotor self, Rotor other) {
    return rotor_sandwich_rotor(self, other);
}

Transflector rotor_rotate_transflector(Rotor self, Transflector other) {
    return rotor_sandwich_transflector(self, other);
}

Translator rotor_rotate_translator(Rotor self, Translator other) {
    return rotor_sandwich_translator(self, other);
}

Flector transflector_transflect_flector(Transflector self, Flector other) {
    return transflector_sandwich_flector(self, other);
}

FlectorAtInfinity transflector_transflect_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return transflector_sandwich_flectorAtInfinity(self, other);
}

Horizon transflector_transflect_horizon(Transflector self, Horizon other) {
    return transflector_sandwich_horizon(self, other);
}

Line transflector_transflect_line(Transflector self, Line other) {
    return transflector_sandwich_line(self, other);
}

LineAtInfinity transflector_transflect_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return transflector_sandwich_lineAtInfinity(self, other);
}

LineAtOrigin transflector_transflect_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return transflector_sandwich_lineAtOrigin(self, other);
}

Motor transflector_transflect_motor(Transflector self, Motor other) {
    return transflector_sandwich_motor(self, other);
}

MultiVector transflector_transflect_multiVector(Transflector self, MultiVector other) {
    return transflector_sandwich_multiVector(self, other);
}

MultiVectorAtInfinity transflector_transflect_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return transflector_sandwich_multiVectorAtInfinity(self, other);
}

MultiVectorAtOrigin transflector_transflect_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return transflector_sandwich_multiVectorAtOrigin(self, other);
}

Origin transflector_transflect_origin(Transflector self, Origin other) {
    return transflector_sandwich_origin(self, other);
}

Plane transflector_transflect_plane(Transflector self, Plane other) {
    return transflector_sandwich_plane(self, other);
}

PlaneAtOrigin transflector_transflect_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return transflector_sandwich_planeAtOrigin(self, other);
}

Point transflector_transflect_point(Transflector self, Point other) {
    return transflector_sandwich_point(self, other);
}

PointAtInfinity transflector_transflect_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return transflector_sandwich_pointAtInfinity(self, other);
}

Rotor transflector_transflect_rotor(Transflector self, Rotor other) {
    return transflector_sandwich_rotor(self, other);
}

Transflector transflector_transflect_transflector(Transflector self, Transflector other) {
    return transflector_sandwich_transflector(self, other);
}

Translator transflector_transflect_translator(Transflector self, Translator other) {
    return transflector_sandwich_translator(self, other);
}

Flector translator_translate_flector(Translator self, Flector other) {
    return translator_sandwich_flector(self, other);
}

FlectorAtInfinity translator_translate_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return translator_sandwich_flectorAtInfinity(self, other);
}

Horizon translator_translate_horizon(Translator self, Horizon other) {
    return translator_sandwich_horizon(self, other);
}

Line translator_translate_line(Translator self, Line other) {
    return translator_sandwich_line(self, other);
}

LineAtInfinity translator_translate_lineAtInfinity(Translator self, LineAtInfinity other) {
    return translator_sandwich_lineAtInfinity(self, other);
}

Line translator_translate_lineAtOrigin(Translator self, LineAtOrigin other) {
    return translator_sandwich_lineAtOrigin(self, other);
}

Motor translator_translate_motor(Translator self, Motor other) {
    return translator_sandwich_motor(self, other);
}

MultiVector translator_translate_multiVector(Translator self, MultiVector other) {
    return translator_sandwich_multiVector(self, other);
}

MultiVectorAtInfinity translator_translate_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return translator_sandwich_multiVectorAtInfinity(self, other);
}

MultiVectorAtOrigin translator_translate_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return translator_sandwich_multiVectorAtOrigin(self, other);
}

Point translator_translate_origin(Translator self, Origin other) {
    return translator_sandwich_origin(self, other);
}

Plane translator_translate_plane(Translator self, Plane other) {
    return translator_sandwich_plane(self, other);
}

Plane translator_translate_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return translator_sandwich_planeAtOrigin(self, other);
}

Point translator_translate_point(Translator self, Point other) {
    return translator_sandwich_point(self, other);
}

PointAtInfinity translator_translate_pointAtInfinity(Translator self, PointAtInfinity other) {
    return translator_sandwich_pointAtInfinity(self, other);
}

Motor translator_translate_rotor(Translator self, Rotor other) {
    return translator_sandwich_rotor(self, other);
}

Transflector translator_translate_transflector(Translator self, Transflector other) {
    return translator_sandwich_transflector(self, other);
}

Translator translator_translate_translator(Translator self, Translator other) {
    return translator_sandwich_translator(self, other);
}

AntiScalar antiScalar_geometricAntiQuotient_antiScalar(AntiScalar self, AntiScalar other) {
    return antiScalar_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

DualNum antiScalar_geometricAntiQuotient_dualNum(AntiScalar self, DualNum other) {
    return antiScalar_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

Flector antiScalar_geometricAntiQuotient_flector(AntiScalar self, Flector other) {
    return antiScalar_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

Line antiScalar_geometricAntiQuotient_line(AntiScalar self, Line other) {
    return antiScalar_geometricAntiProduct_line(self, line_antiInverse(other));
}

LineAtOrigin antiScalar_geometricAntiQuotient_lineAtOrigin(AntiScalar self, LineAtOrigin other) {
    return antiScalar_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

Motor antiScalar_geometricAntiQuotient_motor(AntiScalar self, Motor other) {
    return antiScalar_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector antiScalar_geometricAntiQuotient_multiVector(AntiScalar self, MultiVector other) {
    return antiScalar_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtOrigin antiScalar_geometricAntiQuotient_multiVectorAtOrigin(AntiScalar self, MultiVectorAtOrigin other) {
    return antiScalar_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

Origin antiScalar_geometricAntiQuotient_origin(AntiScalar self, Origin other) {
    return antiScalar_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

Plane antiScalar_geometricAntiQuotient_plane(AntiScalar self, Plane other) {
    return antiScalar_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

PlaneAtOrigin antiScalar_geometricAntiQuotient_planeAtOrigin(AntiScalar self, PlaneAtOrigin other) {
    return antiScalar_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Point antiScalar_geometricAntiQuotient_point(AntiScalar self, Point other) {
    return antiScalar_geometricAntiProduct_point(self, point_antiInverse(other));
}

Rotor antiScalar_geometricAntiQuotient_rotor(AntiScalar self, Rotor other) {
    return antiScalar_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

Transflector antiScalar_geometricAntiQuotient_transflector(AntiScalar self, Transflector other) {
    return antiScalar_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Translator antiScalar_geometricAntiQuotient_translator(AntiScalar self, Translator other) {
    return antiScalar_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

DualNum dualNum_geometricAntiQuotient_antiScalar(DualNum self, AntiScalar other) {
    return dualNum_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

DualNum dualNum_geometricAntiQuotient_dualNum(DualNum self, DualNum other) {
    return dualNum_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

Flector dualNum_geometricAntiQuotient_flector(DualNum self, Flector other) {
    return dualNum_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

Line dualNum_geometricAntiQuotient_line(DualNum self, Line other) {
    return dualNum_geometricAntiProduct_line(self, line_antiInverse(other));
}

Line dualNum_geometricAntiQuotient_lineAtOrigin(DualNum self, LineAtOrigin other) {
    return dualNum_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVector dualNum_geometricAntiQuotient_motor(DualNum self, Motor other) {
    return dualNum_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector dualNum_geometricAntiQuotient_multiVector(DualNum self, MultiVector other) {
    return dualNum_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVector dualNum_geometricAntiQuotient_multiVectorAtOrigin(DualNum self, MultiVectorAtOrigin other) {
    return dualNum_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

Flector dualNum_geometricAntiQuotient_origin(DualNum self, Origin other) {
    return dualNum_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

Transflector dualNum_geometricAntiQuotient_plane(DualNum self, Plane other) {
    return dualNum_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

Transflector dualNum_geometricAntiQuotient_planeAtOrigin(DualNum self, PlaneAtOrigin other) {
    return dualNum_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Flector dualNum_geometricAntiQuotient_point(DualNum self, Point other) {
    return dualNum_geometricAntiProduct_point(self, point_antiInverse(other));
}

MultiVector dualNum_geometricAntiQuotient_rotor(DualNum self, Rotor other) {
    return dualNum_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

Transflector dualNum_geometricAntiQuotient_transflector(DualNum self, Transflector other) {
    return dualNum_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

MultiVector dualNum_geometricAntiQuotient_translator(DualNum self, Translator other) {
    return dualNum_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Flector flector_geometricAntiQuotient_antiScalar(Flector self, AntiScalar other) {
    return flector_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Flector flector_geometricAntiQuotient_dualNum(Flector self, DualNum other) {
    return flector_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVector flector_geometricAntiQuotient_flector(Flector self, Flector other) {
    return flector_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

Flector flector_geometricAntiQuotient_line(Flector self, Line other) {
    return flector_geometricAntiProduct_line(self, line_antiInverse(other));
}

Flector flector_geometricAntiQuotient_lineAtOrigin(Flector self, LineAtOrigin other) {
    return flector_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

Flector flector_geometricAntiQuotient_motor(Flector self, Motor other) {
    return flector_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector flector_geometricAntiQuotient_multiVector(Flector self, MultiVector other) {
    return flector_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVector flector_geometricAntiQuotient_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return flector_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

MultiVector flector_geometricAntiQuotient_origin(Flector self, Origin other) {
    return flector_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

MultiVector flector_geometricAntiQuotient_plane(Flector self, Plane other) {
    return flector_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

MultiVector flector_geometricAntiQuotient_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return flector_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

MultiVector flector_geometricAntiQuotient_point(Flector self, Point other) {
    return flector_geometricAntiProduct_point(self, point_antiInverse(other));
}

Flector flector_geometricAntiQuotient_rotor(Flector self, Rotor other) {
    return flector_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVector flector_geometricAntiQuotient_transflector(Flector self, Transflector other) {
    return flector_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Flector flector_geometricAntiQuotient_translator(Flector self, Translator other) {
    return flector_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiQuotient_antiScalar(FlectorAtInfinity self, AntiScalar other) {
    return flectorAtInfinity_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiQuotient_dualNum(FlectorAtInfinity self, DualNum other) {
    return flectorAtInfinity_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiQuotient_flector(FlectorAtInfinity self, Flector other) {
    return flectorAtInfinity_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiQuotient_line(FlectorAtInfinity self, Line other) {
    return flectorAtInfinity_geometricAntiProduct_line(self, line_antiInverse(other));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiQuotient_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return flectorAtInfinity_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiQuotient_motor(FlectorAtInfinity self, Motor other) {
    return flectorAtInfinity_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiQuotient_multiVector(FlectorAtInfinity self, MultiVector other) {
    return flectorAtInfinity_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiQuotient_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return flectorAtInfinity_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiQuotient_origin(FlectorAtInfinity self, Origin other) {
    return flectorAtInfinity_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiQuotient_plane(FlectorAtInfinity self, Plane other) {
    return flectorAtInfinity_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiQuotient_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return flectorAtInfinity_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiQuotient_point(FlectorAtInfinity self, Point other) {
    return flectorAtInfinity_geometricAntiProduct_point(self, point_antiInverse(other));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiQuotient_rotor(FlectorAtInfinity self, Rotor other) {
    return flectorAtInfinity_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricAntiQuotient_transflector(FlectorAtInfinity self, Transflector other) {
    return flectorAtInfinity_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

FlectorAtInfinity flectorAtInfinity_geometricAntiQuotient_translator(FlectorAtInfinity self, Translator other) {
    return flectorAtInfinity_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Horizon horizon_geometricAntiQuotient_antiScalar(Horizon self, AntiScalar other) {
    return horizon_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Horizon horizon_geometricAntiQuotient_dualNum(Horizon self, DualNum other) {
    return horizon_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVectorAtInfinity horizon_geometricAntiQuotient_flector(Horizon self, Flector other) {
    return horizon_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

PointAtInfinity horizon_geometricAntiQuotient_line(Horizon self, Line other) {
    return horizon_geometricAntiProduct_line(self, line_antiInverse(other));
}

PointAtInfinity horizon_geometricAntiQuotient_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return horizon_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

FlectorAtInfinity horizon_geometricAntiQuotient_motor(Horizon self, Motor other) {
    return horizon_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVectorAtInfinity horizon_geometricAntiQuotient_multiVector(Horizon self, MultiVector other) {
    return horizon_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtInfinity horizon_geometricAntiQuotient_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return horizon_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

Scalar horizon_geometricAntiQuotient_origin(Horizon self, Origin other) {
    return horizon_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

LineAtInfinity horizon_geometricAntiQuotient_plane(Horizon self, Plane other) {
    return horizon_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

LineAtInfinity horizon_geometricAntiQuotient_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return horizon_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Scalar horizon_geometricAntiQuotient_point(Horizon self, Point other) {
    return horizon_geometricAntiProduct_point(self, point_antiInverse(other));
}

FlectorAtInfinity horizon_geometricAntiQuotient_rotor(Horizon self, Rotor other) {
    return horizon_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

LineAtInfinity horizon_geometricAntiQuotient_transflector(Horizon self, Transflector other) {
    return horizon_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Horizon horizon_geometricAntiQuotient_translator(Horizon self, Translator other) {
    return horizon_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Line line_geometricAntiQuotient_antiScalar(Line self, AntiScalar other) {
    return line_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Line line_geometricAntiQuotient_dualNum(Line self, DualNum other) {
    return line_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

Flector line_geometricAntiQuotient_flector(Line self, Flector other) {
    return line_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

MultiVector line_geometricAntiQuotient_line(Line self, Line other) {
    return line_geometricAntiProduct_line(self, line_antiInverse(other));
}

MultiVector line_geometricAntiQuotient_lineAtOrigin(Line self, LineAtOrigin other) {
    return line_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVector line_geometricAntiQuotient_motor(Line self, Motor other) {
    return line_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector line_geometricAntiQuotient_multiVector(Line self, MultiVector other) {
    return line_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVector line_geometricAntiQuotient_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return line_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

Transflector line_geometricAntiQuotient_origin(Line self, Origin other) {
    return line_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

Flector line_geometricAntiQuotient_plane(Line self, Plane other) {
    return line_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

Flector line_geometricAntiQuotient_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return line_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Transflector line_geometricAntiQuotient_point(Line self, Point other) {
    return line_geometricAntiProduct_point(self, point_antiInverse(other));
}

MultiVector line_geometricAntiQuotient_rotor(Line self, Rotor other) {
    return line_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

Flector line_geometricAntiQuotient_transflector(Line self, Transflector other) {
    return line_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

MultiVector line_geometricAntiQuotient_translator(Line self, Translator other) {
    return line_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

LineAtInfinity lineAtInfinity_geometricAntiQuotient_antiScalar(LineAtInfinity self, AntiScalar other) {
    return lineAtInfinity_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

LineAtInfinity lineAtInfinity_geometricAntiQuotient_dualNum(LineAtInfinity self, DualNum other) {
    return lineAtInfinity_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

FlectorAtInfinity lineAtInfinity_geometricAntiQuotient_flector(LineAtInfinity self, Flector other) {
    return lineAtInfinity_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiQuotient_line(LineAtInfinity self, Line other) {
    return lineAtInfinity_geometricAntiProduct_line(self, line_antiInverse(other));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiQuotient_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return lineAtInfinity_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiQuotient_motor(LineAtInfinity self, Motor other) {
    return lineAtInfinity_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiQuotient_multiVector(LineAtInfinity self, MultiVector other) {
    return lineAtInfinity_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiQuotient_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return lineAtInfinity_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

PointAtInfinity lineAtInfinity_geometricAntiQuotient_origin(LineAtInfinity self, Origin other) {
    return lineAtInfinity_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

FlectorAtInfinity lineAtInfinity_geometricAntiQuotient_plane(LineAtInfinity self, Plane other) {
    return lineAtInfinity_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

FlectorAtInfinity lineAtInfinity_geometricAntiQuotient_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return lineAtInfinity_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

PointAtInfinity lineAtInfinity_geometricAntiQuotient_point(LineAtInfinity self, Point other) {
    return lineAtInfinity_geometricAntiProduct_point(self, point_antiInverse(other));
}

MultiVectorAtInfinity lineAtInfinity_geometricAntiQuotient_rotor(LineAtInfinity self, Rotor other) {
    return lineAtInfinity_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

FlectorAtInfinity lineAtInfinity_geometricAntiQuotient_transflector(LineAtInfinity self, Transflector other) {
    return lineAtInfinity_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

LineAtInfinity lineAtInfinity_geometricAntiQuotient_translator(LineAtInfinity self, Translator other) {
    return lineAtInfinity_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

LineAtOrigin lineAtOrigin_geometricAntiQuotient_antiScalar(LineAtOrigin self, AntiScalar other) {
    return lineAtOrigin_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Line lineAtOrigin_geometricAntiQuotient_dualNum(LineAtOrigin self, DualNum other) {
    return lineAtOrigin_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

Flector lineAtOrigin_geometricAntiQuotient_flector(LineAtOrigin self, Flector other) {
    return lineAtOrigin_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

MultiVector lineAtOrigin_geometricAntiQuotient_line(LineAtOrigin self, Line other) {
    return lineAtOrigin_geometricAntiProduct_line(self, line_antiInverse(other));
}

Rotor lineAtOrigin_geometricAntiQuotient_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return lineAtOrigin_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVector lineAtOrigin_geometricAntiQuotient_motor(LineAtOrigin self, Motor other) {
    return lineAtOrigin_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector lineAtOrigin_geometricAntiQuotient_multiVector(LineAtOrigin self, MultiVector other) {
    return lineAtOrigin_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtOrigin lineAtOrigin_geometricAntiQuotient_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return lineAtOrigin_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

PlaneAtOrigin lineAtOrigin_geometricAntiQuotient_origin(LineAtOrigin self, Origin other) {
    return lineAtOrigin_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

Flector lineAtOrigin_geometricAntiQuotient_plane(LineAtOrigin self, Plane other) {
    return lineAtOrigin_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

Flector lineAtOrigin_geometricAntiQuotient_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return lineAtOrigin_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Transflector lineAtOrigin_geometricAntiQuotient_point(LineAtOrigin self, Point other) {
    return lineAtOrigin_geometricAntiProduct_point(self, point_antiInverse(other));
}

Rotor lineAtOrigin_geometricAntiQuotient_rotor(LineAtOrigin self, Rotor other) {
    return lineAtOrigin_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

Flector lineAtOrigin_geometricAntiQuotient_transflector(LineAtOrigin self, Transflector other) {
    return lineAtOrigin_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

MultiVector lineAtOrigin_geometricAntiQuotient_translator(LineAtOrigin self, Translator other) {
    return lineAtOrigin_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Motor motor_geometricAntiQuotient_antiScalar(Motor self, AntiScalar other) {
    return motor_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

MultiVector motor_geometricAntiQuotient_dualNum(Motor self, DualNum other) {
    return motor_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

Flector motor_geometricAntiQuotient_flector(Motor self, Flector other) {
    return motor_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

MultiVector motor_geometricAntiQuotient_line(Motor self, Line other) {
    return motor_geometricAntiProduct_line(self, line_antiInverse(other));
}

MultiVector motor_geometricAntiQuotient_lineAtOrigin(Motor self, LineAtOrigin other) {
    return motor_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVector motor_geometricAntiQuotient_motor(Motor self, Motor other) {
    return motor_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector motor_geometricAntiQuotient_multiVector(Motor self, MultiVector other) {
    return motor_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVector motor_geometricAntiQuotient_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return motor_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

Flector motor_geometricAntiQuotient_origin(Motor self, Origin other) {
    return motor_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

Flector motor_geometricAntiQuotient_plane(Motor self, Plane other) {
    return motor_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

Flector motor_geometricAntiQuotient_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return motor_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Flector motor_geometricAntiQuotient_point(Motor self, Point other) {
    return motor_geometricAntiProduct_point(self, point_antiInverse(other));
}

MultiVector motor_geometricAntiQuotient_rotor(Motor self, Rotor other) {
    return motor_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

Flector motor_geometricAntiQuotient_transflector(Motor self, Transflector other) {
    return motor_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

MultiVector motor_geometricAntiQuotient_translator(Motor self, Translator other) {
    return motor_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_antiScalar(MultiVector self, AntiScalar other) {
    return multiVector_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_dualNum(MultiVector self, DualNum other) {
    return multiVector_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_flector(MultiVector self, Flector other) {
    return multiVector_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_line(MultiVector self, Line other) {
    return multiVector_geometricAntiProduct_line(self, line_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return multiVector_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_motor(MultiVector self, Motor other) {
    return multiVector_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_multiVector(MultiVector self, MultiVector other) {
    return multiVector_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return multiVector_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_origin(MultiVector self, Origin other) {
    return multiVector_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_plane(MultiVector self, Plane other) {
    return multiVector_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return multiVector_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_point(MultiVector self, Point other) {
    return multiVector_geometricAntiProduct_point(self, point_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_rotor(MultiVector self, Rotor other) {
    return multiVector_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_transflector(MultiVector self, Transflector other) {
    return multiVector_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

MultiVector multiVector_geometricAntiQuotient_translator(MultiVector self, Translator other) {
    return multiVector_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_antiScalar(MultiVectorAtInfinity self, AntiScalar other) {
    return multiVectorAtInfinity_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return multiVectorAtInfinity_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_flector(MultiVectorAtInfinity self, Flector other) {
    return multiVectorAtInfinity_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_line(MultiVectorAtInfinity self, Line other) {
    return multiVectorAtInfinity_geometricAntiProduct_line(self, line_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return multiVectorAtInfinity_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_motor(MultiVectorAtInfinity self, Motor other) {
    return multiVectorAtInfinity_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtInfinity_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_origin(MultiVectorAtInfinity self, Origin other) {
    return multiVectorAtInfinity_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_plane(MultiVectorAtInfinity self, Plane other) {
    return multiVectorAtInfinity_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return multiVectorAtInfinity_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_point(MultiVectorAtInfinity self, Point other) {
    return multiVectorAtInfinity_geometricAntiProduct_point(self, point_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_rotor(MultiVectorAtInfinity self, Rotor other) {
    return multiVectorAtInfinity_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_transflector(MultiVectorAtInfinity self, Transflector other) {
    return multiVectorAtInfinity_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricAntiQuotient_translator(MultiVectorAtInfinity self, Translator other) {
    return multiVectorAtInfinity_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiQuotient_antiScalar(MultiVectorAtOrigin self, AntiScalar other) {
    return multiVectorAtOrigin_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

MultiVector multiVectorAtOrigin_geometricAntiQuotient_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return multiVectorAtOrigin_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVector multiVectorAtOrigin_geometricAntiQuotient_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVectorAtOrigin_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

MultiVector multiVectorAtOrigin_geometricAntiQuotient_line(MultiVectorAtOrigin self, Line other) {
    return multiVectorAtOrigin_geometricAntiProduct_line(self, line_antiInverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiQuotient_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return multiVectorAtOrigin_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVector multiVectorAtOrigin_geometricAntiQuotient_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVectorAtOrigin_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector multiVectorAtOrigin_geometricAntiQuotient_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiQuotient_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiQuotient_origin(MultiVectorAtOrigin self, Origin other) {
    return multiVectorAtOrigin_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

MultiVector multiVectorAtOrigin_geometricAntiQuotient_plane(MultiVectorAtOrigin self, Plane other) {
    return multiVectorAtOrigin_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiQuotient_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return multiVectorAtOrigin_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

MultiVector multiVectorAtOrigin_geometricAntiQuotient_point(MultiVectorAtOrigin self, Point other) {
    return multiVectorAtOrigin_geometricAntiProduct_point(self, point_antiInverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricAntiQuotient_rotor(MultiVectorAtOrigin self, Rotor other) {
    return multiVectorAtOrigin_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVector multiVectorAtOrigin_geometricAntiQuotient_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVectorAtOrigin_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

MultiVector multiVectorAtOrigin_geometricAntiQuotient_translator(MultiVectorAtOrigin self, Translator other) {
    return multiVectorAtOrigin_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Origin origin_geometricAntiQuotient_antiScalar(Origin self, AntiScalar other) {
    return origin_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Flector origin_geometricAntiQuotient_dualNum(Origin self, DualNum other) {
    return origin_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVector origin_geometricAntiQuotient_flector(Origin self, Flector other) {
    return origin_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

Transflector origin_geometricAntiQuotient_line(Origin self, Line other) {
    return origin_geometricAntiProduct_line(self, line_antiInverse(other));
}

PlaneAtOrigin origin_geometricAntiQuotient_lineAtOrigin(Origin self, LineAtOrigin other) {
    return origin_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

Flector origin_geometricAntiQuotient_motor(Origin self, Motor other) {
    return origin_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector origin_geometricAntiQuotient_multiVector(Origin self, MultiVector other) {
    return origin_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtOrigin origin_geometricAntiQuotient_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return origin_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

AntiScalar origin_geometricAntiQuotient_origin(Origin self, Origin other) {
    return origin_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

MultiVector origin_geometricAntiQuotient_plane(Origin self, Plane other) {
    return origin_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

LineAtOrigin origin_geometricAntiQuotient_planeAtOrigin(Origin self, PlaneAtOrigin other) {
    return origin_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Translator origin_geometricAntiQuotient_point(Origin self, Point other) {
    return origin_geometricAntiProduct_point(self, point_antiInverse(other));
}

Flector origin_geometricAntiQuotient_rotor(Origin self, Rotor other) {
    return origin_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVector origin_geometricAntiQuotient_transflector(Origin self, Transflector other) {
    return origin_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Point origin_geometricAntiQuotient_translator(Origin self, Translator other) {
    return origin_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Plane plane_geometricAntiQuotient_antiScalar(Plane self, AntiScalar other) {
    return plane_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Transflector plane_geometricAntiQuotient_dualNum(Plane self, DualNum other) {
    return plane_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVector plane_geometricAntiQuotient_flector(Plane self, Flector other) {
    return plane_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

Flector plane_geometricAntiQuotient_line(Plane self, Line other) {
    return plane_geometricAntiProduct_line(self, line_antiInverse(other));
}

Flector plane_geometricAntiQuotient_lineAtOrigin(Plane self, LineAtOrigin other) {
    return plane_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

Flector plane_geometricAntiQuotient_motor(Plane self, Motor other) {
    return plane_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector plane_geometricAntiQuotient_multiVector(Plane self, MultiVector other) {
    return plane_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVector plane_geometricAntiQuotient_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return plane_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

MultiVector plane_geometricAntiQuotient_origin(Plane self, Origin other) {
    return plane_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

Motor plane_geometricAntiQuotient_plane(Plane self, Plane other) {
    return plane_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

Motor plane_geometricAntiQuotient_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return plane_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

MultiVector plane_geometricAntiQuotient_point(Plane self, Point other) {
    return plane_geometricAntiProduct_point(self, point_antiInverse(other));
}

Flector plane_geometricAntiQuotient_rotor(Plane self, Rotor other) {
    return plane_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVector plane_geometricAntiQuotient_transflector(Plane self, Transflector other) {
    return plane_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Transflector plane_geometricAntiQuotient_translator(Plane self, Translator other) {
    return plane_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

PlaneAtOrigin planeAtOrigin_geometricAntiQuotient_antiScalar(PlaneAtOrigin self, AntiScalar other) {
    return planeAtOrigin_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Transflector planeAtOrigin_geometricAntiQuotient_dualNum(PlaneAtOrigin self, DualNum other) {
    return planeAtOrigin_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVector planeAtOrigin_geometricAntiQuotient_flector(PlaneAtOrigin self, Flector other) {
    return planeAtOrigin_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

Flector planeAtOrigin_geometricAntiQuotient_line(PlaneAtOrigin self, Line other) {
    return planeAtOrigin_geometricAntiProduct_line(self, line_antiInverse(other));
}

Flector planeAtOrigin_geometricAntiQuotient_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return planeAtOrigin_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

Flector planeAtOrigin_geometricAntiQuotient_motor(PlaneAtOrigin self, Motor other) {
    return planeAtOrigin_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector planeAtOrigin_geometricAntiQuotient_multiVector(PlaneAtOrigin self, MultiVector other) {
    return planeAtOrigin_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtOrigin planeAtOrigin_geometricAntiQuotient_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return planeAtOrigin_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

LineAtOrigin planeAtOrigin_geometricAntiQuotient_origin(PlaneAtOrigin self, Origin other) {
    return planeAtOrigin_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

Motor planeAtOrigin_geometricAntiQuotient_plane(PlaneAtOrigin self, Plane other) {
    return planeAtOrigin_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

Rotor planeAtOrigin_geometricAntiQuotient_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return planeAtOrigin_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

MultiVector planeAtOrigin_geometricAntiQuotient_point(PlaneAtOrigin self, Point other) {
    return planeAtOrigin_geometricAntiProduct_point(self, point_antiInverse(other));
}

Flector planeAtOrigin_geometricAntiQuotient_rotor(PlaneAtOrigin self, Rotor other) {
    return planeAtOrigin_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVector planeAtOrigin_geometricAntiQuotient_transflector(PlaneAtOrigin self, Transflector other) {
    return planeAtOrigin_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Transflector planeAtOrigin_geometricAntiQuotient_translator(PlaneAtOrigin self, Translator other) {
    return planeAtOrigin_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Point point_geometricAntiQuotient_antiScalar(Point self, AntiScalar other) {
    return point_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Flector point_geometricAntiQuotient_dualNum(Point self, DualNum other) {
    return point_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVector point_geometricAntiQuotient_flector(Point self, Flector other) {
    return point_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

Transflector point_geometricAntiQuotient_line(Point self, Line other) {
    return point_geometricAntiProduct_line(self, line_antiInverse(other));
}

Transflector point_geometricAntiQuotient_lineAtOrigin(Point self, LineAtOrigin other) {
    return point_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

Flector point_geometricAntiQuotient_motor(Point self, Motor other) {
    return point_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector point_geometricAntiQuotient_multiVector(Point self, MultiVector other) {
    return point_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVector point_geometricAntiQuotient_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return point_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

Translator point_geometricAntiQuotient_origin(Point self, Origin other) {
    return point_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

MultiVector point_geometricAntiQuotient_plane(Point self, Plane other) {
    return point_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

MultiVector point_geometricAntiQuotient_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return point_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Translator point_geometricAntiQuotient_point(Point self, Point other) {
    return point_geometricAntiProduct_point(self, point_antiInverse(other));
}

Flector point_geometricAntiQuotient_rotor(Point self, Rotor other) {
    return point_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVector point_geometricAntiQuotient_transflector(Point self, Transflector other) {
    return point_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Point point_geometricAntiQuotient_translator(Point self, Translator other) {
    return point_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

PointAtInfinity pointAtInfinity_geometricAntiQuotient_antiScalar(PointAtInfinity self, AntiScalar other) {
    return pointAtInfinity_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

PointAtInfinity pointAtInfinity_geometricAntiQuotient_dualNum(PointAtInfinity self, DualNum other) {
    return pointAtInfinity_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiQuotient_flector(PointAtInfinity self, Flector other) {
    return pointAtInfinity_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

FlectorAtInfinity pointAtInfinity_geometricAntiQuotient_line(PointAtInfinity self, Line other) {
    return pointAtInfinity_geometricAntiProduct_line(self, line_antiInverse(other));
}

FlectorAtInfinity pointAtInfinity_geometricAntiQuotient_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return pointAtInfinity_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

FlectorAtInfinity pointAtInfinity_geometricAntiQuotient_motor(PointAtInfinity self, Motor other) {
    return pointAtInfinity_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiQuotient_multiVector(PointAtInfinity self, MultiVector other) {
    return pointAtInfinity_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiQuotient_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return pointAtInfinity_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

LineAtInfinity pointAtInfinity_geometricAntiQuotient_origin(PointAtInfinity self, Origin other) {
    return pointAtInfinity_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiQuotient_plane(PointAtInfinity self, Plane other) {
    return pointAtInfinity_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiQuotient_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return pointAtInfinity_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

LineAtInfinity pointAtInfinity_geometricAntiQuotient_point(PointAtInfinity self, Point other) {
    return pointAtInfinity_geometricAntiProduct_point(self, point_antiInverse(other));
}

FlectorAtInfinity pointAtInfinity_geometricAntiQuotient_rotor(PointAtInfinity self, Rotor other) {
    return pointAtInfinity_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVectorAtInfinity pointAtInfinity_geometricAntiQuotient_transflector(PointAtInfinity self, Transflector other) {
    return pointAtInfinity_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

PointAtInfinity pointAtInfinity_geometricAntiQuotient_translator(PointAtInfinity self, Translator other) {
    return pointAtInfinity_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Rotor rotor_geometricAntiQuotient_antiScalar(Rotor self, AntiScalar other) {
    return rotor_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

MultiVector rotor_geometricAntiQuotient_dualNum(Rotor self, DualNum other) {
    return rotor_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

Flector rotor_geometricAntiQuotient_flector(Rotor self, Flector other) {
    return rotor_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

MultiVector rotor_geometricAntiQuotient_line(Rotor self, Line other) {
    return rotor_geometricAntiProduct_line(self, line_antiInverse(other));
}

Rotor rotor_geometricAntiQuotient_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return rotor_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVector rotor_geometricAntiQuotient_motor(Rotor self, Motor other) {
    return rotor_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector rotor_geometricAntiQuotient_multiVector(Rotor self, MultiVector other) {
    return rotor_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtOrigin rotor_geometricAntiQuotient_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return rotor_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

Flector rotor_geometricAntiQuotient_origin(Rotor self, Origin other) {
    return rotor_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

Flector rotor_geometricAntiQuotient_plane(Rotor self, Plane other) {
    return rotor_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

Flector rotor_geometricAntiQuotient_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return rotor_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Flector rotor_geometricAntiQuotient_point(Rotor self, Point other) {
    return rotor_geometricAntiProduct_point(self, point_antiInverse(other));
}

Rotor rotor_geometricAntiQuotient_rotor(Rotor self, Rotor other) {
    return rotor_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

Flector rotor_geometricAntiQuotient_transflector(Rotor self, Transflector other) {
    return rotor_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

MultiVector rotor_geometricAntiQuotient_translator(Rotor self, Translator other) {
    return rotor_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Scalar scalar_geometricAntiQuotient_antiScalar(Scalar self, AntiScalar other) {
    return scalar_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Scalar scalar_geometricAntiQuotient_dualNum(Scalar self, DualNum other) {
    return scalar_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

FlectorAtInfinity scalar_geometricAntiQuotient_flector(Scalar self, Flector other) {
    return scalar_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

LineAtInfinity scalar_geometricAntiQuotient_line(Scalar self, Line other) {
    return scalar_geometricAntiProduct_line(self, line_antiInverse(other));
}

LineAtInfinity scalar_geometricAntiQuotient_lineAtOrigin(Scalar self, LineAtOrigin other) {
    return scalar_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVectorAtInfinity scalar_geometricAntiQuotient_motor(Scalar self, Motor other) {
    return scalar_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVectorAtInfinity scalar_geometricAntiQuotient_multiVector(Scalar self, MultiVector other) {
    return scalar_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVectorAtInfinity scalar_geometricAntiQuotient_multiVectorAtOrigin(Scalar self, MultiVectorAtOrigin other) {
    return scalar_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

Horizon scalar_geometricAntiQuotient_origin(Scalar self, Origin other) {
    return scalar_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

PointAtInfinity scalar_geometricAntiQuotient_plane(Scalar self, Plane other) {
    return scalar_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

PointAtInfinity scalar_geometricAntiQuotient_planeAtOrigin(Scalar self, PlaneAtOrigin other) {
    return scalar_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Horizon scalar_geometricAntiQuotient_point(Scalar self, Point other) {
    return scalar_geometricAntiProduct_point(self, point_antiInverse(other));
}

MultiVectorAtInfinity scalar_geometricAntiQuotient_rotor(Scalar self, Rotor other) {
    return scalar_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

PointAtInfinity scalar_geometricAntiQuotient_transflector(Scalar self, Transflector other) {
    return scalar_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Scalar scalar_geometricAntiQuotient_translator(Scalar self, Translator other) {
    return scalar_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Transflector transflector_geometricAntiQuotient_antiScalar(Transflector self, AntiScalar other) {
    return transflector_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

Transflector transflector_geometricAntiQuotient_dualNum(Transflector self, DualNum other) {
    return transflector_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

MultiVector transflector_geometricAntiQuotient_flector(Transflector self, Flector other) {
    return transflector_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

Flector transflector_geometricAntiQuotient_line(Transflector self, Line other) {
    return transflector_geometricAntiProduct_line(self, line_antiInverse(other));
}

Flector transflector_geometricAntiQuotient_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return transflector_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

Flector transflector_geometricAntiQuotient_motor(Transflector self, Motor other) {
    return transflector_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector transflector_geometricAntiQuotient_multiVector(Transflector self, MultiVector other) {
    return transflector_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVector transflector_geometricAntiQuotient_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return transflector_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

MultiVector transflector_geometricAntiQuotient_origin(Transflector self, Origin other) {
    return transflector_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

MultiVector transflector_geometricAntiQuotient_plane(Transflector self, Plane other) {
    return transflector_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

MultiVector transflector_geometricAntiQuotient_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return transflector_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

MultiVector transflector_geometricAntiQuotient_point(Transflector self, Point other) {
    return transflector_geometricAntiProduct_point(self, point_antiInverse(other));
}

Flector transflector_geometricAntiQuotient_rotor(Transflector self, Rotor other) {
    return transflector_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

MultiVector transflector_geometricAntiQuotient_transflector(Transflector self, Transflector other) {
    return transflector_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Transflector transflector_geometricAntiQuotient_translator(Transflector self, Translator other) {
    return transflector_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

Translator translator_geometricAntiQuotient_antiScalar(Translator self, AntiScalar other) {
    return translator_geometricAntiProduct_antiScalar(self, antiScalar_antiInverse(other));
}

MultiVector translator_geometricAntiQuotient_dualNum(Translator self, DualNum other) {
    return translator_geometricAntiProduct_dualNum(self, dualNum_antiInverse(other));
}

Flector translator_geometricAntiQuotient_flector(Translator self, Flector other) {
    return translator_geometricAntiProduct_flector(self, flector_antiInverse(other));
}

MultiVector translator_geometricAntiQuotient_line(Translator self, Line other) {
    return translator_geometricAntiProduct_line(self, line_antiInverse(other));
}

MultiVector translator_geometricAntiQuotient_lineAtOrigin(Translator self, LineAtOrigin other) {
    return translator_geometricAntiProduct_lineAtOrigin(self, lineAtOrigin_antiInverse(other));
}

MultiVector translator_geometricAntiQuotient_motor(Translator self, Motor other) {
    return translator_geometricAntiProduct_motor(self, motor_antiInverse(other));
}

MultiVector translator_geometricAntiQuotient_multiVector(Translator self, MultiVector other) {
    return translator_geometricAntiProduct_multiVector(self, multiVector_antiInverse(other));
}

MultiVector translator_geometricAntiQuotient_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return translator_geometricAntiProduct_multiVectorAtOrigin(self, multiVectorAtOrigin_antiInverse(other));
}

Point translator_geometricAntiQuotient_origin(Translator self, Origin other) {
    return translator_geometricAntiProduct_origin(self, origin_antiInverse(other));
}

Transflector translator_geometricAntiQuotient_plane(Translator self, Plane other) {
    return translator_geometricAntiProduct_plane(self, plane_antiInverse(other));
}

Transflector translator_geometricAntiQuotient_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return translator_geometricAntiProduct_planeAtOrigin(self, planeAtOrigin_antiInverse(other));
}

Point translator_geometricAntiQuotient_point(Translator self, Point other) {
    return translator_geometricAntiProduct_point(self, point_antiInverse(other));
}

MultiVector translator_geometricAntiQuotient_rotor(Translator self, Rotor other) {
    return translator_geometricAntiProduct_rotor(self, rotor_antiInverse(other));
}

Transflector translator_geometricAntiQuotient_transflector(Translator self, Transflector other) {
    return translator_geometricAntiProduct_transflector(self, transflector_antiInverse(other));
}

Translator translator_geometricAntiQuotient_translator(Translator self, Translator other) {
    return translator_geometricAntiProduct_translator(self, translator_antiInverse(other));
}

AntiScalar antiScalar_geometricQuotient_dualNum(AntiScalar self, DualNum other) {
    return antiScalar_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Flector antiScalar_geometricQuotient_flector(AntiScalar self, Flector other) {
    return antiScalar_geometricProduct_flector(self, flector_inverse(other));
}

Flector antiScalar_geometricQuotient_flectorAtInfinity(AntiScalar self, FlectorAtInfinity other) {
    return antiScalar_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

Origin antiScalar_geometricQuotient_horizon(AntiScalar self, Horizon other) {
    return antiScalar_geometricProduct_horizon(self, horizon_inverse(other));
}

LineAtOrigin antiScalar_geometricQuotient_line(AntiScalar self, Line other) {
    return antiScalar_geometricProduct_line(self, line_inverse(other));
}

LineAtOrigin antiScalar_geometricQuotient_lineAtInfinity(AntiScalar self, LineAtInfinity other) {
    return antiScalar_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

LineAtOrigin antiScalar_geometricQuotient_motor(AntiScalar self, Motor other) {
    return antiScalar_geometricProduct_motor(self, motor_inverse(other));
}

MultiVectorAtOrigin antiScalar_geometricQuotient_multiVector(AntiScalar self, MultiVector other) {
    return antiScalar_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtOrigin antiScalar_geometricQuotient_multiVectorAtInfinity(AntiScalar self, MultiVectorAtInfinity other) {
    return antiScalar_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Origin antiScalar_geometricQuotient_plane(AntiScalar self, Plane other) {
    return antiScalar_geometricProduct_plane(self, plane_inverse(other));
}

PlaneAtOrigin antiScalar_geometricQuotient_point(AntiScalar self, Point other) {
    return antiScalar_geometricProduct_point(self, point_inverse(other));
}

PlaneAtOrigin antiScalar_geometricQuotient_pointAtInfinity(AntiScalar self, PointAtInfinity other) {
    return antiScalar_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

AntiScalar antiScalar_geometricQuotient_scalar(AntiScalar self, Scalar other) {
    return antiScalar_geometricProduct_scalar(self, scalar_inverse(other));
}

Flector antiScalar_geometricQuotient_transflector(AntiScalar self, Transflector other) {
    return antiScalar_geometricProduct_transflector(self, transflector_inverse(other));
}

LineAtOrigin antiScalar_geometricQuotient_translator(AntiScalar self, Translator other) {
    return antiScalar_geometricProduct_translator(self, translator_inverse(other));
}

DualNum dualNum_geometricQuotient_dualNum(DualNum self, DualNum other) {
    return dualNum_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Flector dualNum_geometricQuotient_flector(DualNum self, Flector other) {
    return dualNum_geometricProduct_flector(self, flector_inverse(other));
}

Flector dualNum_geometricQuotient_flectorAtInfinity(DualNum self, FlectorAtInfinity other) {
    return dualNum_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

Flector dualNum_geometricQuotient_horizon(DualNum self, Horizon other) {
    return dualNum_geometricProduct_horizon(self, horizon_inverse(other));
}

Line dualNum_geometricQuotient_line(DualNum self, Line other) {
    return dualNum_geometricProduct_line(self, line_inverse(other));
}

Line dualNum_geometricQuotient_lineAtInfinity(DualNum self, LineAtInfinity other) {
    return dualNum_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Motor dualNum_geometricQuotient_motor(DualNum self, Motor other) {
    return dualNum_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector dualNum_geometricQuotient_multiVector(DualNum self, MultiVector other) {
    return dualNum_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVector dualNum_geometricQuotient_multiVectorAtInfinity(DualNum self, MultiVectorAtInfinity other) {
    return dualNum_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Flector dualNum_geometricQuotient_plane(DualNum self, Plane other) {
    return dualNum_geometricProduct_plane(self, plane_inverse(other));
}

Flector dualNum_geometricQuotient_point(DualNum self, Point other) {
    return dualNum_geometricProduct_point(self, point_inverse(other));
}

Transflector dualNum_geometricQuotient_pointAtInfinity(DualNum self, PointAtInfinity other) {
    return dualNum_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

DualNum dualNum_geometricQuotient_scalar(DualNum self, Scalar other) {
    return dualNum_geometricProduct_scalar(self, scalar_inverse(other));
}

Flector dualNum_geometricQuotient_transflector(DualNum self, Transflector other) {
    return dualNum_geometricProduct_transflector(self, transflector_inverse(other));
}

Motor dualNum_geometricQuotient_translator(DualNum self, Translator other) {
    return dualNum_geometricProduct_translator(self, translator_inverse(other));
}

Flector flector_geometricQuotient_dualNum(Flector self, DualNum other) {
    return flector_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVector flector_geometricQuotient_flector(Flector self, Flector other) {
    return flector_geometricProduct_flector(self, flector_inverse(other));
}

MultiVector flector_geometricQuotient_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return flector_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

MultiVector flector_geometricQuotient_horizon(Flector self, Horizon other) {
    return flector_geometricProduct_horizon(self, horizon_inverse(other));
}

Flector flector_geometricQuotient_line(Flector self, Line other) {
    return flector_geometricProduct_line(self, line_inverse(other));
}

Flector flector_geometricQuotient_lineAtInfinity(Flector self, LineAtInfinity other) {
    return flector_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Flector flector_geometricQuotient_motor(Flector self, Motor other) {
    return flector_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector flector_geometricQuotient_multiVector(Flector self, MultiVector other) {
    return flector_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVector flector_geometricQuotient_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return flector_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

MultiVector flector_geometricQuotient_plane(Flector self, Plane other) {
    return flector_geometricProduct_plane(self, plane_inverse(other));
}

MultiVector flector_geometricQuotient_point(Flector self, Point other) {
    return flector_geometricProduct_point(self, point_inverse(other));
}

MultiVector flector_geometricQuotient_pointAtInfinity(Flector self, PointAtInfinity other) {
    return flector_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Flector flector_geometricQuotient_scalar(Flector self, Scalar other) {
    return flector_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVector flector_geometricQuotient_transflector(Flector self, Transflector other) {
    return flector_geometricProduct_transflector(self, transflector_inverse(other));
}

Flector flector_geometricQuotient_translator(Flector self, Translator other) {
    return flector_geometricProduct_translator(self, translator_inverse(other));
}

Flector flectorAtInfinity_geometricQuotient_dualNum(FlectorAtInfinity self, DualNum other) {
    return flectorAtInfinity_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVector flectorAtInfinity_geometricQuotient_flector(FlectorAtInfinity self, Flector other) {
    return flectorAtInfinity_geometricProduct_flector(self, flector_inverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricQuotient_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricQuotient_horizon(FlectorAtInfinity self, Horizon other) {
    return flectorAtInfinity_geometricProduct_horizon(self, horizon_inverse(other));
}

Flector flectorAtInfinity_geometricQuotient_line(FlectorAtInfinity self, Line other) {
    return flectorAtInfinity_geometricProduct_line(self, line_inverse(other));
}

FlectorAtInfinity flectorAtInfinity_geometricQuotient_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return flectorAtInfinity_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Flector flectorAtInfinity_geometricQuotient_motor(FlectorAtInfinity self, Motor other) {
    return flectorAtInfinity_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector flectorAtInfinity_geometricQuotient_multiVector(FlectorAtInfinity self, MultiVector other) {
    return flectorAtInfinity_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricQuotient_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return flectorAtInfinity_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

MultiVector flectorAtInfinity_geometricQuotient_plane(FlectorAtInfinity self, Plane other) {
    return flectorAtInfinity_geometricProduct_plane(self, plane_inverse(other));
}

MultiVector flectorAtInfinity_geometricQuotient_point(FlectorAtInfinity self, Point other) {
    return flectorAtInfinity_geometricProduct_point(self, point_inverse(other));
}

MultiVectorAtInfinity flectorAtInfinity_geometricQuotient_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return flectorAtInfinity_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

FlectorAtInfinity flectorAtInfinity_geometricQuotient_scalar(FlectorAtInfinity self, Scalar other) {
    return flectorAtInfinity_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVector flectorAtInfinity_geometricQuotient_transflector(FlectorAtInfinity self, Transflector other) {
    return flectorAtInfinity_geometricProduct_transflector(self, transflector_inverse(other));
}

Flector flectorAtInfinity_geometricQuotient_translator(FlectorAtInfinity self, Translator other) {
    return flectorAtInfinity_geometricProduct_translator(self, translator_inverse(other));
}

Flector horizon_geometricQuotient_dualNum(Horizon self, DualNum other) {
    return horizon_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVector horizon_geometricQuotient_flector(Horizon self, Flector other) {
    return horizon_geometricProduct_flector(self, flector_inverse(other));
}

MultiVectorAtInfinity horizon_geometricQuotient_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return horizon_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

Scalar horizon_geometricQuotient_horizon(Horizon self, Horizon other) {
    return horizon_geometricProduct_horizon(self, horizon_inverse(other));
}

Transflector horizon_geometricQuotient_line(Horizon self, Line other) {
    return horizon_geometricProduct_line(self, line_inverse(other));
}

PointAtInfinity horizon_geometricQuotient_lineAtInfinity(Horizon self, LineAtInfinity other) {
    return horizon_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Flector horizon_geometricQuotient_motor(Horizon self, Motor other) {
    return horizon_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector horizon_geometricQuotient_multiVector(Horizon self, MultiVector other) {
    return horizon_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtInfinity horizon_geometricQuotient_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return horizon_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

MultiVector horizon_geometricQuotient_plane(Horizon self, Plane other) {
    return horizon_geometricProduct_plane(self, plane_inverse(other));
}

Translator horizon_geometricQuotient_point(Horizon self, Point other) {
    return horizon_geometricProduct_point(self, point_inverse(other));
}

LineAtInfinity horizon_geometricQuotient_pointAtInfinity(Horizon self, PointAtInfinity other) {
    return horizon_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Horizon horizon_geometricQuotient_scalar(Horizon self, Scalar other) {
    return horizon_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVector horizon_geometricQuotient_transflector(Horizon self, Transflector other) {
    return horizon_geometricProduct_transflector(self, transflector_inverse(other));
}

Point horizon_geometricQuotient_translator(Horizon self, Translator other) {
    return horizon_geometricProduct_translator(self, translator_inverse(other));
}

Line line_geometricQuotient_dualNum(Line self, DualNum other) {
    return line_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Flector line_geometricQuotient_flector(Line self, Flector other) {
    return line_geometricProduct_flector(self, flector_inverse(other));
}

Flector line_geometricQuotient_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return line_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

Transflector line_geometricQuotient_horizon(Line self, Horizon other) {
    return line_geometricProduct_horizon(self, horizon_inverse(other));
}

MultiVector line_geometricQuotient_line(Line self, Line other) {
    return line_geometricProduct_line(self, line_inverse(other));
}

MultiVector line_geometricQuotient_lineAtInfinity(Line self, LineAtInfinity other) {
    return line_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

MultiVector line_geometricQuotient_motor(Line self, Motor other) {
    return line_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector line_geometricQuotient_multiVector(Line self, MultiVector other) {
    return line_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVector line_geometricQuotient_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return line_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Flector line_geometricQuotient_plane(Line self, Plane other) {
    return line_geometricProduct_plane(self, plane_inverse(other));
}

Flector line_geometricQuotient_point(Line self, Point other) {
    return line_geometricProduct_point(self, point_inverse(other));
}

Flector line_geometricQuotient_pointAtInfinity(Line self, PointAtInfinity other) {
    return line_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Line line_geometricQuotient_scalar(Line self, Scalar other) {
    return line_geometricProduct_scalar(self, scalar_inverse(other));
}

Flector line_geometricQuotient_transflector(Line self, Transflector other) {
    return line_geometricProduct_transflector(self, transflector_inverse(other));
}

MultiVector line_geometricQuotient_translator(Line self, Translator other) {
    return line_geometricProduct_translator(self, translator_inverse(other));
}

Line lineAtInfinity_geometricQuotient_dualNum(LineAtInfinity self, DualNum other) {
    return lineAtInfinity_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Flector lineAtInfinity_geometricQuotient_flector(LineAtInfinity self, Flector other) {
    return lineAtInfinity_geometricProduct_flector(self, flector_inverse(other));
}

FlectorAtInfinity lineAtInfinity_geometricQuotient_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return lineAtInfinity_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

PointAtInfinity lineAtInfinity_geometricQuotient_horizon(LineAtInfinity self, Horizon other) {
    return lineAtInfinity_geometricProduct_horizon(self, horizon_inverse(other));
}

MultiVector lineAtInfinity_geometricQuotient_line(LineAtInfinity self, Line other) {
    return lineAtInfinity_geometricProduct_line(self, line_inverse(other));
}

MultiVectorAtInfinity lineAtInfinity_geometricQuotient_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

MultiVector lineAtInfinity_geometricQuotient_motor(LineAtInfinity self, Motor other) {
    return lineAtInfinity_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector lineAtInfinity_geometricQuotient_multiVector(LineAtInfinity self, MultiVector other) {
    return lineAtInfinity_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtInfinity lineAtInfinity_geometricQuotient_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return lineAtInfinity_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Flector lineAtInfinity_geometricQuotient_plane(LineAtInfinity self, Plane other) {
    return lineAtInfinity_geometricProduct_plane(self, plane_inverse(other));
}

Transflector lineAtInfinity_geometricQuotient_point(LineAtInfinity self, Point other) {
    return lineAtInfinity_geometricProduct_point(self, point_inverse(other));
}

FlectorAtInfinity lineAtInfinity_geometricQuotient_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return lineAtInfinity_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

LineAtInfinity lineAtInfinity_geometricQuotient_scalar(LineAtInfinity self, Scalar other) {
    return lineAtInfinity_geometricProduct_scalar(self, scalar_inverse(other));
}

Flector lineAtInfinity_geometricQuotient_transflector(LineAtInfinity self, Transflector other) {
    return lineAtInfinity_geometricProduct_transflector(self, transflector_inverse(other));
}

MultiVector lineAtInfinity_geometricQuotient_translator(LineAtInfinity self, Translator other) {
    return lineAtInfinity_geometricProduct_translator(self, translator_inverse(other));
}

LineAtOrigin lineAtOrigin_geometricQuotient_dualNum(LineAtOrigin self, DualNum other) {
    return lineAtOrigin_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Flector lineAtOrigin_geometricQuotient_flector(LineAtOrigin self, Flector other) {
    return lineAtOrigin_geometricProduct_flector(self, flector_inverse(other));
}

Flector lineAtOrigin_geometricQuotient_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return lineAtOrigin_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

PlaneAtOrigin lineAtOrigin_geometricQuotient_horizon(LineAtOrigin self, Horizon other) {
    return lineAtOrigin_geometricProduct_horizon(self, horizon_inverse(other));
}

Rotor lineAtOrigin_geometricQuotient_line(LineAtOrigin self, Line other) {
    return lineAtOrigin_geometricProduct_line(self, line_inverse(other));
}

Rotor lineAtOrigin_geometricQuotient_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return lineAtOrigin_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Rotor lineAtOrigin_geometricQuotient_motor(LineAtOrigin self, Motor other) {
    return lineAtOrigin_geometricProduct_motor(self, motor_inverse(other));
}

MultiVectorAtOrigin lineAtOrigin_geometricQuotient_multiVector(LineAtOrigin self, MultiVector other) {
    return lineAtOrigin_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtOrigin lineAtOrigin_geometricQuotient_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return lineAtOrigin_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

PlaneAtOrigin lineAtOrigin_geometricQuotient_plane(LineAtOrigin self, Plane other) {
    return lineAtOrigin_geometricProduct_plane(self, plane_inverse(other));
}

Flector lineAtOrigin_geometricQuotient_point(LineAtOrigin self, Point other) {
    return lineAtOrigin_geometricProduct_point(self, point_inverse(other));
}

Flector lineAtOrigin_geometricQuotient_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return lineAtOrigin_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

LineAtOrigin lineAtOrigin_geometricQuotient_scalar(LineAtOrigin self, Scalar other) {
    return lineAtOrigin_geometricProduct_scalar(self, scalar_inverse(other));
}

Flector lineAtOrigin_geometricQuotient_transflector(LineAtOrigin self, Transflector other) {
    return lineAtOrigin_geometricProduct_transflector(self, transflector_inverse(other));
}

Rotor lineAtOrigin_geometricQuotient_translator(LineAtOrigin self, Translator other) {
    return lineAtOrigin_geometricProduct_translator(self, translator_inverse(other));
}

Motor motor_geometricQuotient_dualNum(Motor self, DualNum other) {
    return motor_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Flector motor_geometricQuotient_flector(Motor self, Flector other) {
    return motor_geometricProduct_flector(self, flector_inverse(other));
}

Flector motor_geometricQuotient_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return motor_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

Flector motor_geometricQuotient_horizon(Motor self, Horizon other) {
    return motor_geometricProduct_horizon(self, horizon_inverse(other));
}

MultiVector motor_geometricQuotient_line(Motor self, Line other) {
    return motor_geometricProduct_line(self, line_inverse(other));
}

MultiVector motor_geometricQuotient_lineAtInfinity(Motor self, LineAtInfinity other) {
    return motor_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

MultiVector motor_geometricQuotient_motor(Motor self, Motor other) {
    return motor_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector motor_geometricQuotient_multiVector(Motor self, MultiVector other) {
    return motor_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVector motor_geometricQuotient_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return motor_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Flector motor_geometricQuotient_plane(Motor self, Plane other) {
    return motor_geometricProduct_plane(self, plane_inverse(other));
}

Flector motor_geometricQuotient_point(Motor self, Point other) {
    return motor_geometricProduct_point(self, point_inverse(other));
}

Flector motor_geometricQuotient_pointAtInfinity(Motor self, PointAtInfinity other) {
    return motor_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Motor motor_geometricQuotient_scalar(Motor self, Scalar other) {
    return motor_geometricProduct_scalar(self, scalar_inverse(other));
}

Flector motor_geometricQuotient_transflector(Motor self, Transflector other) {
    return motor_geometricProduct_transflector(self, transflector_inverse(other));
}

MultiVector motor_geometricQuotient_translator(Motor self, Translator other) {
    return motor_geometricProduct_translator(self, translator_inverse(other));
}

MultiVector multiVector_geometricQuotient_dualNum(MultiVector self, DualNum other) {
    return multiVector_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVector multiVector_geometricQuotient_flector(MultiVector self, Flector other) {
    return multiVector_geometricProduct_flector(self, flector_inverse(other));
}

MultiVector multiVector_geometricQuotient_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return multiVector_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

MultiVector multiVector_geometricQuotient_horizon(MultiVector self, Horizon other) {
    return multiVector_geometricProduct_horizon(self, horizon_inverse(other));
}

MultiVector multiVector_geometricQuotient_line(MultiVector self, Line other) {
    return multiVector_geometricProduct_line(self, line_inverse(other));
}

MultiVector multiVector_geometricQuotient_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return multiVector_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

MultiVector multiVector_geometricQuotient_motor(MultiVector self, Motor other) {
    return multiVector_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector multiVector_geometricQuotient_multiVector(MultiVector self, MultiVector other) {
    return multiVector_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVector multiVector_geometricQuotient_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return multiVector_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

MultiVector multiVector_geometricQuotient_plane(MultiVector self, Plane other) {
    return multiVector_geometricProduct_plane(self, plane_inverse(other));
}

MultiVector multiVector_geometricQuotient_point(MultiVector self, Point other) {
    return multiVector_geometricProduct_point(self, point_inverse(other));
}

MultiVector multiVector_geometricQuotient_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return multiVector_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

MultiVector multiVector_geometricQuotient_scalar(MultiVector self, Scalar other) {
    return multiVector_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVector multiVector_geometricQuotient_transflector(MultiVector self, Transflector other) {
    return multiVector_geometricProduct_transflector(self, transflector_inverse(other));
}

MultiVector multiVector_geometricQuotient_translator(MultiVector self, Translator other) {
    return multiVector_geometricProduct_translator(self, translator_inverse(other));
}

MultiVector multiVectorAtInfinity_geometricQuotient_dualNum(MultiVectorAtInfinity self, DualNum other) {
    return multiVectorAtInfinity_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVector multiVectorAtInfinity_geometricQuotient_flector(MultiVectorAtInfinity self, Flector other) {
    return multiVectorAtInfinity_geometricProduct_flector(self, flector_inverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricQuotient_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricQuotient_horizon(MultiVectorAtInfinity self, Horizon other) {
    return multiVectorAtInfinity_geometricProduct_horizon(self, horizon_inverse(other));
}

MultiVector multiVectorAtInfinity_geometricQuotient_line(MultiVectorAtInfinity self, Line other) {
    return multiVectorAtInfinity_geometricProduct_line(self, line_inverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricQuotient_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return multiVectorAtInfinity_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

MultiVector multiVectorAtInfinity_geometricQuotient_motor(MultiVectorAtInfinity self, Motor other) {
    return multiVectorAtInfinity_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector multiVectorAtInfinity_geometricQuotient_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricQuotient_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

MultiVector multiVectorAtInfinity_geometricQuotient_plane(MultiVectorAtInfinity self, Plane other) {
    return multiVectorAtInfinity_geometricProduct_plane(self, plane_inverse(other));
}

MultiVector multiVectorAtInfinity_geometricQuotient_point(MultiVectorAtInfinity self, Point other) {
    return multiVectorAtInfinity_geometricProduct_point(self, point_inverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricQuotient_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return multiVectorAtInfinity_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_geometricQuotient_scalar(MultiVectorAtInfinity self, Scalar other) {
    return multiVectorAtInfinity_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVector multiVectorAtInfinity_geometricQuotient_transflector(MultiVectorAtInfinity self, Transflector other) {
    return multiVectorAtInfinity_geometricProduct_transflector(self, transflector_inverse(other));
}

MultiVector multiVectorAtInfinity_geometricQuotient_translator(MultiVectorAtInfinity self, Translator other) {
    return multiVectorAtInfinity_geometricProduct_translator(self, translator_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_dualNum(MultiVectorAtOrigin self, DualNum other) {
    return multiVectorAtOrigin_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVectorAtOrigin_geometricProduct_flector(self, flector_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multiVectorAtOrigin_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_horizon(MultiVectorAtOrigin self, Horizon other) {
    return multiVectorAtOrigin_geometricProduct_horizon(self, horizon_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_line(MultiVectorAtOrigin self, Line other) {
    return multiVectorAtOrigin_geometricProduct_line(self, line_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return multiVectorAtOrigin_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVectorAtOrigin_geometricProduct_motor(self, motor_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtOrigin_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_plane(MultiVectorAtOrigin self, Plane other) {
    return multiVectorAtOrigin_geometricProduct_plane(self, plane_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_point(MultiVectorAtOrigin self, Point other) {
    return multiVectorAtOrigin_geometricProduct_point(self, point_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return multiVectorAtOrigin_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_scalar(MultiVectorAtOrigin self, Scalar other) {
    return multiVectorAtOrigin_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVectorAtOrigin_geometricProduct_transflector(self, transflector_inverse(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_geometricQuotient_translator(MultiVectorAtOrigin self, Translator other) {
    return multiVectorAtOrigin_geometricProduct_translator(self, translator_inverse(other));
}

Origin origin_geometricQuotient_dualNum(Origin self, DualNum other) {
    return origin_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Rotor origin_geometricQuotient_flector(Origin self, Flector other) {
    return origin_geometricProduct_flector(self, flector_inverse(other));
}

Rotor origin_geometricQuotient_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return origin_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

AntiScalar origin_geometricQuotient_horizon(Origin self, Horizon other) {
    return origin_geometricProduct_horizon(self, horizon_inverse(other));
}

PlaneAtOrigin origin_geometricQuotient_line(Origin self, Line other) {
    return origin_geometricProduct_line(self, line_inverse(other));
}

PlaneAtOrigin origin_geometricQuotient_lineAtInfinity(Origin self, LineAtInfinity other) {
    return origin_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

PlaneAtOrigin origin_geometricQuotient_motor(Origin self, Motor other) {
    return origin_geometricProduct_motor(self, motor_inverse(other));
}

MultiVectorAtOrigin origin_geometricQuotient_multiVector(Origin self, MultiVector other) {
    return origin_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtOrigin origin_geometricQuotient_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return origin_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

AntiScalar origin_geometricQuotient_plane(Origin self, Plane other) {
    return origin_geometricProduct_plane(self, plane_inverse(other));
}

LineAtOrigin origin_geometricQuotient_point(Origin self, Point other) {
    return origin_geometricProduct_point(self, point_inverse(other));
}

LineAtOrigin origin_geometricQuotient_pointAtInfinity(Origin self, PointAtInfinity other) {
    return origin_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Origin origin_geometricQuotient_scalar(Origin self, Scalar other) {
    return origin_geometricProduct_scalar(self, scalar_inverse(other));
}

Rotor origin_geometricQuotient_transflector(Origin self, Transflector other) {
    return origin_geometricProduct_transflector(self, transflector_inverse(other));
}

PlaneAtOrigin origin_geometricQuotient_translator(Origin self, Translator other) {
    return origin_geometricProduct_translator(self, translator_inverse(other));
}

Flector plane_geometricQuotient_dualNum(Plane self, DualNum other) {
    return plane_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVector plane_geometricQuotient_flector(Plane self, Flector other) {
    return plane_geometricProduct_flector(self, flector_inverse(other));
}

MultiVector plane_geometricQuotient_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return plane_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

MultiVector plane_geometricQuotient_horizon(Plane self, Horizon other) {
    return plane_geometricProduct_horizon(self, horizon_inverse(other));
}

Flector plane_geometricQuotient_line(Plane self, Line other) {
    return plane_geometricProduct_line(self, line_inverse(other));
}

Flector plane_geometricQuotient_lineAtInfinity(Plane self, LineAtInfinity other) {
    return plane_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Flector plane_geometricQuotient_motor(Plane self, Motor other) {
    return plane_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector plane_geometricQuotient_multiVector(Plane self, MultiVector other) {
    return plane_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVector plane_geometricQuotient_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return plane_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

MultiVector plane_geometricQuotient_plane(Plane self, Plane other) {
    return plane_geometricProduct_plane(self, plane_inverse(other));
}

Motor plane_geometricQuotient_point(Plane self, Point other) {
    return plane_geometricProduct_point(self, point_inverse(other));
}

Motor plane_geometricQuotient_pointAtInfinity(Plane self, PointAtInfinity other) {
    return plane_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Plane plane_geometricQuotient_scalar(Plane self, Scalar other) {
    return plane_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVector plane_geometricQuotient_transflector(Plane self, Transflector other) {
    return plane_geometricProduct_transflector(self, transflector_inverse(other));
}

Flector plane_geometricQuotient_translator(Plane self, Translator other) {
    return plane_geometricProduct_translator(self, translator_inverse(other));
}

PlaneAtOrigin planeAtOrigin_geometricQuotient_dualNum(PlaneAtOrigin self, DualNum other) {
    return planeAtOrigin_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Rotor planeAtOrigin_geometricQuotient_flector(PlaneAtOrigin self, Flector other) {
    return planeAtOrigin_geometricProduct_flector(self, flector_inverse(other));
}

Rotor planeAtOrigin_geometricQuotient_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return planeAtOrigin_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

LineAtOrigin planeAtOrigin_geometricQuotient_horizon(PlaneAtOrigin self, Horizon other) {
    return planeAtOrigin_geometricProduct_horizon(self, horizon_inverse(other));
}

Flector planeAtOrigin_geometricQuotient_line(PlaneAtOrigin self, Line other) {
    return planeAtOrigin_geometricProduct_line(self, line_inverse(other));
}

Flector planeAtOrigin_geometricQuotient_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return planeAtOrigin_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Flector planeAtOrigin_geometricQuotient_motor(PlaneAtOrigin self, Motor other) {
    return planeAtOrigin_geometricProduct_motor(self, motor_inverse(other));
}

MultiVectorAtOrigin planeAtOrigin_geometricQuotient_multiVector(PlaneAtOrigin self, MultiVector other) {
    return planeAtOrigin_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtOrigin planeAtOrigin_geometricQuotient_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return planeAtOrigin_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

LineAtOrigin planeAtOrigin_geometricQuotient_plane(PlaneAtOrigin self, Plane other) {
    return planeAtOrigin_geometricProduct_plane(self, plane_inverse(other));
}

Rotor planeAtOrigin_geometricQuotient_point(PlaneAtOrigin self, Point other) {
    return planeAtOrigin_geometricProduct_point(self, point_inverse(other));
}

Rotor planeAtOrigin_geometricQuotient_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return planeAtOrigin_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

PlaneAtOrigin planeAtOrigin_geometricQuotient_scalar(PlaneAtOrigin self, Scalar other) {
    return planeAtOrigin_geometricProduct_scalar(self, scalar_inverse(other));
}

Rotor planeAtOrigin_geometricQuotient_transflector(PlaneAtOrigin self, Transflector other) {
    return planeAtOrigin_geometricProduct_transflector(self, transflector_inverse(other));
}

Flector planeAtOrigin_geometricQuotient_translator(PlaneAtOrigin self, Translator other) {
    return planeAtOrigin_geometricProduct_translator(self, translator_inverse(other));
}

Flector point_geometricQuotient_dualNum(Point self, DualNum other) {
    return point_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVector point_geometricQuotient_flector(Point self, Flector other) {
    return point_geometricProduct_flector(self, flector_inverse(other));
}

MultiVector point_geometricQuotient_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return point_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

Translator point_geometricQuotient_horizon(Point self, Horizon other) {
    return point_geometricProduct_horizon(self, horizon_inverse(other));
}

Flector point_geometricQuotient_line(Point self, Line other) {
    return point_geometricProduct_line(self, line_inverse(other));
}

Transflector point_geometricQuotient_lineAtInfinity(Point self, LineAtInfinity other) {
    return point_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Flector point_geometricQuotient_motor(Point self, Motor other) {
    return point_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector point_geometricQuotient_multiVector(Point self, MultiVector other) {
    return point_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVector point_geometricQuotient_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return point_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Motor point_geometricQuotient_plane(Point self, Plane other) {
    return point_geometricProduct_plane(self, plane_inverse(other));
}

MultiVector point_geometricQuotient_point(Point self, Point other) {
    return point_geometricProduct_point(self, point_inverse(other));
}

MultiVector point_geometricQuotient_pointAtInfinity(Point self, PointAtInfinity other) {
    return point_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Point point_geometricQuotient_scalar(Point self, Scalar other) {
    return point_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVector point_geometricQuotient_transflector(Point self, Transflector other) {
    return point_geometricProduct_transflector(self, transflector_inverse(other));
}

Transflector point_geometricQuotient_translator(Point self, Translator other) {
    return point_geometricProduct_translator(self, translator_inverse(other));
}

Transflector pointAtInfinity_geometricQuotient_dualNum(PointAtInfinity self, DualNum other) {
    return pointAtInfinity_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVector pointAtInfinity_geometricQuotient_flector(PointAtInfinity self, Flector other) {
    return pointAtInfinity_geometricProduct_flector(self, flector_inverse(other));
}

MultiVectorAtInfinity pointAtInfinity_geometricQuotient_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return pointAtInfinity_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

LineAtInfinity pointAtInfinity_geometricQuotient_horizon(PointAtInfinity self, Horizon other) {
    return pointAtInfinity_geometricProduct_horizon(self, horizon_inverse(other));
}

Flector pointAtInfinity_geometricQuotient_line(PointAtInfinity self, Line other) {
    return pointAtInfinity_geometricProduct_line(self, line_inverse(other));
}

FlectorAtInfinity pointAtInfinity_geometricQuotient_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return pointAtInfinity_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Flector pointAtInfinity_geometricQuotient_motor(PointAtInfinity self, Motor other) {
    return pointAtInfinity_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector pointAtInfinity_geometricQuotient_multiVector(PointAtInfinity self, MultiVector other) {
    return pointAtInfinity_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtInfinity pointAtInfinity_geometricQuotient_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return pointAtInfinity_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Motor pointAtInfinity_geometricQuotient_plane(PointAtInfinity self, Plane other) {
    return pointAtInfinity_geometricProduct_plane(self, plane_inverse(other));
}

MultiVector pointAtInfinity_geometricQuotient_point(PointAtInfinity self, Point other) {
    return pointAtInfinity_geometricProduct_point(self, point_inverse(other));
}

MultiVectorAtInfinity pointAtInfinity_geometricQuotient_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

PointAtInfinity pointAtInfinity_geometricQuotient_scalar(PointAtInfinity self, Scalar other) {
    return pointAtInfinity_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVector pointAtInfinity_geometricQuotient_transflector(PointAtInfinity self, Transflector other) {
    return pointAtInfinity_geometricProduct_transflector(self, transflector_inverse(other));
}

Transflector pointAtInfinity_geometricQuotient_translator(PointAtInfinity self, Translator other) {
    return pointAtInfinity_geometricProduct_translator(self, translator_inverse(other));
}

Rotor rotor_geometricQuotient_dualNum(Rotor self, DualNum other) {
    return rotor_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Flector rotor_geometricQuotient_flector(Rotor self, Flector other) {
    return rotor_geometricProduct_flector(self, flector_inverse(other));
}

Flector rotor_geometricQuotient_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return rotor_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

Flector rotor_geometricQuotient_horizon(Rotor self, Horizon other) {
    return rotor_geometricProduct_horizon(self, horizon_inverse(other));
}

Rotor rotor_geometricQuotient_line(Rotor self, Line other) {
    return rotor_geometricProduct_line(self, line_inverse(other));
}

Rotor rotor_geometricQuotient_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return rotor_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Rotor rotor_geometricQuotient_motor(Rotor self, Motor other) {
    return rotor_geometricProduct_motor(self, motor_inverse(other));
}

MultiVectorAtOrigin rotor_geometricQuotient_multiVector(Rotor self, MultiVector other) {
    return rotor_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtOrigin rotor_geometricQuotient_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return rotor_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Flector rotor_geometricQuotient_plane(Rotor self, Plane other) {
    return rotor_geometricProduct_plane(self, plane_inverse(other));
}

Flector rotor_geometricQuotient_point(Rotor self, Point other) {
    return rotor_geometricProduct_point(self, point_inverse(other));
}

Flector rotor_geometricQuotient_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return rotor_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Rotor rotor_geometricQuotient_scalar(Rotor self, Scalar other) {
    return rotor_geometricProduct_scalar(self, scalar_inverse(other));
}

Flector rotor_geometricQuotient_transflector(Rotor self, Transflector other) {
    return rotor_geometricProduct_transflector(self, transflector_inverse(other));
}

Rotor rotor_geometricQuotient_translator(Rotor self, Translator other) {
    return rotor_geometricProduct_translator(self, translator_inverse(other));
}

DualNum scalar_geometricQuotient_dualNum(Scalar self, DualNum other) {
    return scalar_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Flector scalar_geometricQuotient_flector(Scalar self, Flector other) {
    return scalar_geometricProduct_flector(self, flector_inverse(other));
}

FlectorAtInfinity scalar_geometricQuotient_flectorAtInfinity(Scalar self, FlectorAtInfinity other) {
    return scalar_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

Horizon scalar_geometricQuotient_horizon(Scalar self, Horizon other) {
    return scalar_geometricProduct_horizon(self, horizon_inverse(other));
}

Line scalar_geometricQuotient_line(Scalar self, Line other) {
    return scalar_geometricProduct_line(self, line_inverse(other));
}

LineAtInfinity scalar_geometricQuotient_lineAtInfinity(Scalar self, LineAtInfinity other) {
    return scalar_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Motor scalar_geometricQuotient_motor(Scalar self, Motor other) {
    return scalar_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector scalar_geometricQuotient_multiVector(Scalar self, MultiVector other) {
    return scalar_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVectorAtInfinity scalar_geometricQuotient_multiVectorAtInfinity(Scalar self, MultiVectorAtInfinity other) {
    return scalar_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Plane scalar_geometricQuotient_plane(Scalar self, Plane other) {
    return scalar_geometricProduct_plane(self, plane_inverse(other));
}

Point scalar_geometricQuotient_point(Scalar self, Point other) {
    return scalar_geometricProduct_point(self, point_inverse(other));
}

PointAtInfinity scalar_geometricQuotient_pointAtInfinity(Scalar self, PointAtInfinity other) {
    return scalar_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Scalar scalar_geometricQuotient_scalar(Scalar self, Scalar other) {
    return scalar_geometricProduct_scalar(self, scalar_inverse(other));
}

Transflector scalar_geometricQuotient_transflector(Scalar self, Transflector other) {
    return scalar_geometricProduct_transflector(self, transflector_inverse(other));
}

Translator scalar_geometricQuotient_translator(Scalar self, Translator other) {
    return scalar_geometricProduct_translator(self, translator_inverse(other));
}

Flector transflector_geometricQuotient_dualNum(Transflector self, DualNum other) {
    return transflector_geometricProduct_dualNum(self, dualNum_inverse(other));
}

MultiVector transflector_geometricQuotient_flector(Transflector self, Flector other) {
    return transflector_geometricProduct_flector(self, flector_inverse(other));
}

MultiVector transflector_geometricQuotient_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return transflector_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

MultiVector transflector_geometricQuotient_horizon(Transflector self, Horizon other) {
    return transflector_geometricProduct_horizon(self, horizon_inverse(other));
}

Flector transflector_geometricQuotient_line(Transflector self, Line other) {
    return transflector_geometricProduct_line(self, line_inverse(other));
}

Flector transflector_geometricQuotient_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return transflector_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

Flector transflector_geometricQuotient_motor(Transflector self, Motor other) {
    return transflector_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector transflector_geometricQuotient_multiVector(Transflector self, MultiVector other) {
    return transflector_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVector transflector_geometricQuotient_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return transflector_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

MultiVector transflector_geometricQuotient_plane(Transflector self, Plane other) {
    return transflector_geometricProduct_plane(self, plane_inverse(other));
}

MultiVector transflector_geometricQuotient_point(Transflector self, Point other) {
    return transflector_geometricProduct_point(self, point_inverse(other));
}

MultiVector transflector_geometricQuotient_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return transflector_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Transflector transflector_geometricQuotient_scalar(Transflector self, Scalar other) {
    return transflector_geometricProduct_scalar(self, scalar_inverse(other));
}

MultiVector transflector_geometricQuotient_transflector(Transflector self, Transflector other) {
    return transflector_geometricProduct_transflector(self, transflector_inverse(other));
}

Flector transflector_geometricQuotient_translator(Transflector self, Translator other) {
    return transflector_geometricProduct_translator(self, translator_inverse(other));
}

Motor translator_geometricQuotient_dualNum(Translator self, DualNum other) {
    return translator_geometricProduct_dualNum(self, dualNum_inverse(other));
}

Flector translator_geometricQuotient_flector(Translator self, Flector other) {
    return translator_geometricProduct_flector(self, flector_inverse(other));
}

Flector translator_geometricQuotient_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return translator_geometricProduct_flectorAtInfinity(self, flectorAtInfinity_inverse(other));
}

Point translator_geometricQuotient_horizon(Translator self, Horizon other) {
    return translator_geometricProduct_horizon(self, horizon_inverse(other));
}

MultiVector translator_geometricQuotient_line(Translator self, Line other) {
    return translator_geometricProduct_line(self, line_inverse(other));
}

MultiVector translator_geometricQuotient_lineAtInfinity(Translator self, LineAtInfinity other) {
    return translator_geometricProduct_lineAtInfinity(self, lineAtInfinity_inverse(other));
}

MultiVector translator_geometricQuotient_motor(Translator self, Motor other) {
    return translator_geometricProduct_motor(self, motor_inverse(other));
}

MultiVector translator_geometricQuotient_multiVector(Translator self, MultiVector other) {
    return translator_geometricProduct_multiVector(self, multiVector_inverse(other));
}

MultiVector translator_geometricQuotient_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return translator_geometricProduct_multiVectorAtInfinity(self, multiVectorAtInfinity_inverse(other));
}

Flector translator_geometricQuotient_plane(Translator self, Plane other) {
    return translator_geometricProduct_plane(self, plane_inverse(other));
}

Transflector translator_geometricQuotient_point(Translator self, Point other) {
    return translator_geometricProduct_point(self, point_inverse(other));
}

Transflector translator_geometricQuotient_pointAtInfinity(Translator self, PointAtInfinity other) {
    return translator_geometricProduct_pointAtInfinity(self, pointAtInfinity_inverse(other));
}

Translator translator_geometricQuotient_scalar(Translator self, Scalar other) {
    return translator_geometricProduct_scalar(self, scalar_inverse(other));
}

Flector translator_geometricQuotient_transflector(Translator self, Transflector other) {
    return translator_geometricProduct_transflector(self, transflector_inverse(other));
}

MultiVector translator_geometricQuotient_translator(Translator self, Translator other) {
    return translator_geometricProduct_translator(self, translator_inverse(other));
}

MultiVector flector_bulkContraction_flector(Flector self, Flector other) {
    return flector_antiWedge_flector(self, flector_dual(other));
}

MultiVector flector_bulkContraction_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return flector_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Scalar flector_bulkContraction_horizon(Flector self, Horizon other) {
    return flector_antiWedge_origin(self, horizon_dual(other));
}

Point flector_bulkContraction_line(Flector self, Line other) {
    return flector_antiWedge_lineAtOrigin(self, line_dual(other));
}

Point flector_bulkContraction_lineAtInfinity(Flector self, LineAtInfinity other) {
    return flector_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

Point flector_bulkContraction_motor(Flector self, Motor other) {
    return flector_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVector flector_bulkContraction_multiVector(Flector self, MultiVector other) {
    return flector_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVector flector_bulkContraction_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return flector_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Scalar flector_bulkContraction_plane(Flector self, Plane other) {
    return flector_antiWedge_origin(self, plane_dual(other));
}

MultiVector flector_bulkContraction_point(Flector self, Point other) {
    return flector_antiWedge_planeAtOrigin(self, point_dual(other));
}

MultiVector flector_bulkContraction_pointAtInfinity(Flector self, PointAtInfinity other) {
    return flector_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVector flector_bulkContraction_transflector(Flector self, Transflector other) {
    return flector_antiWedge_flector(self, transflector_dual(other));
}

Point flector_bulkContraction_translator(Flector self, Translator other) {
    return flector_antiWedge_lineAtOrigin(self, translator_dual(other));
}

MultiVectorAtInfinity flectorAtInfinity_bulkContraction_flector(FlectorAtInfinity self, Flector other) {
    return flectorAtInfinity_antiWedge_flector(self, flector_dual(other));
}

MultiVectorAtInfinity flectorAtInfinity_bulkContraction_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Scalar flectorAtInfinity_bulkContraction_horizon(FlectorAtInfinity self, Horizon other) {
    return flectorAtInfinity_antiWedge_origin(self, horizon_dual(other));
}

PointAtInfinity flectorAtInfinity_bulkContraction_line(FlectorAtInfinity self, Line other) {
    return flectorAtInfinity_antiWedge_lineAtOrigin(self, line_dual(other));
}

PointAtInfinity flectorAtInfinity_bulkContraction_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return flectorAtInfinity_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

PointAtInfinity flectorAtInfinity_bulkContraction_motor(FlectorAtInfinity self, Motor other) {
    return flectorAtInfinity_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtInfinity flectorAtInfinity_bulkContraction_multiVector(FlectorAtInfinity self, MultiVector other) {
    return flectorAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtInfinity flectorAtInfinity_bulkContraction_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Scalar flectorAtInfinity_bulkContraction_plane(FlectorAtInfinity self, Plane other) {
    return flectorAtInfinity_antiWedge_origin(self, plane_dual(other));
}

MultiVectorAtInfinity flectorAtInfinity_bulkContraction_point(FlectorAtInfinity self, Point other) {
    return flectorAtInfinity_antiWedge_planeAtOrigin(self, point_dual(other));
}

MultiVectorAtInfinity flectorAtInfinity_bulkContraction_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return flectorAtInfinity_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVectorAtInfinity flectorAtInfinity_bulkContraction_transflector(FlectorAtInfinity self, Transflector other) {
    return flectorAtInfinity_antiWedge_flector(self, transflector_dual(other));
}

PointAtInfinity flectorAtInfinity_bulkContraction_translator(FlectorAtInfinity self, Translator other) {
    return flectorAtInfinity_antiWedge_lineAtOrigin(self, translator_dual(other));
}

MultiVectorAtInfinity horizon_bulkContraction_flector(Horizon self, Flector other) {
    return horizon_antiWedge_flector(self, flector_dual(other));
}

MultiVectorAtInfinity horizon_bulkContraction_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return horizon_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Scalar horizon_bulkContraction_horizon(Horizon self, Horizon other) {
    return horizon_antiWedge_origin(self, horizon_dual(other));
}

PointAtInfinity horizon_bulkContraction_line(Horizon self, Line other) {
    return horizon_antiWedge_lineAtOrigin(self, line_dual(other));
}

PointAtInfinity horizon_bulkContraction_lineAtInfinity(Horizon self, LineAtInfinity other) {
    return horizon_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

PointAtInfinity horizon_bulkContraction_motor(Horizon self, Motor other) {
    return horizon_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtInfinity horizon_bulkContraction_multiVector(Horizon self, MultiVector other) {
    return horizon_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtInfinity horizon_bulkContraction_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return horizon_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Scalar horizon_bulkContraction_plane(Horizon self, Plane other) {
    return horizon_antiWedge_origin(self, plane_dual(other));
}

LineAtInfinity horizon_bulkContraction_point(Horizon self, Point other) {
    return horizon_antiWedge_planeAtOrigin(self, point_dual(other));
}

LineAtInfinity horizon_bulkContraction_pointAtInfinity(Horizon self, PointAtInfinity other) {
    return horizon_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVectorAtInfinity horizon_bulkContraction_transflector(Horizon self, Transflector other) {
    return horizon_antiWedge_flector(self, transflector_dual(other));
}

PointAtInfinity horizon_bulkContraction_translator(Horizon self, Translator other) {
    return horizon_antiWedge_lineAtOrigin(self, translator_dual(other));
}

Point line_bulkContraction_flector(Line self, Flector other) {
    return line_antiWedge_flector(self, flector_dual(other));
}

Point line_bulkContraction_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return line_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Scalar line_bulkContraction_line(Line self, Line other) {
    return line_antiWedge_lineAtOrigin(self, line_dual(other));
}

Scalar line_bulkContraction_lineAtInfinity(Line self, LineAtInfinity other) {
    return line_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

Scalar line_bulkContraction_motor(Line self, Motor other) {
    return line_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVector line_bulkContraction_multiVector(Line self, MultiVector other) {
    return line_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVector line_bulkContraction_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return line_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Point line_bulkContraction_point(Line self, Point other) {
    return line_antiWedge_planeAtOrigin(self, point_dual(other));
}

Point line_bulkContraction_pointAtInfinity(Line self, PointAtInfinity other) {
    return line_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Point line_bulkContraction_transflector(Line self, Transflector other) {
    return line_antiWedge_flector(self, transflector_dual(other));
}

Scalar line_bulkContraction_translator(Line self, Translator other) {
    return line_antiWedge_lineAtOrigin(self, translator_dual(other));
}

PointAtInfinity lineAtInfinity_bulkContraction_flector(LineAtInfinity self, Flector other) {
    return lineAtInfinity_antiWedge_flector(self, flector_dual(other));
}

PointAtInfinity lineAtInfinity_bulkContraction_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return lineAtInfinity_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Scalar lineAtInfinity_bulkContraction_line(LineAtInfinity self, Line other) {
    return lineAtInfinity_antiWedge_lineAtOrigin(self, line_dual(other));
}

Scalar lineAtInfinity_bulkContraction_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

Scalar lineAtInfinity_bulkContraction_motor(LineAtInfinity self, Motor other) {
    return lineAtInfinity_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtInfinity lineAtInfinity_bulkContraction_multiVector(LineAtInfinity self, MultiVector other) {
    return lineAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtInfinity lineAtInfinity_bulkContraction_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return lineAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

PointAtInfinity lineAtInfinity_bulkContraction_point(LineAtInfinity self, Point other) {
    return lineAtInfinity_antiWedge_planeAtOrigin(self, point_dual(other));
}

PointAtInfinity lineAtInfinity_bulkContraction_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return lineAtInfinity_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

PointAtInfinity lineAtInfinity_bulkContraction_transflector(LineAtInfinity self, Transflector other) {
    return lineAtInfinity_antiWedge_flector(self, transflector_dual(other));
}

Scalar lineAtInfinity_bulkContraction_translator(LineAtInfinity self, Translator other) {
    return lineAtInfinity_antiWedge_lineAtOrigin(self, translator_dual(other));
}

Point lineAtOrigin_bulkContraction_flector(LineAtOrigin self, Flector other) {
    return lineAtOrigin_antiWedge_flector(self, flector_dual(other));
}

Point lineAtOrigin_bulkContraction_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return lineAtOrigin_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

MultiVectorAtOrigin lineAtOrigin_bulkContraction_multiVector(LineAtOrigin self, MultiVector other) {
    return lineAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin lineAtOrigin_bulkContraction_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return lineAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Origin lineAtOrigin_bulkContraction_point(LineAtOrigin self, Point other) {
    return lineAtOrigin_antiWedge_planeAtOrigin(self, point_dual(other));
}

Origin lineAtOrigin_bulkContraction_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return lineAtOrigin_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Point lineAtOrigin_bulkContraction_transflector(LineAtOrigin self, Transflector other) {
    return lineAtOrigin_antiWedge_flector(self, transflector_dual(other));
}

Flector motor_bulkContraction_flector(Motor self, Flector other) {
    return motor_antiWedge_flector(self, flector_dual(other));
}

Flector motor_bulkContraction_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return motor_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Origin motor_bulkContraction_horizon(Motor self, Horizon other) {
    return motor_antiWedge_origin(self, horizon_dual(other));
}

MultiVector motor_bulkContraction_line(Motor self, Line other) {
    return motor_antiWedge_lineAtOrigin(self, line_dual(other));
}

MultiVector motor_bulkContraction_lineAtInfinity(Motor self, LineAtInfinity other) {
    return motor_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

MultiVector motor_bulkContraction_motor(Motor self, Motor other) {
    return motor_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVector motor_bulkContraction_multiVector(Motor self, MultiVector other) {
    return motor_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVector motor_bulkContraction_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return motor_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Origin motor_bulkContraction_plane(Motor self, Plane other) {
    return motor_antiWedge_origin(self, plane_dual(other));
}

Flector motor_bulkContraction_point(Motor self, Point other) {
    return motor_antiWedge_planeAtOrigin(self, point_dual(other));
}

Flector motor_bulkContraction_pointAtInfinity(Motor self, PointAtInfinity other) {
    return motor_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Flector motor_bulkContraction_transflector(Motor self, Transflector other) {
    return motor_antiWedge_flector(self, transflector_dual(other));
}

MultiVector motor_bulkContraction_translator(Motor self, Translator other) {
    return motor_antiWedge_lineAtOrigin(self, translator_dual(other));
}

MultiVector multiVector_bulkContraction_flector(MultiVector self, Flector other) {
    return multiVector_antiWedge_flector(self, flector_dual(other));
}

MultiVector multiVector_bulkContraction_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return multiVector_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

MultiVector multiVector_bulkContraction_horizon(MultiVector self, Horizon other) {
    return multiVector_antiWedge_origin(self, horizon_dual(other));
}

MultiVector multiVector_bulkContraction_line(MultiVector self, Line other) {
    return multiVector_antiWedge_lineAtOrigin(self, line_dual(other));
}

MultiVector multiVector_bulkContraction_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return multiVector_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

MultiVector multiVector_bulkContraction_motor(MultiVector self, Motor other) {
    return multiVector_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVector multiVector_bulkContraction_multiVector(MultiVector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVector multiVector_bulkContraction_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return multiVector_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

MultiVector multiVector_bulkContraction_plane(MultiVector self, Plane other) {
    return multiVector_antiWedge_origin(self, plane_dual(other));
}

MultiVector multiVector_bulkContraction_point(MultiVector self, Point other) {
    return multiVector_antiWedge_planeAtOrigin(self, point_dual(other));
}

MultiVector multiVector_bulkContraction_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return multiVector_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVector multiVector_bulkContraction_transflector(MultiVector self, Transflector other) {
    return multiVector_antiWedge_flector(self, transflector_dual(other));
}

MultiVector multiVector_bulkContraction_translator(MultiVector self, Translator other) {
    return multiVector_antiWedge_lineAtOrigin(self, translator_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_flector(MultiVectorAtInfinity self, Flector other) {
    return multiVectorAtInfinity_antiWedge_flector(self, flector_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Scalar multiVectorAtInfinity_bulkContraction_horizon(MultiVectorAtInfinity self, Horizon other) {
    return multiVectorAtInfinity_antiWedge_origin(self, horizon_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_line(MultiVectorAtInfinity self, Line other) {
    return multiVectorAtInfinity_antiWedge_lineAtOrigin(self, line_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_motor(MultiVectorAtInfinity self, Motor other) {
    return multiVectorAtInfinity_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Scalar multiVectorAtInfinity_bulkContraction_plane(MultiVectorAtInfinity self, Plane other) {
    return multiVectorAtInfinity_antiWedge_origin(self, plane_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_point(MultiVectorAtInfinity self, Point other) {
    return multiVectorAtInfinity_antiWedge_planeAtOrigin(self, point_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_transflector(MultiVectorAtInfinity self, Transflector other) {
    return multiVectorAtInfinity_antiWedge_flector(self, transflector_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_bulkContraction_translator(MultiVectorAtInfinity self, Translator other) {
    return multiVectorAtInfinity_antiWedge_lineAtOrigin(self, translator_dual(other));
}

MultiVector multiVectorAtOrigin_bulkContraction_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVectorAtOrigin_antiWedge_flector(self, flector_dual(other));
}

MultiVector multiVectorAtOrigin_bulkContraction_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Origin multiVectorAtOrigin_bulkContraction_horizon(MultiVectorAtOrigin self, Horizon other) {
    return multiVectorAtOrigin_antiWedge_origin(self, horizon_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkContraction_line(MultiVectorAtOrigin self, Line other) {
    return multiVectorAtOrigin_antiWedge_lineAtOrigin(self, line_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkContraction_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkContraction_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVectorAtOrigin_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkContraction_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkContraction_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Origin multiVectorAtOrigin_bulkContraction_plane(MultiVectorAtOrigin self, Plane other) {
    return multiVectorAtOrigin_antiWedge_origin(self, plane_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkContraction_point(MultiVectorAtOrigin self, Point other) {
    return multiVectorAtOrigin_antiWedge_planeAtOrigin(self, point_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkContraction_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVector multiVectorAtOrigin_bulkContraction_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVectorAtOrigin_antiWedge_flector(self, transflector_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkContraction_translator(MultiVectorAtOrigin self, Translator other) {
    return multiVectorAtOrigin_antiWedge_lineAtOrigin(self, translator_dual(other));
}

Scalar origin_bulkContraction_flector(Origin self, Flector other) {
    return origin_antiWedge_flector(self, flector_dual(other));
}

Scalar origin_bulkContraction_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return origin_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Origin origin_bulkContraction_multiVector(Origin self, MultiVector other) {
    return origin_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

Origin origin_bulkContraction_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return origin_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Scalar origin_bulkContraction_transflector(Origin self, Transflector other) {
    return origin_antiWedge_flector(self, transflector_dual(other));
}

MultiVector plane_bulkContraction_flector(Plane self, Flector other) {
    return plane_antiWedge_flector(self, flector_dual(other));
}

MultiVector plane_bulkContraction_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return plane_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Scalar plane_bulkContraction_horizon(Plane self, Horizon other) {
    return plane_antiWedge_origin(self, horizon_dual(other));
}

Point plane_bulkContraction_line(Plane self, Line other) {
    return plane_antiWedge_lineAtOrigin(self, line_dual(other));
}

Point plane_bulkContraction_lineAtInfinity(Plane self, LineAtInfinity other) {
    return plane_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

Point plane_bulkContraction_motor(Plane self, Motor other) {
    return plane_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVector plane_bulkContraction_multiVector(Plane self, MultiVector other) {
    return plane_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVector plane_bulkContraction_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return plane_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Scalar plane_bulkContraction_plane(Plane self, Plane other) {
    return plane_antiWedge_origin(self, plane_dual(other));
}

Line plane_bulkContraction_point(Plane self, Point other) {
    return plane_antiWedge_planeAtOrigin(self, point_dual(other));
}

Line plane_bulkContraction_pointAtInfinity(Plane self, PointAtInfinity other) {
    return plane_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVector plane_bulkContraction_transflector(Plane self, Transflector other) {
    return plane_antiWedge_flector(self, transflector_dual(other));
}

Point plane_bulkContraction_translator(Plane self, Translator other) {
    return plane_antiWedge_lineAtOrigin(self, translator_dual(other));
}

MultiVector planeAtOrigin_bulkContraction_flector(PlaneAtOrigin self, Flector other) {
    return planeAtOrigin_antiWedge_flector(self, flector_dual(other));
}

MultiVector planeAtOrigin_bulkContraction_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return planeAtOrigin_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Origin planeAtOrigin_bulkContraction_line(PlaneAtOrigin self, Line other) {
    return planeAtOrigin_antiWedge_lineAtOrigin(self, line_dual(other));
}

Origin planeAtOrigin_bulkContraction_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return planeAtOrigin_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

Origin planeAtOrigin_bulkContraction_motor(PlaneAtOrigin self, Motor other) {
    return planeAtOrigin_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin planeAtOrigin_bulkContraction_multiVector(PlaneAtOrigin self, MultiVector other) {
    return planeAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin planeAtOrigin_bulkContraction_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return planeAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

LineAtOrigin planeAtOrigin_bulkContraction_point(PlaneAtOrigin self, Point other) {
    return planeAtOrigin_antiWedge_planeAtOrigin(self, point_dual(other));
}

LineAtOrigin planeAtOrigin_bulkContraction_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return planeAtOrigin_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVector planeAtOrigin_bulkContraction_transflector(PlaneAtOrigin self, Transflector other) {
    return planeAtOrigin_antiWedge_flector(self, transflector_dual(other));
}

Origin planeAtOrigin_bulkContraction_translator(PlaneAtOrigin self, Translator other) {
    return planeAtOrigin_antiWedge_lineAtOrigin(self, translator_dual(other));
}

Scalar point_bulkContraction_flector(Point self, Flector other) {
    return point_antiWedge_flector(self, flector_dual(other));
}

Scalar point_bulkContraction_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return point_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

MultiVector point_bulkContraction_multiVector(Point self, MultiVector other) {
    return point_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVector point_bulkContraction_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return point_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Scalar point_bulkContraction_point(Point self, Point other) {
    return point_antiWedge_planeAtOrigin(self, point_dual(other));
}

Scalar point_bulkContraction_pointAtInfinity(Point self, PointAtInfinity other) {
    return point_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Scalar point_bulkContraction_transflector(Point self, Transflector other) {
    return point_antiWedge_flector(self, transflector_dual(other));
}

Scalar pointAtInfinity_bulkContraction_flector(PointAtInfinity self, Flector other) {
    return pointAtInfinity_antiWedge_flector(self, flector_dual(other));
}

Scalar pointAtInfinity_bulkContraction_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return pointAtInfinity_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

MultiVectorAtInfinity pointAtInfinity_bulkContraction_multiVector(PointAtInfinity self, MultiVector other) {
    return pointAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtInfinity pointAtInfinity_bulkContraction_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return pointAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Scalar pointAtInfinity_bulkContraction_point(PointAtInfinity self, Point other) {
    return pointAtInfinity_antiWedge_planeAtOrigin(self, point_dual(other));
}

Scalar pointAtInfinity_bulkContraction_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Scalar pointAtInfinity_bulkContraction_transflector(PointAtInfinity self, Transflector other) {
    return pointAtInfinity_antiWedge_flector(self, transflector_dual(other));
}

Flector rotor_bulkContraction_flector(Rotor self, Flector other) {
    return rotor_antiWedge_flector(self, flector_dual(other));
}

Flector rotor_bulkContraction_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return rotor_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Origin rotor_bulkContraction_horizon(Rotor self, Horizon other) {
    return rotor_antiWedge_origin(self, horizon_dual(other));
}

LineAtOrigin rotor_bulkContraction_line(Rotor self, Line other) {
    return rotor_antiWedge_lineAtOrigin(self, line_dual(other));
}

LineAtOrigin rotor_bulkContraction_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return rotor_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

LineAtOrigin rotor_bulkContraction_motor(Rotor self, Motor other) {
    return rotor_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin rotor_bulkContraction_multiVector(Rotor self, MultiVector other) {
    return rotor_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin rotor_bulkContraction_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return rotor_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Origin rotor_bulkContraction_plane(Rotor self, Plane other) {
    return rotor_antiWedge_origin(self, plane_dual(other));
}

Flector rotor_bulkContraction_point(Rotor self, Point other) {
    return rotor_antiWedge_planeAtOrigin(self, point_dual(other));
}

Flector rotor_bulkContraction_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return rotor_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Flector rotor_bulkContraction_transflector(Rotor self, Transflector other) {
    return rotor_antiWedge_flector(self, transflector_dual(other));
}

LineAtOrigin rotor_bulkContraction_translator(Rotor self, Translator other) {
    return rotor_antiWedge_lineAtOrigin(self, translator_dual(other));
}

MultiVector transflector_bulkContraction_flector(Transflector self, Flector other) {
    return transflector_antiWedge_flector(self, flector_dual(other));
}

MultiVector transflector_bulkContraction_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return transflector_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Scalar transflector_bulkContraction_horizon(Transflector self, Horizon other) {
    return transflector_antiWedge_origin(self, horizon_dual(other));
}

Point transflector_bulkContraction_line(Transflector self, Line other) {
    return transflector_antiWedge_lineAtOrigin(self, line_dual(other));
}

Point transflector_bulkContraction_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return transflector_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

Point transflector_bulkContraction_motor(Transflector self, Motor other) {
    return transflector_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVector transflector_bulkContraction_multiVector(Transflector self, MultiVector other) {
    return transflector_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVector transflector_bulkContraction_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return transflector_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Scalar transflector_bulkContraction_plane(Transflector self, Plane other) {
    return transflector_antiWedge_origin(self, plane_dual(other));
}

MultiVector transflector_bulkContraction_point(Transflector self, Point other) {
    return transflector_antiWedge_planeAtOrigin(self, point_dual(other));
}

MultiVector transflector_bulkContraction_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return transflector_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVector transflector_bulkContraction_transflector(Transflector self, Transflector other) {
    return transflector_antiWedge_flector(self, transflector_dual(other));
}

Point transflector_bulkContraction_translator(Transflector self, Translator other) {
    return transflector_antiWedge_lineAtOrigin(self, translator_dual(other));
}

Flector translator_bulkContraction_flector(Translator self, Flector other) {
    return translator_antiWedge_flector(self, flector_dual(other));
}

Flector translator_bulkContraction_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return translator_antiWedge_flector(self, flectorAtInfinity_dual(other));
}

Origin translator_bulkContraction_horizon(Translator self, Horizon other) {
    return translator_antiWedge_origin(self, horizon_dual(other));
}

MultiVector translator_bulkContraction_line(Translator self, Line other) {
    return translator_antiWedge_lineAtOrigin(self, line_dual(other));
}

MultiVector translator_bulkContraction_lineAtInfinity(Translator self, LineAtInfinity other) {
    return translator_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

MultiVector translator_bulkContraction_motor(Translator self, Motor other) {
    return translator_antiWedge_lineAtOrigin(self, motor_dual(other));
}

MultiVector translator_bulkContraction_multiVector(Translator self, MultiVector other) {
    return translator_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVector translator_bulkContraction_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return translator_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Origin translator_bulkContraction_plane(Translator self, Plane other) {
    return translator_antiWedge_origin(self, plane_dual(other));
}

Transflector translator_bulkContraction_point(Translator self, Point other) {
    return translator_antiWedge_planeAtOrigin(self, point_dual(other));
}

Transflector translator_bulkContraction_pointAtInfinity(Translator self, PointAtInfinity other) {
    return translator_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Flector translator_bulkContraction_transflector(Translator self, Transflector other) {
    return translator_antiWedge_flector(self, transflector_dual(other));
}

MultiVector translator_bulkContraction_translator(Translator self, Translator other) {
    return translator_antiWedge_lineAtOrigin(self, translator_dual(other));
}

MultiVectorAtInfinity flector_weightContraction_flector(Flector self, Flector other) {
    return flector_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

PointAtInfinity flector_weightContraction_line(Flector self, Line other) {
    return flector_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

PointAtInfinity flector_weightContraction_lineAtOrigin(Flector self, LineAtOrigin other) {
    return flector_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity flector_weightContraction_motor(Flector self, Motor other) {
    return flector_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity flector_weightContraction_multiVector(Flector self, MultiVector other) {
    return flector_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity flector_weightContraction_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return flector_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

MultiVectorAtInfinity flector_weightContraction_origin(Flector self, Origin other) {
    return flector_antiWedge_horizon(self, origin_antiDual(other));
}

Scalar flector_weightContraction_plane(Flector self, Plane other) {
    return flector_antiWedge_pointAtInfinity(self, plane_antiDual(other));
}

Scalar flector_weightContraction_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return flector_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity flector_weightContraction_point(Flector self, Point other) {
    return flector_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity flector_weightContraction_rotor(Flector self, Rotor other) {
    return flector_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Scalar flector_weightContraction_transflector(Flector self, Transflector other) {
    return flector_antiWedge_pointAtInfinity(self, transflector_antiDual(other));
}

PointAtInfinity line_weightContraction_flector(Line self, Flector other) {
    return line_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

Scalar line_weightContraction_line(Line self, Line other) {
    return line_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

Scalar line_weightContraction_lineAtOrigin(Line self, LineAtOrigin other) {
    return line_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity line_weightContraction_motor(Line self, Motor other) {
    return line_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity line_weightContraction_multiVector(Line self, MultiVector other) {
    return line_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity line_weightContraction_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return line_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

PointAtInfinity line_weightContraction_origin(Line self, Origin other) {
    return line_antiWedge_horizon(self, origin_antiDual(other));
}

PointAtInfinity line_weightContraction_point(Line self, Point other) {
    return line_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity line_weightContraction_rotor(Line self, Rotor other) {
    return line_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

PointAtInfinity lineAtOrigin_weightContraction_flector(LineAtOrigin self, Flector other) {
    return lineAtOrigin_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

Scalar lineAtOrigin_weightContraction_line(LineAtOrigin self, Line other) {
    return lineAtOrigin_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

Scalar lineAtOrigin_weightContraction_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity lineAtOrigin_weightContraction_motor(LineAtOrigin self, Motor other) {
    return lineAtOrigin_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity lineAtOrigin_weightContraction_multiVector(LineAtOrigin self, MultiVector other) {
    return lineAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity lineAtOrigin_weightContraction_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return lineAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

PointAtInfinity lineAtOrigin_weightContraction_origin(LineAtOrigin self, Origin other) {
    return lineAtOrigin_antiWedge_horizon(self, origin_antiDual(other));
}

PointAtInfinity lineAtOrigin_weightContraction_point(LineAtOrigin self, Point other) {
    return lineAtOrigin_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity lineAtOrigin_weightContraction_rotor(LineAtOrigin self, Rotor other) {
    return lineAtOrigin_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

FlectorAtInfinity motor_weightContraction_flector(Motor self, Flector other) {
    return motor_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVectorAtInfinity motor_weightContraction_line(Motor self, Line other) {
    return motor_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

MultiVectorAtInfinity motor_weightContraction_lineAtOrigin(Motor self, LineAtOrigin other) {
    return motor_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity motor_weightContraction_motor(Motor self, Motor other) {
    return motor_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity motor_weightContraction_multiVector(Motor self, MultiVector other) {
    return motor_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity motor_weightContraction_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return motor_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

FlectorAtInfinity motor_weightContraction_origin(Motor self, Origin other) {
    return motor_antiWedge_horizon(self, origin_antiDual(other));
}

PointAtInfinity motor_weightContraction_plane(Motor self, Plane other) {
    return motor_antiWedge_pointAtInfinity(self, plane_antiDual(other));
}

PointAtInfinity motor_weightContraction_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return motor_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

FlectorAtInfinity motor_weightContraction_point(Motor self, Point other) {
    return motor_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity motor_weightContraction_rotor(Motor self, Rotor other) {
    return motor_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

PointAtInfinity motor_weightContraction_transflector(Motor self, Transflector other) {
    return motor_antiWedge_pointAtInfinity(self, transflector_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_flector(MultiVector self, Flector other) {
    return multiVector_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_line(MultiVector self, Line other) {
    return multiVector_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return multiVector_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_motor(MultiVector self, Motor other) {
    return multiVector_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_multiVector(MultiVector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return multiVector_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_origin(MultiVector self, Origin other) {
    return multiVector_antiWedge_horizon(self, origin_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_plane(MultiVector self, Plane other) {
    return multiVector_antiWedge_pointAtInfinity(self, plane_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return multiVector_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_point(MultiVector self, Point other) {
    return multiVector_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_rotor(MultiVector self, Rotor other) {
    return multiVector_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

MultiVectorAtInfinity multiVector_weightContraction_transflector(MultiVector self, Transflector other) {
    return multiVector_antiWedge_pointAtInfinity(self, transflector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVectorAtOrigin_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_line(MultiVectorAtOrigin self, Line other) {
    return multiVectorAtOrigin_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_origin(MultiVectorAtOrigin self, Origin other) {
    return multiVectorAtOrigin_antiWedge_horizon(self, origin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_plane(MultiVectorAtOrigin self, Plane other) {
    return multiVectorAtOrigin_antiWedge_pointAtInfinity(self, plane_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_point(MultiVectorAtOrigin self, Point other) {
    return multiVectorAtOrigin_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_rotor(MultiVectorAtOrigin self, Rotor other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_weightContraction_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVectorAtOrigin_antiWedge_pointAtInfinity(self, transflector_antiDual(other));
}

Scalar origin_weightContraction_flector(Origin self, Flector other) {
    return origin_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

Scalar origin_weightContraction_motor(Origin self, Motor other) {
    return origin_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

Scalar origin_weightContraction_multiVector(Origin self, MultiVector other) {
    return origin_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

Scalar origin_weightContraction_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return origin_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Scalar origin_weightContraction_origin(Origin self, Origin other) {
    return origin_antiWedge_horizon(self, origin_antiDual(other));
}

Scalar origin_weightContraction_point(Origin self, Point other) {
    return origin_antiWedge_horizon(self, point_antiDual(other));
}

Scalar origin_weightContraction_rotor(Origin self, Rotor other) {
    return origin_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

MultiVectorAtInfinity plane_weightContraction_flector(Plane self, Flector other) {
    return plane_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

PointAtInfinity plane_weightContraction_line(Plane self, Line other) {
    return plane_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

PointAtInfinity plane_weightContraction_lineAtOrigin(Plane self, LineAtOrigin other) {
    return plane_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity plane_weightContraction_motor(Plane self, Motor other) {
    return plane_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity plane_weightContraction_multiVector(Plane self, MultiVector other) {
    return plane_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity plane_weightContraction_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return plane_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity plane_weightContraction_origin(Plane self, Origin other) {
    return plane_antiWedge_horizon(self, origin_antiDual(other));
}

Scalar plane_weightContraction_plane(Plane self, Plane other) {
    return plane_antiWedge_pointAtInfinity(self, plane_antiDual(other));
}

Scalar plane_weightContraction_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return plane_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

LineAtInfinity plane_weightContraction_point(Plane self, Point other) {
    return plane_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity plane_weightContraction_rotor(Plane self, Rotor other) {
    return plane_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Scalar plane_weightContraction_transflector(Plane self, Transflector other) {
    return plane_antiWedge_pointAtInfinity(self, transflector_antiDual(other));
}

MultiVectorAtInfinity planeAtOrigin_weightContraction_flector(PlaneAtOrigin self, Flector other) {
    return planeAtOrigin_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

PointAtInfinity planeAtOrigin_weightContraction_line(PlaneAtOrigin self, Line other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

PointAtInfinity planeAtOrigin_weightContraction_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity planeAtOrigin_weightContraction_motor(PlaneAtOrigin self, Motor other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity planeAtOrigin_weightContraction_multiVector(PlaneAtOrigin self, MultiVector other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity planeAtOrigin_weightContraction_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity planeAtOrigin_weightContraction_origin(PlaneAtOrigin self, Origin other) {
    return planeAtOrigin_antiWedge_horizon(self, origin_antiDual(other));
}

Scalar planeAtOrigin_weightContraction_plane(PlaneAtOrigin self, Plane other) {
    return planeAtOrigin_antiWedge_pointAtInfinity(self, plane_antiDual(other));
}

Scalar planeAtOrigin_weightContraction_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

LineAtInfinity planeAtOrigin_weightContraction_point(PlaneAtOrigin self, Point other) {
    return planeAtOrigin_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity planeAtOrigin_weightContraction_rotor(PlaneAtOrigin self, Rotor other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Scalar planeAtOrigin_weightContraction_transflector(PlaneAtOrigin self, Transflector other) {
    return planeAtOrigin_antiWedge_pointAtInfinity(self, transflector_antiDual(other));
}

Scalar point_weightContraction_flector(Point self, Flector other) {
    return point_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

Scalar point_weightContraction_motor(Point self, Motor other) {
    return point_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

Scalar point_weightContraction_multiVector(Point self, MultiVector other) {
    return point_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

Scalar point_weightContraction_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return point_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Scalar point_weightContraction_origin(Point self, Origin other) {
    return point_antiWedge_horizon(self, origin_antiDual(other));
}

Scalar point_weightContraction_point(Point self, Point other) {
    return point_antiWedge_horizon(self, point_antiDual(other));
}

Scalar point_weightContraction_rotor(Point self, Rotor other) {
    return point_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

FlectorAtInfinity rotor_weightContraction_flector(Rotor self, Flector other) {
    return rotor_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVectorAtInfinity rotor_weightContraction_line(Rotor self, Line other) {
    return rotor_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

MultiVectorAtInfinity rotor_weightContraction_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return rotor_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity rotor_weightContraction_motor(Rotor self, Motor other) {
    return rotor_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity rotor_weightContraction_multiVector(Rotor self, MultiVector other) {
    return rotor_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity rotor_weightContraction_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return rotor_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

FlectorAtInfinity rotor_weightContraction_origin(Rotor self, Origin other) {
    return rotor_antiWedge_horizon(self, origin_antiDual(other));
}

PointAtInfinity rotor_weightContraction_plane(Rotor self, Plane other) {
    return rotor_antiWedge_pointAtInfinity(self, plane_antiDual(other));
}

PointAtInfinity rotor_weightContraction_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return rotor_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

FlectorAtInfinity rotor_weightContraction_point(Rotor self, Point other) {
    return rotor_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity rotor_weightContraction_rotor(Rotor self, Rotor other) {
    return rotor_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

PointAtInfinity rotor_weightContraction_transflector(Rotor self, Transflector other) {
    return rotor_antiWedge_pointAtInfinity(self, transflector_antiDual(other));
}

MultiVectorAtInfinity transflector_weightContraction_flector(Transflector self, Flector other) {
    return transflector_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

PointAtInfinity transflector_weightContraction_line(Transflector self, Line other) {
    return transflector_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

PointAtInfinity transflector_weightContraction_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return transflector_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity transflector_weightContraction_motor(Transflector self, Motor other) {
    return transflector_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity transflector_weightContraction_multiVector(Transflector self, MultiVector other) {
    return transflector_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity transflector_weightContraction_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return transflector_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity transflector_weightContraction_origin(Transflector self, Origin other) {
    return transflector_antiWedge_horizon(self, origin_antiDual(other));
}

Scalar transflector_weightContraction_plane(Transflector self, Plane other) {
    return transflector_antiWedge_pointAtInfinity(self, plane_antiDual(other));
}

Scalar transflector_weightContraction_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return transflector_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

LineAtInfinity transflector_weightContraction_point(Transflector self, Point other) {
    return transflector_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity transflector_weightContraction_rotor(Transflector self, Rotor other) {
    return transflector_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Scalar transflector_weightContraction_transflector(Transflector self, Transflector other) {
    return transflector_antiWedge_pointAtInfinity(self, transflector_antiDual(other));
}

FlectorAtInfinity translator_weightContraction_flector(Translator self, Flector other) {
    return translator_antiWedge_flectorAtInfinity(self, flector_antiDual(other));
}

LineAtInfinity translator_weightContraction_line(Translator self, Line other) {
    return translator_antiWedge_lineAtInfinity(self, line_antiDual(other));
}

LineAtInfinity translator_weightContraction_lineAtOrigin(Translator self, LineAtOrigin other) {
    return translator_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity translator_weightContraction_motor(Translator self, Motor other) {
    return translator_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity translator_weightContraction_multiVector(Translator self, MultiVector other) {
    return translator_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity translator_weightContraction_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return translator_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Horizon translator_weightContraction_origin(Translator self, Origin other) {
    return translator_antiWedge_horizon(self, origin_antiDual(other));
}

PointAtInfinity translator_weightContraction_plane(Translator self, Plane other) {
    return translator_antiWedge_pointAtInfinity(self, plane_antiDual(other));
}

PointAtInfinity translator_weightContraction_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return translator_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

Horizon translator_weightContraction_point(Translator self, Point other) {
    return translator_antiWedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity translator_weightContraction_rotor(Translator self, Rotor other) {
    return translator_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

PointAtInfinity translator_weightContraction_transflector(Translator self, Transflector other) {
    return translator_antiWedge_pointAtInfinity(self, transflector_antiDual(other));
}

Motor flector_bulkExpansion_flector(Flector self, Flector other) {
    return flector_wedge_flector(self, flector_dual(other));
}

Motor flector_bulkExpansion_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return flector_wedge_flector(self, flectorAtInfinity_dual(other));
}

Rotor flector_bulkExpansion_horizon(Flector self, Horizon other) {
    return flector_wedge_origin(self, horizon_dual(other));
}

PlaneAtOrigin flector_bulkExpansion_line(Flector self, Line other) {
    return flector_wedge_lineAtOrigin(self, line_dual(other));
}

PlaneAtOrigin flector_bulkExpansion_lineAtInfinity(Flector self, LineAtInfinity other) {
    return flector_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

PlaneAtOrigin flector_bulkExpansion_motor(Flector self, Motor other) {
    return flector_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin flector_bulkExpansion_multiVector(Flector self, MultiVector other) {
    return flector_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin flector_bulkExpansion_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return flector_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Rotor flector_bulkExpansion_plane(Flector self, Plane other) {
    return flector_wedge_origin(self, plane_dual(other));
}

AntiScalar flector_bulkExpansion_point(Flector self, Point other) {
    return flector_wedge_planeAtOrigin(self, point_dual(other));
}

AntiScalar flector_bulkExpansion_pointAtInfinity(Flector self, PointAtInfinity other) {
    return flector_wedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Motor flector_bulkExpansion_transflector(Flector self, Transflector other) {
    return flector_wedge_flector(self, transflector_dual(other));
}

PlaneAtOrigin flector_bulkExpansion_translator(Flector self, Translator other) {
    return flector_wedge_lineAtOrigin(self, translator_dual(other));
}

Motor flectorAtInfinity_bulkExpansion_flector(FlectorAtInfinity self, Flector other) {
    return flectorAtInfinity_wedge_flector(self, flector_dual(other));
}

Motor flectorAtInfinity_bulkExpansion_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_flector(self, flectorAtInfinity_dual(other));
}

Rotor flectorAtInfinity_bulkExpansion_horizon(FlectorAtInfinity self, Horizon other) {
    return flectorAtInfinity_wedge_origin(self, horizon_dual(other));
}

PlaneAtOrigin flectorAtInfinity_bulkExpansion_line(FlectorAtInfinity self, Line other) {
    return flectorAtInfinity_wedge_lineAtOrigin(self, line_dual(other));
}

PlaneAtOrigin flectorAtInfinity_bulkExpansion_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return flectorAtInfinity_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

PlaneAtOrigin flectorAtInfinity_bulkExpansion_motor(FlectorAtInfinity self, Motor other) {
    return flectorAtInfinity_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin flectorAtInfinity_bulkExpansion_multiVector(FlectorAtInfinity self, MultiVector other) {
    return flectorAtInfinity_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin flectorAtInfinity_bulkExpansion_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Rotor flectorAtInfinity_bulkExpansion_plane(FlectorAtInfinity self, Plane other) {
    return flectorAtInfinity_wedge_origin(self, plane_dual(other));
}

AntiScalar flectorAtInfinity_bulkExpansion_point(FlectorAtInfinity self, Point other) {
    return flectorAtInfinity_wedge_planeAtOrigin(self, point_dual(other));
}

AntiScalar flectorAtInfinity_bulkExpansion_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return flectorAtInfinity_wedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Motor flectorAtInfinity_bulkExpansion_transflector(FlectorAtInfinity self, Transflector other) {
    return flectorAtInfinity_wedge_flector(self, transflector_dual(other));
}

PlaneAtOrigin flectorAtInfinity_bulkExpansion_translator(FlectorAtInfinity self, Translator other) {
    return flectorAtInfinity_wedge_lineAtOrigin(self, translator_dual(other));
}

AntiScalar horizon_bulkExpansion_flector(Horizon self, Flector other) {
    return horizon_wedge_flector(self, flector_dual(other));
}

AntiScalar horizon_bulkExpansion_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return horizon_wedge_flector(self, flectorAtInfinity_dual(other));
}

AntiScalar horizon_bulkExpansion_horizon(Horizon self, Horizon other) {
    return horizon_wedge_origin(self, horizon_dual(other));
}

AntiScalar horizon_bulkExpansion_multiVector(Horizon self, MultiVector other) {
    return horizon_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

AntiScalar horizon_bulkExpansion_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return horizon_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

AntiScalar horizon_bulkExpansion_plane(Horizon self, Plane other) {
    return horizon_wedge_origin(self, plane_dual(other));
}

AntiScalar horizon_bulkExpansion_transflector(Horizon self, Transflector other) {
    return horizon_wedge_flector(self, transflector_dual(other));
}

Plane line_bulkExpansion_flector(Line self, Flector other) {
    return line_wedge_flector(self, flector_dual(other));
}

Plane line_bulkExpansion_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return line_wedge_flector(self, flectorAtInfinity_dual(other));
}

PlaneAtOrigin line_bulkExpansion_horizon(Line self, Horizon other) {
    return line_wedge_origin(self, horizon_dual(other));
}

AntiScalar line_bulkExpansion_line(Line self, Line other) {
    return line_wedge_lineAtOrigin(self, line_dual(other));
}

AntiScalar line_bulkExpansion_lineAtInfinity(Line self, LineAtInfinity other) {
    return line_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

AntiScalar line_bulkExpansion_motor(Line self, Motor other) {
    return line_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin line_bulkExpansion_multiVector(Line self, MultiVector other) {
    return line_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin line_bulkExpansion_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return line_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

PlaneAtOrigin line_bulkExpansion_plane(Line self, Plane other) {
    return line_wedge_origin(self, plane_dual(other));
}

Plane line_bulkExpansion_transflector(Line self, Transflector other) {
    return line_wedge_flector(self, transflector_dual(other));
}

AntiScalar line_bulkExpansion_translator(Line self, Translator other) {
    return line_wedge_lineAtOrigin(self, translator_dual(other));
}

Plane lineAtInfinity_bulkExpansion_flector(LineAtInfinity self, Flector other) {
    return lineAtInfinity_wedge_flector(self, flector_dual(other));
}

Plane lineAtInfinity_bulkExpansion_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return lineAtInfinity_wedge_flector(self, flectorAtInfinity_dual(other));
}

PlaneAtOrigin lineAtInfinity_bulkExpansion_horizon(LineAtInfinity self, Horizon other) {
    return lineAtInfinity_wedge_origin(self, horizon_dual(other));
}

AntiScalar lineAtInfinity_bulkExpansion_line(LineAtInfinity self, Line other) {
    return lineAtInfinity_wedge_lineAtOrigin(self, line_dual(other));
}

AntiScalar lineAtInfinity_bulkExpansion_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

AntiScalar lineAtInfinity_bulkExpansion_motor(LineAtInfinity self, Motor other) {
    return lineAtInfinity_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin lineAtInfinity_bulkExpansion_multiVector(LineAtInfinity self, MultiVector other) {
    return lineAtInfinity_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin lineAtInfinity_bulkExpansion_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return lineAtInfinity_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

PlaneAtOrigin lineAtInfinity_bulkExpansion_plane(LineAtInfinity self, Plane other) {
    return lineAtInfinity_wedge_origin(self, plane_dual(other));
}

Plane lineAtInfinity_bulkExpansion_transflector(LineAtInfinity self, Transflector other) {
    return lineAtInfinity_wedge_flector(self, transflector_dual(other));
}

AntiScalar lineAtInfinity_bulkExpansion_translator(LineAtInfinity self, Translator other) {
    return lineAtInfinity_wedge_lineAtOrigin(self, translator_dual(other));
}

PlaneAtOrigin lineAtOrigin_bulkExpansion_flector(LineAtOrigin self, Flector other) {
    return lineAtOrigin_wedge_flector(self, flector_dual(other));
}

PlaneAtOrigin lineAtOrigin_bulkExpansion_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return lineAtOrigin_wedge_flector(self, flectorAtInfinity_dual(other));
}

PlaneAtOrigin lineAtOrigin_bulkExpansion_transflector(LineAtOrigin self, Transflector other) {
    return lineAtOrigin_wedge_flector(self, transflector_dual(other));
}

Plane motor_bulkExpansion_flector(Motor self, Flector other) {
    return motor_wedge_flector(self, flector_dual(other));
}

Plane motor_bulkExpansion_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return motor_wedge_flector(self, flectorAtInfinity_dual(other));
}

PlaneAtOrigin motor_bulkExpansion_horizon(Motor self, Horizon other) {
    return motor_wedge_origin(self, horizon_dual(other));
}

AntiScalar motor_bulkExpansion_line(Motor self, Line other) {
    return motor_wedge_lineAtOrigin(self, line_dual(other));
}

AntiScalar motor_bulkExpansion_lineAtInfinity(Motor self, LineAtInfinity other) {
    return motor_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

AntiScalar motor_bulkExpansion_motor(Motor self, Motor other) {
    return motor_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin motor_bulkExpansion_multiVector(Motor self, MultiVector other) {
    return motor_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin motor_bulkExpansion_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return motor_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

PlaneAtOrigin motor_bulkExpansion_plane(Motor self, Plane other) {
    return motor_wedge_origin(self, plane_dual(other));
}

Plane motor_bulkExpansion_transflector(Motor self, Transflector other) {
    return motor_wedge_flector(self, transflector_dual(other));
}

AntiScalar motor_bulkExpansion_translator(Motor self, Translator other) {
    return motor_wedge_lineAtOrigin(self, translator_dual(other));
}

MultiVector multiVector_bulkExpansion_flector(MultiVector self, Flector other) {
    return multiVector_wedge_flector(self, flector_dual(other));
}

MultiVector multiVector_bulkExpansion_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return multiVector_wedge_flector(self, flectorAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_horizon(MultiVector self, Horizon other) {
    return multiVector_wedge_origin(self, horizon_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_line(MultiVector self, Line other) {
    return multiVector_wedge_lineAtOrigin(self, line_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return multiVector_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_motor(MultiVector self, Motor other) {
    return multiVector_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_multiVector(MultiVector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return multiVector_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_plane(MultiVector self, Plane other) {
    return multiVector_wedge_origin(self, plane_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_point(MultiVector self, Point other) {
    return multiVector_wedge_planeAtOrigin(self, point_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return multiVector_wedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVector multiVector_bulkExpansion_transflector(MultiVector self, Transflector other) {
    return multiVector_wedge_flector(self, transflector_dual(other));
}

MultiVectorAtOrigin multiVector_bulkExpansion_translator(MultiVector self, Translator other) {
    return multiVector_wedge_lineAtOrigin(self, translator_dual(other));
}

MultiVector multiVectorAtInfinity_bulkExpansion_flector(MultiVectorAtInfinity self, Flector other) {
    return multiVectorAtInfinity_wedge_flector(self, flector_dual(other));
}

MultiVector multiVectorAtInfinity_bulkExpansion_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_flector(self, flectorAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_horizon(MultiVectorAtInfinity self, Horizon other) {
    return multiVectorAtInfinity_wedge_origin(self, horizon_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_line(MultiVectorAtInfinity self, Line other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(self, line_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_motor(MultiVectorAtInfinity self, Motor other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_plane(MultiVectorAtInfinity self, Plane other) {
    return multiVectorAtInfinity_wedge_origin(self, plane_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_point(MultiVectorAtInfinity self, Point other) {
    return multiVectorAtInfinity_wedge_planeAtOrigin(self, point_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return multiVectorAtInfinity_wedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

MultiVector multiVectorAtInfinity_bulkExpansion_transflector(MultiVectorAtInfinity self, Transflector other) {
    return multiVectorAtInfinity_wedge_flector(self, transflector_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_bulkExpansion_translator(MultiVectorAtInfinity self, Translator other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(self, translator_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkExpansion_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVectorAtOrigin_wedge_flector(self, flector_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkExpansion_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multiVectorAtOrigin_wedge_flector(self, flectorAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_bulkExpansion_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVectorAtOrigin_wedge_flector(self, transflector_dual(other));
}

Rotor origin_bulkExpansion_flector(Origin self, Flector other) {
    return origin_wedge_flector(self, flector_dual(other));
}

Rotor origin_bulkExpansion_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return origin_wedge_flector(self, flectorAtInfinity_dual(other));
}

Rotor origin_bulkExpansion_transflector(Origin self, Transflector other) {
    return origin_wedge_flector(self, transflector_dual(other));
}

AntiScalar plane_bulkExpansion_flector(Plane self, Flector other) {
    return plane_wedge_flector(self, flector_dual(other));
}

AntiScalar plane_bulkExpansion_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return plane_wedge_flector(self, flectorAtInfinity_dual(other));
}

AntiScalar plane_bulkExpansion_horizon(Plane self, Horizon other) {
    return plane_wedge_origin(self, horizon_dual(other));
}

AntiScalar plane_bulkExpansion_multiVector(Plane self, MultiVector other) {
    return plane_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

AntiScalar plane_bulkExpansion_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return plane_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

AntiScalar plane_bulkExpansion_plane(Plane self, Plane other) {
    return plane_wedge_origin(self, plane_dual(other));
}

AntiScalar plane_bulkExpansion_transflector(Plane self, Transflector other) {
    return plane_wedge_flector(self, transflector_dual(other));
}

AntiScalar planeAtOrigin_bulkExpansion_flector(PlaneAtOrigin self, Flector other) {
    return planeAtOrigin_wedge_flector(self, flector_dual(other));
}

AntiScalar planeAtOrigin_bulkExpansion_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return planeAtOrigin_wedge_flector(self, flectorAtInfinity_dual(other));
}

AntiScalar planeAtOrigin_bulkExpansion_transflector(PlaneAtOrigin self, Transflector other) {
    return planeAtOrigin_wedge_flector(self, transflector_dual(other));
}

Motor point_bulkExpansion_flector(Point self, Flector other) {
    return point_wedge_flector(self, flector_dual(other));
}

Motor point_bulkExpansion_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return point_wedge_flector(self, flectorAtInfinity_dual(other));
}

LineAtOrigin point_bulkExpansion_horizon(Point self, Horizon other) {
    return point_wedge_origin(self, horizon_dual(other));
}

PlaneAtOrigin point_bulkExpansion_line(Point self, Line other) {
    return point_wedge_lineAtOrigin(self, line_dual(other));
}

PlaneAtOrigin point_bulkExpansion_lineAtInfinity(Point self, LineAtInfinity other) {
    return point_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

PlaneAtOrigin point_bulkExpansion_motor(Point self, Motor other) {
    return point_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin point_bulkExpansion_multiVector(Point self, MultiVector other) {
    return point_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin point_bulkExpansion_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return point_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

LineAtOrigin point_bulkExpansion_plane(Point self, Plane other) {
    return point_wedge_origin(self, plane_dual(other));
}

AntiScalar point_bulkExpansion_point(Point self, Point other) {
    return point_wedge_planeAtOrigin(self, point_dual(other));
}

AntiScalar point_bulkExpansion_pointAtInfinity(Point self, PointAtInfinity other) {
    return point_wedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Motor point_bulkExpansion_transflector(Point self, Transflector other) {
    return point_wedge_flector(self, transflector_dual(other));
}

PlaneAtOrigin point_bulkExpansion_translator(Point self, Translator other) {
    return point_wedge_lineAtOrigin(self, translator_dual(other));
}

Motor pointAtInfinity_bulkExpansion_flector(PointAtInfinity self, Flector other) {
    return pointAtInfinity_wedge_flector(self, flector_dual(other));
}

Motor pointAtInfinity_bulkExpansion_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return pointAtInfinity_wedge_flector(self, flectorAtInfinity_dual(other));
}

LineAtOrigin pointAtInfinity_bulkExpansion_horizon(PointAtInfinity self, Horizon other) {
    return pointAtInfinity_wedge_origin(self, horizon_dual(other));
}

PlaneAtOrigin pointAtInfinity_bulkExpansion_line(PointAtInfinity self, Line other) {
    return pointAtInfinity_wedge_lineAtOrigin(self, line_dual(other));
}

PlaneAtOrigin pointAtInfinity_bulkExpansion_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return pointAtInfinity_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

PlaneAtOrigin pointAtInfinity_bulkExpansion_motor(PointAtInfinity self, Motor other) {
    return pointAtInfinity_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin pointAtInfinity_bulkExpansion_multiVector(PointAtInfinity self, MultiVector other) {
    return pointAtInfinity_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin pointAtInfinity_bulkExpansion_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return pointAtInfinity_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

LineAtOrigin pointAtInfinity_bulkExpansion_plane(PointAtInfinity self, Plane other) {
    return pointAtInfinity_wedge_origin(self, plane_dual(other));
}

AntiScalar pointAtInfinity_bulkExpansion_point(PointAtInfinity self, Point other) {
    return pointAtInfinity_wedge_planeAtOrigin(self, point_dual(other));
}

AntiScalar pointAtInfinity_bulkExpansion_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_wedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Motor pointAtInfinity_bulkExpansion_transflector(PointAtInfinity self, Transflector other) {
    return pointAtInfinity_wedge_flector(self, transflector_dual(other));
}

PlaneAtOrigin pointAtInfinity_bulkExpansion_translator(PointAtInfinity self, Translator other) {
    return pointAtInfinity_wedge_lineAtOrigin(self, translator_dual(other));
}

PlaneAtOrigin rotor_bulkExpansion_flector(Rotor self, Flector other) {
    return rotor_wedge_flector(self, flector_dual(other));
}

PlaneAtOrigin rotor_bulkExpansion_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return rotor_wedge_flector(self, flectorAtInfinity_dual(other));
}

PlaneAtOrigin rotor_bulkExpansion_transflector(Rotor self, Transflector other) {
    return rotor_wedge_flector(self, transflector_dual(other));
}

Motor transflector_bulkExpansion_flector(Transflector self, Flector other) {
    return transflector_wedge_flector(self, flector_dual(other));
}

Motor transflector_bulkExpansion_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return transflector_wedge_flector(self, flectorAtInfinity_dual(other));
}

Rotor transflector_bulkExpansion_horizon(Transflector self, Horizon other) {
    return transflector_wedge_origin(self, horizon_dual(other));
}

PlaneAtOrigin transflector_bulkExpansion_line(Transflector self, Line other) {
    return transflector_wedge_lineAtOrigin(self, line_dual(other));
}

PlaneAtOrigin transflector_bulkExpansion_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return transflector_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

PlaneAtOrigin transflector_bulkExpansion_motor(Transflector self, Motor other) {
    return transflector_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin transflector_bulkExpansion_multiVector(Transflector self, MultiVector other) {
    return transflector_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin transflector_bulkExpansion_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return transflector_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

Rotor transflector_bulkExpansion_plane(Transflector self, Plane other) {
    return transflector_wedge_origin(self, plane_dual(other));
}

AntiScalar transflector_bulkExpansion_point(Transflector self, Point other) {
    return transflector_wedge_planeAtOrigin(self, point_dual(other));
}

AntiScalar transflector_bulkExpansion_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return transflector_wedge_planeAtOrigin(self, pointAtInfinity_dual(other));
}

Motor transflector_bulkExpansion_transflector(Transflector self, Transflector other) {
    return transflector_wedge_flector(self, transflector_dual(other));
}

PlaneAtOrigin transflector_bulkExpansion_translator(Transflector self, Translator other) {
    return transflector_wedge_lineAtOrigin(self, translator_dual(other));
}

Plane translator_bulkExpansion_flector(Translator self, Flector other) {
    return translator_wedge_flector(self, flector_dual(other));
}

Plane translator_bulkExpansion_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return translator_wedge_flector(self, flectorAtInfinity_dual(other));
}

PlaneAtOrigin translator_bulkExpansion_horizon(Translator self, Horizon other) {
    return translator_wedge_origin(self, horizon_dual(other));
}

AntiScalar translator_bulkExpansion_line(Translator self, Line other) {
    return translator_wedge_lineAtOrigin(self, line_dual(other));
}

AntiScalar translator_bulkExpansion_lineAtInfinity(Translator self, LineAtInfinity other) {
    return translator_wedge_lineAtOrigin(self, lineAtInfinity_dual(other));
}

AntiScalar translator_bulkExpansion_motor(Translator self, Motor other) {
    return translator_wedge_lineAtOrigin(self, motor_dual(other));
}

MultiVectorAtOrigin translator_bulkExpansion_multiVector(Translator self, MultiVector other) {
    return translator_wedge_multiVectorAtOrigin(self, multiVector_dual(other));
}

MultiVectorAtOrigin translator_bulkExpansion_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return translator_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other));
}

PlaneAtOrigin translator_bulkExpansion_plane(Translator self, Plane other) {
    return translator_wedge_origin(self, plane_dual(other));
}

Plane translator_bulkExpansion_transflector(Translator self, Transflector other) {
    return translator_wedge_flector(self, transflector_dual(other));
}

AntiScalar translator_bulkExpansion_translator(Translator self, Translator other) {
    return translator_wedge_lineAtOrigin(self, translator_dual(other));
}

Motor flector_weightExpansion_flector(Flector self, Flector other) {
    return flector_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

Plane flector_weightExpansion_line(Flector self, Line other) {
    return flector_wedge_lineAtInfinity(self, line_antiDual(other));
}

Plane flector_weightExpansion_lineAtOrigin(Flector self, LineAtOrigin other) {
    return flector_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVector flector_weightExpansion_motor(Flector self, Motor other) {
    return flector_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVector flector_weightExpansion_multiVector(Flector self, MultiVector other) {
    return flector_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVector flector_weightExpansion_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return flector_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

AntiScalar flector_weightExpansion_origin(Flector self, Origin other) {
    return flector_wedge_horizon(self, origin_antiDual(other));
}

Motor flector_weightExpansion_plane(Flector self, Plane other) {
    return flector_wedge_pointAtInfinity(self, plane_antiDual(other));
}

Motor flector_weightExpansion_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return flector_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

AntiScalar flector_weightExpansion_point(Flector self, Point other) {
    return flector_wedge_horizon(self, point_antiDual(other));
}

MultiVector flector_weightExpansion_rotor(Flector self, Rotor other) {
    return flector_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Motor flector_weightExpansion_transflector(Flector self, Transflector other) {
    return flector_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

LineAtInfinity flectorAtInfinity_weightExpansion_flector(FlectorAtInfinity self, Flector other) {
    return flectorAtInfinity_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

Horizon flectorAtInfinity_weightExpansion_line(FlectorAtInfinity self, Line other) {
    return flectorAtInfinity_wedge_lineAtInfinity(self, line_antiDual(other));
}

Horizon flectorAtInfinity_weightExpansion_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return flectorAtInfinity_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_weightExpansion_motor(FlectorAtInfinity self, Motor other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_weightExpansion_multiVector(FlectorAtInfinity self, MultiVector other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_weightExpansion_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity flectorAtInfinity_weightExpansion_plane(FlectorAtInfinity self, Plane other) {
    return flectorAtInfinity_wedge_pointAtInfinity(self, plane_antiDual(other));
}

LineAtInfinity flectorAtInfinity_weightExpansion_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return flectorAtInfinity_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_weightExpansion_rotor(FlectorAtInfinity self, Rotor other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

LineAtInfinity flectorAtInfinity_weightExpansion_transflector(FlectorAtInfinity self, Transflector other) {
    return flectorAtInfinity_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

Horizon horizon_weightExpansion_motor(Horizon self, Motor other) {
    return horizon_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

Horizon horizon_weightExpansion_multiVector(Horizon self, MultiVector other) {
    return horizon_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

Horizon horizon_weightExpansion_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return horizon_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Horizon horizon_weightExpansion_rotor(Horizon self, Rotor other) {
    return horizon_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Plane line_weightExpansion_flector(Line self, Flector other) {
    return line_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

AntiScalar line_weightExpansion_line(Line self, Line other) {
    return line_wedge_lineAtInfinity(self, line_antiDual(other));
}

AntiScalar line_weightExpansion_lineAtOrigin(Line self, LineAtOrigin other) {
    return line_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVector line_weightExpansion_motor(Line self, Motor other) {
    return line_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVector line_weightExpansion_multiVector(Line self, MultiVector other) {
    return line_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVector line_weightExpansion_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return line_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Plane line_weightExpansion_plane(Line self, Plane other) {
    return line_wedge_pointAtInfinity(self, plane_antiDual(other));
}

Plane line_weightExpansion_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return line_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVector line_weightExpansion_rotor(Line self, Rotor other) {
    return line_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Plane line_weightExpansion_transflector(Line self, Transflector other) {
    return line_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

Horizon lineAtInfinity_weightExpansion_flector(LineAtInfinity self, Flector other) {
    return lineAtInfinity_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_weightExpansion_motor(LineAtInfinity self, Motor other) {
    return lineAtInfinity_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_weightExpansion_multiVector(LineAtInfinity self, MultiVector other) {
    return lineAtInfinity_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_weightExpansion_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return lineAtInfinity_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Horizon lineAtInfinity_weightExpansion_plane(LineAtInfinity self, Plane other) {
    return lineAtInfinity_wedge_pointAtInfinity(self, plane_antiDual(other));
}

Horizon lineAtInfinity_weightExpansion_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return lineAtInfinity_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_weightExpansion_rotor(LineAtInfinity self, Rotor other) {
    return lineAtInfinity_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Horizon lineAtInfinity_weightExpansion_transflector(LineAtInfinity self, Transflector other) {
    return lineAtInfinity_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

PlaneAtOrigin lineAtOrigin_weightExpansion_flector(LineAtOrigin self, Flector other) {
    return lineAtOrigin_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

AntiScalar lineAtOrigin_weightExpansion_line(LineAtOrigin self, Line other) {
    return lineAtOrigin_wedge_lineAtInfinity(self, line_antiDual(other));
}

AntiScalar lineAtOrigin_weightExpansion_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return lineAtOrigin_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtOrigin lineAtOrigin_weightExpansion_motor(LineAtOrigin self, Motor other) {
    return lineAtOrigin_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtOrigin lineAtOrigin_weightExpansion_multiVector(LineAtOrigin self, MultiVector other) {
    return lineAtOrigin_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtOrigin lineAtOrigin_weightExpansion_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return lineAtOrigin_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

PlaneAtOrigin lineAtOrigin_weightExpansion_plane(LineAtOrigin self, Plane other) {
    return lineAtOrigin_wedge_pointAtInfinity(self, plane_antiDual(other));
}

PlaneAtOrigin lineAtOrigin_weightExpansion_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return lineAtOrigin_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVectorAtOrigin lineAtOrigin_weightExpansion_rotor(LineAtOrigin self, Rotor other) {
    return lineAtOrigin_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

PlaneAtOrigin lineAtOrigin_weightExpansion_transflector(LineAtOrigin self, Transflector other) {
    return lineAtOrigin_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

Plane motor_weightExpansion_flector(Motor self, Flector other) {
    return motor_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

AntiScalar motor_weightExpansion_line(Motor self, Line other) {
    return motor_wedge_lineAtInfinity(self, line_antiDual(other));
}

AntiScalar motor_weightExpansion_lineAtOrigin(Motor self, LineAtOrigin other) {
    return motor_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVector motor_weightExpansion_motor(Motor self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVector motor_weightExpansion_multiVector(Motor self, MultiVector other) {
    return motor_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVector motor_weightExpansion_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return motor_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Plane motor_weightExpansion_plane(Motor self, Plane other) {
    return motor_wedge_pointAtInfinity(self, plane_antiDual(other));
}

Plane motor_weightExpansion_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return motor_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVector motor_weightExpansion_rotor(Motor self, Rotor other) {
    return motor_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Plane motor_weightExpansion_transflector(Motor self, Transflector other) {
    return motor_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

MultiVector multiVector_weightExpansion_flector(MultiVector self, Flector other) {
    return multiVector_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVector multiVector_weightExpansion_line(MultiVector self, Line other) {
    return multiVector_wedge_lineAtInfinity(self, line_antiDual(other));
}

MultiVector multiVector_weightExpansion_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return multiVector_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVector multiVector_weightExpansion_motor(MultiVector self, Motor other) {
    return multiVector_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVector multiVector_weightExpansion_multiVector(MultiVector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVector multiVector_weightExpansion_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return multiVector_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

MultiVector multiVector_weightExpansion_origin(MultiVector self, Origin other) {
    return multiVector_wedge_horizon(self, origin_antiDual(other));
}

MultiVector multiVector_weightExpansion_plane(MultiVector self, Plane other) {
    return multiVector_wedge_pointAtInfinity(self, plane_antiDual(other));
}

MultiVector multiVector_weightExpansion_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return multiVector_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVector multiVector_weightExpansion_point(MultiVector self, Point other) {
    return multiVector_wedge_horizon(self, point_antiDual(other));
}

MultiVector multiVector_weightExpansion_rotor(MultiVector self, Rotor other) {
    return multiVector_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

MultiVector multiVector_weightExpansion_transflector(MultiVector self, Transflector other) {
    return multiVector_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_flector(MultiVectorAtInfinity self, Flector other) {
    return multiVectorAtInfinity_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_line(MultiVectorAtInfinity self, Line other) {
    return multiVectorAtInfinity_wedge_lineAtInfinity(self, line_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return multiVectorAtInfinity_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_motor(MultiVectorAtInfinity self, Motor other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Horizon multiVectorAtInfinity_weightExpansion_origin(MultiVectorAtInfinity self, Origin other) {
    return multiVectorAtInfinity_wedge_horizon(self, origin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_plane(MultiVectorAtInfinity self, Plane other) {
    return multiVectorAtInfinity_wedge_pointAtInfinity(self, plane_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return multiVectorAtInfinity_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

Horizon multiVectorAtInfinity_weightExpansion_point(MultiVectorAtInfinity self, Point other) {
    return multiVectorAtInfinity_wedge_horizon(self, point_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_rotor(MultiVectorAtInfinity self, Rotor other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_weightExpansion_transflector(MultiVectorAtInfinity self, Transflector other) {
    return multiVectorAtInfinity_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVectorAtOrigin_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_line(MultiVectorAtOrigin self, Line other) {
    return multiVectorAtOrigin_wedge_lineAtInfinity(self, line_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return multiVectorAtOrigin_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

AntiScalar multiVectorAtOrigin_weightExpansion_origin(MultiVectorAtOrigin self, Origin other) {
    return multiVectorAtOrigin_wedge_horizon(self, origin_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_plane(MultiVectorAtOrigin self, Plane other) {
    return multiVectorAtOrigin_wedge_pointAtInfinity(self, plane_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return multiVectorAtOrigin_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

AntiScalar multiVectorAtOrigin_weightExpansion_point(MultiVectorAtOrigin self, Point other) {
    return multiVectorAtOrigin_wedge_horizon(self, point_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_rotor(MultiVectorAtOrigin self, Rotor other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_weightExpansion_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVectorAtOrigin_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

Rotor origin_weightExpansion_flector(Origin self, Flector other) {
    return origin_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

PlaneAtOrigin origin_weightExpansion_line(Origin self, Line other) {
    return origin_wedge_lineAtInfinity(self, line_antiDual(other));
}

PlaneAtOrigin origin_weightExpansion_lineAtOrigin(Origin self, LineAtOrigin other) {
    return origin_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtOrigin origin_weightExpansion_motor(Origin self, Motor other) {
    return origin_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtOrigin origin_weightExpansion_multiVector(Origin self, MultiVector other) {
    return origin_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtOrigin origin_weightExpansion_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return origin_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

AntiScalar origin_weightExpansion_origin(Origin self, Origin other) {
    return origin_wedge_horizon(self, origin_antiDual(other));
}

LineAtOrigin origin_weightExpansion_plane(Origin self, Plane other) {
    return origin_wedge_pointAtInfinity(self, plane_antiDual(other));
}

LineAtOrigin origin_weightExpansion_planeAtOrigin(Origin self, PlaneAtOrigin other) {
    return origin_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

AntiScalar origin_weightExpansion_point(Origin self, Point other) {
    return origin_wedge_horizon(self, point_antiDual(other));
}

MultiVectorAtOrigin origin_weightExpansion_rotor(Origin self, Rotor other) {
    return origin_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

LineAtOrigin origin_weightExpansion_transflector(Origin self, Transflector other) {
    return origin_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

AntiScalar plane_weightExpansion_flector(Plane self, Flector other) {
    return plane_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVector plane_weightExpansion_motor(Plane self, Motor other) {
    return plane_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVector plane_weightExpansion_multiVector(Plane self, MultiVector other) {
    return plane_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVector plane_weightExpansion_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return plane_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

AntiScalar plane_weightExpansion_plane(Plane self, Plane other) {
    return plane_wedge_pointAtInfinity(self, plane_antiDual(other));
}

AntiScalar plane_weightExpansion_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return plane_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVector plane_weightExpansion_rotor(Plane self, Rotor other) {
    return plane_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

AntiScalar plane_weightExpansion_transflector(Plane self, Transflector other) {
    return plane_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

AntiScalar planeAtOrigin_weightExpansion_flector(PlaneAtOrigin self, Flector other) {
    return planeAtOrigin_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVectorAtOrigin planeAtOrigin_weightExpansion_motor(PlaneAtOrigin self, Motor other) {
    return planeAtOrigin_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtOrigin planeAtOrigin_weightExpansion_multiVector(PlaneAtOrigin self, MultiVector other) {
    return planeAtOrigin_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtOrigin planeAtOrigin_weightExpansion_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return planeAtOrigin_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

AntiScalar planeAtOrigin_weightExpansion_plane(PlaneAtOrigin self, Plane other) {
    return planeAtOrigin_wedge_pointAtInfinity(self, plane_antiDual(other));
}

AntiScalar planeAtOrigin_weightExpansion_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVectorAtOrigin planeAtOrigin_weightExpansion_rotor(PlaneAtOrigin self, Rotor other) {
    return planeAtOrigin_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

AntiScalar planeAtOrigin_weightExpansion_transflector(PlaneAtOrigin self, Transflector other) {
    return planeAtOrigin_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

Motor point_weightExpansion_flector(Point self, Flector other) {
    return point_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

Plane point_weightExpansion_line(Point self, Line other) {
    return point_wedge_lineAtInfinity(self, line_antiDual(other));
}

Plane point_weightExpansion_lineAtOrigin(Point self, LineAtOrigin other) {
    return point_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVector point_weightExpansion_motor(Point self, Motor other) {
    return point_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVector point_weightExpansion_multiVector(Point self, MultiVector other) {
    return point_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVector point_weightExpansion_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return point_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

AntiScalar point_weightExpansion_origin(Point self, Origin other) {
    return point_wedge_horizon(self, origin_antiDual(other));
}

Line point_weightExpansion_plane(Point self, Plane other) {
    return point_wedge_pointAtInfinity(self, plane_antiDual(other));
}

Line point_weightExpansion_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return point_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

AntiScalar point_weightExpansion_point(Point self, Point other) {
    return point_wedge_horizon(self, point_antiDual(other));
}

MultiVector point_weightExpansion_rotor(Point self, Rotor other) {
    return point_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Line point_weightExpansion_transflector(Point self, Transflector other) {
    return point_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

LineAtInfinity pointAtInfinity_weightExpansion_flector(PointAtInfinity self, Flector other) {
    return pointAtInfinity_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

Horizon pointAtInfinity_weightExpansion_line(PointAtInfinity self, Line other) {
    return pointAtInfinity_wedge_lineAtInfinity(self, line_antiDual(other));
}

Horizon pointAtInfinity_weightExpansion_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return pointAtInfinity_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_weightExpansion_motor(PointAtInfinity self, Motor other) {
    return pointAtInfinity_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_weightExpansion_multiVector(PointAtInfinity self, MultiVector other) {
    return pointAtInfinity_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_weightExpansion_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return pointAtInfinity_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity pointAtInfinity_weightExpansion_plane(PointAtInfinity self, Plane other) {
    return pointAtInfinity_wedge_pointAtInfinity(self, plane_antiDual(other));
}

LineAtInfinity pointAtInfinity_weightExpansion_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return pointAtInfinity_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_weightExpansion_rotor(PointAtInfinity self, Rotor other) {
    return pointAtInfinity_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

LineAtInfinity pointAtInfinity_weightExpansion_transflector(PointAtInfinity self, Transflector other) {
    return pointAtInfinity_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

PlaneAtOrigin rotor_weightExpansion_flector(Rotor self, Flector other) {
    return rotor_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

AntiScalar rotor_weightExpansion_line(Rotor self, Line other) {
    return rotor_wedge_lineAtInfinity(self, line_antiDual(other));
}

AntiScalar rotor_weightExpansion_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return rotor_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVectorAtOrigin rotor_weightExpansion_motor(Rotor self, Motor other) {
    return rotor_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVectorAtOrigin rotor_weightExpansion_multiVector(Rotor self, MultiVector other) {
    return rotor_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVectorAtOrigin rotor_weightExpansion_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return rotor_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

PlaneAtOrigin rotor_weightExpansion_plane(Rotor self, Plane other) {
    return rotor_wedge_pointAtInfinity(self, plane_antiDual(other));
}

PlaneAtOrigin rotor_weightExpansion_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return rotor_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVectorAtOrigin rotor_weightExpansion_rotor(Rotor self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

PlaneAtOrigin rotor_weightExpansion_transflector(Rotor self, Transflector other) {
    return rotor_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

Translator transflector_weightExpansion_flector(Transflector self, Flector other) {
    return transflector_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

Horizon transflector_weightExpansion_line(Transflector self, Line other) {
    return transflector_wedge_lineAtInfinity(self, line_antiDual(other));
}

Horizon transflector_weightExpansion_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return transflector_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other));
}

MultiVector transflector_weightExpansion_motor(Transflector self, Motor other) {
    return transflector_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVector transflector_weightExpansion_multiVector(Transflector self, MultiVector other) {
    return transflector_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVector transflector_weightExpansion_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return transflector_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Translator transflector_weightExpansion_plane(Transflector self, Plane other) {
    return transflector_wedge_pointAtInfinity(self, plane_antiDual(other));
}

Translator transflector_weightExpansion_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return transflector_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVector transflector_weightExpansion_rotor(Transflector self, Rotor other) {
    return transflector_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Translator transflector_weightExpansion_transflector(Transflector self, Transflector other) {
    return transflector_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

Horizon translator_weightExpansion_flector(Translator self, Flector other) {
    return translator_wedge_flectorAtInfinity(self, flector_antiDual(other));
}

MultiVector translator_weightExpansion_motor(Translator self, Motor other) {
    return translator_wedge_multiVectorAtInfinity(self, motor_antiDual(other));
}

MultiVector translator_weightExpansion_multiVector(Translator self, MultiVector other) {
    return translator_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other));
}

MultiVector translator_weightExpansion_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return translator_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other));
}

Horizon translator_weightExpansion_plane(Translator self, Plane other) {
    return translator_wedge_pointAtInfinity(self, plane_antiDual(other));
}

Horizon translator_weightExpansion_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return translator_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other));
}

MultiVector translator_weightExpansion_rotor(Translator self, Rotor other) {
    return translator_wedge_multiVectorAtInfinity(self, rotor_antiDual(other));
}

Horizon translator_weightExpansion_transflector(Translator self, Transflector other) {
    return translator_wedge_pointAtInfinity(self, transflector_antiDual(other));
}

MultiVector flector_antiProjectOrthogonallyOnto_flector(Flector self, Flector other) {
    return flector_wedge_multiVectorAtInfinity(other, flector_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Plane flector_antiProjectOrthogonallyOnto_line(Flector self, Line other) {
    return line_wedge_pointAtInfinity(other, flector_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

PlaneAtOrigin flector_antiProjectOrthogonallyOnto_lineAtOrigin(Flector self, LineAtOrigin other) {
    return lineAtOrigin_wedge_pointAtInfinity(other, flector_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector flector_antiProjectOrthogonallyOnto_motor(Flector self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, flector_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector flector_antiProjectOrthogonallyOnto_multiVector(Flector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, flector_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin flector_antiProjectOrthogonallyOnto_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, flector_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

MultiVectorAtOrigin flector_antiProjectOrthogonallyOnto_origin(Flector self, Origin other) {
    return origin_wedge_multiVectorAtInfinity(other, flector_antiWedge_horizon(self, origin_antiDual(other)));
}

Plane flector_antiProjectOrthogonallyOnto_plane(Flector self, Plane other) {
    return plane_wedge_scalar(other, flector_antiWedge_pointAtInfinity(self, plane_antiDual(other)));
}

PlaneAtOrigin flector_antiProjectOrthogonallyOnto_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_scalar(other, flector_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVector flector_antiProjectOrthogonallyOnto_point(Flector self, Point other) {
    return point_wedge_multiVectorAtInfinity(other, flector_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin flector_antiProjectOrthogonallyOnto_rotor(Flector self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, flector_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Transflector flector_antiProjectOrthogonallyOnto_transflector(Flector self, Transflector other) {
    return transflector_wedge_scalar(other, flector_antiWedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Motor line_antiProjectOrthogonallyOnto_flector(Line self, Flector other) {
    return flector_wedge_pointAtInfinity(other, line_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Line line_antiProjectOrthogonallyOnto_line(Line self, Line other) {
    return line_wedge_scalar(other, line_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

LineAtOrigin line_antiProjectOrthogonallyOnto_lineAtOrigin(Line self, LineAtOrigin other) {
    return lineAtOrigin_wedge_scalar(other, line_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector line_antiProjectOrthogonallyOnto_motor(Line self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, line_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector line_antiProjectOrthogonallyOnto_multiVector(Line self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, line_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin line_antiProjectOrthogonallyOnto_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, line_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

LineAtOrigin line_antiProjectOrthogonallyOnto_origin(Line self, Origin other) {
    return origin_wedge_pointAtInfinity(other, line_antiWedge_horizon(self, origin_antiDual(other)));
}

Line line_antiProjectOrthogonallyOnto_point(Line self, Point other) {
    return point_wedge_pointAtInfinity(other, line_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin line_antiProjectOrthogonallyOnto_rotor(Line self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, line_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Motor lineAtOrigin_antiProjectOrthogonallyOnto_flector(LineAtOrigin self, Flector other) {
    return flector_wedge_pointAtInfinity(other, lineAtOrigin_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Line lineAtOrigin_antiProjectOrthogonallyOnto_line(LineAtOrigin self, Line other) {
    return line_wedge_scalar(other, lineAtOrigin_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

LineAtOrigin lineAtOrigin_antiProjectOrthogonallyOnto_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return lineAtOrigin_wedge_scalar(other, lineAtOrigin_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector lineAtOrigin_antiProjectOrthogonallyOnto_motor(LineAtOrigin self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, lineAtOrigin_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector lineAtOrigin_antiProjectOrthogonallyOnto_multiVector(LineAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, lineAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin lineAtOrigin_antiProjectOrthogonallyOnto_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, lineAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

LineAtOrigin lineAtOrigin_antiProjectOrthogonallyOnto_origin(LineAtOrigin self, Origin other) {
    return origin_wedge_pointAtInfinity(other, lineAtOrigin_antiWedge_horizon(self, origin_antiDual(other)));
}

Line lineAtOrigin_antiProjectOrthogonallyOnto_point(LineAtOrigin self, Point other) {
    return point_wedge_pointAtInfinity(other, lineAtOrigin_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin lineAtOrigin_antiProjectOrthogonallyOnto_rotor(LineAtOrigin self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, lineAtOrigin_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Motor motor_antiProjectOrthogonallyOnto_flector(Motor self, Flector other) {
    return flector_wedge_flectorAtInfinity(other, motor_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVector motor_antiProjectOrthogonallyOnto_line(Motor self, Line other) {
    return line_wedge_multiVectorAtInfinity(other, motor_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

MultiVectorAtOrigin motor_antiProjectOrthogonallyOnto_lineAtOrigin(Motor self, LineAtOrigin other) {
    return lineAtOrigin_wedge_multiVectorAtInfinity(other, motor_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector motor_antiProjectOrthogonallyOnto_motor(Motor self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, motor_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector motor_antiProjectOrthogonallyOnto_multiVector(Motor self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, motor_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin motor_antiProjectOrthogonallyOnto_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, motor_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Rotor motor_antiProjectOrthogonallyOnto_origin(Motor self, Origin other) {
    return origin_wedge_flectorAtInfinity(other, motor_antiWedge_horizon(self, origin_antiDual(other)));
}

AntiScalar motor_antiProjectOrthogonallyOnto_plane(Motor self, Plane other) {
    return plane_wedge_pointAtInfinity(other, motor_antiWedge_pointAtInfinity(self, plane_antiDual(other)));
}

AntiScalar motor_antiProjectOrthogonallyOnto_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_pointAtInfinity(other, motor_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Motor motor_antiProjectOrthogonallyOnto_point(Motor self, Point other) {
    return point_wedge_flectorAtInfinity(other, motor_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin motor_antiProjectOrthogonallyOnto_rotor(Motor self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, motor_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Translator motor_antiProjectOrthogonallyOnto_transflector(Motor self, Transflector other) {
    return transflector_wedge_pointAtInfinity(other, motor_antiWedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector multiVector_antiProjectOrthogonallyOnto_flector(MultiVector self, Flector other) {
    return flector_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVector multiVector_antiProjectOrthogonallyOnto_line(MultiVector self, Line other) {
    return line_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

MultiVectorAtOrigin multiVector_antiProjectOrthogonallyOnto_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return lineAtOrigin_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector multiVector_antiProjectOrthogonallyOnto_motor(MultiVector self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector multiVector_antiProjectOrthogonallyOnto_multiVector(MultiVector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin multiVector_antiProjectOrthogonallyOnto_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

MultiVectorAtOrigin multiVector_antiProjectOrthogonallyOnto_origin(MultiVector self, Origin other) {
    return origin_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_horizon(self, origin_antiDual(other)));
}

MultiVector multiVector_antiProjectOrthogonallyOnto_plane(MultiVector self, Plane other) {
    return plane_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_pointAtInfinity(self, plane_antiDual(other)));
}

MultiVectorAtOrigin multiVector_antiProjectOrthogonallyOnto_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVector multiVector_antiProjectOrthogonallyOnto_point(MultiVector self, Point other) {
    return point_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin multiVector_antiProjectOrthogonallyOnto_rotor(MultiVector self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector multiVector_antiProjectOrthogonallyOnto_transflector(MultiVector self, Transflector other) {
    return transflector_wedge_multiVectorAtInfinity(other, multiVector_antiWedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectOrthogonallyOnto_flector(MultiVectorAtOrigin self, Flector other) {
    return flector_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectOrthogonallyOnto_line(MultiVectorAtOrigin self, Line other) {
    return line_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectOrthogonallyOnto_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return lineAtOrigin_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectOrthogonallyOnto_motor(MultiVectorAtOrigin self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectOrthogonallyOnto_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectOrthogonallyOnto_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectOrthogonallyOnto_origin(MultiVectorAtOrigin self, Origin other) {
    return origin_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_horizon(self, origin_antiDual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectOrthogonallyOnto_plane(MultiVectorAtOrigin self, Plane other) {
    return plane_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_pointAtInfinity(self, plane_antiDual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectOrthogonallyOnto_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectOrthogonallyOnto_point(MultiVectorAtOrigin self, Point other) {
    return point_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectOrthogonallyOnto_rotor(MultiVectorAtOrigin self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectOrthogonallyOnto_transflector(MultiVectorAtOrigin self, Transflector other) {
    return transflector_wedge_multiVectorAtInfinity(other, multiVectorAtOrigin_antiWedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Flector origin_antiProjectOrthogonallyOnto_flector(Origin self, Flector other) {
    return flector_wedge_scalar(other, origin_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Motor origin_antiProjectOrthogonallyOnto_motor(Origin self, Motor other) {
    return motor_wedge_scalar(other, origin_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector origin_antiProjectOrthogonallyOnto_multiVector(Origin self, MultiVector other) {
    return multiVector_wedge_scalar(other, origin_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin origin_antiProjectOrthogonallyOnto_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_scalar(other, origin_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Origin origin_antiProjectOrthogonallyOnto_origin(Origin self, Origin other) {
    return origin_wedge_scalar(other, origin_antiWedge_horizon(self, origin_antiDual(other)));
}

Point origin_antiProjectOrthogonallyOnto_point(Origin self, Point other) {
    return point_wedge_scalar(other, origin_antiWedge_horizon(self, point_antiDual(other)));
}

Rotor origin_antiProjectOrthogonallyOnto_rotor(Origin self, Rotor other) {
    return rotor_wedge_scalar(other, origin_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector plane_antiProjectOrthogonallyOnto_flector(Plane self, Flector other) {
    return flector_wedge_multiVectorAtInfinity(other, plane_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Plane plane_antiProjectOrthogonallyOnto_line(Plane self, Line other) {
    return line_wedge_pointAtInfinity(other, plane_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

PlaneAtOrigin plane_antiProjectOrthogonallyOnto_lineAtOrigin(Plane self, LineAtOrigin other) {
    return lineAtOrigin_wedge_pointAtInfinity(other, plane_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector plane_antiProjectOrthogonallyOnto_motor(Plane self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, plane_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector plane_antiProjectOrthogonallyOnto_multiVector(Plane self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, plane_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin plane_antiProjectOrthogonallyOnto_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, plane_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

PlaneAtOrigin plane_antiProjectOrthogonallyOnto_origin(Plane self, Origin other) {
    return origin_wedge_lineAtInfinity(other, plane_antiWedge_horizon(self, origin_antiDual(other)));
}

Plane plane_antiProjectOrthogonallyOnto_plane(Plane self, Plane other) {
    return plane_wedge_scalar(other, plane_antiWedge_pointAtInfinity(self, plane_antiDual(other)));
}

PlaneAtOrigin plane_antiProjectOrthogonallyOnto_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_scalar(other, plane_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Plane plane_antiProjectOrthogonallyOnto_point(Plane self, Point other) {
    return point_wedge_lineAtInfinity(other, plane_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin plane_antiProjectOrthogonallyOnto_rotor(Plane self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, plane_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Transflector plane_antiProjectOrthogonallyOnto_transflector(Plane self, Transflector other) {
    return transflector_wedge_scalar(other, plane_antiWedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector planeAtOrigin_antiProjectOrthogonallyOnto_flector(PlaneAtOrigin self, Flector other) {
    return flector_wedge_multiVectorAtInfinity(other, planeAtOrigin_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Plane planeAtOrigin_antiProjectOrthogonallyOnto_line(PlaneAtOrigin self, Line other) {
    return line_wedge_pointAtInfinity(other, planeAtOrigin_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

PlaneAtOrigin planeAtOrigin_antiProjectOrthogonallyOnto_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return lineAtOrigin_wedge_pointAtInfinity(other, planeAtOrigin_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector planeAtOrigin_antiProjectOrthogonallyOnto_motor(PlaneAtOrigin self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, planeAtOrigin_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector planeAtOrigin_antiProjectOrthogonallyOnto_multiVector(PlaneAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, planeAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin planeAtOrigin_antiProjectOrthogonallyOnto_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, planeAtOrigin_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

PlaneAtOrigin planeAtOrigin_antiProjectOrthogonallyOnto_origin(PlaneAtOrigin self, Origin other) {
    return origin_wedge_lineAtInfinity(other, planeAtOrigin_antiWedge_horizon(self, origin_antiDual(other)));
}

Plane planeAtOrigin_antiProjectOrthogonallyOnto_plane(PlaneAtOrigin self, Plane other) {
    return plane_wedge_scalar(other, planeAtOrigin_antiWedge_pointAtInfinity(self, plane_antiDual(other)));
}

PlaneAtOrigin planeAtOrigin_antiProjectOrthogonallyOnto_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_scalar(other, planeAtOrigin_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Plane planeAtOrigin_antiProjectOrthogonallyOnto_point(PlaneAtOrigin self, Point other) {
    return point_wedge_lineAtInfinity(other, planeAtOrigin_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin planeAtOrigin_antiProjectOrthogonallyOnto_rotor(PlaneAtOrigin self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, planeAtOrigin_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Transflector planeAtOrigin_antiProjectOrthogonallyOnto_transflector(PlaneAtOrigin self, Transflector other) {
    return transflector_wedge_scalar(other, planeAtOrigin_antiWedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Flector point_antiProjectOrthogonallyOnto_flector(Point self, Flector other) {
    return flector_wedge_scalar(other, point_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Motor point_antiProjectOrthogonallyOnto_motor(Point self, Motor other) {
    return motor_wedge_scalar(other, point_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector point_antiProjectOrthogonallyOnto_multiVector(Point self, MultiVector other) {
    return multiVector_wedge_scalar(other, point_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin point_antiProjectOrthogonallyOnto_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_scalar(other, point_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Origin point_antiProjectOrthogonallyOnto_origin(Point self, Origin other) {
    return origin_wedge_scalar(other, point_antiWedge_horizon(self, origin_antiDual(other)));
}

Point point_antiProjectOrthogonallyOnto_point(Point self, Point other) {
    return point_wedge_scalar(other, point_antiWedge_horizon(self, point_antiDual(other)));
}

Rotor point_antiProjectOrthogonallyOnto_rotor(Point self, Rotor other) {
    return rotor_wedge_scalar(other, point_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Motor rotor_antiProjectOrthogonallyOnto_flector(Rotor self, Flector other) {
    return flector_wedge_flectorAtInfinity(other, rotor_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVector rotor_antiProjectOrthogonallyOnto_line(Rotor self, Line other) {
    return line_wedge_multiVectorAtInfinity(other, rotor_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

MultiVectorAtOrigin rotor_antiProjectOrthogonallyOnto_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return lineAtOrigin_wedge_multiVectorAtInfinity(other, rotor_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector rotor_antiProjectOrthogonallyOnto_motor(Rotor self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, rotor_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector rotor_antiProjectOrthogonallyOnto_multiVector(Rotor self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, rotor_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin rotor_antiProjectOrthogonallyOnto_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, rotor_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Rotor rotor_antiProjectOrthogonallyOnto_origin(Rotor self, Origin other) {
    return origin_wedge_flectorAtInfinity(other, rotor_antiWedge_horizon(self, origin_antiDual(other)));
}

AntiScalar rotor_antiProjectOrthogonallyOnto_plane(Rotor self, Plane other) {
    return plane_wedge_pointAtInfinity(other, rotor_antiWedge_pointAtInfinity(self, plane_antiDual(other)));
}

AntiScalar rotor_antiProjectOrthogonallyOnto_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_pointAtInfinity(other, rotor_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Motor rotor_antiProjectOrthogonallyOnto_point(Rotor self, Point other) {
    return point_wedge_flectorAtInfinity(other, rotor_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin rotor_antiProjectOrthogonallyOnto_rotor(Rotor self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, rotor_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Translator rotor_antiProjectOrthogonallyOnto_transflector(Rotor self, Transflector other) {
    return transflector_wedge_pointAtInfinity(other, rotor_antiWedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector transflector_antiProjectOrthogonallyOnto_flector(Transflector self, Flector other) {
    return flector_wedge_multiVectorAtInfinity(other, transflector_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Plane transflector_antiProjectOrthogonallyOnto_line(Transflector self, Line other) {
    return line_wedge_pointAtInfinity(other, transflector_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

PlaneAtOrigin transflector_antiProjectOrthogonallyOnto_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return lineAtOrigin_wedge_pointAtInfinity(other, transflector_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector transflector_antiProjectOrthogonallyOnto_motor(Transflector self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, transflector_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector transflector_antiProjectOrthogonallyOnto_multiVector(Transflector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, transflector_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin transflector_antiProjectOrthogonallyOnto_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, transflector_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

PlaneAtOrigin transflector_antiProjectOrthogonallyOnto_origin(Transflector self, Origin other) {
    return origin_wedge_lineAtInfinity(other, transflector_antiWedge_horizon(self, origin_antiDual(other)));
}

Plane transflector_antiProjectOrthogonallyOnto_plane(Transflector self, Plane other) {
    return plane_wedge_scalar(other, transflector_antiWedge_pointAtInfinity(self, plane_antiDual(other)));
}

PlaneAtOrigin transflector_antiProjectOrthogonallyOnto_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_scalar(other, transflector_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Plane transflector_antiProjectOrthogonallyOnto_point(Transflector self, Point other) {
    return point_wedge_lineAtInfinity(other, transflector_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin transflector_antiProjectOrthogonallyOnto_rotor(Transflector self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, transflector_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Transflector transflector_antiProjectOrthogonallyOnto_transflector(Transflector self, Transflector other) {
    return transflector_wedge_scalar(other, transflector_antiWedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Motor translator_antiProjectOrthogonallyOnto_flector(Translator self, Flector other) {
    return flector_wedge_flectorAtInfinity(other, translator_antiWedge_flectorAtInfinity(self, flector_antiDual(other)));
}

AntiScalar translator_antiProjectOrthogonallyOnto_line(Translator self, Line other) {
    return line_wedge_lineAtInfinity(other, translator_antiWedge_lineAtInfinity(self, line_antiDual(other)));
}

AntiScalar translator_antiProjectOrthogonallyOnto_lineAtOrigin(Translator self, LineAtOrigin other) {
    return lineAtOrigin_wedge_lineAtInfinity(other, translator_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector translator_antiProjectOrthogonallyOnto_motor(Translator self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, translator_antiWedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector translator_antiProjectOrthogonallyOnto_multiVector(Translator self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, translator_antiWedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin translator_antiProjectOrthogonallyOnto_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(other, translator_antiWedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

AntiScalar translator_antiProjectOrthogonallyOnto_origin(Translator self, Origin other) {
    return origin_wedge_horizon(other, translator_antiWedge_horizon(self, origin_antiDual(other)));
}

AntiScalar translator_antiProjectOrthogonallyOnto_plane(Translator self, Plane other) {
    return plane_wedge_pointAtInfinity(other, translator_antiWedge_pointAtInfinity(self, plane_antiDual(other)));
}

AntiScalar translator_antiProjectOrthogonallyOnto_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return planeAtOrigin_wedge_pointAtInfinity(other, translator_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

AntiScalar translator_antiProjectOrthogonallyOnto_point(Translator self, Point other) {
    return point_wedge_horizon(other, translator_antiWedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin translator_antiProjectOrthogonallyOnto_rotor(Translator self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(other, translator_antiWedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Translator translator_antiProjectOrthogonallyOnto_transflector(Translator self, Transflector other) {
    return transflector_wedge_pointAtInfinity(other, translator_antiWedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector flector_antiProjectViaHorizonOnto_flector(Flector self, Flector other) {
    return flector_wedge_multiVector(other, flector_antiWedge_flector(self, flector_dual(other)));
}

MultiVector flector_antiProjectViaHorizonOnto_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVector(other, flector_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

Horizon flector_antiProjectViaHorizonOnto_horizon(Flector self, Horizon other) {
    return horizon_wedge_scalar(other, flector_antiWedge_origin(self, horizon_dual(other)));
}

Plane flector_antiProjectViaHorizonOnto_line(Flector self, Line other) {
    return line_wedge_point(other, flector_antiWedge_lineAtOrigin(self, line_dual(other)));
}

Plane flector_antiProjectViaHorizonOnto_lineAtInfinity(Flector self, LineAtInfinity other) {
    return lineAtInfinity_wedge_point(other, flector_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Plane flector_antiProjectViaHorizonOnto_motor(Flector self, Motor other) {
    return motor_wedge_point(other, flector_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector flector_antiProjectViaHorizonOnto_multiVector(Flector self, MultiVector other) {
    return multiVector_wedge_multiVector(other, flector_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVector flector_antiProjectViaHorizonOnto_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVector(other, flector_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Plane flector_antiProjectViaHorizonOnto_plane(Flector self, Plane other) {
    return plane_wedge_scalar(other, flector_antiWedge_origin(self, plane_dual(other)));
}

MultiVector flector_antiProjectViaHorizonOnto_point(Flector self, Point other) {
    return point_wedge_multiVector(other, flector_antiWedge_planeAtOrigin(self, point_dual(other)));
}

MultiVector flector_antiProjectViaHorizonOnto_pointAtInfinity(Flector self, PointAtInfinity other) {
    return pointAtInfinity_wedge_multiVector(other, flector_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector flector_antiProjectViaHorizonOnto_transflector(Flector self, Transflector other) {
    return transflector_wedge_multiVector(other, flector_antiWedge_flector(self, transflector_dual(other)));
}

Plane flector_antiProjectViaHorizonOnto_translator(Flector self, Translator other) {
    return translator_wedge_point(other, flector_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector flectorAtInfinity_antiProjectViaHorizonOnto_flector(FlectorAtInfinity self, Flector other) {
    return flector_wedge_multiVectorAtInfinity(other, flectorAtInfinity_antiWedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity flectorAtInfinity_antiProjectViaHorizonOnto_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(other, flectorAtInfinity_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

Horizon flectorAtInfinity_antiProjectViaHorizonOnto_horizon(FlectorAtInfinity self, Horizon other) {
    return horizon_wedge_scalar(other, flectorAtInfinity_antiWedge_origin(self, horizon_dual(other)));
}

Plane flectorAtInfinity_antiProjectViaHorizonOnto_line(FlectorAtInfinity self, Line other) {
    return line_wedge_pointAtInfinity(other, flectorAtInfinity_antiWedge_lineAtOrigin(self, line_dual(other)));
}

Horizon flectorAtInfinity_antiProjectViaHorizonOnto_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_wedge_pointAtInfinity(other, flectorAtInfinity_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Plane flectorAtInfinity_antiProjectViaHorizonOnto_motor(FlectorAtInfinity self, Motor other) {
    return motor_wedge_pointAtInfinity(other, flectorAtInfinity_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector flectorAtInfinity_antiProjectViaHorizonOnto_multiVector(FlectorAtInfinity self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, flectorAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity flectorAtInfinity_antiProjectViaHorizonOnto_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(other, flectorAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Plane flectorAtInfinity_antiProjectViaHorizonOnto_plane(FlectorAtInfinity self, Plane other) {
    return plane_wedge_scalar(other, flectorAtInfinity_antiWedge_origin(self, plane_dual(other)));
}

MultiVector flectorAtInfinity_antiProjectViaHorizonOnto_point(FlectorAtInfinity self, Point other) {
    return point_wedge_multiVectorAtInfinity(other, flectorAtInfinity_antiWedge_planeAtOrigin(self, point_dual(other)));
}

MultiVectorAtInfinity flectorAtInfinity_antiProjectViaHorizonOnto_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_wedge_multiVectorAtInfinity(other, flectorAtInfinity_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector flectorAtInfinity_antiProjectViaHorizonOnto_transflector(FlectorAtInfinity self, Transflector other) {
    return transflector_wedge_multiVectorAtInfinity(other, flectorAtInfinity_antiWedge_flector(self, transflector_dual(other)));
}

Horizon flectorAtInfinity_antiProjectViaHorizonOnto_translator(FlectorAtInfinity self, Translator other) {
    return translator_wedge_pointAtInfinity(other, flectorAtInfinity_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector horizon_antiProjectViaHorizonOnto_flector(Horizon self, Flector other) {
    return flector_wedge_multiVectorAtInfinity(other, horizon_antiWedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity horizon_antiProjectViaHorizonOnto_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(other, horizon_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

Horizon horizon_antiProjectViaHorizonOnto_horizon(Horizon self, Horizon other) {
    return horizon_wedge_scalar(other, horizon_antiWedge_origin(self, horizon_dual(other)));
}

Plane horizon_antiProjectViaHorizonOnto_line(Horizon self, Line other) {
    return line_wedge_pointAtInfinity(other, horizon_antiWedge_lineAtOrigin(self, line_dual(other)));
}

Horizon horizon_antiProjectViaHorizonOnto_lineAtInfinity(Horizon self, LineAtInfinity other) {
    return lineAtInfinity_wedge_pointAtInfinity(other, horizon_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Plane horizon_antiProjectViaHorizonOnto_motor(Horizon self, Motor other) {
    return motor_wedge_pointAtInfinity(other, horizon_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector horizon_antiProjectViaHorizonOnto_multiVector(Horizon self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, horizon_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity horizon_antiProjectViaHorizonOnto_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(other, horizon_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Plane horizon_antiProjectViaHorizonOnto_plane(Horizon self, Plane other) {
    return plane_wedge_scalar(other, horizon_antiWedge_origin(self, plane_dual(other)));
}

Plane horizon_antiProjectViaHorizonOnto_point(Horizon self, Point other) {
    return point_wedge_lineAtInfinity(other, horizon_antiWedge_planeAtOrigin(self, point_dual(other)));
}

Horizon horizon_antiProjectViaHorizonOnto_pointAtInfinity(Horizon self, PointAtInfinity other) {
    return pointAtInfinity_wedge_lineAtInfinity(other, horizon_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector horizon_antiProjectViaHorizonOnto_transflector(Horizon self, Transflector other) {
    return transflector_wedge_multiVectorAtInfinity(other, horizon_antiWedge_flector(self, transflector_dual(other)));
}

Horizon horizon_antiProjectViaHorizonOnto_translator(Horizon self, Translator other) {
    return translator_wedge_pointAtInfinity(other, horizon_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

Motor line_antiProjectViaHorizonOnto_flector(Line self, Flector other) {
    return flector_wedge_point(other, line_antiWedge_flector(self, flector_dual(other)));
}

Motor line_antiProjectViaHorizonOnto_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_point(other, line_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

Line line_antiProjectViaHorizonOnto_line(Line self, Line other) {
    return line_wedge_scalar(other, line_antiWedge_lineAtOrigin(self, line_dual(other)));
}

LineAtInfinity line_antiProjectViaHorizonOnto_lineAtInfinity(Line self, LineAtInfinity other) {
    return lineAtInfinity_wedge_scalar(other, line_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Motor line_antiProjectViaHorizonOnto_motor(Line self, Motor other) {
    return motor_wedge_scalar(other, line_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector line_antiProjectViaHorizonOnto_multiVector(Line self, MultiVector other) {
    return multiVector_wedge_multiVector(other, line_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVector line_antiProjectViaHorizonOnto_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVector(other, line_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Line line_antiProjectViaHorizonOnto_point(Line self, Point other) {
    return point_wedge_point(other, line_antiWedge_planeAtOrigin(self, point_dual(other)));
}

Line line_antiProjectViaHorizonOnto_pointAtInfinity(Line self, PointAtInfinity other) {
    return pointAtInfinity_wedge_point(other, line_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Motor line_antiProjectViaHorizonOnto_transflector(Line self, Transflector other) {
    return transflector_wedge_point(other, line_antiWedge_flector(self, transflector_dual(other)));
}

Translator line_antiProjectViaHorizonOnto_translator(Line self, Translator other) {
    return translator_wedge_scalar(other, line_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

Motor lineAtInfinity_antiProjectViaHorizonOnto_flector(LineAtInfinity self, Flector other) {
    return flector_wedge_pointAtInfinity(other, lineAtInfinity_antiWedge_flector(self, flector_dual(other)));
}

LineAtInfinity lineAtInfinity_antiProjectViaHorizonOnto_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_pointAtInfinity(other, lineAtInfinity_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

Line lineAtInfinity_antiProjectViaHorizonOnto_line(LineAtInfinity self, Line other) {
    return line_wedge_scalar(other, lineAtInfinity_antiWedge_lineAtOrigin(self, line_dual(other)));
}

LineAtInfinity lineAtInfinity_antiProjectViaHorizonOnto_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_wedge_scalar(other, lineAtInfinity_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Motor lineAtInfinity_antiProjectViaHorizonOnto_motor(LineAtInfinity self, Motor other) {
    return motor_wedge_scalar(other, lineAtInfinity_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector lineAtInfinity_antiProjectViaHorizonOnto_multiVector(LineAtInfinity self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, lineAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity lineAtInfinity_antiProjectViaHorizonOnto_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(other, lineAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Line lineAtInfinity_antiProjectViaHorizonOnto_point(LineAtInfinity self, Point other) {
    return point_wedge_pointAtInfinity(other, lineAtInfinity_antiWedge_planeAtOrigin(self, point_dual(other)));
}

LineAtInfinity lineAtInfinity_antiProjectViaHorizonOnto_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_wedge_pointAtInfinity(other, lineAtInfinity_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Translator lineAtInfinity_antiProjectViaHorizonOnto_transflector(LineAtInfinity self, Transflector other) {
    return transflector_wedge_pointAtInfinity(other, lineAtInfinity_antiWedge_flector(self, transflector_dual(other)));
}

Translator lineAtInfinity_antiProjectViaHorizonOnto_translator(LineAtInfinity self, Translator other) {
    return translator_wedge_scalar(other, lineAtInfinity_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

Motor lineAtOrigin_antiProjectViaHorizonOnto_flector(LineAtOrigin self, Flector other) {
    return flector_wedge_point(other, lineAtOrigin_antiWedge_flector(self, flector_dual(other)));
}

Motor lineAtOrigin_antiProjectViaHorizonOnto_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_point(other, lineAtOrigin_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVectorAtOrigin lineAtOrigin_antiProjectViaHorizonOnto_multiVector(LineAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(other, lineAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtOrigin lineAtOrigin_antiProjectViaHorizonOnto_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(other, lineAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

LineAtOrigin lineAtOrigin_antiProjectViaHorizonOnto_point(LineAtOrigin self, Point other) {
    return point_wedge_origin(other, lineAtOrigin_antiWedge_planeAtOrigin(self, point_dual(other)));
}

LineAtOrigin lineAtOrigin_antiProjectViaHorizonOnto_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return pointAtInfinity_wedge_origin(other, lineAtOrigin_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Motor lineAtOrigin_antiProjectViaHorizonOnto_transflector(LineAtOrigin self, Transflector other) {
    return transflector_wedge_point(other, lineAtOrigin_antiWedge_flector(self, transflector_dual(other)));
}

Motor motor_antiProjectViaHorizonOnto_flector(Motor self, Flector other) {
    return flector_wedge_flector(other, motor_antiWedge_flector(self, flector_dual(other)));
}

Motor motor_antiProjectViaHorizonOnto_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_flector(other, motor_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

AntiScalar motor_antiProjectViaHorizonOnto_horizon(Motor self, Horizon other) {
    return horizon_wedge_origin(other, motor_antiWedge_origin(self, horizon_dual(other)));
}

MultiVector motor_antiProjectViaHorizonOnto_line(Motor self, Line other) {
    return line_wedge_multiVector(other, motor_antiWedge_lineAtOrigin(self, line_dual(other)));
}

MultiVector motor_antiProjectViaHorizonOnto_lineAtInfinity(Motor self, LineAtInfinity other) {
    return lineAtInfinity_wedge_multiVector(other, motor_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

MultiVector motor_antiProjectViaHorizonOnto_motor(Motor self, Motor other) {
    return motor_wedge_multiVector(other, motor_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector motor_antiProjectViaHorizonOnto_multiVector(Motor self, MultiVector other) {
    return multiVector_wedge_multiVector(other, motor_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVector motor_antiProjectViaHorizonOnto_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVector(other, motor_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

AntiScalar motor_antiProjectViaHorizonOnto_plane(Motor self, Plane other) {
    return plane_wedge_origin(other, motor_antiWedge_origin(self, plane_dual(other)));
}

Motor motor_antiProjectViaHorizonOnto_point(Motor self, Point other) {
    return point_wedge_flector(other, motor_antiWedge_planeAtOrigin(self, point_dual(other)));
}

Motor motor_antiProjectViaHorizonOnto_pointAtInfinity(Motor self, PointAtInfinity other) {
    return pointAtInfinity_wedge_flector(other, motor_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Motor motor_antiProjectViaHorizonOnto_transflector(Motor self, Transflector other) {
    return transflector_wedge_flector(other, motor_antiWedge_flector(self, transflector_dual(other)));
}

MultiVector motor_antiProjectViaHorizonOnto_translator(Motor self, Translator other) {
    return translator_wedge_multiVector(other, motor_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_flector(MultiVector self, Flector other) {
    return flector_wedge_multiVector(other, multiVector_antiWedge_flector(self, flector_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVector(other, multiVector_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_horizon(MultiVector self, Horizon other) {
    return horizon_wedge_multiVector(other, multiVector_antiWedge_origin(self, horizon_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_line(MultiVector self, Line other) {
    return line_wedge_multiVector(other, multiVector_antiWedge_lineAtOrigin(self, line_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return lineAtInfinity_wedge_multiVector(other, multiVector_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_motor(MultiVector self, Motor other) {
    return motor_wedge_multiVector(other, multiVector_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_multiVector(MultiVector self, MultiVector other) {
    return multiVector_wedge_multiVector(other, multiVector_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVector(other, multiVector_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_plane(MultiVector self, Plane other) {
    return plane_wedge_multiVector(other, multiVector_antiWedge_origin(self, plane_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_point(MultiVector self, Point other) {
    return point_wedge_multiVector(other, multiVector_antiWedge_planeAtOrigin(self, point_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return pointAtInfinity_wedge_multiVector(other, multiVector_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_transflector(MultiVector self, Transflector other) {
    return transflector_wedge_multiVector(other, multiVector_antiWedge_flector(self, transflector_dual(other)));
}

MultiVector multiVector_antiProjectViaHorizonOnto_translator(MultiVector self, Translator other) {
    return translator_wedge_multiVector(other, multiVector_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector multiVectorAtInfinity_antiProjectViaHorizonOnto_flector(MultiVectorAtInfinity self, Flector other) {
    return flector_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiProjectViaHorizonOnto_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

Horizon multiVectorAtInfinity_antiProjectViaHorizonOnto_horizon(MultiVectorAtInfinity self, Horizon other) {
    return horizon_wedge_scalar(other, multiVectorAtInfinity_antiWedge_origin(self, horizon_dual(other)));
}

MultiVector multiVectorAtInfinity_antiProjectViaHorizonOnto_line(MultiVectorAtInfinity self, Line other) {
    return line_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_lineAtOrigin(self, line_dual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiProjectViaHorizonOnto_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

MultiVector multiVectorAtInfinity_antiProjectViaHorizonOnto_motor(MultiVectorAtInfinity self, Motor other) {
    return motor_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector multiVectorAtInfinity_antiProjectViaHorizonOnto_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiProjectViaHorizonOnto_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Plane multiVectorAtInfinity_antiProjectViaHorizonOnto_plane(MultiVectorAtInfinity self, Plane other) {
    return plane_wedge_scalar(other, multiVectorAtInfinity_antiWedge_origin(self, plane_dual(other)));
}

MultiVector multiVectorAtInfinity_antiProjectViaHorizonOnto_point(MultiVectorAtInfinity self, Point other) {
    return point_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_planeAtOrigin(self, point_dual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiProjectViaHorizonOnto_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector multiVectorAtInfinity_antiProjectViaHorizonOnto_transflector(MultiVectorAtInfinity self, Transflector other) {
    return transflector_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_flector(self, transflector_dual(other)));
}

MultiVector multiVectorAtInfinity_antiProjectViaHorizonOnto_translator(MultiVectorAtInfinity self, Translator other) {
    return translator_wedge_multiVectorAtInfinity(other, multiVectorAtInfinity_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectViaHorizonOnto_flector(MultiVectorAtOrigin self, Flector other) {
    return flector_wedge_multiVector(other, multiVectorAtOrigin_antiWedge_flector(self, flector_dual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectViaHorizonOnto_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVector(other, multiVectorAtOrigin_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

AntiScalar multiVectorAtOrigin_antiProjectViaHorizonOnto_horizon(MultiVectorAtOrigin self, Horizon other) {
    return horizon_wedge_origin(other, multiVectorAtOrigin_antiWedge_origin(self, horizon_dual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectViaHorizonOnto_line(MultiVectorAtOrigin self, Line other) {
    return line_wedge_multiVectorAtOrigin(other, multiVectorAtOrigin_antiWedge_lineAtOrigin(self, line_dual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectViaHorizonOnto_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return lineAtInfinity_wedge_multiVectorAtOrigin(other, multiVectorAtOrigin_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectViaHorizonOnto_motor(MultiVectorAtOrigin self, Motor other) {
    return motor_wedge_multiVectorAtOrigin(other, multiVectorAtOrigin_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectViaHorizonOnto_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(other, multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectViaHorizonOnto_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(other, multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

AntiScalar multiVectorAtOrigin_antiProjectViaHorizonOnto_plane(MultiVectorAtOrigin self, Plane other) {
    return plane_wedge_origin(other, multiVectorAtOrigin_antiWedge_origin(self, plane_dual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectViaHorizonOnto_point(MultiVectorAtOrigin self, Point other) {
    return point_wedge_multiVectorAtOrigin(other, multiVectorAtOrigin_antiWedge_planeAtOrigin(self, point_dual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectViaHorizonOnto_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return pointAtInfinity_wedge_multiVectorAtOrigin(other, multiVectorAtOrigin_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector multiVectorAtOrigin_antiProjectViaHorizonOnto_transflector(MultiVectorAtOrigin self, Transflector other) {
    return transflector_wedge_multiVector(other, multiVectorAtOrigin_antiWedge_flector(self, transflector_dual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiProjectViaHorizonOnto_translator(MultiVectorAtOrigin self, Translator other) {
    return translator_wedge_multiVectorAtOrigin(other, multiVectorAtOrigin_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

Flector origin_antiProjectViaHorizonOnto_flector(Origin self, Flector other) {
    return flector_wedge_scalar(other, origin_antiWedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity origin_antiProjectViaHorizonOnto_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_scalar(other, origin_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVectorAtOrigin origin_antiProjectViaHorizonOnto_multiVector(Origin self, MultiVector other) {
    return multiVector_wedge_origin(other, origin_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtOrigin origin_antiProjectViaHorizonOnto_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_origin(other, origin_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Transflector origin_antiProjectViaHorizonOnto_transflector(Origin self, Transflector other) {
    return transflector_wedge_scalar(other, origin_antiWedge_flector(self, transflector_dual(other)));
}

MultiVector plane_antiProjectViaHorizonOnto_flector(Plane self, Flector other) {
    return flector_wedge_multiVector(other, plane_antiWedge_flector(self, flector_dual(other)));
}

MultiVector plane_antiProjectViaHorizonOnto_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVector(other, plane_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

Horizon plane_antiProjectViaHorizonOnto_horizon(Plane self, Horizon other) {
    return horizon_wedge_scalar(other, plane_antiWedge_origin(self, horizon_dual(other)));
}

Plane plane_antiProjectViaHorizonOnto_line(Plane self, Line other) {
    return line_wedge_point(other, plane_antiWedge_lineAtOrigin(self, line_dual(other)));
}

Plane plane_antiProjectViaHorizonOnto_lineAtInfinity(Plane self, LineAtInfinity other) {
    return lineAtInfinity_wedge_point(other, plane_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Plane plane_antiProjectViaHorizonOnto_motor(Plane self, Motor other) {
    return motor_wedge_point(other, plane_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector plane_antiProjectViaHorizonOnto_multiVector(Plane self, MultiVector other) {
    return multiVector_wedge_multiVector(other, plane_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVector plane_antiProjectViaHorizonOnto_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVector(other, plane_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Plane plane_antiProjectViaHorizonOnto_plane(Plane self, Plane other) {
    return plane_wedge_scalar(other, plane_antiWedge_origin(self, plane_dual(other)));
}

Plane plane_antiProjectViaHorizonOnto_point(Plane self, Point other) {
    return point_wedge_line(other, plane_antiWedge_planeAtOrigin(self, point_dual(other)));
}

Plane plane_antiProjectViaHorizonOnto_pointAtInfinity(Plane self, PointAtInfinity other) {
    return pointAtInfinity_wedge_line(other, plane_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector plane_antiProjectViaHorizonOnto_transflector(Plane self, Transflector other) {
    return transflector_wedge_multiVector(other, plane_antiWedge_flector(self, transflector_dual(other)));
}

Plane plane_antiProjectViaHorizonOnto_translator(Plane self, Translator other) {
    return translator_wedge_point(other, plane_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector planeAtOrigin_antiProjectViaHorizonOnto_flector(PlaneAtOrigin self, Flector other) {
    return flector_wedge_multiVector(other, planeAtOrigin_antiWedge_flector(self, flector_dual(other)));
}

MultiVector planeAtOrigin_antiProjectViaHorizonOnto_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVector(other, planeAtOrigin_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

PlaneAtOrigin planeAtOrigin_antiProjectViaHorizonOnto_line(PlaneAtOrigin self, Line other) {
    return line_wedge_origin(other, planeAtOrigin_antiWedge_lineAtOrigin(self, line_dual(other)));
}

PlaneAtOrigin planeAtOrigin_antiProjectViaHorizonOnto_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return lineAtInfinity_wedge_origin(other, planeAtOrigin_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

PlaneAtOrigin planeAtOrigin_antiProjectViaHorizonOnto_motor(PlaneAtOrigin self, Motor other) {
    return motor_wedge_origin(other, planeAtOrigin_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVectorAtOrigin planeAtOrigin_antiProjectViaHorizonOnto_multiVector(PlaneAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(other, planeAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtOrigin planeAtOrigin_antiProjectViaHorizonOnto_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(other, planeAtOrigin_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

PlaneAtOrigin planeAtOrigin_antiProjectViaHorizonOnto_point(PlaneAtOrigin self, Point other) {
    return point_wedge_lineAtOrigin(other, planeAtOrigin_antiWedge_planeAtOrigin(self, point_dual(other)));
}

PlaneAtOrigin planeAtOrigin_antiProjectViaHorizonOnto_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return pointAtInfinity_wedge_lineAtOrigin(other, planeAtOrigin_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector planeAtOrigin_antiProjectViaHorizonOnto_transflector(PlaneAtOrigin self, Transflector other) {
    return transflector_wedge_multiVector(other, planeAtOrigin_antiWedge_flector(self, transflector_dual(other)));
}

PlaneAtOrigin planeAtOrigin_antiProjectViaHorizonOnto_translator(PlaneAtOrigin self, Translator other) {
    return translator_wedge_origin(other, planeAtOrigin_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

Flector point_antiProjectViaHorizonOnto_flector(Point self, Flector other) {
    return flector_wedge_scalar(other, point_antiWedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity point_antiProjectViaHorizonOnto_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_scalar(other, point_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVector point_antiProjectViaHorizonOnto_multiVector(Point self, MultiVector other) {
    return multiVector_wedge_multiVector(other, point_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVector point_antiProjectViaHorizonOnto_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVector(other, point_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Point point_antiProjectViaHorizonOnto_point(Point self, Point other) {
    return point_wedge_scalar(other, point_antiWedge_planeAtOrigin(self, point_dual(other)));
}

PointAtInfinity point_antiProjectViaHorizonOnto_pointAtInfinity(Point self, PointAtInfinity other) {
    return pointAtInfinity_wedge_scalar(other, point_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Transflector point_antiProjectViaHorizonOnto_transflector(Point self, Transflector other) {
    return transflector_wedge_scalar(other, point_antiWedge_flector(self, transflector_dual(other)));
}

Flector pointAtInfinity_antiProjectViaHorizonOnto_flector(PointAtInfinity self, Flector other) {
    return flector_wedge_scalar(other, pointAtInfinity_antiWedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity pointAtInfinity_antiProjectViaHorizonOnto_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_scalar(other, pointAtInfinity_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVector pointAtInfinity_antiProjectViaHorizonOnto_multiVector(PointAtInfinity self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(other, pointAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity pointAtInfinity_antiProjectViaHorizonOnto_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(other, pointAtInfinity_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Point pointAtInfinity_antiProjectViaHorizonOnto_point(PointAtInfinity self, Point other) {
    return point_wedge_scalar(other, pointAtInfinity_antiWedge_planeAtOrigin(self, point_dual(other)));
}

PointAtInfinity pointAtInfinity_antiProjectViaHorizonOnto_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_wedge_scalar(other, pointAtInfinity_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Transflector pointAtInfinity_antiProjectViaHorizonOnto_transflector(PointAtInfinity self, Transflector other) {
    return transflector_wedge_scalar(other, pointAtInfinity_antiWedge_flector(self, transflector_dual(other)));
}

Motor rotor_antiProjectViaHorizonOnto_flector(Rotor self, Flector other) {
    return flector_wedge_flector(other, rotor_antiWedge_flector(self, flector_dual(other)));
}

Motor rotor_antiProjectViaHorizonOnto_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_flector(other, rotor_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

AntiScalar rotor_antiProjectViaHorizonOnto_horizon(Rotor self, Horizon other) {
    return horizon_wedge_origin(other, rotor_antiWedge_origin(self, horizon_dual(other)));
}

AntiScalar rotor_antiProjectViaHorizonOnto_line(Rotor self, Line other) {
    return line_wedge_lineAtOrigin(other, rotor_antiWedge_lineAtOrigin(self, line_dual(other)));
}

AntiScalar rotor_antiProjectViaHorizonOnto_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return lineAtInfinity_wedge_lineAtOrigin(other, rotor_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

AntiScalar rotor_antiProjectViaHorizonOnto_motor(Rotor self, Motor other) {
    return motor_wedge_lineAtOrigin(other, rotor_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVectorAtOrigin rotor_antiProjectViaHorizonOnto_multiVector(Rotor self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(other, rotor_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtOrigin rotor_antiProjectViaHorizonOnto_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(other, rotor_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

AntiScalar rotor_antiProjectViaHorizonOnto_plane(Rotor self, Plane other) {
    return plane_wedge_origin(other, rotor_antiWedge_origin(self, plane_dual(other)));
}

Motor rotor_antiProjectViaHorizonOnto_point(Rotor self, Point other) {
    return point_wedge_flector(other, rotor_antiWedge_planeAtOrigin(self, point_dual(other)));
}

Motor rotor_antiProjectViaHorizonOnto_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return pointAtInfinity_wedge_flector(other, rotor_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Motor rotor_antiProjectViaHorizonOnto_transflector(Rotor self, Transflector other) {
    return transflector_wedge_flector(other, rotor_antiWedge_flector(self, transflector_dual(other)));
}

AntiScalar rotor_antiProjectViaHorizonOnto_translator(Rotor self, Translator other) {
    return translator_wedge_lineAtOrigin(other, rotor_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector transflector_antiProjectViaHorizonOnto_flector(Transflector self, Flector other) {
    return flector_wedge_multiVector(other, transflector_antiWedge_flector(self, flector_dual(other)));
}

MultiVector transflector_antiProjectViaHorizonOnto_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_multiVector(other, transflector_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

Horizon transflector_antiProjectViaHorizonOnto_horizon(Transflector self, Horizon other) {
    return horizon_wedge_scalar(other, transflector_antiWedge_origin(self, horizon_dual(other)));
}

Plane transflector_antiProjectViaHorizonOnto_line(Transflector self, Line other) {
    return line_wedge_point(other, transflector_antiWedge_lineAtOrigin(self, line_dual(other)));
}

Plane transflector_antiProjectViaHorizonOnto_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return lineAtInfinity_wedge_point(other, transflector_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Plane transflector_antiProjectViaHorizonOnto_motor(Transflector self, Motor other) {
    return motor_wedge_point(other, transflector_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector transflector_antiProjectViaHorizonOnto_multiVector(Transflector self, MultiVector other) {
    return multiVector_wedge_multiVector(other, transflector_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVector transflector_antiProjectViaHorizonOnto_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVector(other, transflector_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Plane transflector_antiProjectViaHorizonOnto_plane(Transflector self, Plane other) {
    return plane_wedge_scalar(other, transflector_antiWedge_origin(self, plane_dual(other)));
}

MultiVector transflector_antiProjectViaHorizonOnto_point(Transflector self, Point other) {
    return point_wedge_multiVector(other, transflector_antiWedge_planeAtOrigin(self, point_dual(other)));
}

MultiVector transflector_antiProjectViaHorizonOnto_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return pointAtInfinity_wedge_multiVector(other, transflector_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector transflector_antiProjectViaHorizonOnto_transflector(Transflector self, Transflector other) {
    return transflector_wedge_multiVector(other, transflector_antiWedge_flector(self, transflector_dual(other)));
}

Plane transflector_antiProjectViaHorizonOnto_translator(Transflector self, Translator other) {
    return translator_wedge_point(other, transflector_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

Motor translator_antiProjectViaHorizonOnto_flector(Translator self, Flector other) {
    return flector_wedge_flector(other, translator_antiWedge_flector(self, flector_dual(other)));
}

Motor translator_antiProjectViaHorizonOnto_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_flector(other, translator_antiWedge_flector(self, flectorAtInfinity_dual(other)));
}

AntiScalar translator_antiProjectViaHorizonOnto_horizon(Translator self, Horizon other) {
    return horizon_wedge_origin(other, translator_antiWedge_origin(self, horizon_dual(other)));
}

MultiVector translator_antiProjectViaHorizonOnto_line(Translator self, Line other) {
    return line_wedge_multiVector(other, translator_antiWedge_lineAtOrigin(self, line_dual(other)));
}

MultiVector translator_antiProjectViaHorizonOnto_lineAtInfinity(Translator self, LineAtInfinity other) {
    return lineAtInfinity_wedge_multiVector(other, translator_antiWedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

MultiVector translator_antiProjectViaHorizonOnto_motor(Translator self, Motor other) {
    return motor_wedge_multiVector(other, translator_antiWedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector translator_antiProjectViaHorizonOnto_multiVector(Translator self, MultiVector other) {
    return multiVector_wedge_multiVector(other, translator_antiWedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVector translator_antiProjectViaHorizonOnto_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVector(other, translator_antiWedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

AntiScalar translator_antiProjectViaHorizonOnto_plane(Translator self, Plane other) {
    return plane_wedge_origin(other, translator_antiWedge_origin(self, plane_dual(other)));
}

Motor translator_antiProjectViaHorizonOnto_point(Translator self, Point other) {
    return point_wedge_transflector(other, translator_antiWedge_planeAtOrigin(self, point_dual(other)));
}

Translator translator_antiProjectViaHorizonOnto_pointAtInfinity(Translator self, PointAtInfinity other) {
    return pointAtInfinity_wedge_transflector(other, translator_antiWedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Motor translator_antiProjectViaHorizonOnto_transflector(Translator self, Transflector other) {
    return transflector_wedge_flector(other, translator_antiWedge_flector(self, transflector_dual(other)));
}

MultiVector translator_antiProjectViaHorizonOnto_translator(Translator self, Translator other) {
    return translator_wedge_multiVector(other, translator_antiWedge_lineAtOrigin(self, translator_dual(other)));
}

Flector flector_projectOrthogonallyOnto_flector(Flector self, Flector other) {
    return flector_antiWedge_motor(other, flector_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Point flector_projectOrthogonallyOnto_line(Flector self, Line other) {
    return line_antiWedge_plane(other, flector_wedge_lineAtInfinity(self, line_antiDual(other)));
}

Point flector_projectOrthogonallyOnto_lineAtOrigin(Flector self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_plane(other, flector_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector flector_projectOrthogonallyOnto_motor(Flector self, Motor other) {
    return motor_antiWedge_multiVector(other, flector_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector flector_projectOrthogonallyOnto_multiVector(Flector self, MultiVector other) {
    return multiVector_antiWedge_multiVector(other, flector_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVector flector_projectOrthogonallyOnto_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVector(other, flector_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Origin flector_projectOrthogonallyOnto_origin(Flector self, Origin other) {
    return origin_antiWedge_antiScalar(other, flector_wedge_horizon(self, origin_antiDual(other)));
}

Flector flector_projectOrthogonallyOnto_plane(Flector self, Plane other) {
    return plane_antiWedge_motor(other, flector_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

Flector flector_projectOrthogonallyOnto_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_motor(other, flector_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Point flector_projectOrthogonallyOnto_point(Flector self, Point other) {
    return point_antiWedge_antiScalar(other, flector_wedge_horizon(self, point_antiDual(other)));
}

MultiVector flector_projectOrthogonallyOnto_rotor(Flector self, Rotor other) {
    return rotor_antiWedge_multiVector(other, flector_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Flector flector_projectOrthogonallyOnto_transflector(Flector self, Transflector other) {
    return transflector_antiWedge_motor(other, flector_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

PointAtInfinity flectorAtInfinity_projectOrthogonallyOnto_flector(FlectorAtInfinity self, Flector other) {
    return flector_antiWedge_lineAtInfinity(other, flectorAtInfinity_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

PointAtInfinity flectorAtInfinity_projectOrthogonallyOnto_line(FlectorAtInfinity self, Line other) {
    return line_antiWedge_horizon(other, flectorAtInfinity_wedge_lineAtInfinity(self, line_antiDual(other)));
}

PointAtInfinity flectorAtInfinity_projectOrthogonallyOnto_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_horizon(other, flectorAtInfinity_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVectorAtInfinity flectorAtInfinity_projectOrthogonallyOnto_motor(FlectorAtInfinity self, Motor other) {
    return motor_antiWedge_multiVectorAtInfinity(other, flectorAtInfinity_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVectorAtInfinity flectorAtInfinity_projectOrthogonallyOnto_multiVector(FlectorAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(other, flectorAtInfinity_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtInfinity flectorAtInfinity_projectOrthogonallyOnto_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(other, flectorAtInfinity_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

PointAtInfinity flectorAtInfinity_projectOrthogonallyOnto_plane(FlectorAtInfinity self, Plane other) {
    return plane_antiWedge_lineAtInfinity(other, flectorAtInfinity_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

PointAtInfinity flectorAtInfinity_projectOrthogonallyOnto_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(other, flectorAtInfinity_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVectorAtInfinity flectorAtInfinity_projectOrthogonallyOnto_rotor(FlectorAtInfinity self, Rotor other) {
    return rotor_antiWedge_multiVectorAtInfinity(other, flectorAtInfinity_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

PointAtInfinity flectorAtInfinity_projectOrthogonallyOnto_transflector(FlectorAtInfinity self, Transflector other) {
    return transflector_antiWedge_lineAtInfinity(other, flectorAtInfinity_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

FlectorAtInfinity horizon_projectOrthogonallyOnto_motor(Horizon self, Motor other) {
    return motor_antiWedge_horizon(other, horizon_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVectorAtInfinity horizon_projectOrthogonallyOnto_multiVector(Horizon self, MultiVector other) {
    return multiVector_antiWedge_horizon(other, horizon_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtInfinity horizon_projectOrthogonallyOnto_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_horizon(other, horizon_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

FlectorAtInfinity horizon_projectOrthogonallyOnto_rotor(Horizon self, Rotor other) {
    return rotor_antiWedge_horizon(other, horizon_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector line_projectOrthogonallyOnto_flector(Line self, Flector other) {
    return flector_antiWedge_plane(other, line_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Line line_projectOrthogonallyOnto_line(Line self, Line other) {
    return line_antiWedge_antiScalar(other, line_wedge_lineAtInfinity(self, line_antiDual(other)));
}

LineAtOrigin line_projectOrthogonallyOnto_lineAtOrigin(Line self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_antiScalar(other, line_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector line_projectOrthogonallyOnto_motor(Line self, Motor other) {
    return motor_antiWedge_multiVector(other, line_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector line_projectOrthogonallyOnto_multiVector(Line self, MultiVector other) {
    return multiVector_antiWedge_multiVector(other, line_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVector line_projectOrthogonallyOnto_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVector(other, line_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Line line_projectOrthogonallyOnto_plane(Line self, Plane other) {
    return plane_antiWedge_plane(other, line_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

Line line_projectOrthogonallyOnto_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_plane(other, line_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVector line_projectOrthogonallyOnto_rotor(Line self, Rotor other) {
    return rotor_antiWedge_multiVector(other, line_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector line_projectOrthogonallyOnto_transflector(Line self, Transflector other) {
    return transflector_antiWedge_plane(other, line_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVectorAtInfinity lineAtInfinity_projectOrthogonallyOnto_flector(LineAtInfinity self, Flector other) {
    return flector_antiWedge_horizon(other, lineAtInfinity_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVectorAtInfinity lineAtInfinity_projectOrthogonallyOnto_motor(LineAtInfinity self, Motor other) {
    return motor_antiWedge_multiVectorAtInfinity(other, lineAtInfinity_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVectorAtInfinity lineAtInfinity_projectOrthogonallyOnto_multiVector(LineAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(other, lineAtInfinity_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtInfinity lineAtInfinity_projectOrthogonallyOnto_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(other, lineAtInfinity_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

LineAtInfinity lineAtInfinity_projectOrthogonallyOnto_plane(LineAtInfinity self, Plane other) {
    return plane_antiWedge_horizon(other, lineAtInfinity_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

LineAtInfinity lineAtInfinity_projectOrthogonallyOnto_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_horizon(other, lineAtInfinity_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVectorAtInfinity lineAtInfinity_projectOrthogonallyOnto_rotor(LineAtInfinity self, Rotor other) {
    return rotor_antiWedge_multiVectorAtInfinity(other, lineAtInfinity_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

LineAtInfinity lineAtInfinity_projectOrthogonallyOnto_transflector(LineAtInfinity self, Transflector other) {
    return transflector_antiWedge_horizon(other, lineAtInfinity_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector lineAtOrigin_projectOrthogonallyOnto_flector(LineAtOrigin self, Flector other) {
    return flector_antiWedge_planeAtOrigin(other, lineAtOrigin_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Line lineAtOrigin_projectOrthogonallyOnto_line(LineAtOrigin self, Line other) {
    return line_antiWedge_antiScalar(other, lineAtOrigin_wedge_lineAtInfinity(self, line_antiDual(other)));
}

LineAtOrigin lineAtOrigin_projectOrthogonallyOnto_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_antiScalar(other, lineAtOrigin_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector lineAtOrigin_projectOrthogonallyOnto_motor(LineAtOrigin self, Motor other) {
    return motor_antiWedge_multiVectorAtOrigin(other, lineAtOrigin_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector lineAtOrigin_projectOrthogonallyOnto_multiVector(LineAtOrigin self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, lineAtOrigin_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin lineAtOrigin_projectOrthogonallyOnto_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(other, lineAtOrigin_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Line lineAtOrigin_projectOrthogonallyOnto_plane(LineAtOrigin self, Plane other) {
    return plane_antiWedge_planeAtOrigin(other, lineAtOrigin_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

LineAtOrigin lineAtOrigin_projectOrthogonallyOnto_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_planeAtOrigin(other, lineAtOrigin_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVectorAtOrigin lineAtOrigin_projectOrthogonallyOnto_rotor(LineAtOrigin self, Rotor other) {
    return rotor_antiWedge_multiVectorAtOrigin(other, lineAtOrigin_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector lineAtOrigin_projectOrthogonallyOnto_transflector(LineAtOrigin self, Transflector other) {
    return transflector_antiWedge_planeAtOrigin(other, lineAtOrigin_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector motor_projectOrthogonallyOnto_flector(Motor self, Flector other) {
    return flector_antiWedge_plane(other, motor_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Line motor_projectOrthogonallyOnto_line(Motor self, Line other) {
    return line_antiWedge_antiScalar(other, motor_wedge_lineAtInfinity(self, line_antiDual(other)));
}

LineAtOrigin motor_projectOrthogonallyOnto_lineAtOrigin(Motor self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_antiScalar(other, motor_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector motor_projectOrthogonallyOnto_motor(Motor self, Motor other) {
    return motor_antiWedge_multiVector(other, motor_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector motor_projectOrthogonallyOnto_multiVector(Motor self, MultiVector other) {
    return multiVector_antiWedge_multiVector(other, motor_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVector motor_projectOrthogonallyOnto_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVector(other, motor_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Line motor_projectOrthogonallyOnto_plane(Motor self, Plane other) {
    return plane_antiWedge_plane(other, motor_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

Line motor_projectOrthogonallyOnto_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_plane(other, motor_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVector motor_projectOrthogonallyOnto_rotor(Motor self, Rotor other) {
    return rotor_antiWedge_multiVector(other, motor_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector motor_projectOrthogonallyOnto_transflector(Motor self, Transflector other) {
    return transflector_antiWedge_plane(other, motor_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_flector(MultiVector self, Flector other) {
    return flector_antiWedge_multiVector(other, multiVector_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_line(MultiVector self, Line other) {
    return line_antiWedge_multiVector(other, multiVector_wedge_lineAtInfinity(self, line_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_multiVector(other, multiVector_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_motor(MultiVector self, Motor other) {
    return motor_antiWedge_multiVector(other, multiVector_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_multiVector(MultiVector self, MultiVector other) {
    return multiVector_antiWedge_multiVector(other, multiVector_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVector(other, multiVector_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_origin(MultiVector self, Origin other) {
    return origin_antiWedge_multiVector(other, multiVector_wedge_horizon(self, origin_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_plane(MultiVector self, Plane other) {
    return plane_antiWedge_multiVector(other, multiVector_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_multiVector(other, multiVector_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_point(MultiVector self, Point other) {
    return point_antiWedge_multiVector(other, multiVector_wedge_horizon(self, point_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_rotor(MultiVector self, Rotor other) {
    return rotor_antiWedge_multiVector(other, multiVector_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector multiVector_projectOrthogonallyOnto_transflector(MultiVector self, Transflector other) {
    return transflector_antiWedge_multiVector(other, multiVector_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_flector(MultiVectorAtInfinity self, Flector other) {
    return flector_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_line(MultiVectorAtInfinity self, Line other) {
    return line_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_lineAtInfinity(self, line_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_motor(MultiVectorAtInfinity self, Motor other) {
    return motor_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Scalar multiVectorAtInfinity_projectOrthogonallyOnto_origin(MultiVectorAtInfinity self, Origin other) {
    return origin_antiWedge_horizon(other, multiVectorAtInfinity_wedge_horizon(self, origin_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_plane(MultiVectorAtInfinity self, Plane other) {
    return plane_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Scalar multiVectorAtInfinity_projectOrthogonallyOnto_point(MultiVectorAtInfinity self, Point other) {
    return point_antiWedge_horizon(other, multiVectorAtInfinity_wedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_rotor(MultiVectorAtInfinity self, Rotor other) {
    return rotor_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectOrthogonallyOnto_transflector(MultiVectorAtInfinity self, Transflector other) {
    return transflector_antiWedge_multiVectorAtInfinity(other, multiVectorAtInfinity_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector multiVectorAtOrigin_projectOrthogonallyOnto_flector(MultiVectorAtOrigin self, Flector other) {
    return flector_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVector multiVectorAtOrigin_projectOrthogonallyOnto_line(MultiVectorAtOrigin self, Line other) {
    return line_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_lineAtInfinity(self, line_antiDual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_projectOrthogonallyOnto_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector multiVectorAtOrigin_projectOrthogonallyOnto_motor(MultiVectorAtOrigin self, Motor other) {
    return motor_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector multiVectorAtOrigin_projectOrthogonallyOnto_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_projectOrthogonallyOnto_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Origin multiVectorAtOrigin_projectOrthogonallyOnto_origin(MultiVectorAtOrigin self, Origin other) {
    return origin_antiWedge_antiScalar(other, multiVectorAtOrigin_wedge_horizon(self, origin_antiDual(other)));
}

MultiVector multiVectorAtOrigin_projectOrthogonallyOnto_plane(MultiVectorAtOrigin self, Plane other) {
    return plane_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_projectOrthogonallyOnto_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Point multiVectorAtOrigin_projectOrthogonallyOnto_point(MultiVectorAtOrigin self, Point other) {
    return point_antiWedge_antiScalar(other, multiVectorAtOrigin_wedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin multiVectorAtOrigin_projectOrthogonallyOnto_rotor(MultiVectorAtOrigin self, Rotor other) {
    return rotor_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector multiVectorAtOrigin_projectOrthogonallyOnto_transflector(MultiVectorAtOrigin self, Transflector other) {
    return transflector_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Flector origin_projectOrthogonallyOnto_flector(Origin self, Flector other) {
    return flector_antiWedge_rotor(other, origin_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Point origin_projectOrthogonallyOnto_line(Origin self, Line other) {
    return line_antiWedge_planeAtOrigin(other, origin_wedge_lineAtInfinity(self, line_antiDual(other)));
}

Origin origin_projectOrthogonallyOnto_lineAtOrigin(Origin self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_planeAtOrigin(other, origin_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector origin_projectOrthogonallyOnto_motor(Origin self, Motor other) {
    return motor_antiWedge_multiVectorAtOrigin(other, origin_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector origin_projectOrthogonallyOnto_multiVector(Origin self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, origin_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin origin_projectOrthogonallyOnto_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(other, origin_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Origin origin_projectOrthogonallyOnto_origin(Origin self, Origin other) {
    return origin_antiWedge_antiScalar(other, origin_wedge_horizon(self, origin_antiDual(other)));
}

Point origin_projectOrthogonallyOnto_plane(Origin self, Plane other) {
    return plane_antiWedge_lineAtOrigin(other, origin_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

Origin origin_projectOrthogonallyOnto_planeAtOrigin(Origin self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_lineAtOrigin(other, origin_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Point origin_projectOrthogonallyOnto_point(Origin self, Point other) {
    return point_antiWedge_antiScalar(other, origin_wedge_horizon(self, point_antiDual(other)));
}

MultiVectorAtOrigin origin_projectOrthogonallyOnto_rotor(Origin self, Rotor other) {
    return rotor_antiWedge_multiVectorAtOrigin(other, origin_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Point origin_projectOrthogonallyOnto_transflector(Origin self, Transflector other) {
    return transflector_antiWedge_lineAtOrigin(other, origin_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Flector plane_projectOrthogonallyOnto_flector(Plane self, Flector other) {
    return flector_antiWedge_antiScalar(other, plane_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVector plane_projectOrthogonallyOnto_motor(Plane self, Motor other) {
    return motor_antiWedge_multiVector(other, plane_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector plane_projectOrthogonallyOnto_multiVector(Plane self, MultiVector other) {
    return multiVector_antiWedge_multiVector(other, plane_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVector plane_projectOrthogonallyOnto_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVector(other, plane_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Plane plane_projectOrthogonallyOnto_plane(Plane self, Plane other) {
    return plane_antiWedge_antiScalar(other, plane_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

PlaneAtOrigin plane_projectOrthogonallyOnto_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_antiScalar(other, plane_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVector plane_projectOrthogonallyOnto_rotor(Plane self, Rotor other) {
    return rotor_antiWedge_multiVector(other, plane_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Transflector plane_projectOrthogonallyOnto_transflector(Plane self, Transflector other) {
    return transflector_antiWedge_antiScalar(other, plane_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Flector planeAtOrigin_projectOrthogonallyOnto_flector(PlaneAtOrigin self, Flector other) {
    return flector_antiWedge_antiScalar(other, planeAtOrigin_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVector planeAtOrigin_projectOrthogonallyOnto_motor(PlaneAtOrigin self, Motor other) {
    return motor_antiWedge_multiVectorAtOrigin(other, planeAtOrigin_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector planeAtOrigin_projectOrthogonallyOnto_multiVector(PlaneAtOrigin self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, planeAtOrigin_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin planeAtOrigin_projectOrthogonallyOnto_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(other, planeAtOrigin_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Plane planeAtOrigin_projectOrthogonallyOnto_plane(PlaneAtOrigin self, Plane other) {
    return plane_antiWedge_antiScalar(other, planeAtOrigin_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

PlaneAtOrigin planeAtOrigin_projectOrthogonallyOnto_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_antiScalar(other, planeAtOrigin_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVectorAtOrigin planeAtOrigin_projectOrthogonallyOnto_rotor(PlaneAtOrigin self, Rotor other) {
    return rotor_antiWedge_multiVectorAtOrigin(other, planeAtOrigin_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Transflector planeAtOrigin_projectOrthogonallyOnto_transflector(PlaneAtOrigin self, Transflector other) {
    return transflector_antiWedge_antiScalar(other, planeAtOrigin_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Flector point_projectOrthogonallyOnto_flector(Point self, Flector other) {
    return flector_antiWedge_motor(other, point_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Point point_projectOrthogonallyOnto_line(Point self, Line other) {
    return line_antiWedge_plane(other, point_wedge_lineAtInfinity(self, line_antiDual(other)));
}

Point point_projectOrthogonallyOnto_lineAtOrigin(Point self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_plane(other, point_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector point_projectOrthogonallyOnto_motor(Point self, Motor other) {
    return motor_antiWedge_multiVector(other, point_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector point_projectOrthogonallyOnto_multiVector(Point self, MultiVector other) {
    return multiVector_antiWedge_multiVector(other, point_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVector point_projectOrthogonallyOnto_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVector(other, point_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Origin point_projectOrthogonallyOnto_origin(Point self, Origin other) {
    return origin_antiWedge_antiScalar(other, point_wedge_horizon(self, origin_antiDual(other)));
}

Point point_projectOrthogonallyOnto_plane(Point self, Plane other) {
    return plane_antiWedge_line(other, point_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

Point point_projectOrthogonallyOnto_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_line(other, point_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

Point point_projectOrthogonallyOnto_point(Point self, Point other) {
    return point_antiWedge_antiScalar(other, point_wedge_horizon(self, point_antiDual(other)));
}

MultiVector point_projectOrthogonallyOnto_rotor(Point self, Rotor other) {
    return rotor_antiWedge_multiVector(other, point_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Point point_projectOrthogonallyOnto_transflector(Point self, Transflector other) {
    return transflector_antiWedge_line(other, point_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

PointAtInfinity pointAtInfinity_projectOrthogonallyOnto_flector(PointAtInfinity self, Flector other) {
    return flector_antiWedge_lineAtInfinity(other, pointAtInfinity_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

PointAtInfinity pointAtInfinity_projectOrthogonallyOnto_line(PointAtInfinity self, Line other) {
    return line_antiWedge_horizon(other, pointAtInfinity_wedge_lineAtInfinity(self, line_antiDual(other)));
}

PointAtInfinity pointAtInfinity_projectOrthogonallyOnto_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_horizon(other, pointAtInfinity_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVectorAtInfinity pointAtInfinity_projectOrthogonallyOnto_motor(PointAtInfinity self, Motor other) {
    return motor_antiWedge_multiVectorAtInfinity(other, pointAtInfinity_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVectorAtInfinity pointAtInfinity_projectOrthogonallyOnto_multiVector(PointAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(other, pointAtInfinity_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtInfinity pointAtInfinity_projectOrthogonallyOnto_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(other, pointAtInfinity_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

PointAtInfinity pointAtInfinity_projectOrthogonallyOnto_plane(PointAtInfinity self, Plane other) {
    return plane_antiWedge_lineAtInfinity(other, pointAtInfinity_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

PointAtInfinity pointAtInfinity_projectOrthogonallyOnto_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(other, pointAtInfinity_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVectorAtInfinity pointAtInfinity_projectOrthogonallyOnto_rotor(PointAtInfinity self, Rotor other) {
    return rotor_antiWedge_multiVectorAtInfinity(other, pointAtInfinity_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

PointAtInfinity pointAtInfinity_projectOrthogonallyOnto_transflector(PointAtInfinity self, Transflector other) {
    return transflector_antiWedge_lineAtInfinity(other, pointAtInfinity_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVector rotor_projectOrthogonallyOnto_flector(Rotor self, Flector other) {
    return flector_antiWedge_planeAtOrigin(other, rotor_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

Line rotor_projectOrthogonallyOnto_line(Rotor self, Line other) {
    return line_antiWedge_antiScalar(other, rotor_wedge_lineAtInfinity(self, line_antiDual(other)));
}

LineAtOrigin rotor_projectOrthogonallyOnto_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_antiScalar(other, rotor_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector rotor_projectOrthogonallyOnto_motor(Rotor self, Motor other) {
    return motor_antiWedge_multiVectorAtOrigin(other, rotor_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector rotor_projectOrthogonallyOnto_multiVector(Rotor self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, rotor_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVectorAtOrigin rotor_projectOrthogonallyOnto_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(other, rotor_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Line rotor_projectOrthogonallyOnto_plane(Rotor self, Plane other) {
    return plane_antiWedge_planeAtOrigin(other, rotor_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

LineAtOrigin rotor_projectOrthogonallyOnto_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_planeAtOrigin(other, rotor_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVectorAtOrigin rotor_projectOrthogonallyOnto_rotor(Rotor self, Rotor other) {
    return rotor_antiWedge_multiVectorAtOrigin(other, rotor_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

MultiVector rotor_projectOrthogonallyOnto_transflector(Rotor self, Transflector other) {
    return transflector_antiWedge_planeAtOrigin(other, rotor_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Flector transflector_projectOrthogonallyOnto_flector(Transflector self, Flector other) {
    return flector_antiWedge_translator(other, transflector_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

PointAtInfinity transflector_projectOrthogonallyOnto_line(Transflector self, Line other) {
    return line_antiWedge_horizon(other, transflector_wedge_lineAtInfinity(self, line_antiDual(other)));
}

PointAtInfinity transflector_projectOrthogonallyOnto_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return lineAtOrigin_antiWedge_horizon(other, transflector_wedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)));
}

MultiVector transflector_projectOrthogonallyOnto_motor(Transflector self, Motor other) {
    return motor_antiWedge_multiVector(other, transflector_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector transflector_projectOrthogonallyOnto_multiVector(Transflector self, MultiVector other) {
    return multiVector_antiWedge_multiVector(other, transflector_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVector transflector_projectOrthogonallyOnto_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVector(other, transflector_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

Transflector transflector_projectOrthogonallyOnto_plane(Transflector self, Plane other) {
    return plane_antiWedge_translator(other, transflector_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

Transflector transflector_projectOrthogonallyOnto_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_translator(other, transflector_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVector transflector_projectOrthogonallyOnto_rotor(Transflector self, Rotor other) {
    return rotor_antiWedge_multiVector(other, transflector_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

Transflector transflector_projectOrthogonallyOnto_transflector(Transflector self, Transflector other) {
    return transflector_antiWedge_translator(other, transflector_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

MultiVectorAtInfinity translator_projectOrthogonallyOnto_flector(Translator self, Flector other) {
    return flector_antiWedge_horizon(other, translator_wedge_flectorAtInfinity(self, flector_antiDual(other)));
}

MultiVector translator_projectOrthogonallyOnto_motor(Translator self, Motor other) {
    return motor_antiWedge_multiVector(other, translator_wedge_multiVectorAtInfinity(self, motor_antiDual(other)));
}

MultiVector translator_projectOrthogonallyOnto_multiVector(Translator self, MultiVector other) {
    return multiVector_antiWedge_multiVector(other, translator_wedge_multiVectorAtInfinity(self, multiVector_antiDual(other)));
}

MultiVector translator_projectOrthogonallyOnto_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVector(other, translator_wedge_multiVectorAtInfinity(self, multiVectorAtOrigin_antiDual(other)));
}

LineAtInfinity translator_projectOrthogonallyOnto_plane(Translator self, Plane other) {
    return plane_antiWedge_horizon(other, translator_wedge_pointAtInfinity(self, plane_antiDual(other)));
}

LineAtInfinity translator_projectOrthogonallyOnto_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return planeAtOrigin_antiWedge_horizon(other, translator_wedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)));
}

MultiVector translator_projectOrthogonallyOnto_rotor(Translator self, Rotor other) {
    return rotor_antiWedge_multiVector(other, translator_wedge_multiVectorAtInfinity(self, rotor_antiDual(other)));
}

LineAtInfinity translator_projectOrthogonallyOnto_transflector(Translator self, Transflector other) {
    return transflector_antiWedge_horizon(other, translator_wedge_pointAtInfinity(self, transflector_antiDual(other)));
}

Flector flector_projectViaOriginOnto_flector(Flector self, Flector other) {
    return flector_antiWedge_motor(other, flector_wedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity flector_projectViaOriginOnto_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_motor(other, flector_wedge_flector(self, flectorAtInfinity_dual(other)));
}

FlectorAtInfinity flector_projectViaOriginOnto_horizon(Flector self, Horizon other) {
    return horizon_antiWedge_rotor(other, flector_wedge_origin(self, horizon_dual(other)));
}

Point flector_projectViaOriginOnto_line(Flector self, Line other) {
    return line_antiWedge_planeAtOrigin(other, flector_wedge_lineAtOrigin(self, line_dual(other)));
}

PointAtInfinity flector_projectViaOriginOnto_lineAtInfinity(Flector self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_planeAtOrigin(other, flector_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Flector flector_projectViaOriginOnto_motor(Flector self, Motor other) {
    return motor_antiWedge_planeAtOrigin(other, flector_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector flector_projectViaOriginOnto_multiVector(Flector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, flector_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity flector_projectViaOriginOnto_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, flector_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Flector flector_projectViaOriginOnto_plane(Flector self, Plane other) {
    return plane_antiWedge_rotor(other, flector_wedge_origin(self, plane_dual(other)));
}

Point flector_projectViaOriginOnto_point(Flector self, Point other) {
    return point_antiWedge_antiScalar(other, flector_wedge_planeAtOrigin(self, point_dual(other)));
}

PointAtInfinity flector_projectViaOriginOnto_pointAtInfinity(Flector self, PointAtInfinity other) {
    return pointAtInfinity_antiWedge_antiScalar(other, flector_wedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Flector flector_projectViaOriginOnto_transflector(Flector self, Transflector other) {
    return transflector_antiWedge_motor(other, flector_wedge_flector(self, transflector_dual(other)));
}

Transflector flector_projectViaOriginOnto_translator(Flector self, Translator other) {
    return translator_antiWedge_planeAtOrigin(other, flector_wedge_lineAtOrigin(self, translator_dual(other)));
}

Flector flectorAtInfinity_projectViaOriginOnto_flector(FlectorAtInfinity self, Flector other) {
    return flector_antiWedge_motor(other, flectorAtInfinity_wedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity flectorAtInfinity_projectViaOriginOnto_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_motor(other, flectorAtInfinity_wedge_flector(self, flectorAtInfinity_dual(other)));
}

FlectorAtInfinity flectorAtInfinity_projectViaOriginOnto_horizon(FlectorAtInfinity self, Horizon other) {
    return horizon_antiWedge_rotor(other, flectorAtInfinity_wedge_origin(self, horizon_dual(other)));
}

Point flectorAtInfinity_projectViaOriginOnto_line(FlectorAtInfinity self, Line other) {
    return line_antiWedge_planeAtOrigin(other, flectorAtInfinity_wedge_lineAtOrigin(self, line_dual(other)));
}

PointAtInfinity flectorAtInfinity_projectViaOriginOnto_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_planeAtOrigin(other, flectorAtInfinity_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Flector flectorAtInfinity_projectViaOriginOnto_motor(FlectorAtInfinity self, Motor other) {
    return motor_antiWedge_planeAtOrigin(other, flectorAtInfinity_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector flectorAtInfinity_projectViaOriginOnto_multiVector(FlectorAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, flectorAtInfinity_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity flectorAtInfinity_projectViaOriginOnto_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, flectorAtInfinity_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Flector flectorAtInfinity_projectViaOriginOnto_plane(FlectorAtInfinity self, Plane other) {
    return plane_antiWedge_rotor(other, flectorAtInfinity_wedge_origin(self, plane_dual(other)));
}

Point flectorAtInfinity_projectViaOriginOnto_point(FlectorAtInfinity self, Point other) {
    return point_antiWedge_antiScalar(other, flectorAtInfinity_wedge_planeAtOrigin(self, point_dual(other)));
}

PointAtInfinity flectorAtInfinity_projectViaOriginOnto_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_antiWedge_antiScalar(other, flectorAtInfinity_wedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Flector flectorAtInfinity_projectViaOriginOnto_transflector(FlectorAtInfinity self, Transflector other) {
    return transflector_antiWedge_motor(other, flectorAtInfinity_wedge_flector(self, transflector_dual(other)));
}

Transflector flectorAtInfinity_projectViaOriginOnto_translator(FlectorAtInfinity self, Translator other) {
    return translator_antiWedge_planeAtOrigin(other, flectorAtInfinity_wedge_lineAtOrigin(self, translator_dual(other)));
}

Flector horizon_projectViaOriginOnto_flector(Horizon self, Flector other) {
    return flector_antiWedge_antiScalar(other, horizon_wedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity horizon_projectViaOriginOnto_flectorAtInfinity(Horizon self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_antiScalar(other, horizon_wedge_flector(self, flectorAtInfinity_dual(other)));
}

Horizon horizon_projectViaOriginOnto_horizon(Horizon self, Horizon other) {
    return horizon_antiWedge_antiScalar(other, horizon_wedge_origin(self, horizon_dual(other)));
}

MultiVector horizon_projectViaOriginOnto_multiVector(Horizon self, MultiVector other) {
    return multiVector_antiWedge_antiScalar(other, horizon_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity horizon_projectViaOriginOnto_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_antiScalar(other, horizon_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Plane horizon_projectViaOriginOnto_plane(Horizon self, Plane other) {
    return plane_antiWedge_antiScalar(other, horizon_wedge_origin(self, plane_dual(other)));
}

Transflector horizon_projectViaOriginOnto_transflector(Horizon self, Transflector other) {
    return transflector_antiWedge_antiScalar(other, horizon_wedge_flector(self, transflector_dual(other)));
}

MultiVector line_projectViaOriginOnto_flector(Line self, Flector other) {
    return flector_antiWedge_plane(other, line_wedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity line_projectViaOriginOnto_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_plane(other, line_wedge_flector(self, flectorAtInfinity_dual(other)));
}

LineAtInfinity line_projectViaOriginOnto_horizon(Line self, Horizon other) {
    return horizon_antiWedge_planeAtOrigin(other, line_wedge_origin(self, horizon_dual(other)));
}

Line line_projectViaOriginOnto_line(Line self, Line other) {
    return line_antiWedge_antiScalar(other, line_wedge_lineAtOrigin(self, line_dual(other)));
}

LineAtInfinity line_projectViaOriginOnto_lineAtInfinity(Line self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_antiScalar(other, line_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Motor line_projectViaOriginOnto_motor(Line self, Motor other) {
    return motor_antiWedge_antiScalar(other, line_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector line_projectViaOriginOnto_multiVector(Line self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, line_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity line_projectViaOriginOnto_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, line_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Line line_projectViaOriginOnto_plane(Line self, Plane other) {
    return plane_antiWedge_planeAtOrigin(other, line_wedge_origin(self, plane_dual(other)));
}

MultiVector line_projectViaOriginOnto_transflector(Line self, Transflector other) {
    return transflector_antiWedge_plane(other, line_wedge_flector(self, transflector_dual(other)));
}

Translator line_projectViaOriginOnto_translator(Line self, Translator other) {
    return translator_antiWedge_antiScalar(other, line_wedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector lineAtInfinity_projectViaOriginOnto_flector(LineAtInfinity self, Flector other) {
    return flector_antiWedge_plane(other, lineAtInfinity_wedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity lineAtInfinity_projectViaOriginOnto_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_plane(other, lineAtInfinity_wedge_flector(self, flectorAtInfinity_dual(other)));
}

LineAtInfinity lineAtInfinity_projectViaOriginOnto_horizon(LineAtInfinity self, Horizon other) {
    return horizon_antiWedge_planeAtOrigin(other, lineAtInfinity_wedge_origin(self, horizon_dual(other)));
}

Line lineAtInfinity_projectViaOriginOnto_line(LineAtInfinity self, Line other) {
    return line_antiWedge_antiScalar(other, lineAtInfinity_wedge_lineAtOrigin(self, line_dual(other)));
}

LineAtInfinity lineAtInfinity_projectViaOriginOnto_lineAtInfinity(LineAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_antiScalar(other, lineAtInfinity_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Motor lineAtInfinity_projectViaOriginOnto_motor(LineAtInfinity self, Motor other) {
    return motor_antiWedge_antiScalar(other, lineAtInfinity_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector lineAtInfinity_projectViaOriginOnto_multiVector(LineAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, lineAtInfinity_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity lineAtInfinity_projectViaOriginOnto_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, lineAtInfinity_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Line lineAtInfinity_projectViaOriginOnto_plane(LineAtInfinity self, Plane other) {
    return plane_antiWedge_planeAtOrigin(other, lineAtInfinity_wedge_origin(self, plane_dual(other)));
}

MultiVector lineAtInfinity_projectViaOriginOnto_transflector(LineAtInfinity self, Transflector other) {
    return transflector_antiWedge_plane(other, lineAtInfinity_wedge_flector(self, transflector_dual(other)));
}

Translator lineAtInfinity_projectViaOriginOnto_translator(LineAtInfinity self, Translator other) {
    return translator_antiWedge_antiScalar(other, lineAtInfinity_wedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector lineAtOrigin_projectViaOriginOnto_flector(LineAtOrigin self, Flector other) {
    return flector_antiWedge_planeAtOrigin(other, lineAtOrigin_wedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity lineAtOrigin_projectViaOriginOnto_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_planeAtOrigin(other, lineAtOrigin_wedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVector lineAtOrigin_projectViaOriginOnto_transflector(LineAtOrigin self, Transflector other) {
    return transflector_antiWedge_planeAtOrigin(other, lineAtOrigin_wedge_flector(self, transflector_dual(other)));
}

MultiVector motor_projectViaOriginOnto_flector(Motor self, Flector other) {
    return flector_antiWedge_plane(other, motor_wedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity motor_projectViaOriginOnto_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_plane(other, motor_wedge_flector(self, flectorAtInfinity_dual(other)));
}

LineAtInfinity motor_projectViaOriginOnto_horizon(Motor self, Horizon other) {
    return horizon_antiWedge_planeAtOrigin(other, motor_wedge_origin(self, horizon_dual(other)));
}

Line motor_projectViaOriginOnto_line(Motor self, Line other) {
    return line_antiWedge_antiScalar(other, motor_wedge_lineAtOrigin(self, line_dual(other)));
}

LineAtInfinity motor_projectViaOriginOnto_lineAtInfinity(Motor self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_antiScalar(other, motor_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Motor motor_projectViaOriginOnto_motor(Motor self, Motor other) {
    return motor_antiWedge_antiScalar(other, motor_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector motor_projectViaOriginOnto_multiVector(Motor self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, motor_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity motor_projectViaOriginOnto_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, motor_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Line motor_projectViaOriginOnto_plane(Motor self, Plane other) {
    return plane_antiWedge_planeAtOrigin(other, motor_wedge_origin(self, plane_dual(other)));
}

MultiVector motor_projectViaOriginOnto_transflector(Motor self, Transflector other) {
    return transflector_antiWedge_plane(other, motor_wedge_flector(self, transflector_dual(other)));
}

Translator motor_projectViaOriginOnto_translator(Motor self, Translator other) {
    return translator_antiWedge_antiScalar(other, motor_wedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector multiVector_projectViaOriginOnto_flector(MultiVector self, Flector other) {
    return flector_antiWedge_multiVector(other, multiVector_wedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity multiVector_projectViaOriginOnto_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_multiVector(other, multiVector_wedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVectorAtInfinity multiVector_projectViaOriginOnto_horizon(MultiVector self, Horizon other) {
    return horizon_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_origin(self, horizon_dual(other)));
}

MultiVector multiVector_projectViaOriginOnto_line(MultiVector self, Line other) {
    return line_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_lineAtOrigin(self, line_dual(other)));
}

MultiVectorAtInfinity multiVector_projectViaOriginOnto_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

MultiVector multiVector_projectViaOriginOnto_motor(MultiVector self, Motor other) {
    return motor_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector multiVector_projectViaOriginOnto_multiVector(MultiVector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity multiVector_projectViaOriginOnto_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

MultiVector multiVector_projectViaOriginOnto_plane(MultiVector self, Plane other) {
    return plane_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_origin(self, plane_dual(other)));
}

MultiVector multiVector_projectViaOriginOnto_point(MultiVector self, Point other) {
    return point_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_planeAtOrigin(self, point_dual(other)));
}

MultiVectorAtInfinity multiVector_projectViaOriginOnto_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return pointAtInfinity_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector multiVector_projectViaOriginOnto_transflector(MultiVector self, Transflector other) {
    return transflector_antiWedge_multiVector(other, multiVector_wedge_flector(self, transflector_dual(other)));
}

MultiVector multiVector_projectViaOriginOnto_translator(MultiVector self, Translator other) {
    return translator_antiWedge_multiVectorAtOrigin(other, multiVector_wedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector multiVectorAtInfinity_projectViaOriginOnto_flector(MultiVectorAtInfinity self, Flector other) {
    return flector_antiWedge_multiVector(other, multiVectorAtInfinity_wedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectViaOriginOnto_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_multiVector(other, multiVectorAtInfinity_wedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectViaOriginOnto_horizon(MultiVectorAtInfinity self, Horizon other) {
    return horizon_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_origin(self, horizon_dual(other)));
}

MultiVector multiVectorAtInfinity_projectViaOriginOnto_line(MultiVectorAtInfinity self, Line other) {
    return line_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_lineAtOrigin(self, line_dual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectViaOriginOnto_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

MultiVector multiVectorAtInfinity_projectViaOriginOnto_motor(MultiVectorAtInfinity self, Motor other) {
    return motor_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector multiVectorAtInfinity_projectViaOriginOnto_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectViaOriginOnto_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

MultiVector multiVectorAtInfinity_projectViaOriginOnto_plane(MultiVectorAtInfinity self, Plane other) {
    return plane_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_origin(self, plane_dual(other)));
}

MultiVector multiVectorAtInfinity_projectViaOriginOnto_point(MultiVectorAtInfinity self, Point other) {
    return point_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_planeAtOrigin(self, point_dual(other)));
}

MultiVectorAtInfinity multiVectorAtInfinity_projectViaOriginOnto_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

MultiVector multiVectorAtInfinity_projectViaOriginOnto_transflector(MultiVectorAtInfinity self, Transflector other) {
    return transflector_antiWedge_multiVector(other, multiVectorAtInfinity_wedge_flector(self, transflector_dual(other)));
}

MultiVector multiVectorAtInfinity_projectViaOriginOnto_translator(MultiVectorAtInfinity self, Translator other) {
    return translator_antiWedge_multiVectorAtOrigin(other, multiVectorAtInfinity_wedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector multiVectorAtOrigin_projectViaOriginOnto_flector(MultiVectorAtOrigin self, Flector other) {
    return flector_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity multiVectorAtOrigin_projectViaOriginOnto_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVector multiVectorAtOrigin_projectViaOriginOnto_transflector(MultiVectorAtOrigin self, Transflector other) {
    return transflector_antiWedge_multiVectorAtOrigin(other, multiVectorAtOrigin_wedge_flector(self, transflector_dual(other)));
}

Flector origin_projectViaOriginOnto_flector(Origin self, Flector other) {
    return flector_antiWedge_rotor(other, origin_wedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity origin_projectViaOriginOnto_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_rotor(other, origin_wedge_flector(self, flectorAtInfinity_dual(other)));
}

Flector origin_projectViaOriginOnto_transflector(Origin self, Transflector other) {
    return transflector_antiWedge_rotor(other, origin_wedge_flector(self, transflector_dual(other)));
}

Flector plane_projectViaOriginOnto_flector(Plane self, Flector other) {
    return flector_antiWedge_antiScalar(other, plane_wedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity plane_projectViaOriginOnto_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_antiScalar(other, plane_wedge_flector(self, flectorAtInfinity_dual(other)));
}

Horizon plane_projectViaOriginOnto_horizon(Plane self, Horizon other) {
    return horizon_antiWedge_antiScalar(other, plane_wedge_origin(self, horizon_dual(other)));
}

MultiVector plane_projectViaOriginOnto_multiVector(Plane self, MultiVector other) {
    return multiVector_antiWedge_antiScalar(other, plane_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity plane_projectViaOriginOnto_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_antiScalar(other, plane_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Plane plane_projectViaOriginOnto_plane(Plane self, Plane other) {
    return plane_antiWedge_antiScalar(other, plane_wedge_origin(self, plane_dual(other)));
}

Transflector plane_projectViaOriginOnto_transflector(Plane self, Transflector other) {
    return transflector_antiWedge_antiScalar(other, plane_wedge_flector(self, transflector_dual(other)));
}

Flector planeAtOrigin_projectViaOriginOnto_flector(PlaneAtOrigin self, Flector other) {
    return flector_antiWedge_antiScalar(other, planeAtOrigin_wedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity planeAtOrigin_projectViaOriginOnto_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_antiScalar(other, planeAtOrigin_wedge_flector(self, flectorAtInfinity_dual(other)));
}

Transflector planeAtOrigin_projectViaOriginOnto_transflector(PlaneAtOrigin self, Transflector other) {
    return transflector_antiWedge_antiScalar(other, planeAtOrigin_wedge_flector(self, transflector_dual(other)));
}

Flector point_projectViaOriginOnto_flector(Point self, Flector other) {
    return flector_antiWedge_motor(other, point_wedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity point_projectViaOriginOnto_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_motor(other, point_wedge_flector(self, flectorAtInfinity_dual(other)));
}

PointAtInfinity point_projectViaOriginOnto_horizon(Point self, Horizon other) {
    return horizon_antiWedge_lineAtOrigin(other, point_wedge_origin(self, horizon_dual(other)));
}

Point point_projectViaOriginOnto_line(Point self, Line other) {
    return line_antiWedge_planeAtOrigin(other, point_wedge_lineAtOrigin(self, line_dual(other)));
}

PointAtInfinity point_projectViaOriginOnto_lineAtInfinity(Point self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_planeAtOrigin(other, point_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Flector point_projectViaOriginOnto_motor(Point self, Motor other) {
    return motor_antiWedge_planeAtOrigin(other, point_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector point_projectViaOriginOnto_multiVector(Point self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, point_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity point_projectViaOriginOnto_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, point_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Point point_projectViaOriginOnto_plane(Point self, Plane other) {
    return plane_antiWedge_lineAtOrigin(other, point_wedge_origin(self, plane_dual(other)));
}

Point point_projectViaOriginOnto_point(Point self, Point other) {
    return point_antiWedge_antiScalar(other, point_wedge_planeAtOrigin(self, point_dual(other)));
}

PointAtInfinity point_projectViaOriginOnto_pointAtInfinity(Point self, PointAtInfinity other) {
    return pointAtInfinity_antiWedge_antiScalar(other, point_wedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Flector point_projectViaOriginOnto_transflector(Point self, Transflector other) {
    return transflector_antiWedge_motor(other, point_wedge_flector(self, transflector_dual(other)));
}

Transflector point_projectViaOriginOnto_translator(Point self, Translator other) {
    return translator_antiWedge_planeAtOrigin(other, point_wedge_lineAtOrigin(self, translator_dual(other)));
}

Flector pointAtInfinity_projectViaOriginOnto_flector(PointAtInfinity self, Flector other) {
    return flector_antiWedge_motor(other, pointAtInfinity_wedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity pointAtInfinity_projectViaOriginOnto_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_motor(other, pointAtInfinity_wedge_flector(self, flectorAtInfinity_dual(other)));
}

PointAtInfinity pointAtInfinity_projectViaOriginOnto_horizon(PointAtInfinity self, Horizon other) {
    return horizon_antiWedge_lineAtOrigin(other, pointAtInfinity_wedge_origin(self, horizon_dual(other)));
}

Point pointAtInfinity_projectViaOriginOnto_line(PointAtInfinity self, Line other) {
    return line_antiWedge_planeAtOrigin(other, pointAtInfinity_wedge_lineAtOrigin(self, line_dual(other)));
}

PointAtInfinity pointAtInfinity_projectViaOriginOnto_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_planeAtOrigin(other, pointAtInfinity_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Flector pointAtInfinity_projectViaOriginOnto_motor(PointAtInfinity self, Motor other) {
    return motor_antiWedge_planeAtOrigin(other, pointAtInfinity_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector pointAtInfinity_projectViaOriginOnto_multiVector(PointAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, pointAtInfinity_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity pointAtInfinity_projectViaOriginOnto_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, pointAtInfinity_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Point pointAtInfinity_projectViaOriginOnto_plane(PointAtInfinity self, Plane other) {
    return plane_antiWedge_lineAtOrigin(other, pointAtInfinity_wedge_origin(self, plane_dual(other)));
}

Point pointAtInfinity_projectViaOriginOnto_point(PointAtInfinity self, Point other) {
    return point_antiWedge_antiScalar(other, pointAtInfinity_wedge_planeAtOrigin(self, point_dual(other)));
}

PointAtInfinity pointAtInfinity_projectViaOriginOnto_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return pointAtInfinity_antiWedge_antiScalar(other, pointAtInfinity_wedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Flector pointAtInfinity_projectViaOriginOnto_transflector(PointAtInfinity self, Transflector other) {
    return transflector_antiWedge_motor(other, pointAtInfinity_wedge_flector(self, transflector_dual(other)));
}

Transflector pointAtInfinity_projectViaOriginOnto_translator(PointAtInfinity self, Translator other) {
    return translator_antiWedge_planeAtOrigin(other, pointAtInfinity_wedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector rotor_projectViaOriginOnto_flector(Rotor self, Flector other) {
    return flector_antiWedge_planeAtOrigin(other, rotor_wedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity rotor_projectViaOriginOnto_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_planeAtOrigin(other, rotor_wedge_flector(self, flectorAtInfinity_dual(other)));
}

MultiVector rotor_projectViaOriginOnto_transflector(Rotor self, Transflector other) {
    return transflector_antiWedge_planeAtOrigin(other, rotor_wedge_flector(self, transflector_dual(other)));
}

Flector transflector_projectViaOriginOnto_flector(Transflector self, Flector other) {
    return flector_antiWedge_motor(other, transflector_wedge_flector(self, flector_dual(other)));
}

FlectorAtInfinity transflector_projectViaOriginOnto_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_motor(other, transflector_wedge_flector(self, flectorAtInfinity_dual(other)));
}

FlectorAtInfinity transflector_projectViaOriginOnto_horizon(Transflector self, Horizon other) {
    return horizon_antiWedge_rotor(other, transflector_wedge_origin(self, horizon_dual(other)));
}

Point transflector_projectViaOriginOnto_line(Transflector self, Line other) {
    return line_antiWedge_planeAtOrigin(other, transflector_wedge_lineAtOrigin(self, line_dual(other)));
}

PointAtInfinity transflector_projectViaOriginOnto_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_planeAtOrigin(other, transflector_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Flector transflector_projectViaOriginOnto_motor(Transflector self, Motor other) {
    return motor_antiWedge_planeAtOrigin(other, transflector_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector transflector_projectViaOriginOnto_multiVector(Transflector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, transflector_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity transflector_projectViaOriginOnto_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, transflector_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Flector transflector_projectViaOriginOnto_plane(Transflector self, Plane other) {
    return plane_antiWedge_rotor(other, transflector_wedge_origin(self, plane_dual(other)));
}

Point transflector_projectViaOriginOnto_point(Transflector self, Point other) {
    return point_antiWedge_antiScalar(other, transflector_wedge_planeAtOrigin(self, point_dual(other)));
}

PointAtInfinity transflector_projectViaOriginOnto_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return pointAtInfinity_antiWedge_antiScalar(other, transflector_wedge_planeAtOrigin(self, pointAtInfinity_dual(other)));
}

Flector transflector_projectViaOriginOnto_transflector(Transflector self, Transflector other) {
    return transflector_antiWedge_motor(other, transflector_wedge_flector(self, transflector_dual(other)));
}

Transflector transflector_projectViaOriginOnto_translator(Transflector self, Translator other) {
    return translator_antiWedge_planeAtOrigin(other, transflector_wedge_lineAtOrigin(self, translator_dual(other)));
}

MultiVector translator_projectViaOriginOnto_flector(Translator self, Flector other) {
    return flector_antiWedge_plane(other, translator_wedge_flector(self, flector_dual(other)));
}

MultiVectorAtInfinity translator_projectViaOriginOnto_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return flectorAtInfinity_antiWedge_plane(other, translator_wedge_flector(self, flectorAtInfinity_dual(other)));
}

LineAtInfinity translator_projectViaOriginOnto_horizon(Translator self, Horizon other) {
    return horizon_antiWedge_planeAtOrigin(other, translator_wedge_origin(self, horizon_dual(other)));
}

Line translator_projectViaOriginOnto_line(Translator self, Line other) {
    return line_antiWedge_antiScalar(other, translator_wedge_lineAtOrigin(self, line_dual(other)));
}

LineAtInfinity translator_projectViaOriginOnto_lineAtInfinity(Translator self, LineAtInfinity other) {
    return lineAtInfinity_antiWedge_antiScalar(other, translator_wedge_lineAtOrigin(self, lineAtInfinity_dual(other)));
}

Motor translator_projectViaOriginOnto_motor(Translator self, Motor other) {
    return motor_antiWedge_antiScalar(other, translator_wedge_lineAtOrigin(self, motor_dual(other)));
}

MultiVector translator_projectViaOriginOnto_multiVector(Translator self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(other, translator_wedge_multiVectorAtOrigin(self, multiVector_dual(other)));
}

MultiVectorAtInfinity translator_projectViaOriginOnto_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(other, translator_wedge_multiVectorAtOrigin(self, multiVectorAtInfinity_dual(other)));
}

Line translator_projectViaOriginOnto_plane(Translator self, Plane other) {
    return plane_antiWedge_planeAtOrigin(other, translator_wedge_origin(self, plane_dual(other)));
}

MultiVector translator_projectViaOriginOnto_transflector(Translator self, Transflector other) {
    return transflector_antiWedge_plane(other, translator_wedge_flector(self, transflector_dual(other)));
}

Translator translator_projectViaOriginOnto_translator(Translator self, Translator other) {
    return translator_antiWedge_antiScalar(other, translator_wedge_lineAtOrigin(self, translator_dual(other)));
}

FlectorAtInfinity flector_antiRejectOrthogonallyFrom_flector(Flector self, Flector other) {
    return motor_antiWedge_flectorAtInfinity(flector_wedge_flector(self, other), flector_antiDual(other));
}

PointAtInfinity flector_antiRejectOrthogonallyFrom_line(Flector self, Line other) {
    return plane_antiWedge_lineAtInfinity(flector_wedge_line(self, other), line_antiDual(other));
}

PointAtInfinity flector_antiRejectOrthogonallyFrom_lineAtOrigin(Flector self, LineAtOrigin other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(flector_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity flector_antiRejectOrthogonallyFrom_motor(Flector self, Motor other) {
    return plane_antiWedge_multiVectorAtInfinity(flector_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity flector_antiRejectOrthogonallyFrom_multiVector(Flector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(flector_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity flector_antiRejectOrthogonallyFrom_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(flector_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

FlectorAtInfinity flector_antiRejectOrthogonallyFrom_origin(Flector self, Origin other) {
    return rotor_antiWedge_horizon(flector_wedge_origin(self, other), origin_antiDual(other));
}

PointAtInfinity flector_antiRejectOrthogonallyFrom_plane(Flector self, Plane other) {
    return antiScalar_antiWedge_pointAtInfinity(flector_wedge_plane(self, other), plane_antiDual(other));
}

PointAtInfinity flector_antiRejectOrthogonallyFrom_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return antiScalar_antiWedge_pointAtInfinity(flector_wedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

FlectorAtInfinity flector_antiRejectOrthogonallyFrom_point(Flector self, Point other) {
    return motor_antiWedge_horizon(flector_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity flector_antiRejectOrthogonallyFrom_rotor(Flector self, Rotor other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(flector_wedge_rotor(self, other), rotor_antiDual(other));
}

PointAtInfinity flector_antiRejectOrthogonallyFrom_transflector(Flector self, Transflector other) {
    return motor_antiWedge_pointAtInfinity(flector_wedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_flector(FlectorAtInfinity self, Flector other) {
    return motor_antiWedge_flectorAtInfinity(flectorAtInfinity_wedge_flector(self, other), flector_antiDual(other));
}

PointAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_line(FlectorAtInfinity self, Line other) {
    return plane_antiWedge_lineAtInfinity(flectorAtInfinity_wedge_line(self, other), line_antiDual(other));
}

PointAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(flectorAtInfinity_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_motor(FlectorAtInfinity self, Motor other) {
    return plane_antiWedge_multiVectorAtInfinity(flectorAtInfinity_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_multiVector(FlectorAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(flectorAtInfinity_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(flectorAtInfinity_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

FlectorAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_origin(FlectorAtInfinity self, Origin other) {
    return rotor_antiWedge_horizon(flectorAtInfinity_wedge_origin(self, other), origin_antiDual(other));
}

PointAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_plane(FlectorAtInfinity self, Plane other) {
    return antiScalar_antiWedge_pointAtInfinity(flectorAtInfinity_wedge_plane(self, other), plane_antiDual(other));
}

PointAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return antiScalar_antiWedge_pointAtInfinity(flectorAtInfinity_wedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

FlectorAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_point(FlectorAtInfinity self, Point other) {
    return motor_antiWedge_horizon(flectorAtInfinity_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_rotor(FlectorAtInfinity self, Rotor other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(flectorAtInfinity_wedge_rotor(self, other), rotor_antiDual(other));
}

PointAtInfinity flectorAtInfinity_antiRejectOrthogonallyFrom_transflector(FlectorAtInfinity self, Transflector other) {
    return translator_antiWedge_pointAtInfinity(flectorAtInfinity_wedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity horizon_antiRejectOrthogonallyFrom_flector(Horizon self, Flector other) {
    return antiScalar_antiWedge_flectorAtInfinity(horizon_wedge_flector(self, other), flector_antiDual(other));
}

MultiVectorAtInfinity horizon_antiRejectOrthogonallyFrom_multiVector(Horizon self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(horizon_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity horizon_antiRejectOrthogonallyFrom_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(horizon_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Horizon horizon_antiRejectOrthogonallyFrom_origin(Horizon self, Origin other) {
    return antiScalar_antiWedge_horizon(horizon_wedge_origin(self, other), origin_antiDual(other));
}

Horizon horizon_antiRejectOrthogonallyFrom_point(Horizon self, Point other) {
    return antiScalar_antiWedge_horizon(horizon_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity line_antiRejectOrthogonallyFrom_flector(Line self, Flector other) {
    return plane_antiWedge_flectorAtInfinity(line_wedge_flector(self, other), flector_antiDual(other));
}

LineAtInfinity line_antiRejectOrthogonallyFrom_line(Line self, Line other) {
    return antiScalar_antiWedge_lineAtInfinity(line_wedge_line(self, other), line_antiDual(other));
}

LineAtInfinity line_antiRejectOrthogonallyFrom_lineAtOrigin(Line self, LineAtOrigin other) {
    return antiScalar_antiWedge_lineAtInfinity(line_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity line_antiRejectOrthogonallyFrom_motor(Line self, Motor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(line_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity line_antiRejectOrthogonallyFrom_multiVector(Line self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(line_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity line_antiRejectOrthogonallyFrom_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(line_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity line_antiRejectOrthogonallyFrom_origin(Line self, Origin other) {
    return planeAtOrigin_antiWedge_horizon(line_wedge_origin(self, other), origin_antiDual(other));
}

LineAtInfinity line_antiRejectOrthogonallyFrom_point(Line self, Point other) {
    return plane_antiWedge_horizon(line_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity line_antiRejectOrthogonallyFrom_rotor(Line self, Rotor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(line_wedge_rotor(self, other), rotor_antiDual(other));
}

Scalar line_antiRejectOrthogonallyFrom_transflector(Line self, Transflector other) {
    return plane_antiWedge_pointAtInfinity(line_wedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_antiRejectOrthogonallyFrom_flector(LineAtInfinity self, Flector other) {
    return plane_antiWedge_flectorAtInfinity(lineAtInfinity_wedge_flector(self, other), flector_antiDual(other));
}

LineAtInfinity lineAtInfinity_antiRejectOrthogonallyFrom_line(LineAtInfinity self, Line other) {
    return antiScalar_antiWedge_lineAtInfinity(lineAtInfinity_wedge_line(self, other), line_antiDual(other));
}

LineAtInfinity lineAtInfinity_antiRejectOrthogonallyFrom_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return antiScalar_antiWedge_lineAtInfinity(lineAtInfinity_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_antiRejectOrthogonallyFrom_motor(LineAtInfinity self, Motor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(lineAtInfinity_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_antiRejectOrthogonallyFrom_multiVector(LineAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(lineAtInfinity_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_antiRejectOrthogonallyFrom_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(lineAtInfinity_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity lineAtInfinity_antiRejectOrthogonallyFrom_origin(LineAtInfinity self, Origin other) {
    return planeAtOrigin_antiWedge_horizon(lineAtInfinity_wedge_origin(self, other), origin_antiDual(other));
}

LineAtInfinity lineAtInfinity_antiRejectOrthogonallyFrom_point(LineAtInfinity self, Point other) {
    return plane_antiWedge_horizon(lineAtInfinity_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_antiRejectOrthogonallyFrom_rotor(LineAtInfinity self, Rotor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(lineAtInfinity_wedge_rotor(self, other), rotor_antiDual(other));
}

MultiVectorAtInfinity lineAtOrigin_antiRejectOrthogonallyFrom_flector(LineAtOrigin self, Flector other) {
    return planeAtOrigin_antiWedge_flectorAtInfinity(lineAtOrigin_wedge_flector(self, other), flector_antiDual(other));
}

LineAtInfinity lineAtOrigin_antiRejectOrthogonallyFrom_line(LineAtOrigin self, Line other) {
    return antiScalar_antiWedge_lineAtInfinity(lineAtOrigin_wedge_line(self, other), line_antiDual(other));
}

MultiVectorAtInfinity lineAtOrigin_antiRejectOrthogonallyFrom_motor(LineAtOrigin self, Motor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(lineAtOrigin_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity lineAtOrigin_antiRejectOrthogonallyFrom_multiVector(LineAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(lineAtOrigin_wedge_multiVector(self, other), multiVector_antiDual(other));
}

LineAtInfinity lineAtOrigin_antiRejectOrthogonallyFrom_point(LineAtOrigin self, Point other) {
    return planeAtOrigin_antiWedge_horizon(lineAtOrigin_wedge_point(self, other), point_antiDual(other));
}

Scalar lineAtOrigin_antiRejectOrthogonallyFrom_transflector(LineAtOrigin self, Transflector other) {
    return planeAtOrigin_antiWedge_pointAtInfinity(lineAtOrigin_wedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity motor_antiRejectOrthogonallyFrom_flector(Motor self, Flector other) {
    return plane_antiWedge_flectorAtInfinity(motor_wedge_flector(self, other), flector_antiDual(other));
}

LineAtInfinity motor_antiRejectOrthogonallyFrom_line(Motor self, Line other) {
    return antiScalar_antiWedge_lineAtInfinity(motor_wedge_line(self, other), line_antiDual(other));
}

LineAtInfinity motor_antiRejectOrthogonallyFrom_lineAtOrigin(Motor self, LineAtOrigin other) {
    return antiScalar_antiWedge_lineAtInfinity(motor_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity motor_antiRejectOrthogonallyFrom_motor(Motor self, Motor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(motor_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity motor_antiRejectOrthogonallyFrom_multiVector(Motor self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(motor_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity motor_antiRejectOrthogonallyFrom_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(motor_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity motor_antiRejectOrthogonallyFrom_origin(Motor self, Origin other) {
    return planeAtOrigin_antiWedge_horizon(motor_wedge_origin(self, other), origin_antiDual(other));
}

LineAtInfinity motor_antiRejectOrthogonallyFrom_point(Motor self, Point other) {
    return plane_antiWedge_horizon(motor_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity motor_antiRejectOrthogonallyFrom_rotor(Motor self, Rotor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(motor_wedge_rotor(self, other), rotor_antiDual(other));
}

Scalar motor_antiRejectOrthogonallyFrom_transflector(Motor self, Transflector other) {
    return plane_antiWedge_pointAtInfinity(motor_wedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_flector(MultiVector self, Flector other) {
    return multiVector_antiWedge_flectorAtInfinity(multiVector_wedge_flector(self, other), flector_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_line(MultiVector self, Line other) {
    return multiVector_antiWedge_lineAtInfinity(multiVector_wedge_line(self, other), line_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_lineAtInfinity(multiVector_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_motor(MultiVector self, Motor other) {
    return multiVector_antiWedge_multiVectorAtInfinity(multiVector_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_multiVector(MultiVector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(multiVector_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(multiVector_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_origin(MultiVector self, Origin other) {
    return multiVectorAtOrigin_antiWedge_horizon(multiVector_wedge_origin(self, other), origin_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_plane(MultiVector self, Plane other) {
    return multiVector_antiWedge_pointAtInfinity(multiVector_wedge_plane(self, other), plane_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_pointAtInfinity(multiVector_wedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_point(MultiVector self, Point other) {
    return multiVector_antiWedge_horizon(multiVector_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_rotor(MultiVector self, Rotor other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(multiVector_wedge_rotor(self, other), rotor_antiDual(other));
}

MultiVectorAtInfinity multiVector_antiRejectOrthogonallyFrom_transflector(MultiVector self, Transflector other) {
    return multiVector_antiWedge_pointAtInfinity(multiVector_wedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_flector(MultiVectorAtInfinity self, Flector other) {
    return multiVector_antiWedge_flectorAtInfinity(multiVectorAtInfinity_wedge_flector(self, other), flector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_line(MultiVectorAtInfinity self, Line other) {
    return multiVector_antiWedge_lineAtInfinity(multiVectorAtInfinity_wedge_line(self, other), line_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_lineAtInfinity(multiVectorAtInfinity_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_motor(MultiVectorAtInfinity self, Motor other) {
    return multiVector_antiWedge_multiVectorAtInfinity(multiVectorAtInfinity_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(multiVectorAtInfinity_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(multiVectorAtInfinity_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_origin(MultiVectorAtInfinity self, Origin other) {
    return multiVectorAtOrigin_antiWedge_horizon(multiVectorAtInfinity_wedge_origin(self, other), origin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_plane(MultiVectorAtInfinity self, Plane other) {
    return multiVector_antiWedge_pointAtInfinity(multiVectorAtInfinity_wedge_plane(self, other), plane_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_pointAtInfinity(multiVectorAtInfinity_wedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_point(MultiVectorAtInfinity self, Point other) {
    return multiVector_antiWedge_horizon(multiVectorAtInfinity_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_rotor(MultiVectorAtInfinity self, Rotor other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(multiVectorAtInfinity_wedge_rotor(self, other), rotor_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectOrthogonallyFrom_transflector(MultiVectorAtInfinity self, Transflector other) {
    return multiVector_antiWedge_pointAtInfinity(multiVectorAtInfinity_wedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiRejectOrthogonallyFrom_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVectorAtOrigin_antiWedge_flectorAtInfinity(multiVectorAtOrigin_wedge_flector(self, other), flector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiRejectOrthogonallyFrom_line(MultiVectorAtOrigin self, Line other) {
    return multiVectorAtOrigin_antiWedge_lineAtInfinity(multiVectorAtOrigin_wedge_line(self, other), line_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiRejectOrthogonallyFrom_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(multiVectorAtOrigin_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiRejectOrthogonallyFrom_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(multiVectorAtOrigin_wedge_multiVector(self, other), multiVector_antiDual(other));
}

PointAtInfinity multiVectorAtOrigin_antiRejectOrthogonallyFrom_plane(MultiVectorAtOrigin self, Plane other) {
    return antiScalar_antiWedge_pointAtInfinity(multiVectorAtOrigin_wedge_plane(self, other), plane_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiRejectOrthogonallyFrom_point(MultiVectorAtOrigin self, Point other) {
    return multiVectorAtOrigin_antiWedge_horizon(multiVectorAtOrigin_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtOrigin_antiRejectOrthogonallyFrom_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVectorAtOrigin_antiWedge_pointAtInfinity(multiVectorAtOrigin_wedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity origin_antiRejectOrthogonallyFrom_flector(Origin self, Flector other) {
    return rotor_antiWedge_flectorAtInfinity(origin_wedge_flector(self, other), flector_antiDual(other));
}

PointAtInfinity origin_antiRejectOrthogonallyFrom_line(Origin self, Line other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(origin_wedge_line(self, other), line_antiDual(other));
}

MultiVectorAtInfinity origin_antiRejectOrthogonallyFrom_motor(Origin self, Motor other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(origin_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity origin_antiRejectOrthogonallyFrom_multiVector(Origin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(origin_wedge_multiVector(self, other), multiVector_antiDual(other));
}

PointAtInfinity origin_antiRejectOrthogonallyFrom_plane(Origin self, Plane other) {
    return antiScalar_antiWedge_pointAtInfinity(origin_wedge_plane(self, other), plane_antiDual(other));
}

PointAtInfinity origin_antiRejectOrthogonallyFrom_point(Origin self, Point other) {
    return lineAtOrigin_antiWedge_horizon(origin_wedge_point(self, other), point_antiDual(other));
}

PointAtInfinity origin_antiRejectOrthogonallyFrom_transflector(Origin self, Transflector other) {
    return rotor_antiWedge_pointAtInfinity(origin_wedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity plane_antiRejectOrthogonallyFrom_flector(Plane self, Flector other) {
    return antiScalar_antiWedge_flectorAtInfinity(plane_wedge_flector(self, other), flector_antiDual(other));
}

MultiVectorAtInfinity plane_antiRejectOrthogonallyFrom_multiVector(Plane self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(plane_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity plane_antiRejectOrthogonallyFrom_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(plane_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Horizon plane_antiRejectOrthogonallyFrom_origin(Plane self, Origin other) {
    return antiScalar_antiWedge_horizon(plane_wedge_origin(self, other), origin_antiDual(other));
}

Horizon plane_antiRejectOrthogonallyFrom_point(Plane self, Point other) {
    return antiScalar_antiWedge_horizon(plane_wedge_point(self, other), point_antiDual(other));
}

PointAtInfinity plane_antiRejectOrthogonallyFrom_transflector(Plane self, Transflector other) {
    return antiScalar_antiWedge_pointAtInfinity(plane_wedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity planeAtOrigin_antiRejectOrthogonallyFrom_flector(PlaneAtOrigin self, Flector other) {
    return antiScalar_antiWedge_flectorAtInfinity(planeAtOrigin_wedge_flector(self, other), flector_antiDual(other));
}

MultiVectorAtInfinity planeAtOrigin_antiRejectOrthogonallyFrom_multiVector(PlaneAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(planeAtOrigin_wedge_multiVector(self, other), multiVector_antiDual(other));
}

Horizon planeAtOrigin_antiRejectOrthogonallyFrom_point(PlaneAtOrigin self, Point other) {
    return antiScalar_antiWedge_horizon(planeAtOrigin_wedge_point(self, other), point_antiDual(other));
}

PointAtInfinity planeAtOrigin_antiRejectOrthogonallyFrom_transflector(PlaneAtOrigin self, Transflector other) {
    return antiScalar_antiWedge_pointAtInfinity(planeAtOrigin_wedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity point_antiRejectOrthogonallyFrom_flector(Point self, Flector other) {
    return motor_antiWedge_flectorAtInfinity(point_wedge_flector(self, other), flector_antiDual(other));
}

PointAtInfinity point_antiRejectOrthogonallyFrom_line(Point self, Line other) {
    return plane_antiWedge_lineAtInfinity(point_wedge_line(self, other), line_antiDual(other));
}

PointAtInfinity point_antiRejectOrthogonallyFrom_lineAtOrigin(Point self, LineAtOrigin other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(point_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity point_antiRejectOrthogonallyFrom_motor(Point self, Motor other) {
    return plane_antiWedge_multiVectorAtInfinity(point_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity point_antiRejectOrthogonallyFrom_multiVector(Point self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(point_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity point_antiRejectOrthogonallyFrom_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(point_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

PointAtInfinity point_antiRejectOrthogonallyFrom_origin(Point self, Origin other) {
    return lineAtOrigin_antiWedge_horizon(point_wedge_origin(self, other), origin_antiDual(other));
}

PointAtInfinity point_antiRejectOrthogonallyFrom_plane(Point self, Plane other) {
    return antiScalar_antiWedge_pointAtInfinity(point_wedge_plane(self, other), plane_antiDual(other));
}

PointAtInfinity point_antiRejectOrthogonallyFrom_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return antiScalar_antiWedge_pointAtInfinity(point_wedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

PointAtInfinity point_antiRejectOrthogonallyFrom_point(Point self, Point other) {
    return line_antiWedge_horizon(point_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity point_antiRejectOrthogonallyFrom_rotor(Point self, Rotor other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(point_wedge_rotor(self, other), rotor_antiDual(other));
}

PointAtInfinity point_antiRejectOrthogonallyFrom_transflector(Point self, Transflector other) {
    return motor_antiWedge_pointAtInfinity(point_wedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_flector(PointAtInfinity self, Flector other) {
    return motor_antiWedge_flectorAtInfinity(pointAtInfinity_wedge_flector(self, other), flector_antiDual(other));
}

PointAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_line(PointAtInfinity self, Line other) {
    return plane_antiWedge_lineAtInfinity(pointAtInfinity_wedge_line(self, other), line_antiDual(other));
}

PointAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_lineAtOrigin(PointAtInfinity self, LineAtOrigin other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(pointAtInfinity_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_motor(PointAtInfinity self, Motor other) {
    return plane_antiWedge_multiVectorAtInfinity(pointAtInfinity_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_multiVector(PointAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(pointAtInfinity_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(pointAtInfinity_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

PointAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_origin(PointAtInfinity self, Origin other) {
    return lineAtOrigin_antiWedge_horizon(pointAtInfinity_wedge_origin(self, other), origin_antiDual(other));
}

PointAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_plane(PointAtInfinity self, Plane other) {
    return antiScalar_antiWedge_pointAtInfinity(pointAtInfinity_wedge_plane(self, other), plane_antiDual(other));
}

PointAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return antiScalar_antiWedge_pointAtInfinity(pointAtInfinity_wedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

PointAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_point(PointAtInfinity self, Point other) {
    return line_antiWedge_horizon(pointAtInfinity_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_rotor(PointAtInfinity self, Rotor other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(pointAtInfinity_wedge_rotor(self, other), rotor_antiDual(other));
}

PointAtInfinity pointAtInfinity_antiRejectOrthogonallyFrom_transflector(PointAtInfinity self, Transflector other) {
    return translator_antiWedge_pointAtInfinity(pointAtInfinity_wedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity rotor_antiRejectOrthogonallyFrom_flector(Rotor self, Flector other) {
    return planeAtOrigin_antiWedge_flectorAtInfinity(rotor_wedge_flector(self, other), flector_antiDual(other));
}

LineAtInfinity rotor_antiRejectOrthogonallyFrom_line(Rotor self, Line other) {
    return antiScalar_antiWedge_lineAtInfinity(rotor_wedge_line(self, other), line_antiDual(other));
}

MultiVectorAtInfinity rotor_antiRejectOrthogonallyFrom_motor(Rotor self, Motor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(rotor_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity rotor_antiRejectOrthogonallyFrom_multiVector(Rotor self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(rotor_wedge_multiVector(self, other), multiVector_antiDual(other));
}

LineAtInfinity rotor_antiRejectOrthogonallyFrom_point(Rotor self, Point other) {
    return planeAtOrigin_antiWedge_horizon(rotor_wedge_point(self, other), point_antiDual(other));
}

Scalar rotor_antiRejectOrthogonallyFrom_transflector(Rotor self, Transflector other) {
    return planeAtOrigin_antiWedge_pointAtInfinity(rotor_wedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity transflector_antiRejectOrthogonallyFrom_flector(Transflector self, Flector other) {
    return motor_antiWedge_flectorAtInfinity(transflector_wedge_flector(self, other), flector_antiDual(other));
}

PointAtInfinity transflector_antiRejectOrthogonallyFrom_line(Transflector self, Line other) {
    return plane_antiWedge_lineAtInfinity(transflector_wedge_line(self, other), line_antiDual(other));
}

PointAtInfinity transflector_antiRejectOrthogonallyFrom_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return planeAtOrigin_antiWedge_lineAtInfinity(transflector_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity transflector_antiRejectOrthogonallyFrom_motor(Transflector self, Motor other) {
    return plane_antiWedge_multiVectorAtInfinity(transflector_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity transflector_antiRejectOrthogonallyFrom_multiVector(Transflector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(transflector_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity transflector_antiRejectOrthogonallyFrom_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(transflector_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

FlectorAtInfinity transflector_antiRejectOrthogonallyFrom_origin(Transflector self, Origin other) {
    return rotor_antiWedge_horizon(transflector_wedge_origin(self, other), origin_antiDual(other));
}

PointAtInfinity transflector_antiRejectOrthogonallyFrom_plane(Transflector self, Plane other) {
    return antiScalar_antiWedge_pointAtInfinity(transflector_wedge_plane(self, other), plane_antiDual(other));
}

PointAtInfinity transflector_antiRejectOrthogonallyFrom_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return antiScalar_antiWedge_pointAtInfinity(transflector_wedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

FlectorAtInfinity transflector_antiRejectOrthogonallyFrom_point(Transflector self, Point other) {
    return motor_antiWedge_horizon(transflector_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity transflector_antiRejectOrthogonallyFrom_rotor(Transflector self, Rotor other) {
    return planeAtOrigin_antiWedge_multiVectorAtInfinity(transflector_wedge_rotor(self, other), rotor_antiDual(other));
}

PointAtInfinity transflector_antiRejectOrthogonallyFrom_transflector(Transflector self, Transflector other) {
    return translator_antiWedge_pointAtInfinity(transflector_wedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity translator_antiRejectOrthogonallyFrom_flector(Translator self, Flector other) {
    return plane_antiWedge_flectorAtInfinity(translator_wedge_flector(self, other), flector_antiDual(other));
}

LineAtInfinity translator_antiRejectOrthogonallyFrom_line(Translator self, Line other) {
    return antiScalar_antiWedge_lineAtInfinity(translator_wedge_line(self, other), line_antiDual(other));
}

LineAtInfinity translator_antiRejectOrthogonallyFrom_lineAtOrigin(Translator self, LineAtOrigin other) {
    return antiScalar_antiWedge_lineAtInfinity(translator_wedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity translator_antiRejectOrthogonallyFrom_motor(Translator self, Motor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(translator_wedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity translator_antiRejectOrthogonallyFrom_multiVector(Translator self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtInfinity(translator_wedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity translator_antiRejectOrthogonallyFrom_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(translator_wedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity translator_antiRejectOrthogonallyFrom_origin(Translator self, Origin other) {
    return planeAtOrigin_antiWedge_horizon(translator_wedge_origin(self, other), origin_antiDual(other));
}

LineAtInfinity translator_antiRejectOrthogonallyFrom_point(Translator self, Point other) {
    return plane_antiWedge_horizon(translator_wedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity translator_antiRejectOrthogonallyFrom_rotor(Translator self, Rotor other) {
    return antiScalar_antiWedge_multiVectorAtInfinity(translator_wedge_rotor(self, other), rotor_antiDual(other));
}

Flector flector_antiRejectViaHorizonFrom_flector(Flector self, Flector other) {
    return motor_antiWedge_flector(flector_wedge_flector(self, other), flector_dual(other));
}

Flector flector_antiRejectViaHorizonFrom_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return motor_antiWedge_flector(flector_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Origin flector_antiRejectViaHorizonFrom_horizon(Flector self, Horizon other) {
    return antiScalar_antiWedge_origin(flector_wedge_horizon(self, other), horizon_dual(other));
}

Point flector_antiRejectViaHorizonFrom_line(Flector self, Line other) {
    return plane_antiWedge_lineAtOrigin(flector_wedge_line(self, other), line_dual(other));
}

Point flector_antiRejectViaHorizonFrom_lineAtInfinity(Flector self, LineAtInfinity other) {
    return plane_antiWedge_lineAtOrigin(flector_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

Point flector_antiRejectViaHorizonFrom_motor(Flector self, Motor other) {
    return plane_antiWedge_lineAtOrigin(flector_wedge_motor(self, other), motor_dual(other));
}

MultiVector flector_antiRejectViaHorizonFrom_multiVector(Flector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(flector_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVector flector_antiRejectViaHorizonFrom_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return multiVector_antiWedge_multiVectorAtOrigin(flector_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Origin flector_antiRejectViaHorizonFrom_plane(Flector self, Plane other) {
    return antiScalar_antiWedge_origin(flector_wedge_plane(self, other), plane_dual(other));
}

Flector flector_antiRejectViaHorizonFrom_point(Flector self, Point other) {
    return motor_antiWedge_planeAtOrigin(flector_wedge_point(self, other), point_dual(other));
}

Flector flector_antiRejectViaHorizonFrom_pointAtInfinity(Flector self, PointAtInfinity other) {
    return motor_antiWedge_planeAtOrigin(flector_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Flector flector_antiRejectViaHorizonFrom_transflector(Flector self, Transflector other) {
    return motor_antiWedge_flector(flector_wedge_transflector(self, other), transflector_dual(other));
}

Point flector_antiRejectViaHorizonFrom_translator(Flector self, Translator other) {
    return plane_antiWedge_lineAtOrigin(flector_wedge_translator(self, other), translator_dual(other));
}

Flector flectorAtInfinity_antiRejectViaHorizonFrom_flector(FlectorAtInfinity self, Flector other) {
    return motor_antiWedge_flector(flectorAtInfinity_wedge_flector(self, other), flector_dual(other));
}

PointAtInfinity flectorAtInfinity_antiRejectViaHorizonFrom_flectorAtInfinity(FlectorAtInfinity self, FlectorAtInfinity other) {
    return lineAtInfinity_antiWedge_flector(flectorAtInfinity_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Point flectorAtInfinity_antiRejectViaHorizonFrom_line(FlectorAtInfinity self, Line other) {
    return plane_antiWedge_lineAtOrigin(flectorAtInfinity_wedge_line(self, other), line_dual(other));
}

PointAtInfinity flectorAtInfinity_antiRejectViaHorizonFrom_lineAtInfinity(FlectorAtInfinity self, LineAtInfinity other) {
    return horizon_antiWedge_lineAtOrigin(flectorAtInfinity_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

Point flectorAtInfinity_antiRejectViaHorizonFrom_motor(FlectorAtInfinity self, Motor other) {
    return plane_antiWedge_lineAtOrigin(flectorAtInfinity_wedge_motor(self, other), motor_dual(other));
}

MultiVector flectorAtInfinity_antiRejectViaHorizonFrom_multiVector(FlectorAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(flectorAtInfinity_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtInfinity flectorAtInfinity_antiRejectViaHorizonFrom_multiVectorAtInfinity(FlectorAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(flectorAtInfinity_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Origin flectorAtInfinity_antiRejectViaHorizonFrom_plane(FlectorAtInfinity self, Plane other) {
    return antiScalar_antiWedge_origin(flectorAtInfinity_wedge_plane(self, other), plane_dual(other));
}

Flector flectorAtInfinity_antiRejectViaHorizonFrom_point(FlectorAtInfinity self, Point other) {
    return motor_antiWedge_planeAtOrigin(flectorAtInfinity_wedge_point(self, other), point_dual(other));
}

PointAtInfinity flectorAtInfinity_antiRejectViaHorizonFrom_pointAtInfinity(FlectorAtInfinity self, PointAtInfinity other) {
    return lineAtInfinity_antiWedge_planeAtOrigin(flectorAtInfinity_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Flector flectorAtInfinity_antiRejectViaHorizonFrom_transflector(FlectorAtInfinity self, Transflector other) {
    return translator_antiWedge_flector(flectorAtInfinity_wedge_transflector(self, other), transflector_dual(other));
}

PointAtInfinity flectorAtInfinity_antiRejectViaHorizonFrom_translator(FlectorAtInfinity self, Translator other) {
    return horizon_antiWedge_lineAtOrigin(flectorAtInfinity_wedge_translator(self, other), translator_dual(other));
}

Flector horizon_antiRejectViaHorizonFrom_flector(Horizon self, Flector other) {
    return antiScalar_antiWedge_flector(horizon_wedge_flector(self, other), flector_dual(other));
}

MultiVector horizon_antiRejectViaHorizonFrom_multiVector(Horizon self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(horizon_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtInfinity horizon_antiRejectViaHorizonFrom_multiVectorAtInfinity(Horizon self, MultiVectorAtInfinity other) {
    return horizon_antiWedge_multiVectorAtOrigin(horizon_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

PlaneAtOrigin horizon_antiRejectViaHorizonFrom_point(Horizon self, Point other) {
    return antiScalar_antiWedge_planeAtOrigin(horizon_wedge_point(self, other), point_dual(other));
}

MultiVector line_antiRejectViaHorizonFrom_flector(Line self, Flector other) {
    return plane_antiWedge_flector(line_wedge_flector(self, other), flector_dual(other));
}

MultiVector line_antiRejectViaHorizonFrom_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return plane_antiWedge_flector(line_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

LineAtOrigin line_antiRejectViaHorizonFrom_line(Line self, Line other) {
    return antiScalar_antiWedge_lineAtOrigin(line_wedge_line(self, other), line_dual(other));
}

LineAtOrigin line_antiRejectViaHorizonFrom_lineAtInfinity(Line self, LineAtInfinity other) {
    return antiScalar_antiWedge_lineAtOrigin(line_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

LineAtOrigin line_antiRejectViaHorizonFrom_motor(Line self, Motor other) {
    return antiScalar_antiWedge_lineAtOrigin(line_wedge_motor(self, other), motor_dual(other));
}

MultiVector line_antiRejectViaHorizonFrom_multiVector(Line self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(line_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVector line_antiRejectViaHorizonFrom_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return multiVector_antiWedge_multiVectorAtOrigin(line_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Line line_antiRejectViaHorizonFrom_point(Line self, Point other) {
    return plane_antiWedge_planeAtOrigin(line_wedge_point(self, other), point_dual(other));
}

Line line_antiRejectViaHorizonFrom_pointAtInfinity(Line self, PointAtInfinity other) {
    return plane_antiWedge_planeAtOrigin(line_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector line_antiRejectViaHorizonFrom_transflector(Line self, Transflector other) {
    return plane_antiWedge_flector(line_wedge_transflector(self, other), transflector_dual(other));
}

LineAtOrigin line_antiRejectViaHorizonFrom_translator(Line self, Translator other) {
    return antiScalar_antiWedge_lineAtOrigin(line_wedge_translator(self, other), translator_dual(other));
}

MultiVector lineAtInfinity_antiRejectViaHorizonFrom_flector(LineAtInfinity self, Flector other) {
    return plane_antiWedge_flector(lineAtInfinity_wedge_flector(self, other), flector_dual(other));
}

MultiVectorAtInfinity lineAtInfinity_antiRejectViaHorizonFrom_flectorAtInfinity(LineAtInfinity self, FlectorAtInfinity other) {
    return horizon_antiWedge_flector(lineAtInfinity_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

LineAtOrigin lineAtInfinity_antiRejectViaHorizonFrom_line(LineAtInfinity self, Line other) {
    return antiScalar_antiWedge_lineAtOrigin(lineAtInfinity_wedge_line(self, other), line_dual(other));
}

LineAtOrigin lineAtInfinity_antiRejectViaHorizonFrom_motor(LineAtInfinity self, Motor other) {
    return antiScalar_antiWedge_lineAtOrigin(lineAtInfinity_wedge_motor(self, other), motor_dual(other));
}

MultiVector lineAtInfinity_antiRejectViaHorizonFrom_multiVector(LineAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(lineAtInfinity_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtInfinity lineAtInfinity_antiRejectViaHorizonFrom_multiVectorAtInfinity(LineAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(lineAtInfinity_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Line lineAtInfinity_antiRejectViaHorizonFrom_point(LineAtInfinity self, Point other) {
    return plane_antiWedge_planeAtOrigin(lineAtInfinity_wedge_point(self, other), point_dual(other));
}

LineAtInfinity lineAtInfinity_antiRejectViaHorizonFrom_pointAtInfinity(LineAtInfinity self, PointAtInfinity other) {
    return horizon_antiWedge_planeAtOrigin(lineAtInfinity_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVectorAtInfinity lineAtInfinity_antiRejectViaHorizonFrom_transflector(LineAtInfinity self, Transflector other) {
    return horizon_antiWedge_flector(lineAtInfinity_wedge_transflector(self, other), transflector_dual(other));
}

MultiVector lineAtOrigin_antiRejectViaHorizonFrom_flector(LineAtOrigin self, Flector other) {
    return planeAtOrigin_antiWedge_flector(lineAtOrigin_wedge_flector(self, other), flector_dual(other));
}

MultiVector lineAtOrigin_antiRejectViaHorizonFrom_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return planeAtOrigin_antiWedge_flector(lineAtOrigin_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

LineAtOrigin lineAtOrigin_antiRejectViaHorizonFrom_line(LineAtOrigin self, Line other) {
    return antiScalar_antiWedge_lineAtOrigin(lineAtOrigin_wedge_line(self, other), line_dual(other));
}

LineAtOrigin lineAtOrigin_antiRejectViaHorizonFrom_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return antiScalar_antiWedge_lineAtOrigin(lineAtOrigin_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

LineAtOrigin lineAtOrigin_antiRejectViaHorizonFrom_motor(LineAtOrigin self, Motor other) {
    return antiScalar_antiWedge_lineAtOrigin(lineAtOrigin_wedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin lineAtOrigin_antiRejectViaHorizonFrom_multiVector(LineAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(lineAtOrigin_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin lineAtOrigin_antiRejectViaHorizonFrom_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(lineAtOrigin_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

LineAtOrigin lineAtOrigin_antiRejectViaHorizonFrom_point(LineAtOrigin self, Point other) {
    return planeAtOrigin_antiWedge_planeAtOrigin(lineAtOrigin_wedge_point(self, other), point_dual(other));
}

LineAtOrigin lineAtOrigin_antiRejectViaHorizonFrom_pointAtInfinity(LineAtOrigin self, PointAtInfinity other) {
    return planeAtOrigin_antiWedge_planeAtOrigin(lineAtOrigin_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector lineAtOrigin_antiRejectViaHorizonFrom_transflector(LineAtOrigin self, Transflector other) {
    return planeAtOrigin_antiWedge_flector(lineAtOrigin_wedge_transflector(self, other), transflector_dual(other));
}

LineAtOrigin lineAtOrigin_antiRejectViaHorizonFrom_translator(LineAtOrigin self, Translator other) {
    return antiScalar_antiWedge_lineAtOrigin(lineAtOrigin_wedge_translator(self, other), translator_dual(other));
}

MultiVector motor_antiRejectViaHorizonFrom_flector(Motor self, Flector other) {
    return plane_antiWedge_flector(motor_wedge_flector(self, other), flector_dual(other));
}

MultiVector motor_antiRejectViaHorizonFrom_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return plane_antiWedge_flector(motor_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

LineAtOrigin motor_antiRejectViaHorizonFrom_line(Motor self, Line other) {
    return antiScalar_antiWedge_lineAtOrigin(motor_wedge_line(self, other), line_dual(other));
}

LineAtOrigin motor_antiRejectViaHorizonFrom_lineAtInfinity(Motor self, LineAtInfinity other) {
    return antiScalar_antiWedge_lineAtOrigin(motor_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

LineAtOrigin motor_antiRejectViaHorizonFrom_motor(Motor self, Motor other) {
    return antiScalar_antiWedge_lineAtOrigin(motor_wedge_motor(self, other), motor_dual(other));
}

MultiVector motor_antiRejectViaHorizonFrom_multiVector(Motor self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(motor_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVector motor_antiRejectViaHorizonFrom_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return multiVector_antiWedge_multiVectorAtOrigin(motor_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Line motor_antiRejectViaHorizonFrom_point(Motor self, Point other) {
    return plane_antiWedge_planeAtOrigin(motor_wedge_point(self, other), point_dual(other));
}

Line motor_antiRejectViaHorizonFrom_pointAtInfinity(Motor self, PointAtInfinity other) {
    return plane_antiWedge_planeAtOrigin(motor_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector motor_antiRejectViaHorizonFrom_transflector(Motor self, Transflector other) {
    return plane_antiWedge_flector(motor_wedge_transflector(self, other), transflector_dual(other));
}

LineAtOrigin motor_antiRejectViaHorizonFrom_translator(Motor self, Translator other) {
    return antiScalar_antiWedge_lineAtOrigin(motor_wedge_translator(self, other), translator_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_flector(MultiVector self, Flector other) {
    return multiVector_antiWedge_flector(multiVector_wedge_flector(self, other), flector_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return multiVector_antiWedge_flector(multiVector_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_horizon(MultiVector self, Horizon other) {
    return multiVector_antiWedge_origin(multiVector_wedge_horizon(self, other), horizon_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_line(MultiVector self, Line other) {
    return multiVector_antiWedge_lineAtOrigin(multiVector_wedge_line(self, other), line_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return multiVector_antiWedge_lineAtOrigin(multiVector_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_motor(MultiVector self, Motor other) {
    return multiVector_antiWedge_lineAtOrigin(multiVector_wedge_motor(self, other), motor_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_multiVector(MultiVector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(multiVector_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return multiVector_antiWedge_multiVectorAtOrigin(multiVector_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_plane(MultiVector self, Plane other) {
    return multiVector_antiWedge_origin(multiVector_wedge_plane(self, other), plane_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_point(MultiVector self, Point other) {
    return multiVector_antiWedge_planeAtOrigin(multiVector_wedge_point(self, other), point_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return multiVector_antiWedge_planeAtOrigin(multiVector_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_transflector(MultiVector self, Transflector other) {
    return multiVector_antiWedge_flector(multiVector_wedge_transflector(self, other), transflector_dual(other));
}

MultiVector multiVector_antiRejectViaHorizonFrom_translator(MultiVector self, Translator other) {
    return multiVector_antiWedge_lineAtOrigin(multiVector_wedge_translator(self, other), translator_dual(other));
}

MultiVector multiVectorAtInfinity_antiRejectViaHorizonFrom_flector(MultiVectorAtInfinity self, Flector other) {
    return multiVector_antiWedge_flector(multiVectorAtInfinity_wedge_flector(self, other), flector_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectViaHorizonFrom_flectorAtInfinity(MultiVectorAtInfinity self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_flector(multiVectorAtInfinity_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Scalar multiVectorAtInfinity_antiRejectViaHorizonFrom_horizon(MultiVectorAtInfinity self, Horizon other) {
    return horizon_antiWedge_origin(multiVectorAtInfinity_wedge_horizon(self, other), horizon_dual(other));
}

MultiVector multiVectorAtInfinity_antiRejectViaHorizonFrom_line(MultiVectorAtInfinity self, Line other) {
    return multiVector_antiWedge_lineAtOrigin(multiVectorAtInfinity_wedge_line(self, other), line_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectViaHorizonFrom_lineAtInfinity(MultiVectorAtInfinity self, LineAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_lineAtOrigin(multiVectorAtInfinity_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVector multiVectorAtInfinity_antiRejectViaHorizonFrom_motor(MultiVectorAtInfinity self, Motor other) {
    return multiVector_antiWedge_lineAtOrigin(multiVectorAtInfinity_wedge_motor(self, other), motor_dual(other));
}

MultiVector multiVectorAtInfinity_antiRejectViaHorizonFrom_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(multiVectorAtInfinity_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectViaHorizonFrom_multiVectorAtInfinity(MultiVectorAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

MultiVector multiVectorAtInfinity_antiRejectViaHorizonFrom_plane(MultiVectorAtInfinity self, Plane other) {
    return multiVector_antiWedge_origin(multiVectorAtInfinity_wedge_plane(self, other), plane_dual(other));
}

MultiVector multiVectorAtInfinity_antiRejectViaHorizonFrom_point(MultiVectorAtInfinity self, Point other) {
    return multiVector_antiWedge_planeAtOrigin(multiVectorAtInfinity_wedge_point(self, other), point_dual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiRejectViaHorizonFrom_pointAtInfinity(MultiVectorAtInfinity self, PointAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_planeAtOrigin(multiVectorAtInfinity_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector multiVectorAtInfinity_antiRejectViaHorizonFrom_transflector(MultiVectorAtInfinity self, Transflector other) {
    return multiVector_antiWedge_flector(multiVectorAtInfinity_wedge_transflector(self, other), transflector_dual(other));
}

MultiVector multiVectorAtInfinity_antiRejectViaHorizonFrom_translator(MultiVectorAtInfinity self, Translator other) {
    return multiVector_antiWedge_lineAtOrigin(multiVectorAtInfinity_wedge_translator(self, other), translator_dual(other));
}

MultiVector multiVectorAtOrigin_antiRejectViaHorizonFrom_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVectorAtOrigin_antiWedge_flector(multiVectorAtOrigin_wedge_flector(self, other), flector_dual(other));
}

MultiVector multiVectorAtOrigin_antiRejectViaHorizonFrom_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_flector(multiVectorAtOrigin_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Origin multiVectorAtOrigin_antiRejectViaHorizonFrom_horizon(MultiVectorAtOrigin self, Horizon other) {
    return antiScalar_antiWedge_origin(multiVectorAtOrigin_wedge_horizon(self, other), horizon_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiRejectViaHorizonFrom_line(MultiVectorAtOrigin self, Line other) {
    return multiVectorAtOrigin_antiWedge_lineAtOrigin(multiVectorAtOrigin_wedge_line(self, other), line_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiRejectViaHorizonFrom_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_lineAtOrigin(multiVectorAtOrigin_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiRejectViaHorizonFrom_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVectorAtOrigin_antiWedge_lineAtOrigin(multiVectorAtOrigin_wedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiRejectViaHorizonFrom_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(multiVectorAtOrigin_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiRejectViaHorizonFrom_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(multiVectorAtOrigin_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Origin multiVectorAtOrigin_antiRejectViaHorizonFrom_plane(MultiVectorAtOrigin self, Plane other) {
    return antiScalar_antiWedge_origin(multiVectorAtOrigin_wedge_plane(self, other), plane_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiRejectViaHorizonFrom_point(MultiVectorAtOrigin self, Point other) {
    return multiVectorAtOrigin_antiWedge_planeAtOrigin(multiVectorAtOrigin_wedge_point(self, other), point_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiRejectViaHorizonFrom_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_planeAtOrigin(multiVectorAtOrigin_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector multiVectorAtOrigin_antiRejectViaHorizonFrom_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVectorAtOrigin_antiWedge_flector(multiVectorAtOrigin_wedge_transflector(self, other), transflector_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_antiRejectViaHorizonFrom_translator(MultiVectorAtOrigin self, Translator other) {
    return multiVectorAtOrigin_antiWedge_lineAtOrigin(multiVectorAtOrigin_wedge_translator(self, other), translator_dual(other));
}

Flector origin_antiRejectViaHorizonFrom_flector(Origin self, Flector other) {
    return rotor_antiWedge_flector(origin_wedge_flector(self, other), flector_dual(other));
}

Flector origin_antiRejectViaHorizonFrom_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return rotor_antiWedge_flector(origin_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Origin origin_antiRejectViaHorizonFrom_horizon(Origin self, Horizon other) {
    return antiScalar_antiWedge_origin(origin_wedge_horizon(self, other), horizon_dual(other));
}

Origin origin_antiRejectViaHorizonFrom_line(Origin self, Line other) {
    return planeAtOrigin_antiWedge_lineAtOrigin(origin_wedge_line(self, other), line_dual(other));
}

Origin origin_antiRejectViaHorizonFrom_lineAtInfinity(Origin self, LineAtInfinity other) {
    return planeAtOrigin_antiWedge_lineAtOrigin(origin_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

Origin origin_antiRejectViaHorizonFrom_motor(Origin self, Motor other) {
    return planeAtOrigin_antiWedge_lineAtOrigin(origin_wedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin origin_antiRejectViaHorizonFrom_multiVector(Origin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(origin_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin origin_antiRejectViaHorizonFrom_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(origin_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Origin origin_antiRejectViaHorizonFrom_plane(Origin self, Plane other) {
    return antiScalar_antiWedge_origin(origin_wedge_plane(self, other), plane_dual(other));
}

Origin origin_antiRejectViaHorizonFrom_point(Origin self, Point other) {
    return lineAtOrigin_antiWedge_planeAtOrigin(origin_wedge_point(self, other), point_dual(other));
}

Origin origin_antiRejectViaHorizonFrom_pointAtInfinity(Origin self, PointAtInfinity other) {
    return lineAtOrigin_antiWedge_planeAtOrigin(origin_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Flector origin_antiRejectViaHorizonFrom_transflector(Origin self, Transflector other) {
    return rotor_antiWedge_flector(origin_wedge_transflector(self, other), transflector_dual(other));
}

Origin origin_antiRejectViaHorizonFrom_translator(Origin self, Translator other) {
    return planeAtOrigin_antiWedge_lineAtOrigin(origin_wedge_translator(self, other), translator_dual(other));
}

Flector plane_antiRejectViaHorizonFrom_flector(Plane self, Flector other) {
    return antiScalar_antiWedge_flector(plane_wedge_flector(self, other), flector_dual(other));
}

Flector plane_antiRejectViaHorizonFrom_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return antiScalar_antiWedge_flector(plane_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

MultiVector plane_antiRejectViaHorizonFrom_multiVector(Plane self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(plane_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVector plane_antiRejectViaHorizonFrom_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return multiVector_antiWedge_multiVectorAtOrigin(plane_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

PlaneAtOrigin plane_antiRejectViaHorizonFrom_point(Plane self, Point other) {
    return antiScalar_antiWedge_planeAtOrigin(plane_wedge_point(self, other), point_dual(other));
}

PlaneAtOrigin plane_antiRejectViaHorizonFrom_pointAtInfinity(Plane self, PointAtInfinity other) {
    return antiScalar_antiWedge_planeAtOrigin(plane_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Flector plane_antiRejectViaHorizonFrom_transflector(Plane self, Transflector other) {
    return antiScalar_antiWedge_flector(plane_wedge_transflector(self, other), transflector_dual(other));
}

Flector planeAtOrigin_antiRejectViaHorizonFrom_flector(PlaneAtOrigin self, Flector other) {
    return antiScalar_antiWedge_flector(planeAtOrigin_wedge_flector(self, other), flector_dual(other));
}

Flector planeAtOrigin_antiRejectViaHorizonFrom_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return antiScalar_antiWedge_flector(planeAtOrigin_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

MultiVectorAtOrigin planeAtOrigin_antiRejectViaHorizonFrom_multiVector(PlaneAtOrigin self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(planeAtOrigin_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin planeAtOrigin_antiRejectViaHorizonFrom_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(planeAtOrigin_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

PlaneAtOrigin planeAtOrigin_antiRejectViaHorizonFrom_point(PlaneAtOrigin self, Point other) {
    return antiScalar_antiWedge_planeAtOrigin(planeAtOrigin_wedge_point(self, other), point_dual(other));
}

PlaneAtOrigin planeAtOrigin_antiRejectViaHorizonFrom_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return antiScalar_antiWedge_planeAtOrigin(planeAtOrigin_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Flector planeAtOrigin_antiRejectViaHorizonFrom_transflector(PlaneAtOrigin self, Transflector other) {
    return antiScalar_antiWedge_flector(planeAtOrigin_wedge_transflector(self, other), transflector_dual(other));
}

Flector point_antiRejectViaHorizonFrom_flector(Point self, Flector other) {
    return motor_antiWedge_flector(point_wedge_flector(self, other), flector_dual(other));
}

Flector point_antiRejectViaHorizonFrom_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return motor_antiWedge_flector(point_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Origin point_antiRejectViaHorizonFrom_horizon(Point self, Horizon other) {
    return antiScalar_antiWedge_origin(point_wedge_horizon(self, other), horizon_dual(other));
}

Point point_antiRejectViaHorizonFrom_line(Point self, Line other) {
    return plane_antiWedge_lineAtOrigin(point_wedge_line(self, other), line_dual(other));
}

Point point_antiRejectViaHorizonFrom_lineAtInfinity(Point self, LineAtInfinity other) {
    return plane_antiWedge_lineAtOrigin(point_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

Point point_antiRejectViaHorizonFrom_motor(Point self, Motor other) {
    return plane_antiWedge_lineAtOrigin(point_wedge_motor(self, other), motor_dual(other));
}

MultiVector point_antiRejectViaHorizonFrom_multiVector(Point self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(point_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVector point_antiRejectViaHorizonFrom_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return multiVector_antiWedge_multiVectorAtOrigin(point_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Origin point_antiRejectViaHorizonFrom_plane(Point self, Plane other) {
    return antiScalar_antiWedge_origin(point_wedge_plane(self, other), plane_dual(other));
}

Point point_antiRejectViaHorizonFrom_point(Point self, Point other) {
    return line_antiWedge_planeAtOrigin(point_wedge_point(self, other), point_dual(other));
}

Point point_antiRejectViaHorizonFrom_pointAtInfinity(Point self, PointAtInfinity other) {
    return line_antiWedge_planeAtOrigin(point_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Flector point_antiRejectViaHorizonFrom_transflector(Point self, Transflector other) {
    return motor_antiWedge_flector(point_wedge_transflector(self, other), transflector_dual(other));
}

Point point_antiRejectViaHorizonFrom_translator(Point self, Translator other) {
    return plane_antiWedge_lineAtOrigin(point_wedge_translator(self, other), translator_dual(other));
}

Flector pointAtInfinity_antiRejectViaHorizonFrom_flector(PointAtInfinity self, Flector other) {
    return motor_antiWedge_flector(pointAtInfinity_wedge_flector(self, other), flector_dual(other));
}

PointAtInfinity pointAtInfinity_antiRejectViaHorizonFrom_flectorAtInfinity(PointAtInfinity self, FlectorAtInfinity other) {
    return lineAtInfinity_antiWedge_flector(pointAtInfinity_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Point pointAtInfinity_antiRejectViaHorizonFrom_line(PointAtInfinity self, Line other) {
    return plane_antiWedge_lineAtOrigin(pointAtInfinity_wedge_line(self, other), line_dual(other));
}

PointAtInfinity pointAtInfinity_antiRejectViaHorizonFrom_lineAtInfinity(PointAtInfinity self, LineAtInfinity other) {
    return horizon_antiWedge_lineAtOrigin(pointAtInfinity_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

Point pointAtInfinity_antiRejectViaHorizonFrom_motor(PointAtInfinity self, Motor other) {
    return plane_antiWedge_lineAtOrigin(pointAtInfinity_wedge_motor(self, other), motor_dual(other));
}

MultiVector pointAtInfinity_antiRejectViaHorizonFrom_multiVector(PointAtInfinity self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(pointAtInfinity_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtInfinity pointAtInfinity_antiRejectViaHorizonFrom_multiVectorAtInfinity(PointAtInfinity self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(pointAtInfinity_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Origin pointAtInfinity_antiRejectViaHorizonFrom_plane(PointAtInfinity self, Plane other) {
    return antiScalar_antiWedge_origin(pointAtInfinity_wedge_plane(self, other), plane_dual(other));
}

Point pointAtInfinity_antiRejectViaHorizonFrom_point(PointAtInfinity self, Point other) {
    return line_antiWedge_planeAtOrigin(pointAtInfinity_wedge_point(self, other), point_dual(other));
}

PointAtInfinity pointAtInfinity_antiRejectViaHorizonFrom_pointAtInfinity(PointAtInfinity self, PointAtInfinity other) {
    return lineAtInfinity_antiWedge_planeAtOrigin(pointAtInfinity_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Flector pointAtInfinity_antiRejectViaHorizonFrom_transflector(PointAtInfinity self, Transflector other) {
    return translator_antiWedge_flector(pointAtInfinity_wedge_transflector(self, other), transflector_dual(other));
}

PointAtInfinity pointAtInfinity_antiRejectViaHorizonFrom_translator(PointAtInfinity self, Translator other) {
    return horizon_antiWedge_lineAtOrigin(pointAtInfinity_wedge_translator(self, other), translator_dual(other));
}

MultiVector rotor_antiRejectViaHorizonFrom_flector(Rotor self, Flector other) {
    return planeAtOrigin_antiWedge_flector(rotor_wedge_flector(self, other), flector_dual(other));
}

MultiVector rotor_antiRejectViaHorizonFrom_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return planeAtOrigin_antiWedge_flector(rotor_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

LineAtOrigin rotor_antiRejectViaHorizonFrom_line(Rotor self, Line other) {
    return antiScalar_antiWedge_lineAtOrigin(rotor_wedge_line(self, other), line_dual(other));
}

LineAtOrigin rotor_antiRejectViaHorizonFrom_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return antiScalar_antiWedge_lineAtOrigin(rotor_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

LineAtOrigin rotor_antiRejectViaHorizonFrom_motor(Rotor self, Motor other) {
    return antiScalar_antiWedge_lineAtOrigin(rotor_wedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin rotor_antiRejectViaHorizonFrom_multiVector(Rotor self, MultiVector other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(rotor_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin rotor_antiRejectViaHorizonFrom_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(rotor_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

LineAtOrigin rotor_antiRejectViaHorizonFrom_point(Rotor self, Point other) {
    return planeAtOrigin_antiWedge_planeAtOrigin(rotor_wedge_point(self, other), point_dual(other));
}

LineAtOrigin rotor_antiRejectViaHorizonFrom_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return planeAtOrigin_antiWedge_planeAtOrigin(rotor_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector rotor_antiRejectViaHorizonFrom_transflector(Rotor self, Transflector other) {
    return planeAtOrigin_antiWedge_flector(rotor_wedge_transflector(self, other), transflector_dual(other));
}

LineAtOrigin rotor_antiRejectViaHorizonFrom_translator(Rotor self, Translator other) {
    return antiScalar_antiWedge_lineAtOrigin(rotor_wedge_translator(self, other), translator_dual(other));
}

Flector transflector_antiRejectViaHorizonFrom_flector(Transflector self, Flector other) {
    return motor_antiWedge_flector(transflector_wedge_flector(self, other), flector_dual(other));
}

Flector transflector_antiRejectViaHorizonFrom_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return translator_antiWedge_flector(transflector_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Point transflector_antiRejectViaHorizonFrom_line(Transflector self, Line other) {
    return plane_antiWedge_lineAtOrigin(transflector_wedge_line(self, other), line_dual(other));
}

PointAtInfinity transflector_antiRejectViaHorizonFrom_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return horizon_antiWedge_lineAtOrigin(transflector_wedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

Point transflector_antiRejectViaHorizonFrom_motor(Transflector self, Motor other) {
    return plane_antiWedge_lineAtOrigin(transflector_wedge_motor(self, other), motor_dual(other));
}

MultiVector transflector_antiRejectViaHorizonFrom_multiVector(Transflector self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(transflector_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVector transflector_antiRejectViaHorizonFrom_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return multiVector_antiWedge_multiVectorAtOrigin(transflector_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Origin transflector_antiRejectViaHorizonFrom_plane(Transflector self, Plane other) {
    return antiScalar_antiWedge_origin(transflector_wedge_plane(self, other), plane_dual(other));
}

Flector transflector_antiRejectViaHorizonFrom_point(Transflector self, Point other) {
    return motor_antiWedge_planeAtOrigin(transflector_wedge_point(self, other), point_dual(other));
}

Transflector transflector_antiRejectViaHorizonFrom_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return translator_antiWedge_planeAtOrigin(transflector_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Flector transflector_antiRejectViaHorizonFrom_transflector(Transflector self, Transflector other) {
    return translator_antiWedge_flector(transflector_wedge_transflector(self, other), transflector_dual(other));
}

PointAtInfinity transflector_antiRejectViaHorizonFrom_translator(Transflector self, Translator other) {
    return horizon_antiWedge_lineAtOrigin(transflector_wedge_translator(self, other), translator_dual(other));
}

MultiVector translator_antiRejectViaHorizonFrom_flector(Translator self, Flector other) {
    return plane_antiWedge_flector(translator_wedge_flector(self, other), flector_dual(other));
}

MultiVectorAtInfinity translator_antiRejectViaHorizonFrom_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return horizon_antiWedge_flector(translator_wedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

LineAtOrigin translator_antiRejectViaHorizonFrom_line(Translator self, Line other) {
    return antiScalar_antiWedge_lineAtOrigin(translator_wedge_line(self, other), line_dual(other));
}

LineAtOrigin translator_antiRejectViaHorizonFrom_motor(Translator self, Motor other) {
    return antiScalar_antiWedge_lineAtOrigin(translator_wedge_motor(self, other), motor_dual(other));
}

MultiVector translator_antiRejectViaHorizonFrom_multiVector(Translator self, MultiVector other) {
    return multiVector_antiWedge_multiVectorAtOrigin(translator_wedge_multiVector(self, other), multiVector_dual(other));
}

MultiVector translator_antiRejectViaHorizonFrom_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return multiVector_antiWedge_multiVectorAtOrigin(translator_wedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Line translator_antiRejectViaHorizonFrom_point(Translator self, Point other) {
    return plane_antiWedge_planeAtOrigin(translator_wedge_point(self, other), point_dual(other));
}

LineAtInfinity translator_antiRejectViaHorizonFrom_pointAtInfinity(Translator self, PointAtInfinity other) {
    return horizon_antiWedge_planeAtOrigin(translator_wedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVectorAtInfinity translator_antiRejectViaHorizonFrom_transflector(Translator self, Transflector other) {
    return horizon_antiWedge_flector(translator_wedge_transflector(self, other), transflector_dual(other));
}

MultiVector flector_rejectOrthogonallyFrom_flector(Flector self, Flector other) {
    return multiVector_wedge_flectorAtInfinity(flector_antiWedge_flector(self, other), flector_antiDual(other));
}

Plane flector_rejectOrthogonallyFrom_line(Flector self, Line other) {
    return point_wedge_lineAtInfinity(flector_antiWedge_line(self, other), line_antiDual(other));
}

Plane flector_rejectOrthogonallyFrom_lineAtOrigin(Flector self, LineAtOrigin other) {
    return point_wedge_lineAtInfinity(flector_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector flector_rejectOrthogonallyFrom_motor(Flector self, Motor other) {
    return flector_wedge_multiVectorAtInfinity(flector_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector flector_rejectOrthogonallyFrom_multiVector(Flector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(flector_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVector flector_rejectOrthogonallyFrom_multiVectorAtOrigin(Flector self, MultiVectorAtOrigin other) {
    return multiVector_wedge_multiVectorAtInfinity(flector_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Horizon flector_rejectOrthogonallyFrom_origin(Flector self, Origin other) {
    return scalar_wedge_horizon(flector_antiWedge_origin(self, other), origin_antiDual(other));
}

MultiVector flector_rejectOrthogonallyFrom_plane(Flector self, Plane other) {
    return multiVector_wedge_pointAtInfinity(flector_antiWedge_plane(self, other), plane_antiDual(other));
}

MultiVector flector_rejectOrthogonallyFrom_planeAtOrigin(Flector self, PlaneAtOrigin other) {
    return multiVector_wedge_pointAtInfinity(flector_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

Horizon flector_rejectOrthogonallyFrom_point(Flector self, Point other) {
    return scalar_wedge_horizon(flector_antiWedge_point(self, other), point_antiDual(other));
}

MultiVector flector_rejectOrthogonallyFrom_rotor(Flector self, Rotor other) {
    return flector_wedge_multiVectorAtInfinity(flector_antiWedge_rotor(self, other), rotor_antiDual(other));
}

MultiVector flector_rejectOrthogonallyFrom_transflector(Flector self, Transflector other) {
    return multiVector_wedge_pointAtInfinity(flector_antiWedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_rejectOrthogonallyFrom_flector(FlectorAtInfinity self, Flector other) {
    return multiVectorAtInfinity_wedge_flectorAtInfinity(flectorAtInfinity_antiWedge_flector(self, other), flector_antiDual(other));
}

Horizon flectorAtInfinity_rejectOrthogonallyFrom_line(FlectorAtInfinity self, Line other) {
    return pointAtInfinity_wedge_lineAtInfinity(flectorAtInfinity_antiWedge_line(self, other), line_antiDual(other));
}

Horizon flectorAtInfinity_rejectOrthogonallyFrom_lineAtOrigin(FlectorAtInfinity self, LineAtOrigin other) {
    return pointAtInfinity_wedge_lineAtInfinity(flectorAtInfinity_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_rejectOrthogonallyFrom_motor(FlectorAtInfinity self, Motor other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(flectorAtInfinity_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_rejectOrthogonallyFrom_multiVector(FlectorAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(flectorAtInfinity_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_rejectOrthogonallyFrom_multiVectorAtOrigin(FlectorAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(flectorAtInfinity_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Horizon flectorAtInfinity_rejectOrthogonallyFrom_origin(FlectorAtInfinity self, Origin other) {
    return scalar_wedge_horizon(flectorAtInfinity_antiWedge_origin(self, other), origin_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_rejectOrthogonallyFrom_plane(FlectorAtInfinity self, Plane other) {
    return multiVectorAtInfinity_wedge_pointAtInfinity(flectorAtInfinity_antiWedge_plane(self, other), plane_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_rejectOrthogonallyFrom_planeAtOrigin(FlectorAtInfinity self, PlaneAtOrigin other) {
    return multiVectorAtInfinity_wedge_pointAtInfinity(flectorAtInfinity_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

Horizon flectorAtInfinity_rejectOrthogonallyFrom_point(FlectorAtInfinity self, Point other) {
    return scalar_wedge_horizon(flectorAtInfinity_antiWedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_rejectOrthogonallyFrom_rotor(FlectorAtInfinity self, Rotor other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(flectorAtInfinity_antiWedge_rotor(self, other), rotor_antiDual(other));
}

MultiVectorAtInfinity flectorAtInfinity_rejectOrthogonallyFrom_transflector(FlectorAtInfinity self, Transflector other) {
    return multiVectorAtInfinity_wedge_pointAtInfinity(flectorAtInfinity_antiWedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity horizon_rejectOrthogonallyFrom_flector(Horizon self, Flector other) {
    return multiVectorAtInfinity_wedge_flectorAtInfinity(horizon_antiWedge_flector(self, other), flector_antiDual(other));
}

Horizon horizon_rejectOrthogonallyFrom_line(Horizon self, Line other) {
    return pointAtInfinity_wedge_lineAtInfinity(horizon_antiWedge_line(self, other), line_antiDual(other));
}

Horizon horizon_rejectOrthogonallyFrom_lineAtOrigin(Horizon self, LineAtOrigin other) {
    return pointAtInfinity_wedge_lineAtInfinity(horizon_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity horizon_rejectOrthogonallyFrom_motor(Horizon self, Motor other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(horizon_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity horizon_rejectOrthogonallyFrom_multiVector(Horizon self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(horizon_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity horizon_rejectOrthogonallyFrom_multiVectorAtOrigin(Horizon self, MultiVectorAtOrigin other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(horizon_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Horizon horizon_rejectOrthogonallyFrom_origin(Horizon self, Origin other) {
    return scalar_wedge_horizon(horizon_antiWedge_origin(self, other), origin_antiDual(other));
}

Horizon horizon_rejectOrthogonallyFrom_plane(Horizon self, Plane other) {
    return lineAtInfinity_wedge_pointAtInfinity(horizon_antiWedge_plane(self, other), plane_antiDual(other));
}

Horizon horizon_rejectOrthogonallyFrom_planeAtOrigin(Horizon self, PlaneAtOrigin other) {
    return lineAtInfinity_wedge_pointAtInfinity(horizon_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

Horizon horizon_rejectOrthogonallyFrom_point(Horizon self, Point other) {
    return scalar_wedge_horizon(horizon_antiWedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity horizon_rejectOrthogonallyFrom_rotor(Horizon self, Rotor other) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(horizon_antiWedge_rotor(self, other), rotor_antiDual(other));
}

Horizon horizon_rejectOrthogonallyFrom_transflector(Horizon self, Transflector other) {
    return lineAtInfinity_wedge_pointAtInfinity(horizon_antiWedge_transflector(self, other), transflector_antiDual(other));
}

Motor line_rejectOrthogonallyFrom_flector(Line self, Flector other) {
    return point_wedge_flectorAtInfinity(line_antiWedge_flector(self, other), flector_antiDual(other));
}

LineAtInfinity line_rejectOrthogonallyFrom_line(Line self, Line other) {
    return scalar_wedge_lineAtInfinity(line_antiWedge_line(self, other), line_antiDual(other));
}

LineAtInfinity line_rejectOrthogonallyFrom_lineAtOrigin(Line self, LineAtOrigin other) {
    return scalar_wedge_lineAtInfinity(line_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector line_rejectOrthogonallyFrom_motor(Line self, Motor other) {
    return multiVector_wedge_multiVectorAtInfinity(line_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector line_rejectOrthogonallyFrom_multiVector(Line self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(line_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVector line_rejectOrthogonallyFrom_multiVectorAtOrigin(Line self, MultiVectorAtOrigin other) {
    return multiVector_wedge_multiVectorAtInfinity(line_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Line line_rejectOrthogonallyFrom_plane(Line self, Plane other) {
    return point_wedge_pointAtInfinity(line_antiWedge_plane(self, other), plane_antiDual(other));
}

Line line_rejectOrthogonallyFrom_planeAtOrigin(Line self, PlaneAtOrigin other) {
    return point_wedge_pointAtInfinity(line_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

MultiVector line_rejectOrthogonallyFrom_rotor(Line self, Rotor other) {
    return multiVector_wedge_multiVectorAtInfinity(line_antiWedge_rotor(self, other), rotor_antiDual(other));
}

Line line_rejectOrthogonallyFrom_transflector(Line self, Transflector other) {
    return point_wedge_pointAtInfinity(line_antiWedge_transflector(self, other), transflector_antiDual(other));
}

LineAtInfinity lineAtInfinity_rejectOrthogonallyFrom_flector(LineAtInfinity self, Flector other) {
    return pointAtInfinity_wedge_flectorAtInfinity(lineAtInfinity_antiWedge_flector(self, other), flector_antiDual(other));
}

LineAtInfinity lineAtInfinity_rejectOrthogonallyFrom_line(LineAtInfinity self, Line other) {
    return scalar_wedge_lineAtInfinity(lineAtInfinity_antiWedge_line(self, other), line_antiDual(other));
}

LineAtInfinity lineAtInfinity_rejectOrthogonallyFrom_lineAtOrigin(LineAtInfinity self, LineAtOrigin other) {
    return scalar_wedge_lineAtInfinity(lineAtInfinity_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_rejectOrthogonallyFrom_motor(LineAtInfinity self, Motor other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(lineAtInfinity_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_rejectOrthogonallyFrom_multiVector(LineAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(lineAtInfinity_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_rejectOrthogonallyFrom_multiVectorAtOrigin(LineAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(lineAtInfinity_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

LineAtInfinity lineAtInfinity_rejectOrthogonallyFrom_plane(LineAtInfinity self, Plane other) {
    return pointAtInfinity_wedge_pointAtInfinity(lineAtInfinity_antiWedge_plane(self, other), plane_antiDual(other));
}

LineAtInfinity lineAtInfinity_rejectOrthogonallyFrom_planeAtOrigin(LineAtInfinity self, PlaneAtOrigin other) {
    return pointAtInfinity_wedge_pointAtInfinity(lineAtInfinity_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity lineAtInfinity_rejectOrthogonallyFrom_rotor(LineAtInfinity self, Rotor other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(lineAtInfinity_antiWedge_rotor(self, other), rotor_antiDual(other));
}

LineAtInfinity lineAtInfinity_rejectOrthogonallyFrom_transflector(LineAtInfinity self, Transflector other) {
    return pointAtInfinity_wedge_pointAtInfinity(lineAtInfinity_antiWedge_transflector(self, other), transflector_antiDual(other));
}

Motor lineAtOrigin_rejectOrthogonallyFrom_flector(LineAtOrigin self, Flector other) {
    return point_wedge_flectorAtInfinity(lineAtOrigin_antiWedge_flector(self, other), flector_antiDual(other));
}

LineAtInfinity lineAtOrigin_rejectOrthogonallyFrom_line(LineAtOrigin self, Line other) {
    return scalar_wedge_lineAtInfinity(lineAtOrigin_antiWedge_line(self, other), line_antiDual(other));
}

MultiVector lineAtOrigin_rejectOrthogonallyFrom_motor(LineAtOrigin self, Motor other) {
    return multiVector_wedge_multiVectorAtInfinity(lineAtOrigin_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector lineAtOrigin_rejectOrthogonallyFrom_multiVector(LineAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(lineAtOrigin_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtOrigin lineAtOrigin_rejectOrthogonallyFrom_multiVectorAtOrigin(LineAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(lineAtOrigin_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Line lineAtOrigin_rejectOrthogonallyFrom_plane(LineAtOrigin self, Plane other) {
    return point_wedge_pointAtInfinity(lineAtOrigin_antiWedge_plane(self, other), plane_antiDual(other));
}

LineAtOrigin lineAtOrigin_rejectOrthogonallyFrom_planeAtOrigin(LineAtOrigin self, PlaneAtOrigin other) {
    return origin_wedge_pointAtInfinity(lineAtOrigin_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

MultiVectorAtOrigin lineAtOrigin_rejectOrthogonallyFrom_rotor(LineAtOrigin self, Rotor other) {
    return lineAtOrigin_wedge_multiVectorAtInfinity(lineAtOrigin_antiWedge_rotor(self, other), rotor_antiDual(other));
}

Line lineAtOrigin_rejectOrthogonallyFrom_transflector(LineAtOrigin self, Transflector other) {
    return point_wedge_pointAtInfinity(lineAtOrigin_antiWedge_transflector(self, other), transflector_antiDual(other));
}

Motor motor_rejectOrthogonallyFrom_flector(Motor self, Flector other) {
    return flector_wedge_flectorAtInfinity(motor_antiWedge_flector(self, other), flector_antiDual(other));
}

MultiVector motor_rejectOrthogonallyFrom_line(Motor self, Line other) {
    return multiVector_wedge_lineAtInfinity(motor_antiWedge_line(self, other), line_antiDual(other));
}

MultiVector motor_rejectOrthogonallyFrom_lineAtOrigin(Motor self, LineAtOrigin other) {
    return multiVector_wedge_lineAtInfinity(motor_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector motor_rejectOrthogonallyFrom_motor(Motor self, Motor other) {
    return multiVector_wedge_multiVectorAtInfinity(motor_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector motor_rejectOrthogonallyFrom_multiVector(Motor self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(motor_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVector motor_rejectOrthogonallyFrom_multiVectorAtOrigin(Motor self, MultiVectorAtOrigin other) {
    return multiVector_wedge_multiVectorAtInfinity(motor_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

AntiScalar motor_rejectOrthogonallyFrom_origin(Motor self, Origin other) {
    return origin_wedge_horizon(motor_antiWedge_origin(self, other), origin_antiDual(other));
}

Motor motor_rejectOrthogonallyFrom_plane(Motor self, Plane other) {
    return flector_wedge_pointAtInfinity(motor_antiWedge_plane(self, other), plane_antiDual(other));
}

Motor motor_rejectOrthogonallyFrom_planeAtOrigin(Motor self, PlaneAtOrigin other) {
    return flector_wedge_pointAtInfinity(motor_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

AntiScalar motor_rejectOrthogonallyFrom_point(Motor self, Point other) {
    return point_wedge_horizon(motor_antiWedge_point(self, other), point_antiDual(other));
}

MultiVector motor_rejectOrthogonallyFrom_rotor(Motor self, Rotor other) {
    return multiVector_wedge_multiVectorAtInfinity(motor_antiWedge_rotor(self, other), rotor_antiDual(other));
}

Motor motor_rejectOrthogonallyFrom_transflector(Motor self, Transflector other) {
    return flector_wedge_pointAtInfinity(motor_antiWedge_transflector(self, other), transflector_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_flector(MultiVector self, Flector other) {
    return multiVector_wedge_flectorAtInfinity(multiVector_antiWedge_flector(self, other), flector_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_line(MultiVector self, Line other) {
    return multiVector_wedge_lineAtInfinity(multiVector_antiWedge_line(self, other), line_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_lineAtOrigin(MultiVector self, LineAtOrigin other) {
    return multiVector_wedge_lineAtInfinity(multiVector_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_motor(MultiVector self, Motor other) {
    return multiVector_wedge_multiVectorAtInfinity(multiVector_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_multiVector(MultiVector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(multiVector_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_multiVectorAtOrigin(MultiVector self, MultiVectorAtOrigin other) {
    return multiVector_wedge_multiVectorAtInfinity(multiVector_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_origin(MultiVector self, Origin other) {
    return multiVector_wedge_horizon(multiVector_antiWedge_origin(self, other), origin_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_plane(MultiVector self, Plane other) {
    return multiVector_wedge_pointAtInfinity(multiVector_antiWedge_plane(self, other), plane_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_planeAtOrigin(MultiVector self, PlaneAtOrigin other) {
    return multiVector_wedge_pointAtInfinity(multiVector_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_point(MultiVector self, Point other) {
    return multiVector_wedge_horizon(multiVector_antiWedge_point(self, other), point_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_rotor(MultiVector self, Rotor other) {
    return multiVector_wedge_multiVectorAtInfinity(multiVector_antiWedge_rotor(self, other), rotor_antiDual(other));
}

MultiVector multiVector_rejectOrthogonallyFrom_transflector(MultiVector self, Transflector other) {
    return multiVector_wedge_pointAtInfinity(multiVector_antiWedge_transflector(self, other), transflector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_flector(MultiVectorAtInfinity self, Flector other) {
    return multiVectorAtInfinity_wedge_flectorAtInfinity(multiVectorAtInfinity_antiWedge_flector(self, other), flector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_line(MultiVectorAtInfinity self, Line other) {
    return multiVectorAtInfinity_wedge_lineAtInfinity(multiVectorAtInfinity_antiWedge_line(self, other), line_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_lineAtOrigin(MultiVectorAtInfinity self, LineAtOrigin other) {
    return multiVectorAtInfinity_wedge_lineAtInfinity(multiVectorAtInfinity_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_motor(MultiVectorAtInfinity self, Motor other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(multiVectorAtInfinity_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(multiVectorAtInfinity_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_multiVectorAtOrigin(MultiVectorAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(multiVectorAtInfinity_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Horizon multiVectorAtInfinity_rejectOrthogonallyFrom_origin(MultiVectorAtInfinity self, Origin other) {
    return scalar_wedge_horizon(multiVectorAtInfinity_antiWedge_origin(self, other), origin_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_plane(MultiVectorAtInfinity self, Plane other) {
    return multiVectorAtInfinity_wedge_pointAtInfinity(multiVectorAtInfinity_antiWedge_plane(self, other), plane_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_planeAtOrigin(MultiVectorAtInfinity self, PlaneAtOrigin other) {
    return multiVectorAtInfinity_wedge_pointAtInfinity(multiVectorAtInfinity_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

Horizon multiVectorAtInfinity_rejectOrthogonallyFrom_point(MultiVectorAtInfinity self, Point other) {
    return scalar_wedge_horizon(multiVectorAtInfinity_antiWedge_point(self, other), point_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_rotor(MultiVectorAtInfinity self, Rotor other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(multiVectorAtInfinity_antiWedge_rotor(self, other), rotor_antiDual(other));
}

MultiVectorAtInfinity multiVectorAtInfinity_rejectOrthogonallyFrom_transflector(MultiVectorAtInfinity self, Transflector other) {
    return multiVectorAtInfinity_wedge_pointAtInfinity(multiVectorAtInfinity_antiWedge_transflector(self, other), transflector_antiDual(other));
}

MultiVector multiVectorAtOrigin_rejectOrthogonallyFrom_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVector_wedge_flectorAtInfinity(multiVectorAtOrigin_antiWedge_flector(self, other), flector_antiDual(other));
}

MultiVector multiVectorAtOrigin_rejectOrthogonallyFrom_line(MultiVectorAtOrigin self, Line other) {
    return multiVector_wedge_lineAtInfinity(multiVectorAtOrigin_antiWedge_line(self, other), line_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectOrthogonallyFrom_lineAtOrigin(MultiVectorAtOrigin self, LineAtOrigin other) {
    return multiVectorAtOrigin_wedge_lineAtInfinity(multiVectorAtOrigin_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector multiVectorAtOrigin_rejectOrthogonallyFrom_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVector_wedge_multiVectorAtInfinity(multiVectorAtOrigin_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector multiVectorAtOrigin_rejectOrthogonallyFrom_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(multiVectorAtOrigin_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectOrthogonallyFrom_multiVectorAtOrigin(MultiVectorAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

AntiScalar multiVectorAtOrigin_rejectOrthogonallyFrom_origin(MultiVectorAtOrigin self, Origin other) {
    return origin_wedge_horizon(multiVectorAtOrigin_antiWedge_origin(self, other), origin_antiDual(other));
}

MultiVector multiVectorAtOrigin_rejectOrthogonallyFrom_plane(MultiVectorAtOrigin self, Plane other) {
    return multiVector_wedge_pointAtInfinity(multiVectorAtOrigin_antiWedge_plane(self, other), plane_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectOrthogonallyFrom_planeAtOrigin(MultiVectorAtOrigin self, PlaneAtOrigin other) {
    return multiVectorAtOrigin_wedge_pointAtInfinity(multiVectorAtOrigin_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

MultiVector multiVectorAtOrigin_rejectOrthogonallyFrom_point(MultiVectorAtOrigin self, Point other) {
    return multiVector_wedge_horizon(multiVectorAtOrigin_antiWedge_point(self, other), point_antiDual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectOrthogonallyFrom_rotor(MultiVectorAtOrigin self, Rotor other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(multiVectorAtOrigin_antiWedge_rotor(self, other), rotor_antiDual(other));
}

MultiVector multiVectorAtOrigin_rejectOrthogonallyFrom_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVector_wedge_pointAtInfinity(multiVectorAtOrigin_antiWedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity origin_rejectOrthogonallyFrom_flector(Origin self, Flector other) {
    return scalar_wedge_flectorAtInfinity(origin_antiWedge_flector(self, other), flector_antiDual(other));
}

MultiVectorAtOrigin origin_rejectOrthogonallyFrom_motor(Origin self, Motor other) {
    return origin_wedge_multiVectorAtInfinity(origin_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector origin_rejectOrthogonallyFrom_multiVector(Origin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(origin_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtOrigin origin_rejectOrthogonallyFrom_multiVectorAtOrigin(Origin self, MultiVectorAtOrigin other) {
    return origin_wedge_multiVectorAtInfinity(origin_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

PointAtInfinity origin_rejectOrthogonallyFrom_plane(Origin self, Plane other) {
    return scalar_wedge_pointAtInfinity(origin_antiWedge_plane(self, other), plane_antiDual(other));
}

MultiVectorAtOrigin origin_rejectOrthogonallyFrom_rotor(Origin self, Rotor other) {
    return origin_wedge_multiVectorAtInfinity(origin_antiWedge_rotor(self, other), rotor_antiDual(other));
}

PointAtInfinity origin_rejectOrthogonallyFrom_transflector(Origin self, Transflector other) {
    return scalar_wedge_pointAtInfinity(origin_antiWedge_transflector(self, other), transflector_antiDual(other));
}

MultiVector plane_rejectOrthogonallyFrom_flector(Plane self, Flector other) {
    return multiVector_wedge_flectorAtInfinity(plane_antiWedge_flector(self, other), flector_antiDual(other));
}

Plane plane_rejectOrthogonallyFrom_line(Plane self, Line other) {
    return point_wedge_lineAtInfinity(plane_antiWedge_line(self, other), line_antiDual(other));
}

Plane plane_rejectOrthogonallyFrom_lineAtOrigin(Plane self, LineAtOrigin other) {
    return point_wedge_lineAtInfinity(plane_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector plane_rejectOrthogonallyFrom_motor(Plane self, Motor other) {
    return flector_wedge_multiVectorAtInfinity(plane_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector plane_rejectOrthogonallyFrom_multiVector(Plane self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(plane_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVector plane_rejectOrthogonallyFrom_multiVectorAtOrigin(Plane self, MultiVectorAtOrigin other) {
    return multiVector_wedge_multiVectorAtInfinity(plane_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Horizon plane_rejectOrthogonallyFrom_origin(Plane self, Origin other) {
    return scalar_wedge_horizon(plane_antiWedge_origin(self, other), origin_antiDual(other));
}

Plane plane_rejectOrthogonallyFrom_plane(Plane self, Plane other) {
    return line_wedge_pointAtInfinity(plane_antiWedge_plane(self, other), plane_antiDual(other));
}

Plane plane_rejectOrthogonallyFrom_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return line_wedge_pointAtInfinity(plane_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

Horizon plane_rejectOrthogonallyFrom_point(Plane self, Point other) {
    return scalar_wedge_horizon(plane_antiWedge_point(self, other), point_antiDual(other));
}

MultiVector plane_rejectOrthogonallyFrom_rotor(Plane self, Rotor other) {
    return flector_wedge_multiVectorAtInfinity(plane_antiWedge_rotor(self, other), rotor_antiDual(other));
}

MultiVector plane_rejectOrthogonallyFrom_transflector(Plane self, Transflector other) {
    return multiVector_wedge_pointAtInfinity(plane_antiWedge_transflector(self, other), transflector_antiDual(other));
}

MultiVector planeAtOrigin_rejectOrthogonallyFrom_flector(PlaneAtOrigin self, Flector other) {
    return multiVector_wedge_flectorAtInfinity(planeAtOrigin_antiWedge_flector(self, other), flector_antiDual(other));
}

Plane planeAtOrigin_rejectOrthogonallyFrom_line(PlaneAtOrigin self, Line other) {
    return point_wedge_lineAtInfinity(planeAtOrigin_antiWedge_line(self, other), line_antiDual(other));
}

PlaneAtOrigin planeAtOrigin_rejectOrthogonallyFrom_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return origin_wedge_lineAtInfinity(planeAtOrigin_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector planeAtOrigin_rejectOrthogonallyFrom_motor(PlaneAtOrigin self, Motor other) {
    return flector_wedge_multiVectorAtInfinity(planeAtOrigin_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector planeAtOrigin_rejectOrthogonallyFrom_multiVector(PlaneAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(planeAtOrigin_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtOrigin planeAtOrigin_rejectOrthogonallyFrom_multiVectorAtOrigin(PlaneAtOrigin self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(planeAtOrigin_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Plane planeAtOrigin_rejectOrthogonallyFrom_plane(PlaneAtOrigin self, Plane other) {
    return line_wedge_pointAtInfinity(planeAtOrigin_antiWedge_plane(self, other), plane_antiDual(other));
}

PlaneAtOrigin planeAtOrigin_rejectOrthogonallyFrom_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return lineAtOrigin_wedge_pointAtInfinity(planeAtOrigin_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

Horizon planeAtOrigin_rejectOrthogonallyFrom_point(PlaneAtOrigin self, Point other) {
    return scalar_wedge_horizon(planeAtOrigin_antiWedge_point(self, other), point_antiDual(other));
}

MultiVector planeAtOrigin_rejectOrthogonallyFrom_rotor(PlaneAtOrigin self, Rotor other) {
    return flector_wedge_multiVectorAtInfinity(planeAtOrigin_antiWedge_rotor(self, other), rotor_antiDual(other));
}

MultiVector planeAtOrigin_rejectOrthogonallyFrom_transflector(PlaneAtOrigin self, Transflector other) {
    return multiVector_wedge_pointAtInfinity(planeAtOrigin_antiWedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity point_rejectOrthogonallyFrom_flector(Point self, Flector other) {
    return scalar_wedge_flectorAtInfinity(point_antiWedge_flector(self, other), flector_antiDual(other));
}

MultiVector point_rejectOrthogonallyFrom_motor(Point self, Motor other) {
    return point_wedge_multiVectorAtInfinity(point_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector point_rejectOrthogonallyFrom_multiVector(Point self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(point_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVector point_rejectOrthogonallyFrom_multiVectorAtOrigin(Point self, MultiVectorAtOrigin other) {
    return multiVector_wedge_multiVectorAtInfinity(point_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

PointAtInfinity point_rejectOrthogonallyFrom_plane(Point self, Plane other) {
    return scalar_wedge_pointAtInfinity(point_antiWedge_plane(self, other), plane_antiDual(other));
}

PointAtInfinity point_rejectOrthogonallyFrom_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return scalar_wedge_pointAtInfinity(point_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

MultiVector point_rejectOrthogonallyFrom_rotor(Point self, Rotor other) {
    return point_wedge_multiVectorAtInfinity(point_antiWedge_rotor(self, other), rotor_antiDual(other));
}

PointAtInfinity point_rejectOrthogonallyFrom_transflector(Point self, Transflector other) {
    return scalar_wedge_pointAtInfinity(point_antiWedge_transflector(self, other), transflector_antiDual(other));
}

FlectorAtInfinity pointAtInfinity_rejectOrthogonallyFrom_flector(PointAtInfinity self, Flector other) {
    return scalar_wedge_flectorAtInfinity(pointAtInfinity_antiWedge_flector(self, other), flector_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_rejectOrthogonallyFrom_motor(PointAtInfinity self, Motor other) {
    return pointAtInfinity_wedge_multiVectorAtInfinity(pointAtInfinity_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_rejectOrthogonallyFrom_multiVector(PointAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(pointAtInfinity_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_rejectOrthogonallyFrom_multiVectorAtOrigin(PointAtInfinity self, MultiVectorAtOrigin other) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(pointAtInfinity_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

PointAtInfinity pointAtInfinity_rejectOrthogonallyFrom_plane(PointAtInfinity self, Plane other) {
    return scalar_wedge_pointAtInfinity(pointAtInfinity_antiWedge_plane(self, other), plane_antiDual(other));
}

PointAtInfinity pointAtInfinity_rejectOrthogonallyFrom_planeAtOrigin(PointAtInfinity self, PlaneAtOrigin other) {
    return scalar_wedge_pointAtInfinity(pointAtInfinity_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

MultiVectorAtInfinity pointAtInfinity_rejectOrthogonallyFrom_rotor(PointAtInfinity self, Rotor other) {
    return pointAtInfinity_wedge_multiVectorAtInfinity(pointAtInfinity_antiWedge_rotor(self, other), rotor_antiDual(other));
}

PointAtInfinity pointAtInfinity_rejectOrthogonallyFrom_transflector(PointAtInfinity self, Transflector other) {
    return scalar_wedge_pointAtInfinity(pointAtInfinity_antiWedge_transflector(self, other), transflector_antiDual(other));
}

Motor rotor_rejectOrthogonallyFrom_flector(Rotor self, Flector other) {
    return flector_wedge_flectorAtInfinity(rotor_antiWedge_flector(self, other), flector_antiDual(other));
}

MultiVector rotor_rejectOrthogonallyFrom_line(Rotor self, Line other) {
    return multiVector_wedge_lineAtInfinity(rotor_antiWedge_line(self, other), line_antiDual(other));
}

AntiScalar rotor_rejectOrthogonallyFrom_lineAtOrigin(Rotor self, LineAtOrigin other) {
    return lineAtOrigin_wedge_lineAtInfinity(rotor_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector rotor_rejectOrthogonallyFrom_motor(Rotor self, Motor other) {
    return multiVector_wedge_multiVectorAtInfinity(rotor_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector rotor_rejectOrthogonallyFrom_multiVector(Rotor self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(rotor_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVectorAtOrigin rotor_rejectOrthogonallyFrom_multiVectorAtOrigin(Rotor self, MultiVectorAtOrigin other) {
    return multiVectorAtOrigin_wedge_multiVectorAtInfinity(rotor_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

AntiScalar rotor_rejectOrthogonallyFrom_origin(Rotor self, Origin other) {
    return origin_wedge_horizon(rotor_antiWedge_origin(self, other), origin_antiDual(other));
}

Motor rotor_rejectOrthogonallyFrom_plane(Rotor self, Plane other) {
    return flector_wedge_pointAtInfinity(rotor_antiWedge_plane(self, other), plane_antiDual(other));
}

Motor rotor_rejectOrthogonallyFrom_planeAtOrigin(Rotor self, PlaneAtOrigin other) {
    return flector_wedge_pointAtInfinity(rotor_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

AntiScalar rotor_rejectOrthogonallyFrom_point(Rotor self, Point other) {
    return point_wedge_horizon(rotor_antiWedge_point(self, other), point_antiDual(other));
}

MultiVectorAtOrigin rotor_rejectOrthogonallyFrom_rotor(Rotor self, Rotor other) {
    return rotor_wedge_multiVectorAtInfinity(rotor_antiWedge_rotor(self, other), rotor_antiDual(other));
}

Motor rotor_rejectOrthogonallyFrom_transflector(Rotor self, Transflector other) {
    return flector_wedge_pointAtInfinity(rotor_antiWedge_transflector(self, other), transflector_antiDual(other));
}

MultiVector transflector_rejectOrthogonallyFrom_flector(Transflector self, Flector other) {
    return multiVector_wedge_flectorAtInfinity(transflector_antiWedge_flector(self, other), flector_antiDual(other));
}

Plane transflector_rejectOrthogonallyFrom_line(Transflector self, Line other) {
    return point_wedge_lineAtInfinity(transflector_antiWedge_line(self, other), line_antiDual(other));
}

Plane transflector_rejectOrthogonallyFrom_lineAtOrigin(Transflector self, LineAtOrigin other) {
    return point_wedge_lineAtInfinity(transflector_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector transflector_rejectOrthogonallyFrom_motor(Transflector self, Motor other) {
    return flector_wedge_multiVectorAtInfinity(transflector_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector transflector_rejectOrthogonallyFrom_multiVector(Transflector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(transflector_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVector transflector_rejectOrthogonallyFrom_multiVectorAtOrigin(Transflector self, MultiVectorAtOrigin other) {
    return multiVector_wedge_multiVectorAtInfinity(transflector_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

Horizon transflector_rejectOrthogonallyFrom_origin(Transflector self, Origin other) {
    return scalar_wedge_horizon(transflector_antiWedge_origin(self, other), origin_antiDual(other));
}

MultiVector transflector_rejectOrthogonallyFrom_plane(Transflector self, Plane other) {
    return multiVector_wedge_pointAtInfinity(transflector_antiWedge_plane(self, other), plane_antiDual(other));
}

MultiVector transflector_rejectOrthogonallyFrom_planeAtOrigin(Transflector self, PlaneAtOrigin other) {
    return multiVector_wedge_pointAtInfinity(transflector_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

Horizon transflector_rejectOrthogonallyFrom_point(Transflector self, Point other) {
    return scalar_wedge_horizon(transflector_antiWedge_point(self, other), point_antiDual(other));
}

MultiVector transflector_rejectOrthogonallyFrom_rotor(Transflector self, Rotor other) {
    return flector_wedge_multiVectorAtInfinity(transflector_antiWedge_rotor(self, other), rotor_antiDual(other));
}

MultiVector transflector_rejectOrthogonallyFrom_transflector(Transflector self, Transflector other) {
    return multiVector_wedge_pointAtInfinity(transflector_antiWedge_transflector(self, other), transflector_antiDual(other));
}

Motor translator_rejectOrthogonallyFrom_flector(Translator self, Flector other) {
    return flector_wedge_flectorAtInfinity(translator_antiWedge_flector(self, other), flector_antiDual(other));
}

MultiVector translator_rejectOrthogonallyFrom_line(Translator self, Line other) {
    return multiVector_wedge_lineAtInfinity(translator_antiWedge_line(self, other), line_antiDual(other));
}

MultiVector translator_rejectOrthogonallyFrom_lineAtOrigin(Translator self, LineAtOrigin other) {
    return multiVector_wedge_lineAtInfinity(translator_antiWedge_lineAtOrigin(self, other), lineAtOrigin_antiDual(other));
}

MultiVector translator_rejectOrthogonallyFrom_motor(Translator self, Motor other) {
    return multiVector_wedge_multiVectorAtInfinity(translator_antiWedge_motor(self, other), motor_antiDual(other));
}

MultiVector translator_rejectOrthogonallyFrom_multiVector(Translator self, MultiVector other) {
    return multiVector_wedge_multiVectorAtInfinity(translator_antiWedge_multiVector(self, other), multiVector_antiDual(other));
}

MultiVector translator_rejectOrthogonallyFrom_multiVectorAtOrigin(Translator self, MultiVectorAtOrigin other) {
    return multiVector_wedge_multiVectorAtInfinity(translator_antiWedge_multiVectorAtOrigin(self, other), multiVectorAtOrigin_antiDual(other));
}

AntiScalar translator_rejectOrthogonallyFrom_origin(Translator self, Origin other) {
    return origin_wedge_horizon(translator_antiWedge_origin(self, other), origin_antiDual(other));
}

Translator translator_rejectOrthogonallyFrom_plane(Translator self, Plane other) {
    return transflector_wedge_pointAtInfinity(translator_antiWedge_plane(self, other), plane_antiDual(other));
}

Translator translator_rejectOrthogonallyFrom_planeAtOrigin(Translator self, PlaneAtOrigin other) {
    return transflector_wedge_pointAtInfinity(translator_antiWedge_planeAtOrigin(self, other), planeAtOrigin_antiDual(other));
}

AntiScalar translator_rejectOrthogonallyFrom_point(Translator self, Point other) {
    return point_wedge_horizon(translator_antiWedge_point(self, other), point_antiDual(other));
}

MultiVector translator_rejectOrthogonallyFrom_rotor(Translator self, Rotor other) {
    return multiVector_wedge_multiVectorAtInfinity(translator_antiWedge_rotor(self, other), rotor_antiDual(other));
}

Translator translator_rejectOrthogonallyFrom_transflector(Translator self, Transflector other) {
    return transflector_wedge_pointAtInfinity(translator_antiWedge_transflector(self, other), transflector_antiDual(other));
}

MultiVector flector_rejectViaOriginFrom_flector(Flector self, Flector other) {
    return multiVector_wedge_flector(flector_antiWedge_flector(self, other), flector_dual(other));
}

MultiVector flector_rejectViaOriginFrom_flectorAtInfinity(Flector self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_flector(flector_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

MultiVectorAtOrigin flector_rejectViaOriginFrom_horizon(Flector self, Horizon other) {
    return multiVectorAtInfinity_wedge_origin(flector_antiWedge_horizon(self, other), horizon_dual(other));
}

PlaneAtOrigin flector_rejectViaOriginFrom_line(Flector self, Line other) {
    return point_wedge_lineAtOrigin(flector_antiWedge_line(self, other), line_dual(other));
}

PlaneAtOrigin flector_rejectViaOriginFrom_lineAtInfinity(Flector self, LineAtInfinity other) {
    return pointAtInfinity_wedge_lineAtOrigin(flector_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

PlaneAtOrigin flector_rejectViaOriginFrom_motor(Flector self, Motor other) {
    return flector_wedge_lineAtOrigin(flector_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin flector_rejectViaOriginFrom_multiVector(Flector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(flector_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin flector_rejectViaOriginFrom_multiVectorAtInfinity(Flector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(flector_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

MultiVectorAtOrigin flector_rejectViaOriginFrom_plane(Flector self, Plane other) {
    return multiVector_wedge_origin(flector_antiWedge_plane(self, other), plane_dual(other));
}

PlaneAtOrigin flector_rejectViaOriginFrom_point(Flector self, Point other) {
    return scalar_wedge_planeAtOrigin(flector_antiWedge_point(self, other), point_dual(other));
}

PlaneAtOrigin flector_rejectViaOriginFrom_pointAtInfinity(Flector self, PointAtInfinity other) {
    return scalar_wedge_planeAtOrigin(flector_antiWedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector flector_rejectViaOriginFrom_transflector(Flector self, Transflector other) {
    return multiVector_wedge_flector(flector_antiWedge_transflector(self, other), transflector_dual(other));
}

PlaneAtOrigin flector_rejectViaOriginFrom_translator(Flector self, Translator other) {
    return flector_wedge_lineAtOrigin(flector_antiWedge_translator(self, other), translator_dual(other));
}

MultiVector flectorAtInfinity_rejectViaOriginFrom_flector(FlectorAtInfinity self, Flector other) {
    return multiVectorAtInfinity_wedge_flector(flectorAtInfinity_antiWedge_flector(self, other), flector_dual(other));
}

PlaneAtOrigin flectorAtInfinity_rejectViaOriginFrom_line(FlectorAtInfinity self, Line other) {
    return pointAtInfinity_wedge_lineAtOrigin(flectorAtInfinity_antiWedge_line(self, other), line_dual(other));
}

PlaneAtOrigin flectorAtInfinity_rejectViaOriginFrom_motor(FlectorAtInfinity self, Motor other) {
    return flectorAtInfinity_wedge_lineAtOrigin(flectorAtInfinity_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin flectorAtInfinity_rejectViaOriginFrom_multiVector(FlectorAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(flectorAtInfinity_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin flectorAtInfinity_rejectViaOriginFrom_plane(FlectorAtInfinity self, Plane other) {
    return multiVectorAtInfinity_wedge_origin(flectorAtInfinity_antiWedge_plane(self, other), plane_dual(other));
}

PlaneAtOrigin flectorAtInfinity_rejectViaOriginFrom_point(FlectorAtInfinity self, Point other) {
    return scalar_wedge_planeAtOrigin(flectorAtInfinity_antiWedge_point(self, other), point_dual(other));
}

MultiVector flectorAtInfinity_rejectViaOriginFrom_transflector(FlectorAtInfinity self, Transflector other) {
    return multiVectorAtInfinity_wedge_flector(flectorAtInfinity_antiWedge_transflector(self, other), transflector_dual(other));
}

PlaneAtOrigin flectorAtInfinity_rejectViaOriginFrom_translator(FlectorAtInfinity self, Translator other) {
    return flectorAtInfinity_wedge_lineAtOrigin(flectorAtInfinity_antiWedge_translator(self, other), translator_dual(other));
}

MultiVector horizon_rejectViaOriginFrom_flector(Horizon self, Flector other) {
    return multiVectorAtInfinity_wedge_flector(horizon_antiWedge_flector(self, other), flector_dual(other));
}

PlaneAtOrigin horizon_rejectViaOriginFrom_line(Horizon self, Line other) {
    return pointAtInfinity_wedge_lineAtOrigin(horizon_antiWedge_line(self, other), line_dual(other));
}

PlaneAtOrigin horizon_rejectViaOriginFrom_motor(Horizon self, Motor other) {
    return flectorAtInfinity_wedge_lineAtOrigin(horizon_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin horizon_rejectViaOriginFrom_multiVector(Horizon self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(horizon_antiWedge_multiVector(self, other), multiVector_dual(other));
}

PlaneAtOrigin horizon_rejectViaOriginFrom_plane(Horizon self, Plane other) {
    return lineAtInfinity_wedge_origin(horizon_antiWedge_plane(self, other), plane_dual(other));
}

PlaneAtOrigin horizon_rejectViaOriginFrom_point(Horizon self, Point other) {
    return scalar_wedge_planeAtOrigin(horizon_antiWedge_point(self, other), point_dual(other));
}

Plane horizon_rejectViaOriginFrom_transflector(Horizon self, Transflector other) {
    return lineAtInfinity_wedge_flector(horizon_antiWedge_transflector(self, other), transflector_dual(other));
}

Motor line_rejectViaOriginFrom_flector(Line self, Flector other) {
    return point_wedge_flector(line_antiWedge_flector(self, other), flector_dual(other));
}

Motor line_rejectViaOriginFrom_flectorAtInfinity(Line self, FlectorAtInfinity other) {
    return pointAtInfinity_wedge_flector(line_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

LineAtOrigin line_rejectViaOriginFrom_horizon(Line self, Horizon other) {
    return pointAtInfinity_wedge_origin(line_antiWedge_horizon(self, other), horizon_dual(other));
}

LineAtOrigin line_rejectViaOriginFrom_line(Line self, Line other) {
    return scalar_wedge_lineAtOrigin(line_antiWedge_line(self, other), line_dual(other));
}

LineAtOrigin line_rejectViaOriginFrom_lineAtInfinity(Line self, LineAtInfinity other) {
    return scalar_wedge_lineAtOrigin(line_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVectorAtOrigin line_rejectViaOriginFrom_motor(Line self, Motor other) {
    return multiVector_wedge_lineAtOrigin(line_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin line_rejectViaOriginFrom_multiVector(Line self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(line_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin line_rejectViaOriginFrom_multiVectorAtInfinity(Line self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(line_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

LineAtOrigin line_rejectViaOriginFrom_plane(Line self, Plane other) {
    return point_wedge_origin(line_antiWedge_plane(self, other), plane_dual(other));
}

Motor line_rejectViaOriginFrom_transflector(Line self, Transflector other) {
    return point_wedge_flector(line_antiWedge_transflector(self, other), transflector_dual(other));
}

MultiVectorAtOrigin line_rejectViaOriginFrom_translator(Line self, Translator other) {
    return multiVector_wedge_lineAtOrigin(line_antiWedge_translator(self, other), translator_dual(other));
}

Motor lineAtInfinity_rejectViaOriginFrom_flector(LineAtInfinity self, Flector other) {
    return pointAtInfinity_wedge_flector(lineAtInfinity_antiWedge_flector(self, other), flector_dual(other));
}

LineAtOrigin lineAtInfinity_rejectViaOriginFrom_line(LineAtInfinity self, Line other) {
    return scalar_wedge_lineAtOrigin(lineAtInfinity_antiWedge_line(self, other), line_dual(other));
}

MultiVectorAtOrigin lineAtInfinity_rejectViaOriginFrom_motor(LineAtInfinity self, Motor other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(lineAtInfinity_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin lineAtInfinity_rejectViaOriginFrom_multiVector(LineAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(lineAtInfinity_antiWedge_multiVector(self, other), multiVector_dual(other));
}

LineAtOrigin lineAtInfinity_rejectViaOriginFrom_plane(LineAtInfinity self, Plane other) {
    return pointAtInfinity_wedge_origin(lineAtInfinity_antiWedge_plane(self, other), plane_dual(other));
}

Motor lineAtInfinity_rejectViaOriginFrom_transflector(LineAtInfinity self, Transflector other) {
    return pointAtInfinity_wedge_flector(lineAtInfinity_antiWedge_transflector(self, other), transflector_dual(other));
}

AntiScalar lineAtInfinity_rejectViaOriginFrom_translator(LineAtInfinity self, Translator other) {
    return lineAtInfinity_wedge_lineAtOrigin(lineAtInfinity_antiWedge_translator(self, other), translator_dual(other));
}

Motor lineAtOrigin_rejectViaOriginFrom_flector(LineAtOrigin self, Flector other) {
    return point_wedge_flector(lineAtOrigin_antiWedge_flector(self, other), flector_dual(other));
}

Motor lineAtOrigin_rejectViaOriginFrom_flectorAtInfinity(LineAtOrigin self, FlectorAtInfinity other) {
    return pointAtInfinity_wedge_flector(lineAtOrigin_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

LineAtOrigin lineAtOrigin_rejectViaOriginFrom_horizon(LineAtOrigin self, Horizon other) {
    return pointAtInfinity_wedge_origin(lineAtOrigin_antiWedge_horizon(self, other), horizon_dual(other));
}

LineAtOrigin lineAtOrigin_rejectViaOriginFrom_line(LineAtOrigin self, Line other) {
    return scalar_wedge_lineAtOrigin(lineAtOrigin_antiWedge_line(self, other), line_dual(other));
}

LineAtOrigin lineAtOrigin_rejectViaOriginFrom_lineAtInfinity(LineAtOrigin self, LineAtInfinity other) {
    return scalar_wedge_lineAtOrigin(lineAtOrigin_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVectorAtOrigin lineAtOrigin_rejectViaOriginFrom_motor(LineAtOrigin self, Motor other) {
    return multiVector_wedge_lineAtOrigin(lineAtOrigin_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin lineAtOrigin_rejectViaOriginFrom_multiVector(LineAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(lineAtOrigin_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin lineAtOrigin_rejectViaOriginFrom_multiVectorAtInfinity(LineAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(lineAtOrigin_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

LineAtOrigin lineAtOrigin_rejectViaOriginFrom_plane(LineAtOrigin self, Plane other) {
    return point_wedge_origin(lineAtOrigin_antiWedge_plane(self, other), plane_dual(other));
}

Motor lineAtOrigin_rejectViaOriginFrom_transflector(LineAtOrigin self, Transflector other) {
    return point_wedge_flector(lineAtOrigin_antiWedge_transflector(self, other), transflector_dual(other));
}

MultiVectorAtOrigin lineAtOrigin_rejectViaOriginFrom_translator(LineAtOrigin self, Translator other) {
    return multiVector_wedge_lineAtOrigin(lineAtOrigin_antiWedge_translator(self, other), translator_dual(other));
}

Motor motor_rejectViaOriginFrom_flector(Motor self, Flector other) {
    return flector_wedge_flector(motor_antiWedge_flector(self, other), flector_dual(other));
}

Motor motor_rejectViaOriginFrom_flectorAtInfinity(Motor self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_flector(motor_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Rotor motor_rejectViaOriginFrom_horizon(Motor self, Horizon other) {
    return flectorAtInfinity_wedge_origin(motor_antiWedge_horizon(self, other), horizon_dual(other));
}

MultiVectorAtOrigin motor_rejectViaOriginFrom_line(Motor self, Line other) {
    return multiVector_wedge_lineAtOrigin(motor_antiWedge_line(self, other), line_dual(other));
}

MultiVectorAtOrigin motor_rejectViaOriginFrom_lineAtInfinity(Motor self, LineAtInfinity other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(motor_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVectorAtOrigin motor_rejectViaOriginFrom_motor(Motor self, Motor other) {
    return multiVector_wedge_lineAtOrigin(motor_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin motor_rejectViaOriginFrom_multiVector(Motor self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(motor_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin motor_rejectViaOriginFrom_multiVectorAtInfinity(Motor self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(motor_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Rotor motor_rejectViaOriginFrom_plane(Motor self, Plane other) {
    return flector_wedge_origin(motor_antiWedge_plane(self, other), plane_dual(other));
}

AntiScalar motor_rejectViaOriginFrom_point(Motor self, Point other) {
    return point_wedge_planeAtOrigin(motor_antiWedge_point(self, other), point_dual(other));
}

AntiScalar motor_rejectViaOriginFrom_pointAtInfinity(Motor self, PointAtInfinity other) {
    return pointAtInfinity_wedge_planeAtOrigin(motor_antiWedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Motor motor_rejectViaOriginFrom_transflector(Motor self, Transflector other) {
    return flector_wedge_flector(motor_antiWedge_transflector(self, other), transflector_dual(other));
}

MultiVectorAtOrigin motor_rejectViaOriginFrom_translator(Motor self, Translator other) {
    return multiVector_wedge_lineAtOrigin(motor_antiWedge_translator(self, other), translator_dual(other));
}

MultiVector multiVector_rejectViaOriginFrom_flector(MultiVector self, Flector other) {
    return multiVector_wedge_flector(multiVector_antiWedge_flector(self, other), flector_dual(other));
}

MultiVector multiVector_rejectViaOriginFrom_flectorAtInfinity(MultiVector self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_flector(multiVector_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_horizon(MultiVector self, Horizon other) {
    return multiVectorAtInfinity_wedge_origin(multiVector_antiWedge_horizon(self, other), horizon_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_line(MultiVector self, Line other) {
    return multiVector_wedge_lineAtOrigin(multiVector_antiWedge_line(self, other), line_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_lineAtInfinity(MultiVector self, LineAtInfinity other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(multiVector_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_motor(MultiVector self, Motor other) {
    return multiVector_wedge_lineAtOrigin(multiVector_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_multiVector(MultiVector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(multiVector_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_multiVectorAtInfinity(MultiVector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(multiVector_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_plane(MultiVector self, Plane other) {
    return multiVector_wedge_origin(multiVector_antiWedge_plane(self, other), plane_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_point(MultiVector self, Point other) {
    return multiVector_wedge_planeAtOrigin(multiVector_antiWedge_point(self, other), point_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_pointAtInfinity(MultiVector self, PointAtInfinity other) {
    return multiVectorAtInfinity_wedge_planeAtOrigin(multiVector_antiWedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector multiVector_rejectViaOriginFrom_transflector(MultiVector self, Transflector other) {
    return multiVector_wedge_flector(multiVector_antiWedge_transflector(self, other), transflector_dual(other));
}

MultiVectorAtOrigin multiVector_rejectViaOriginFrom_translator(MultiVector self, Translator other) {
    return multiVector_wedge_lineAtOrigin(multiVector_antiWedge_translator(self, other), translator_dual(other));
}

MultiVector multiVectorAtInfinity_rejectViaOriginFrom_flector(MultiVectorAtInfinity self, Flector other) {
    return multiVectorAtInfinity_wedge_flector(multiVectorAtInfinity_antiWedge_flector(self, other), flector_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_rejectViaOriginFrom_line(MultiVectorAtInfinity self, Line other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(multiVectorAtInfinity_antiWedge_line(self, other), line_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_rejectViaOriginFrom_motor(MultiVectorAtInfinity self, Motor other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(multiVectorAtInfinity_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_rejectViaOriginFrom_multiVector(MultiVectorAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(multiVectorAtInfinity_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_rejectViaOriginFrom_plane(MultiVectorAtInfinity self, Plane other) {
    return multiVectorAtInfinity_wedge_origin(multiVectorAtInfinity_antiWedge_plane(self, other), plane_dual(other));
}

PlaneAtOrigin multiVectorAtInfinity_rejectViaOriginFrom_point(MultiVectorAtInfinity self, Point other) {
    return scalar_wedge_planeAtOrigin(multiVectorAtInfinity_antiWedge_point(self, other), point_dual(other));
}

MultiVector multiVectorAtInfinity_rejectViaOriginFrom_transflector(MultiVectorAtInfinity self, Transflector other) {
    return multiVectorAtInfinity_wedge_flector(multiVectorAtInfinity_antiWedge_transflector(self, other), transflector_dual(other));
}

MultiVectorAtOrigin multiVectorAtInfinity_rejectViaOriginFrom_translator(MultiVectorAtInfinity self, Translator other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(multiVectorAtInfinity_antiWedge_translator(self, other), translator_dual(other));
}

MultiVector multiVectorAtOrigin_rejectViaOriginFrom_flector(MultiVectorAtOrigin self, Flector other) {
    return multiVector_wedge_flector(multiVectorAtOrigin_antiWedge_flector(self, other), flector_dual(other));
}

MultiVector multiVectorAtOrigin_rejectViaOriginFrom_flectorAtInfinity(MultiVectorAtOrigin self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_flector(multiVectorAtOrigin_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_horizon(MultiVectorAtOrigin self, Horizon other) {
    return multiVectorAtInfinity_wedge_origin(multiVectorAtOrigin_antiWedge_horizon(self, other), horizon_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_line(MultiVectorAtOrigin self, Line other) {
    return multiVector_wedge_lineAtOrigin(multiVectorAtOrigin_antiWedge_line(self, other), line_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_lineAtInfinity(MultiVectorAtOrigin self, LineAtInfinity other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(multiVectorAtOrigin_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_motor(MultiVectorAtOrigin self, Motor other) {
    return multiVector_wedge_lineAtOrigin(multiVectorAtOrigin_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_multiVector(MultiVectorAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(multiVectorAtOrigin_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_multiVectorAtInfinity(MultiVectorAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(multiVectorAtOrigin_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_plane(MultiVectorAtOrigin self, Plane other) {
    return multiVector_wedge_origin(multiVectorAtOrigin_antiWedge_plane(self, other), plane_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_point(MultiVectorAtOrigin self, Point other) {
    return multiVector_wedge_planeAtOrigin(multiVectorAtOrigin_antiWedge_point(self, other), point_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_pointAtInfinity(MultiVectorAtOrigin self, PointAtInfinity other) {
    return multiVectorAtInfinity_wedge_planeAtOrigin(multiVectorAtOrigin_antiWedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector multiVectorAtOrigin_rejectViaOriginFrom_transflector(MultiVectorAtOrigin self, Transflector other) {
    return multiVector_wedge_flector(multiVectorAtOrigin_antiWedge_transflector(self, other), transflector_dual(other));
}

MultiVectorAtOrigin multiVectorAtOrigin_rejectViaOriginFrom_translator(MultiVectorAtOrigin self, Translator other) {
    return multiVector_wedge_lineAtOrigin(multiVectorAtOrigin_antiWedge_translator(self, other), translator_dual(other));
}

Flector origin_rejectViaOriginFrom_flector(Origin self, Flector other) {
    return scalar_wedge_flector(origin_antiWedge_flector(self, other), flector_dual(other));
}

Flector origin_rejectViaOriginFrom_flectorAtInfinity(Origin self, FlectorAtInfinity other) {
    return scalar_wedge_flector(origin_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Origin origin_rejectViaOriginFrom_horizon(Origin self, Horizon other) {
    return scalar_wedge_origin(origin_antiWedge_horizon(self, other), horizon_dual(other));
}

MultiVectorAtOrigin origin_rejectViaOriginFrom_multiVector(Origin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(origin_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin origin_rejectViaOriginFrom_multiVectorAtInfinity(Origin self, MultiVectorAtInfinity other) {
    return scalar_wedge_multiVectorAtOrigin(origin_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Origin origin_rejectViaOriginFrom_plane(Origin self, Plane other) {
    return scalar_wedge_origin(origin_antiWedge_plane(self, other), plane_dual(other));
}

Flector origin_rejectViaOriginFrom_transflector(Origin self, Transflector other) {
    return scalar_wedge_flector(origin_antiWedge_transflector(self, other), transflector_dual(other));
}

MultiVector plane_rejectViaOriginFrom_flector(Plane self, Flector other) {
    return multiVector_wedge_flector(plane_antiWedge_flector(self, other), flector_dual(other));
}

MultiVector plane_rejectViaOriginFrom_flectorAtInfinity(Plane self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_flector(plane_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

PlaneAtOrigin plane_rejectViaOriginFrom_horizon(Plane self, Horizon other) {
    return lineAtInfinity_wedge_origin(plane_antiWedge_horizon(self, other), horizon_dual(other));
}

PlaneAtOrigin plane_rejectViaOriginFrom_line(Plane self, Line other) {
    return point_wedge_lineAtOrigin(plane_antiWedge_line(self, other), line_dual(other));
}

PlaneAtOrigin plane_rejectViaOriginFrom_lineAtInfinity(Plane self, LineAtInfinity other) {
    return pointAtInfinity_wedge_lineAtOrigin(plane_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

PlaneAtOrigin plane_rejectViaOriginFrom_motor(Plane self, Motor other) {
    return flector_wedge_lineAtOrigin(plane_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin plane_rejectViaOriginFrom_multiVector(Plane self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(plane_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin plane_rejectViaOriginFrom_multiVectorAtInfinity(Plane self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(plane_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

PlaneAtOrigin plane_rejectViaOriginFrom_plane(Plane self, Plane other) {
    return line_wedge_origin(plane_antiWedge_plane(self, other), plane_dual(other));
}

PlaneAtOrigin plane_rejectViaOriginFrom_point(Plane self, Point other) {
    return scalar_wedge_planeAtOrigin(plane_antiWedge_point(self, other), point_dual(other));
}

PlaneAtOrigin plane_rejectViaOriginFrom_pointAtInfinity(Plane self, PointAtInfinity other) {
    return scalar_wedge_planeAtOrigin(plane_antiWedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector plane_rejectViaOriginFrom_transflector(Plane self, Transflector other) {
    return multiVector_wedge_flector(plane_antiWedge_transflector(self, other), transflector_dual(other));
}

PlaneAtOrigin plane_rejectViaOriginFrom_translator(Plane self, Translator other) {
    return transflector_wedge_lineAtOrigin(plane_antiWedge_translator(self, other), translator_dual(other));
}

MultiVector planeAtOrigin_rejectViaOriginFrom_flector(PlaneAtOrigin self, Flector other) {
    return multiVector_wedge_flector(planeAtOrigin_antiWedge_flector(self, other), flector_dual(other));
}

MultiVector planeAtOrigin_rejectViaOriginFrom_flectorAtInfinity(PlaneAtOrigin self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_flector(planeAtOrigin_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

PlaneAtOrigin planeAtOrigin_rejectViaOriginFrom_horizon(PlaneAtOrigin self, Horizon other) {
    return lineAtInfinity_wedge_origin(planeAtOrigin_antiWedge_horizon(self, other), horizon_dual(other));
}

PlaneAtOrigin planeAtOrigin_rejectViaOriginFrom_line(PlaneAtOrigin self, Line other) {
    return point_wedge_lineAtOrigin(planeAtOrigin_antiWedge_line(self, other), line_dual(other));
}

PlaneAtOrigin planeAtOrigin_rejectViaOriginFrom_lineAtInfinity(PlaneAtOrigin self, LineAtInfinity other) {
    return pointAtInfinity_wedge_lineAtOrigin(planeAtOrigin_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

PlaneAtOrigin planeAtOrigin_rejectViaOriginFrom_motor(PlaneAtOrigin self, Motor other) {
    return flector_wedge_lineAtOrigin(planeAtOrigin_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin planeAtOrigin_rejectViaOriginFrom_multiVector(PlaneAtOrigin self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(planeAtOrigin_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin planeAtOrigin_rejectViaOriginFrom_multiVectorAtInfinity(PlaneAtOrigin self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(planeAtOrigin_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

PlaneAtOrigin planeAtOrigin_rejectViaOriginFrom_plane(PlaneAtOrigin self, Plane other) {
    return line_wedge_origin(planeAtOrigin_antiWedge_plane(self, other), plane_dual(other));
}

PlaneAtOrigin planeAtOrigin_rejectViaOriginFrom_point(PlaneAtOrigin self, Point other) {
    return scalar_wedge_planeAtOrigin(planeAtOrigin_antiWedge_point(self, other), point_dual(other));
}

PlaneAtOrigin planeAtOrigin_rejectViaOriginFrom_pointAtInfinity(PlaneAtOrigin self, PointAtInfinity other) {
    return scalar_wedge_planeAtOrigin(planeAtOrigin_antiWedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector planeAtOrigin_rejectViaOriginFrom_transflector(PlaneAtOrigin self, Transflector other) {
    return multiVector_wedge_flector(planeAtOrigin_antiWedge_transflector(self, other), transflector_dual(other));
}

PlaneAtOrigin planeAtOrigin_rejectViaOriginFrom_translator(PlaneAtOrigin self, Translator other) {
    return transflector_wedge_lineAtOrigin(planeAtOrigin_antiWedge_translator(self, other), translator_dual(other));
}

Flector point_rejectViaOriginFrom_flector(Point self, Flector other) {
    return scalar_wedge_flector(point_antiWedge_flector(self, other), flector_dual(other));
}

Flector point_rejectViaOriginFrom_flectorAtInfinity(Point self, FlectorAtInfinity other) {
    return scalar_wedge_flector(point_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Origin point_rejectViaOriginFrom_horizon(Point self, Horizon other) {
    return scalar_wedge_origin(point_antiWedge_horizon(self, other), horizon_dual(other));
}

PlaneAtOrigin point_rejectViaOriginFrom_motor(Point self, Motor other) {
    return point_wedge_lineAtOrigin(point_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin point_rejectViaOriginFrom_multiVector(Point self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(point_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin point_rejectViaOriginFrom_multiVectorAtInfinity(Point self, MultiVectorAtInfinity other) {
    return scalar_wedge_multiVectorAtOrigin(point_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Origin point_rejectViaOriginFrom_plane(Point self, Plane other) {
    return scalar_wedge_origin(point_antiWedge_plane(self, other), plane_dual(other));
}

Flector point_rejectViaOriginFrom_transflector(Point self, Transflector other) {
    return scalar_wedge_flector(point_antiWedge_transflector(self, other), transflector_dual(other));
}

PlaneAtOrigin point_rejectViaOriginFrom_translator(Point self, Translator other) {
    return point_wedge_lineAtOrigin(point_antiWedge_translator(self, other), translator_dual(other));
}

Flector pointAtInfinity_rejectViaOriginFrom_flector(PointAtInfinity self, Flector other) {
    return scalar_wedge_flector(pointAtInfinity_antiWedge_flector(self, other), flector_dual(other));
}

PlaneAtOrigin pointAtInfinity_rejectViaOriginFrom_motor(PointAtInfinity self, Motor other) {
    return pointAtInfinity_wedge_lineAtOrigin(pointAtInfinity_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin pointAtInfinity_rejectViaOriginFrom_multiVector(PointAtInfinity self, MultiVector other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(pointAtInfinity_antiWedge_multiVector(self, other), multiVector_dual(other));
}

Origin pointAtInfinity_rejectViaOriginFrom_plane(PointAtInfinity self, Plane other) {
    return scalar_wedge_origin(pointAtInfinity_antiWedge_plane(self, other), plane_dual(other));
}

Flector pointAtInfinity_rejectViaOriginFrom_transflector(PointAtInfinity self, Transflector other) {
    return scalar_wedge_flector(pointAtInfinity_antiWedge_transflector(self, other), transflector_dual(other));
}

PlaneAtOrigin pointAtInfinity_rejectViaOriginFrom_translator(PointAtInfinity self, Translator other) {
    return pointAtInfinity_wedge_lineAtOrigin(pointAtInfinity_antiWedge_translator(self, other), translator_dual(other));
}

Motor rotor_rejectViaOriginFrom_flector(Rotor self, Flector other) {
    return flector_wedge_flector(rotor_antiWedge_flector(self, other), flector_dual(other));
}

Motor rotor_rejectViaOriginFrom_flectorAtInfinity(Rotor self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_flector(rotor_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

Rotor rotor_rejectViaOriginFrom_horizon(Rotor self, Horizon other) {
    return flectorAtInfinity_wedge_origin(rotor_antiWedge_horizon(self, other), horizon_dual(other));
}

MultiVectorAtOrigin rotor_rejectViaOriginFrom_line(Rotor self, Line other) {
    return multiVector_wedge_lineAtOrigin(rotor_antiWedge_line(self, other), line_dual(other));
}

MultiVectorAtOrigin rotor_rejectViaOriginFrom_lineAtInfinity(Rotor self, LineAtInfinity other) {
    return multiVectorAtInfinity_wedge_lineAtOrigin(rotor_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVectorAtOrigin rotor_rejectViaOriginFrom_motor(Rotor self, Motor other) {
    return multiVector_wedge_lineAtOrigin(rotor_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin rotor_rejectViaOriginFrom_multiVector(Rotor self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(rotor_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin rotor_rejectViaOriginFrom_multiVectorAtInfinity(Rotor self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(rotor_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Rotor rotor_rejectViaOriginFrom_plane(Rotor self, Plane other) {
    return flector_wedge_origin(rotor_antiWedge_plane(self, other), plane_dual(other));
}

AntiScalar rotor_rejectViaOriginFrom_point(Rotor self, Point other) {
    return point_wedge_planeAtOrigin(rotor_antiWedge_point(self, other), point_dual(other));
}

AntiScalar rotor_rejectViaOriginFrom_pointAtInfinity(Rotor self, PointAtInfinity other) {
    return pointAtInfinity_wedge_planeAtOrigin(rotor_antiWedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Motor rotor_rejectViaOriginFrom_transflector(Rotor self, Transflector other) {
    return flector_wedge_flector(rotor_antiWedge_transflector(self, other), transflector_dual(other));
}

MultiVectorAtOrigin rotor_rejectViaOriginFrom_translator(Rotor self, Translator other) {
    return multiVector_wedge_lineAtOrigin(rotor_antiWedge_translator(self, other), translator_dual(other));
}

MultiVector transflector_rejectViaOriginFrom_flector(Transflector self, Flector other) {
    return multiVector_wedge_flector(transflector_antiWedge_flector(self, other), flector_dual(other));
}

MultiVector transflector_rejectViaOriginFrom_flectorAtInfinity(Transflector self, FlectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_flector(transflector_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

PlaneAtOrigin transflector_rejectViaOriginFrom_horizon(Transflector self, Horizon other) {
    return lineAtInfinity_wedge_origin(transflector_antiWedge_horizon(self, other), horizon_dual(other));
}

PlaneAtOrigin transflector_rejectViaOriginFrom_line(Transflector self, Line other) {
    return point_wedge_lineAtOrigin(transflector_antiWedge_line(self, other), line_dual(other));
}

PlaneAtOrigin transflector_rejectViaOriginFrom_lineAtInfinity(Transflector self, LineAtInfinity other) {
    return pointAtInfinity_wedge_lineAtOrigin(transflector_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

PlaneAtOrigin transflector_rejectViaOriginFrom_motor(Transflector self, Motor other) {
    return flector_wedge_lineAtOrigin(transflector_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin transflector_rejectViaOriginFrom_multiVector(Transflector self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(transflector_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin transflector_rejectViaOriginFrom_multiVectorAtInfinity(Transflector self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(transflector_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

MultiVectorAtOrigin transflector_rejectViaOriginFrom_plane(Transflector self, Plane other) {
    return multiVector_wedge_origin(transflector_antiWedge_plane(self, other), plane_dual(other));
}

PlaneAtOrigin transflector_rejectViaOriginFrom_point(Transflector self, Point other) {
    return scalar_wedge_planeAtOrigin(transflector_antiWedge_point(self, other), point_dual(other));
}

PlaneAtOrigin transflector_rejectViaOriginFrom_pointAtInfinity(Transflector self, PointAtInfinity other) {
    return scalar_wedge_planeAtOrigin(transflector_antiWedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

MultiVector transflector_rejectViaOriginFrom_transflector(Transflector self, Transflector other) {
    return multiVector_wedge_flector(transflector_antiWedge_transflector(self, other), transflector_dual(other));
}

PlaneAtOrigin transflector_rejectViaOriginFrom_translator(Transflector self, Translator other) {
    return transflector_wedge_lineAtOrigin(transflector_antiWedge_translator(self, other), translator_dual(other));
}

Motor translator_rejectViaOriginFrom_flector(Translator self, Flector other) {
    return flector_wedge_flector(translator_antiWedge_flector(self, other), flector_dual(other));
}

Motor translator_rejectViaOriginFrom_flectorAtInfinity(Translator self, FlectorAtInfinity other) {
    return flectorAtInfinity_wedge_flector(translator_antiWedge_flectorAtInfinity(self, other), flectorAtInfinity_dual(other));
}

AntiScalar translator_rejectViaOriginFrom_horizon(Translator self, Horizon other) {
    return horizon_wedge_origin(translator_antiWedge_horizon(self, other), horizon_dual(other));
}

MultiVectorAtOrigin translator_rejectViaOriginFrom_line(Translator self, Line other) {
    return multiVector_wedge_lineAtOrigin(translator_antiWedge_line(self, other), line_dual(other));
}

AntiScalar translator_rejectViaOriginFrom_lineAtInfinity(Translator self, LineAtInfinity other) {
    return lineAtInfinity_wedge_lineAtOrigin(translator_antiWedge_lineAtInfinity(self, other), lineAtInfinity_dual(other));
}

MultiVectorAtOrigin translator_rejectViaOriginFrom_motor(Translator self, Motor other) {
    return multiVector_wedge_lineAtOrigin(translator_antiWedge_motor(self, other), motor_dual(other));
}

MultiVectorAtOrigin translator_rejectViaOriginFrom_multiVector(Translator self, MultiVector other) {
    return multiVector_wedge_multiVectorAtOrigin(translator_antiWedge_multiVector(self, other), multiVector_dual(other));
}

MultiVectorAtOrigin translator_rejectViaOriginFrom_multiVectorAtInfinity(Translator self, MultiVectorAtInfinity other) {
    return multiVectorAtInfinity_wedge_multiVectorAtOrigin(translator_antiWedge_multiVectorAtInfinity(self, other), multiVectorAtInfinity_dual(other));
}

Rotor translator_rejectViaOriginFrom_plane(Translator self, Plane other) {
    return transflector_wedge_origin(translator_antiWedge_plane(self, other), plane_dual(other));
}

AntiScalar translator_rejectViaOriginFrom_point(Translator self, Point other) {
    return point_wedge_planeAtOrigin(translator_antiWedge_point(self, other), point_dual(other));
}

AntiScalar translator_rejectViaOriginFrom_pointAtInfinity(Translator self, PointAtInfinity other) {
    return pointAtInfinity_wedge_planeAtOrigin(translator_antiWedge_pointAtInfinity(self, other), pointAtInfinity_dual(other));
}

Motor translator_rejectViaOriginFrom_transflector(Translator self, Transflector other) {
    return transflector_wedge_flector(translator_antiWedge_transflector(self, other), transflector_dual(other));
}

AntiScalar translator_rejectViaOriginFrom_translator(Translator self, Translator other) {
    return translator_wedge_lineAtOrigin(translator_antiWedge_translator(self, other), translator_dual(other));
}

Horizon dualNum_antiSupport(DualNum self) {
    return dualNum_wedge_horizon(self, horizon_antiWedge_antiScalar(origin_rightComplement(origin_unit()), dualNum_dual(self)));
}

MultiVector flector_antiSupport(Flector self) {
    return flector_wedge_multiVectorAtInfinity(self, horizon_antiWedge_flector(origin_rightComplement(origin_unit()), flector_dual(self)));
}

MultiVectorAtInfinity flectorAtInfinity_antiSupport(FlectorAtInfinity self) {
    return flectorAtInfinity_wedge_multiVectorAtInfinity(self, horizon_antiWedge_flector(origin_rightComplement(origin_unit()), flectorAtInfinity_dual(self)));
}

Horizon horizon_antiSupport(Horizon self) {
    return horizon_wedge_scalar(self, horizon_antiWedge_origin(origin_rightComplement(origin_unit()), horizon_dual(self)));
}

Plane line_antiSupport(Line self) {
    return line_wedge_pointAtInfinity(self, horizon_antiWedge_lineAtOrigin(origin_rightComplement(origin_unit()), line_dual(self)));
}

Horizon lineAtInfinity_antiSupport(LineAtInfinity self) {
    return lineAtInfinity_wedge_pointAtInfinity(self, horizon_antiWedge_lineAtOrigin(origin_rightComplement(origin_unit()), lineAtInfinity_dual(self)));
}

Plane motor_antiSupport(Motor self) {
    return motor_wedge_pointAtInfinity(self, horizon_antiWedge_lineAtOrigin(origin_rightComplement(origin_unit()), motor_dual(self)));
}

MultiVector multiVector_antiSupport(MultiVector self) {
    return multiVector_wedge_multiVectorAtInfinity(self, horizon_antiWedge_multiVectorAtOrigin(origin_rightComplement(origin_unit()), multiVector_dual(self)));
}

MultiVectorAtInfinity multiVectorAtInfinity_antiSupport(MultiVectorAtInfinity self) {
    return multiVectorAtInfinity_wedge_multiVectorAtInfinity(self, horizon_antiWedge_multiVectorAtOrigin(origin_rightComplement(origin_unit()), multiVectorAtInfinity_dual(self)));
}

Plane plane_antiSupport(Plane self) {
    return plane_wedge_scalar(self, horizon_antiWedge_origin(origin_rightComplement(origin_unit()), plane_dual(self)));
}

Plane point_antiSupport(Point self) {
    return point_wedge_lineAtInfinity(self, horizon_antiWedge_planeAtOrigin(origin_rightComplement(origin_unit()), point_dual(self)));
}

Horizon pointAtInfinity_antiSupport(PointAtInfinity self) {
    return pointAtInfinity_wedge_lineAtInfinity(self, horizon_antiWedge_planeAtOrigin(origin_rightComplement(origin_unit()), pointAtInfinity_dual(self)));
}

Horizon scalar_antiSupport(Scalar self) {
    return scalar_wedge_horizon(self, horizon_antiWedge_antiScalar(origin_rightComplement(origin_unit()), scalar_dual(self)));
}

MultiVector transflector_antiSupport(Transflector self) {
    return transflector_wedge_multiVectorAtInfinity(self, horizon_antiWedge_flector(origin_rightComplement(origin_unit()), transflector_dual(self)));
}

Horizon translator_antiSupport(Translator self) {
    return translator_wedge_pointAtInfinity(self, horizon_antiWedge_lineAtOrigin(origin_rightComplement(origin_unit()), translator_dual(self)));
}

Flector flector_support(Flector self) {
    return flector_antiWedge_rotor(self, origin_wedge_flectorAtInfinity(origin_unit(), flector_antiDual(self)));
}

Point line_support(Line self) {
    return line_antiWedge_planeAtOrigin(self, origin_wedge_lineAtInfinity(origin_unit(), line_antiDual(self)));
}

Origin lineAtOrigin_support(LineAtOrigin self) {
    return lineAtOrigin_antiWedge_planeAtOrigin(self, origin_wedge_lineAtInfinity(origin_unit(), lineAtOrigin_antiDual(self)));
}

MultiVector motor_support(Motor self) {
    return motor_antiWedge_multiVectorAtOrigin(self, origin_wedge_multiVectorAtInfinity(origin_unit(), motor_antiDual(self)));
}

MultiVector multiVector_support(MultiVector self) {
    return multiVector_antiWedge_multiVectorAtOrigin(self, origin_wedge_multiVectorAtInfinity(origin_unit(), multiVector_antiDual(self)));
}

MultiVectorAtOrigin multiVectorAtOrigin_support(MultiVectorAtOrigin self) {
    return multiVectorAtOrigin_antiWedge_multiVectorAtOrigin(self, origin_wedge_multiVectorAtInfinity(origin_unit(), multiVectorAtOrigin_antiDual(self)));
}

Origin origin_support(Origin self) {
    return origin_antiWedge_antiScalar(self, origin_wedge_horizon(origin_unit(), origin_antiDual(self)));
}

Point plane_support(Plane self) {
    return plane_antiWedge_lineAtOrigin(self, origin_wedge_pointAtInfinity(origin_unit(), plane_antiDual(self)));
}

Origin planeAtOrigin_support(PlaneAtOrigin self) {
    return planeAtOrigin_antiWedge_lineAtOrigin(self, origin_wedge_pointAtInfinity(origin_unit(), planeAtOrigin_antiDual(self)));
}

Point point_support(Point self) {
    return point_antiWedge_antiScalar(self, origin_wedge_horizon(origin_unit(), point_antiDual(self)));
}

MultiVectorAtOrigin rotor_support(Rotor self) {
    return rotor_antiWedge_multiVectorAtOrigin(self, origin_wedge_multiVectorAtInfinity(origin_unit(), rotor_antiDual(self)));
}

Point transflector_support(Transflector self) {
    return transflector_antiWedge_lineAtOrigin(self, origin_wedge_pointAtInfinity(origin_unit(), transflector_antiDual(self)));
}

DualNum line_cosineAngle_line(Line self, Line other) {
    return scalar_add_antiScalar(line_antiWedge_lineAtInfinity(self, line_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(line_weightNorm(self), line_weightNorm(other)));
}

DualNum line_cosineAngle_lineAtOrigin(Line self, LineAtOrigin other) {
    return scalar_add_antiScalar(line_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(line_weightNorm(self), lineAtOrigin_weightNorm(other)));
}

DualNum line_cosineAngle_origin(Line self, Origin other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(line_antiWedge_horizon(self, origin_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(line_weightNorm(self), origin_weightNorm(other)));
}

DualNum line_cosineAngle_point(Line self, Point other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(line_antiWedge_horizon(self, point_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(line_weightNorm(self), point_weightNorm(other)));
}

DualNum lineAtOrigin_cosineAngle_line(LineAtOrigin self, Line other) {
    return scalar_add_antiScalar(lineAtOrigin_antiWedge_lineAtInfinity(self, line_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(lineAtOrigin_weightNorm(self), line_weightNorm(other)));
}

DualNum lineAtOrigin_cosineAngle_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    return scalar_add_antiScalar(lineAtOrigin_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(lineAtOrigin_weightNorm(self), lineAtOrigin_weightNorm(other)));
}

DualNum lineAtOrigin_cosineAngle_origin(LineAtOrigin self, Origin other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(lineAtOrigin_antiWedge_horizon(self, origin_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(lineAtOrigin_weightNorm(self), origin_weightNorm(other)));
}

DualNum lineAtOrigin_cosineAngle_point(LineAtOrigin self, Point other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(lineAtOrigin_antiWedge_horizon(self, point_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(lineAtOrigin_weightNorm(self), point_weightNorm(other)));
}

DualNum origin_cosineAngle_origin(Origin self, Origin other) {
    return scalar_add_antiScalar(origin_antiWedge_horizon(self, origin_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(origin_weightNorm(self), origin_weightNorm(other)));
}

DualNum origin_cosineAngle_point(Origin self, Point other) {
    return scalar_add_antiScalar(origin_antiWedge_horizon(self, point_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(origin_weightNorm(self), point_weightNorm(other)));
}

DualNum plane_cosineAngle_line(Plane self, Line other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(plane_antiWedge_lineAtInfinity(self, line_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(plane_weightNorm(self), line_weightNorm(other)));
}

DualNum plane_cosineAngle_lineAtOrigin(Plane self, LineAtOrigin other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(plane_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(plane_weightNorm(self), lineAtOrigin_weightNorm(other)));
}

DualNum plane_cosineAngle_origin(Plane self, Origin other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(plane_antiWedge_horizon(self, origin_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(plane_weightNorm(self), origin_weightNorm(other)));
}

DualNum plane_cosineAngle_plane(Plane self, Plane other) {
    return scalar_add_antiScalar(plane_antiWedge_pointAtInfinity(self, plane_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(plane_weightNorm(self), plane_weightNorm(other)));
}

DualNum plane_cosineAngle_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    return scalar_add_antiScalar(plane_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(plane_weightNorm(self), planeAtOrigin_weightNorm(other)));
}

DualNum plane_cosineAngle_point(Plane self, Point other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(plane_antiWedge_horizon(self, point_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(plane_weightNorm(self), point_weightNorm(other)));
}

DualNum planeAtOrigin_cosineAngle_line(PlaneAtOrigin self, Line other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(planeAtOrigin_antiWedge_lineAtInfinity(self, line_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(planeAtOrigin_weightNorm(self), line_weightNorm(other)));
}

DualNum planeAtOrigin_cosineAngle_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(planeAtOrigin_antiWedge_lineAtInfinity(self, lineAtOrigin_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(planeAtOrigin_weightNorm(self), lineAtOrigin_weightNorm(other)));
}

DualNum planeAtOrigin_cosineAngle_origin(PlaneAtOrigin self, Origin other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(planeAtOrigin_antiWedge_horizon(self, origin_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(planeAtOrigin_weightNorm(self), origin_weightNorm(other)));
}

DualNum planeAtOrigin_cosineAngle_plane(PlaneAtOrigin self, Plane other) {
    return scalar_add_antiScalar(planeAtOrigin_antiWedge_pointAtInfinity(self, plane_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(planeAtOrigin_weightNorm(self), plane_weightNorm(other)));
}

DualNum planeAtOrigin_cosineAngle_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    return scalar_add_antiScalar(planeAtOrigin_antiWedge_pointAtInfinity(self, planeAtOrigin_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(planeAtOrigin_weightNorm(self), planeAtOrigin_weightNorm(other)));
}

DualNum planeAtOrigin_cosineAngle_point(PlaneAtOrigin self, Point other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(planeAtOrigin_antiWedge_horizon(self, point_antiDual(other))), antiScalar_geometricAntiProduct_antiScalar(planeAtOrigin_weightNorm(self), point_weightNorm(other)));
}

DualNum point_cosineAngle_origin(Point self, Origin other) {
    return scalar_add_antiScalar(point_antiWedge_horizon(self, origin_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(point_weightNorm(self), origin_weightNorm(other)));
}

DualNum point_cosineAngle_point(Point self, Point other) {
    return scalar_add_antiScalar(point_antiWedge_horizon(self, point_antiDual(other)), antiScalar_geometricAntiProduct_antiScalar(point_weightNorm(self), point_weightNorm(other)));
}

DualNum line_distance_line(Line self, Line other) {
    return scalar_add_antiScalar(line_antiWedge_line(self, other), plane_weightNorm(line_wedge_pointAtInfinity(self, line_attitude(other))));
}

DualNum line_distance_lineAtOrigin(Line self, LineAtOrigin other) {
    return scalar_add_antiScalar(line_antiWedge_lineAtOrigin(self, other), plane_weightNorm(line_wedge_pointAtInfinity(self, lineAtOrigin_attitude(other))));
}

DualNum line_distance_origin(Line self, Origin other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(planeAtOrigin_attitude(line_wedge_origin(self, other))), line_weightNorm(line_wedge_scalar(self, origin_attitude(other))));
}

DualNum line_distance_point(Line self, Point other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(plane_attitude(line_wedge_point(self, other))), line_weightNorm(line_wedge_scalar(self, point_attitude(other))));
}

DualNum lineAtOrigin_distance_line(LineAtOrigin self, Line other) {
    return scalar_add_antiScalar(lineAtOrigin_antiWedge_line(self, other), planeAtOrigin_weightNorm(lineAtOrigin_wedge_pointAtInfinity(self, line_attitude(other))));
}

DualNum lineAtOrigin_distance_point(LineAtOrigin self, Point other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(planeAtOrigin_attitude(lineAtOrigin_wedge_point(self, other))), lineAtOrigin_weightNorm(lineAtOrigin_wedge_scalar(self, point_attitude(other))));
}

DualNum origin_distance_line(Origin self, Line other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(planeAtOrigin_attitude(origin_wedge_line(self, other))), lineAtOrigin_weightNorm(origin_wedge_pointAtInfinity(self, line_attitude(other))));
}

DualNum origin_distance_plane(Origin self, Plane other) {
    return scalar_add_antiScalar(origin_antiWedge_plane(self, other), planeAtOrigin_weightNorm(origin_wedge_lineAtInfinity(self, plane_attitude(other))));
}

DualNum origin_distance_point(Origin self, Point other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(lineAtOrigin_attitude(origin_wedge_point(self, other))), origin_weightNorm(origin_wedge_scalar(self, point_attitude(other))));
}

DualNum plane_distance_origin(Plane self, Origin other) {
    return scalar_add_antiScalar(plane_antiWedge_origin(self, other), plane_weightNorm(plane_wedge_scalar(self, origin_attitude(other))));
}

DualNum plane_distance_point(Plane self, Point other) {
    return scalar_add_antiScalar(plane_antiWedge_point(self, other), plane_weightNorm(plane_wedge_scalar(self, point_attitude(other))));
}

DualNum planeAtOrigin_distance_point(PlaneAtOrigin self, Point other) {
    return scalar_add_antiScalar(planeAtOrigin_antiWedge_point(self, other), planeAtOrigin_weightNorm(planeAtOrigin_wedge_scalar(self, point_attitude(other))));
}

DualNum point_distance_line(Point self, Line other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(plane_attitude(point_wedge_line(self, other))), line_weightNorm(point_wedge_pointAtInfinity(self, line_attitude(other))));
}

DualNum point_distance_lineAtOrigin(Point self, LineAtOrigin other) {
    return scalar_add_antiScalar(lineAtInfinity_bulkNorm(planeAtOrigin_attitude(point_wedge_lineAtOrigin(self, other))), line_weightNorm(point_wedge_pointAtInfinity(self, lineAtOrigin_attitude(other))));
}

DualNum point_distance_origin(Point self, Origin other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(lineAtOrigin_attitude(point_wedge_origin(self, other))), point_weightNorm(point_wedge_scalar(self, origin_attitude(other))));
}

DualNum point_distance_plane(Point self, Plane other) {
    return scalar_add_antiScalar(point_antiWedge_plane(self, other), plane_weightNorm(point_wedge_lineAtInfinity(self, plane_attitude(other))));
}

DualNum point_distance_planeAtOrigin(Point self, PlaneAtOrigin other) {
    return scalar_add_antiScalar(point_antiWedge_planeAtOrigin(self, other), plane_weightNorm(point_wedge_lineAtInfinity(self, planeAtOrigin_attitude(other))));
}

DualNum point_distance_point(Point self, Point other) {
    return scalar_add_antiScalar(pointAtInfinity_bulkNorm(line_attitude(point_wedge_point(self, other))), point_weightNorm(point_wedge_scalar(self, point_attitude(other))));
}

DualNum line_sineAngle_line(Line self, Line other) {
    DualNum cos = line_cosineAngle_line(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum line_sineAngle_lineAtOrigin(Line self, LineAtOrigin other) {
    DualNum cos = line_cosineAngle_lineAtOrigin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum line_sineAngle_origin(Line self, Origin other) {
    DualNum cos = line_cosineAngle_origin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum line_sineAngle_point(Line self, Point other) {
    DualNum cos = line_cosineAngle_point(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum lineAtOrigin_sineAngle_line(LineAtOrigin self, Line other) {
    DualNum cos = lineAtOrigin_cosineAngle_line(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum lineAtOrigin_sineAngle_lineAtOrigin(LineAtOrigin self, LineAtOrigin other) {
    DualNum cos = lineAtOrigin_cosineAngle_lineAtOrigin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum lineAtOrigin_sineAngle_origin(LineAtOrigin self, Origin other) {
    DualNum cos = lineAtOrigin_cosineAngle_origin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum lineAtOrigin_sineAngle_point(LineAtOrigin self, Point other) {
    DualNum cos = lineAtOrigin_cosineAngle_point(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum origin_sineAngle_origin(Origin self, Origin other) {
    DualNum cos = origin_cosineAngle_origin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum origin_sineAngle_point(Origin self, Point other) {
    DualNum cos = origin_cosineAngle_point(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum plane_sineAngle_line(Plane self, Line other) {
    DualNum cos = plane_cosineAngle_line(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum plane_sineAngle_lineAtOrigin(Plane self, LineAtOrigin other) {
    DualNum cos = plane_cosineAngle_lineAtOrigin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum plane_sineAngle_origin(Plane self, Origin other) {
    DualNum cos = plane_cosineAngle_origin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum plane_sineAngle_plane(Plane self, Plane other) {
    DualNum cos = plane_cosineAngle_plane(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum plane_sineAngle_planeAtOrigin(Plane self, PlaneAtOrigin other) {
    DualNum cos = plane_cosineAngle_planeAtOrigin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum plane_sineAngle_point(Plane self, Point other) {
    DualNum cos = plane_cosineAngle_point(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum planeAtOrigin_sineAngle_line(PlaneAtOrigin self, Line other) {
    DualNum cos = planeAtOrigin_cosineAngle_line(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum planeAtOrigin_sineAngle_lineAtOrigin(PlaneAtOrigin self, LineAtOrigin other) {
    DualNum cos = planeAtOrigin_cosineAngle_lineAtOrigin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum planeAtOrigin_sineAngle_origin(PlaneAtOrigin self, Origin other) {
    DualNum cos = planeAtOrigin_cosineAngle_origin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum planeAtOrigin_sineAngle_plane(PlaneAtOrigin self, Plane other) {
    DualNum cos = planeAtOrigin_cosineAngle_plane(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum planeAtOrigin_sineAngle_planeAtOrigin(PlaneAtOrigin self, PlaneAtOrigin other) {
    DualNum cos = planeAtOrigin_cosineAngle_planeAtOrigin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum planeAtOrigin_sineAngle_point(PlaneAtOrigin self, Point other) {
    DualNum cos = planeAtOrigin_cosineAngle_point(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum point_sineAngle_origin(Point self, Origin other) {
    DualNum cos = point_cosineAngle_origin(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

DualNum point_sineAngle_point(Point self, Point other) {
    DualNum cos = point_cosineAngle_point(self, other);
    DualNum cos_squared = dualNum_geometricProduct_dualNum(cos, cos);
    DualNum sub = dualNum_sub_dualNum(dualNum_unit(), cos_squared);
    return dualNum_sqrt(sub);
}

