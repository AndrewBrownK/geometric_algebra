pub mod arity_0 {
    pub use crate::traits::anti_grade::AntiGrade;
    pub use crate::traits::anti_one::AntiOne;
    pub use crate::traits::grade::Grade;
    pub use crate::traits::one::One;
    pub use crate::traits::unit::Unit;
    pub use crate::traits::zero::Zero;
}
pub mod arity_1 {
    pub use crate::traits::anti_auto_morphism::AntiAutoMorphism;
    pub use crate::traits::anti_constraint_valid::AntiConstraintValid;
    pub use crate::traits::anti_constraint_violation::AntiConstraintViolation;
    pub use crate::traits::anti_fix::AntiFix;
    pub use crate::traits::anti_inverse::AntiInverse;
    pub use crate::traits::anti_reverse::AntiReverse;
    pub use crate::traits::anti_square_root::AntiSquareRoot;
    pub use crate::traits::anti_support::AntiSupport;
    pub use crate::traits::auto_morphism::AutoMorphism;
    pub use crate::traits::center_norm::CenterNorm;
    pub use crate::traits::center_norm_squared::CenterNormSquared;
    pub use crate::traits::complement::Complement;
    pub use crate::traits::conformal_conjugate::ConformalConjugate;
    pub use crate::traits::conjugation::Conjugation;
    pub use crate::traits::constraint_valid::ConstraintValid;
    pub use crate::traits::constraint_violation::ConstraintViolation;
    pub use crate::traits::double_complement::DoubleComplement;
    pub use crate::traits::fix::Fix;
    pub use crate::traits::flat_bulk::FlatBulk;
    pub use crate::traits::flat_bulk_norm::FlatBulkNorm;
    pub use crate::traits::flat_bulk_norm_squared::FlatBulkNormSquared;
    pub use crate::traits::flat_norm::FlatNorm;
    pub use crate::traits::flat_norm_squared::FlatNormSquared;
    pub use crate::traits::flat_weight::FlatWeight;
    pub use crate::traits::flat_weight_norm::FlatWeightNorm;
    pub use crate::traits::flat_weight_norm_squared::FlatWeightNormSquared;
    pub use crate::traits::inverse::Inverse;
    pub use crate::traits::radius_norm::RadiusNorm;
    pub use crate::traits::radius_norm_squared::RadiusNormSquared;
    pub use crate::traits::reverse::Reverse;
    pub use crate::traits::right_anti_dual::RightAntiDual;
    pub use crate::traits::right_dual::RightDual;
    pub use crate::traits::round_bulk::RoundBulk;
    pub use crate::traits::round_bulk_norm::RoundBulkNorm;
    pub use crate::traits::round_bulk_norm_squared::RoundBulkNormSquared;
    pub use crate::traits::round_norm::RoundNorm;
    pub use crate::traits::round_norm_squared::RoundNormSquared;
    pub use crate::traits::round_weight::RoundWeight;
    pub use crate::traits::round_weight_norm::RoundWeightNorm;
    pub use crate::traits::round_weight_norm_squared::RoundWeightNormSquared;
    pub use crate::traits::square_root::SquareRoot;
    pub use crate::traits::support::Support;
    pub use crate::traits::unitize::Unitize;
    pub use crate::traits::unitized_center_norm::UnitizedCenterNorm;
    pub use crate::traits::unitized_center_norm_squared::UnitizedCenterNormSquared;
    pub use crate::traits::unitized_flat_norm::UnitizedFlatNorm;
    pub use crate::traits::unitized_flat_norm_squared::UnitizedFlatNormSquared;
    pub use crate::traits::unitized_radius_norm::UnitizedRadiusNorm;
    pub use crate::traits::unitized_radius_norm_squared::UnitizedRadiusNormSquared;
    pub use crate::traits::unitized_round_norm::UnitizedRoundNorm;
    pub use crate::traits::unitized_round_norm_squared::UnitizedRoundNormSquared;
}
pub mod arity_2 {
    pub use crate::traits::anti_dot_product::AntiDotProduct;
    pub use crate::traits::anti_project_orthogonally_onto::AntiProjectOrthogonallyOnto;
    pub use crate::traits::anti_project_via_horizon_onto::AntiProjectViaHorizonOnto;
    pub use crate::traits::anti_reject_orthogonally_from::AntiRejectOrthogonallyFrom;
    pub use crate::traits::anti_reject_via_horizon_from::AntiRejectViaHorizonFrom;
    pub use crate::traits::anti_sandwich::AntiSandwich;
    pub use crate::traits::anti_wedge::AntiWedge;
    pub use crate::traits::bulk_contraction::BulkContraction;
    pub use crate::traits::bulk_expansion::BulkExpansion;
    pub use crate::traits::dot_product::DotProduct;
    pub use crate::traits::geometric_anti_product::GeometricAntiProduct;
    pub use crate::traits::geometric_anti_quotient::GeometricAntiQuotient;
    pub use crate::traits::geometric_product::GeometricProduct;
    pub use crate::traits::geometric_quotient::GeometricQuotient;
    pub use crate::traits::project_orthogonally_onto::ProjectOrthogonallyOnto;
    pub use crate::traits::project_via_origin_onto::ProjectViaOriginOnto;
    pub use crate::traits::reject_orthogonally_from::RejectOrthogonallyFrom;
    pub use crate::traits::reject_via_origin_from::RejectViaOriginFrom;
    pub use crate::traits::sandwich::Sandwich;
    pub use crate::traits::wedge::Wedge;
    pub use crate::traits::weight_contraction::WeightContraction;
    pub use crate::traits::weight_expansion::WeightExpansion;
}
pub mod infix {
    pub use crate::traits::anti_auto_morphism::anti_auto_morphism;
    pub use crate::traits::anti_constraint_valid::anti_constraint_valid;
    pub use crate::traits::anti_constraint_violation::anti_constraint_violation;
    pub use crate::traits::anti_dot_product::anti_dot_product;
    pub use crate::traits::anti_dot_product::anti_dot_product_partial;
    pub use crate::traits::anti_fix::anti_fix;
    pub use crate::traits::anti_inverse::anti_inverse;
    pub use crate::traits::anti_project_orthogonally_onto::anti_project_orthogonally_onto;
    pub use crate::traits::anti_project_orthogonally_onto::anti_project_orthogonally_onto_partial;
    pub use crate::traits::anti_project_via_horizon_onto::anti_project_via_horizon_onto;
    pub use crate::traits::anti_project_via_horizon_onto::anti_project_via_horizon_onto_partial;
    pub use crate::traits::anti_reject_orthogonally_from::anti_reject_orthogonally_from;
    pub use crate::traits::anti_reject_orthogonally_from::anti_reject_orthogonally_from_partial;
    pub use crate::traits::anti_reject_via_horizon_from::anti_reject_via_horizon_from;
    pub use crate::traits::anti_reject_via_horizon_from::anti_reject_via_horizon_from_partial;
    pub use crate::traits::anti_reverse::anti_reverse;
    pub use crate::traits::anti_sandwich::anti_sandwich;
    pub use crate::traits::anti_sandwich::anti_sandwich_partial;
    pub use crate::traits::anti_square_root::anti_square_root;
    pub use crate::traits::anti_support::anti_support;
    pub use crate::traits::anti_wedge::anti_wedge;
    pub use crate::traits::anti_wedge::anti_wedge_partial;
    pub use crate::traits::auto_morphism::auto_morphism;
    pub use crate::traits::bulk_contraction::bulk_contraction;
    pub use crate::traits::bulk_contraction::bulk_contraction_partial;
    pub use crate::traits::bulk_expansion::bulk_expansion;
    pub use crate::traits::bulk_expansion::bulk_expansion_partial;
    pub use crate::traits::center_norm::center_norm;
    pub use crate::traits::center_norm_squared::center_norm_squared;
    pub use crate::traits::complement::complement;
    pub use crate::traits::conformal_conjugate::conformal_conjugate;
    pub use crate::traits::conjugation::conjugation;
    pub use crate::traits::constraint_valid::constraint_valid;
    pub use crate::traits::constraint_violation::constraint_violation;
    pub use crate::traits::dot_product::dot_product;
    pub use crate::traits::dot_product::dot_product_partial;
    pub use crate::traits::double_complement::double_complement;
    pub use crate::traits::fix::fix;
    pub use crate::traits::flat_bulk::flat_bulk;
    pub use crate::traits::flat_bulk_norm::flat_bulk_norm;
    pub use crate::traits::flat_bulk_norm_squared::flat_bulk_norm_squared;
    pub use crate::traits::flat_norm::flat_norm;
    pub use crate::traits::flat_norm_squared::flat_norm_squared;
    pub use crate::traits::flat_weight::flat_weight;
    pub use crate::traits::flat_weight_norm::flat_weight_norm;
    pub use crate::traits::flat_weight_norm_squared::flat_weight_norm_squared;
    pub use crate::traits::geometric_anti_product::geometric_anti_product;
    pub use crate::traits::geometric_anti_product::geometric_anti_product_partial;
    pub use crate::traits::geometric_anti_quotient::geometric_anti_quotient;
    pub use crate::traits::geometric_anti_quotient::geometric_anti_quotient_partial;
    pub use crate::traits::geometric_product::geometric_product;
    pub use crate::traits::geometric_product::geometric_product_partial;
    pub use crate::traits::geometric_quotient::geometric_quotient;
    pub use crate::traits::geometric_quotient::geometric_quotient_partial;
    pub use crate::traits::inverse::inverse;
    pub use crate::traits::project_orthogonally_onto::project_orthogonally_onto;
    pub use crate::traits::project_orthogonally_onto::project_orthogonally_onto_partial;
    pub use crate::traits::project_via_origin_onto::project_via_origin_onto;
    pub use crate::traits::project_via_origin_onto::project_via_origin_onto_partial;
    pub use crate::traits::radius_norm::radius_norm;
    pub use crate::traits::radius_norm_squared::radius_norm_squared;
    pub use crate::traits::reject_orthogonally_from::reject_orthogonally_from;
    pub use crate::traits::reject_orthogonally_from::reject_orthogonally_from_partial;
    pub use crate::traits::reject_via_origin_from::reject_via_origin_from;
    pub use crate::traits::reject_via_origin_from::reject_via_origin_from_partial;
    pub use crate::traits::reverse::reverse;
    pub use crate::traits::right_anti_dual::right_anti_dual;
    pub use crate::traits::right_dual::right_dual;
    pub use crate::traits::round_bulk::round_bulk;
    pub use crate::traits::round_bulk_norm::round_bulk_norm;
    pub use crate::traits::round_bulk_norm_squared::round_bulk_norm_squared;
    pub use crate::traits::round_norm::round_norm;
    pub use crate::traits::round_norm_squared::round_norm_squared;
    pub use crate::traits::round_weight::round_weight;
    pub use crate::traits::round_weight_norm::round_weight_norm;
    pub use crate::traits::round_weight_norm_squared::round_weight_norm_squared;
    pub use crate::traits::sandwich::sandwich;
    pub use crate::traits::sandwich::sandwich_partial;
    pub use crate::traits::square_root::square_root;
    pub use crate::traits::support::support;
    pub use crate::traits::unitize::unitize;
    pub use crate::traits::unitized_center_norm::unitized_center_norm;
    pub use crate::traits::unitized_center_norm_squared::unitized_center_norm_squared;
    pub use crate::traits::unitized_flat_norm::unitized_flat_norm;
    pub use crate::traits::unitized_flat_norm_squared::unitized_flat_norm_squared;
    pub use crate::traits::unitized_radius_norm::unitized_radius_norm;
    pub use crate::traits::unitized_radius_norm_squared::unitized_radius_norm_squared;
    pub use crate::traits::unitized_round_norm::unitized_round_norm;
    pub use crate::traits::unitized_round_norm_squared::unitized_round_norm_squared;
    pub use crate::traits::wedge::wedge;
    pub use crate::traits::wedge::wedge_partial;
    pub use crate::traits::weight_contraction::weight_contraction;
    pub use crate::traits::weight_contraction::weight_contraction_partial;
    pub use crate::traits::weight_expansion::weight_expansion;
    pub use crate::traits::weight_expansion::weight_expansion_partial;
}
mod anti_auto_morphism;
pub use anti_auto_morphism::AntiAutoMorphism;
mod anti_constraint_valid;
pub use anti_constraint_valid::AntiConstraintValid;
mod anti_constraint_violation;
pub use anti_constraint_violation::AntiConstraintViolation;
mod anti_dot_product;
pub use anti_dot_product::AntiDotProduct;
mod anti_fix;
pub use anti_fix::AntiFix;
mod anti_grade;
pub use anti_grade::AntiGrade;
mod anti_inverse;
pub use anti_inverse::AntiInverse;
mod anti_one;
pub use anti_one::AntiOne;
mod anti_project_orthogonally_onto;
pub use anti_project_orthogonally_onto::AntiProjectOrthogonallyOnto;
mod anti_project_via_horizon_onto;
pub use anti_project_via_horizon_onto::AntiProjectViaHorizonOnto;
mod anti_reject_orthogonally_from;
pub use anti_reject_orthogonally_from::AntiRejectOrthogonallyFrom;
mod anti_reject_via_horizon_from;
pub use anti_reject_via_horizon_from::AntiRejectViaHorizonFrom;
mod anti_reverse;
pub use anti_reverse::AntiReverse;
mod anti_sandwich;
pub use anti_sandwich::AntiSandwich;
mod anti_square_root;
pub use anti_square_root::AntiSquareRoot;
mod anti_support;
pub use anti_support::AntiSupport;
mod anti_wedge;
pub use anti_wedge::AntiWedge;
mod auto_morphism;
pub use auto_morphism::AutoMorphism;
mod bulk_contraction;
pub use bulk_contraction::BulkContraction;
mod bulk_expansion;
pub use bulk_expansion::BulkExpansion;
mod center_norm;
pub use center_norm::CenterNorm;
mod center_norm_squared;
pub use center_norm_squared::CenterNormSquared;
mod complement;
pub use complement::Complement;
mod conformal_conjugate;
pub use conformal_conjugate::ConformalConjugate;
mod conjugation;
pub use conjugation::Conjugation;
mod constraint_valid;
pub use constraint_valid::ConstraintValid;
mod constraint_violation;
pub use constraint_violation::ConstraintViolation;
mod dot_product;
pub use dot_product::DotProduct;
mod double_complement;
pub use double_complement::DoubleComplement;
mod fix;
pub use fix::Fix;
mod flat_bulk;
pub use flat_bulk::FlatBulk;
mod flat_bulk_norm;
pub use flat_bulk_norm::FlatBulkNorm;
mod flat_bulk_norm_squared;
pub use flat_bulk_norm_squared::FlatBulkNormSquared;
mod flat_norm;
pub use flat_norm::FlatNorm;
mod flat_norm_squared;
pub use flat_norm_squared::FlatNormSquared;
mod flat_weight;
pub use flat_weight::FlatWeight;
mod flat_weight_norm;
pub use flat_weight_norm::FlatWeightNorm;
mod flat_weight_norm_squared;
pub use flat_weight_norm_squared::FlatWeightNormSquared;
mod geometric_anti_product;
pub use geometric_anti_product::GeometricAntiProduct;
mod geometric_anti_quotient;
pub use geometric_anti_quotient::GeometricAntiQuotient;
mod geometric_product;
pub use geometric_product::GeometricProduct;
mod geometric_quotient;
pub use geometric_quotient::GeometricQuotient;
mod grade;
pub use grade::Grade;
mod inverse;
pub use inverse::Inverse;
mod one;
pub use one::One;
mod project_orthogonally_onto;
pub use project_orthogonally_onto::ProjectOrthogonallyOnto;
mod project_via_origin_onto;
pub use project_via_origin_onto::ProjectViaOriginOnto;
mod radius_norm;
pub use radius_norm::RadiusNorm;
mod radius_norm_squared;
pub use radius_norm_squared::RadiusNormSquared;
mod reject_orthogonally_from;
pub use reject_orthogonally_from::RejectOrthogonallyFrom;
mod reject_via_origin_from;
pub use reject_via_origin_from::RejectViaOriginFrom;
mod reverse;
pub use reverse::Reverse;
mod right_anti_dual;
pub use right_anti_dual::RightAntiDual;
mod right_dual;
pub use right_dual::RightDual;
mod round_bulk;
pub use round_bulk::RoundBulk;
mod round_bulk_norm;
pub use round_bulk_norm::RoundBulkNorm;
mod round_bulk_norm_squared;
pub use round_bulk_norm_squared::RoundBulkNormSquared;
mod round_norm;
pub use round_norm::RoundNorm;
mod round_norm_squared;
pub use round_norm_squared::RoundNormSquared;
mod round_weight;
pub use round_weight::RoundWeight;
mod round_weight_norm;
pub use round_weight_norm::RoundWeightNorm;
mod round_weight_norm_squared;
pub use round_weight_norm_squared::RoundWeightNormSquared;
mod sandwich;
pub use sandwich::Sandwich;
mod square_root;
pub use square_root::SquareRoot;
mod support;
pub use support::Support;
mod unit;
pub use unit::Unit;
mod unitize;
pub use unitize::Unitize;
mod unitized_center_norm;
pub use unitized_center_norm::UnitizedCenterNorm;
mod unitized_center_norm_squared;
pub use unitized_center_norm_squared::UnitizedCenterNormSquared;
mod unitized_flat_norm;
pub use unitized_flat_norm::UnitizedFlatNorm;
mod unitized_flat_norm_squared;
pub use unitized_flat_norm_squared::UnitizedFlatNormSquared;
mod unitized_radius_norm;
pub use unitized_radius_norm::UnitizedRadiusNorm;
mod unitized_radius_norm_squared;
pub use unitized_radius_norm_squared::UnitizedRadiusNormSquared;
mod unitized_round_norm;
pub use unitized_round_norm::UnitizedRoundNorm;
mod unitized_round_norm_squared;
pub use unitized_round_norm_squared::UnitizedRoundNormSquared;
mod wedge;
pub use wedge::Wedge;
mod weight_contraction;
pub use weight_contraction::WeightContraction;
mod weight_expansion;
pub use weight_expansion::WeightExpansion;
mod zero;
pub use zero::Zero;
